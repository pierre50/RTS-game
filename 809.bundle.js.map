{"version":3,"file":"809.bundle.js","mappings":"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","sources":["webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/scene/graphics/gl/GlGraphicsAdaptor.mjs","webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/scene/mesh/gl/GlMeshAdaptor.mjs","webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/rendering/batcher/gl/GlBatchAdaptor.mjs","webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/rendering/renderers/gl/buffer/const.mjs","webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/rendering/renderers/gl/buffer/GlBuffer.mjs","webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/rendering/renderers/gl/buffer/GlBufferSystem.mjs","webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/rendering/renderers/gl/context/GlContextSystem.mjs","webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/rendering/renderers/gl/texture/const.mjs","webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/rendering/renderers/gl/geometry/utils/getGlTypeFromFormat.mjs","webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/rendering/renderers/gl/geometry/GlGeometrySystem.mjs","webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/rendering/renderers/gl/GlBackBufferSystem.mjs","webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/rendering/renderers/gl/GlColorMaskSystem.mjs","webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/rendering/renderers/gl/GlEncoderSystem.mjs","webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/rendering/renderers/gl/GlLimitsSystem.mjs","webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/rendering/renderers/gl/GlStencilSystem.mjs","webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/rendering/renderers/gl/shader/utils/createUboElementsSTD40.mjs","webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/rendering/renderers/gl/shader/utils/generateArraySyncSTD40.mjs","webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/rendering/renderers/gl/shader/utils/createUboSyncSTD40.mjs","webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/rendering/renderers/gl/GlUboSystem.mjs","webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/rendering/renderers/gl/GlRenderTarget.mjs","webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/rendering/renderers/gl/renderTarget/GlRenderTargetAdaptor.mjs","webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/rendering/renderers/gl/renderTarget/GlRenderTargetSystem.mjs","webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/rendering/renderers/gl/shader/GlProgramData.mjs","webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/compileShader.mjs","webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/defaultValue.mjs","webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/mapType.mjs","webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/logProgramError.mjs","webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/rendering/renderers/gl/shader/GlShaderSystem.mjs","webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/generateProgram.mjs","webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/extractAttributesFromGlProgram.mjs","webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/getUniformData.mjs","webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/getUboData.mjs","webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/rendering/renderers/gl/shader/GenerateShaderSyncCode.mjs","webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/rendering/renderers/gl/shader/utils/generateUniformsSyncTypes.mjs","webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/rendering/renderers/gl/shader/GlUniformGroupSystem.mjs","webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/rendering/renderers/gl/shader/utils/generateUniformsSync.mjs","webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/rendering/renderers/gl/state/GlStateSystem.mjs","webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/rendering/renderers/gl/state/mapWebGLBlendModesToPixi.mjs","webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/rendering/renderers/gl/texture/GlTexture.mjs","webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/rendering/renderers/gl/texture/uploaders/glUploadBufferImageResource.mjs","webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/rendering/renderers/gl/texture/uploaders/glUploadCompressedTextureResource.mjs","webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/rendering/renderers/gl/texture/uploaders/glUploadImageResource.mjs","webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/rendering/renderers/gl/texture/uploaders/glUploadVideoResource.mjs","webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/rendering/renderers/gl/texture/utils/pixiToGlMaps.mjs","webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/rendering/renderers/gl/texture/utils/applyStyleParams.mjs","webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/rendering/renderers/gl/texture/GlTextureSystem.mjs","webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/rendering/renderers/gl/texture/utils/mapFormatToGlInternalFormat.mjs","webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/rendering/renderers/gl/texture/utils/mapFormatToGlType.mjs","webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/rendering/renderers/gl/texture/utils/mapFormatToGlFormat.mjs","webpack://rts-game/./node_modules/.pnpm/pixi.js@8.13.2/node_modules/pixi.js/lib/rendering/renderers/gl/WebGLRenderer.mjs"],"sourcesContent":["import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { Matrix } from '../../../maths/matrix/Matrix.mjs';\nimport { compileHighShaderGlProgram } from '../../../rendering/high-shader/compileHighShaderToProgram.mjs';\nimport { colorBitGl } from '../../../rendering/high-shader/shader-bits/colorBit.mjs';\nimport { generateTextureBatchBitGl } from '../../../rendering/high-shader/shader-bits/generateTextureBatchBit.mjs';\nimport { localUniformBitGl } from '../../../rendering/high-shader/shader-bits/localUniformBit.mjs';\nimport { roundPixelsBitGl } from '../../../rendering/high-shader/shader-bits/roundPixelsBit.mjs';\nimport { getBatchSamplersUniformGroup } from '../../../rendering/renderers/gl/shader/getBatchSamplersUniformGroup.mjs';\nimport { Shader } from '../../../rendering/renderers/shared/shader/Shader.mjs';\nimport { UniformGroup } from '../../../rendering/renderers/shared/shader/UniformGroup.mjs';\n\n\"use strict\";\nclass GlGraphicsAdaptor {\n  contextChange(renderer) {\n    const uniforms = new UniformGroup({\n      uColor: { value: new Float32Array([1, 1, 1, 1]), type: \"vec4<f32>\" },\n      uTransformMatrix: { value: new Matrix(), type: \"mat3x3<f32>\" },\n      uRound: { value: 0, type: \"f32\" }\n    });\n    const maxTextures = renderer.limits.maxBatchableTextures;\n    const glProgram = compileHighShaderGlProgram({\n      name: \"graphics\",\n      bits: [\n        colorBitGl,\n        generateTextureBatchBitGl(maxTextures),\n        localUniformBitGl,\n        roundPixelsBitGl\n      ]\n    });\n    this.shader = new Shader({\n      glProgram,\n      resources: {\n        localUniforms: uniforms,\n        batchSamplers: getBatchSamplersUniformGroup(maxTextures)\n      }\n    });\n  }\n  execute(graphicsPipe, renderable) {\n    const context = renderable.context;\n    const shader = context.customShader || this.shader;\n    const renderer = graphicsPipe.renderer;\n    const contextSystem = renderer.graphicsContext;\n    const {\n      batcher,\n      instructions\n    } = contextSystem.getContextRenderData(context);\n    shader.groups[0] = renderer.globalUniforms.bindGroup;\n    renderer.state.set(graphicsPipe.state);\n    renderer.shader.bind(shader);\n    renderer.geometry.bind(batcher.geometry, shader.glProgram);\n    const batches = instructions.instructions;\n    for (let i = 0; i < instructions.instructionSize; i++) {\n      const batch = batches[i];\n      if (batch.size) {\n        for (let j = 0; j < batch.textures.count; j++) {\n          renderer.texture.bind(batch.textures.textures[j], j);\n        }\n        renderer.geometry.draw(batch.topology, batch.size, batch.start);\n      }\n    }\n  }\n  destroy() {\n    this.shader.destroy(true);\n    this.shader = null;\n  }\n}\n/** @ignore */\nGlGraphicsAdaptor.extension = {\n  type: [\n    ExtensionType.WebGLPipesAdaptor\n  ],\n  name: \"graphics\"\n};\n\nexport { GlGraphicsAdaptor };\n//# sourceMappingURL=GlGraphicsAdaptor.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { Matrix } from '../../../maths/matrix/Matrix.mjs';\nimport { compileHighShaderGlProgram } from '../../../rendering/high-shader/compileHighShaderToProgram.mjs';\nimport { localUniformBitGl } from '../../../rendering/high-shader/shader-bits/localUniformBit.mjs';\nimport { roundPixelsBitGl } from '../../../rendering/high-shader/shader-bits/roundPixelsBit.mjs';\nimport { textureBitGl } from '../../../rendering/high-shader/shader-bits/textureBit.mjs';\nimport { Shader } from '../../../rendering/renderers/shared/shader/Shader.mjs';\nimport { Texture } from '../../../rendering/renderers/shared/texture/Texture.mjs';\nimport { warn } from '../../../utils/logging/warn.mjs';\n\n\"use strict\";\nclass GlMeshAdaptor {\n  init() {\n    const glProgram = compileHighShaderGlProgram({\n      name: \"mesh\",\n      bits: [\n        localUniformBitGl,\n        textureBitGl,\n        roundPixelsBitGl\n      ]\n    });\n    this._shader = new Shader({\n      glProgram,\n      resources: {\n        uTexture: Texture.EMPTY.source,\n        textureUniforms: {\n          uTextureMatrix: { type: \"mat3x3<f32>\", value: new Matrix() }\n        }\n      }\n    });\n  }\n  execute(meshPipe, mesh) {\n    const renderer = meshPipe.renderer;\n    let shader = mesh._shader;\n    if (!shader) {\n      shader = this._shader;\n      const texture = mesh.texture;\n      const source = texture.source;\n      shader.resources.uTexture = source;\n      shader.resources.uSampler = source.style;\n      shader.resources.textureUniforms.uniforms.uTextureMatrix = texture.textureMatrix.mapCoord;\n    } else if (!shader.glProgram) {\n      warn(\"Mesh shader has no glProgram\", mesh.shader);\n      return;\n    }\n    shader.groups[100] = renderer.globalUniforms.bindGroup;\n    shader.groups[101] = meshPipe.localUniformsBindGroup;\n    renderer.encoder.draw({\n      geometry: mesh._geometry,\n      shader,\n      state: mesh.state\n    });\n  }\n  destroy() {\n    this._shader.destroy(true);\n    this._shader = null;\n  }\n}\nGlMeshAdaptor.extension = {\n  type: [\n    ExtensionType.WebGLPipesAdaptor\n  ],\n  name: \"mesh\"\n};\n\nexport { GlMeshAdaptor };\n//# sourceMappingURL=GlMeshAdaptor.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { State } from '../../renderers/shared/state/State.mjs';\n\n\"use strict\";\nclass GlBatchAdaptor {\n  constructor() {\n    this._tempState = State.for2d();\n    /**\n     * We only want to sync the a batched shaders uniforms once on first use\n     * this is a hash of shader uids to a boolean value.  When the shader is first bound\n     * we set the value to true.  When the shader is bound again we check the value and\n     * if it is true we know that the uniforms have already been synced and we skip it.\n     */\n    this._didUploadHash = {};\n  }\n  init(batcherPipe) {\n    batcherPipe.renderer.runners.contextChange.add(this);\n  }\n  contextChange() {\n    this._didUploadHash = {};\n  }\n  start(batchPipe, geometry, shader) {\n    const renderer = batchPipe.renderer;\n    const didUpload = this._didUploadHash[shader.uid];\n    renderer.shader.bind(shader, didUpload);\n    if (!didUpload) {\n      this._didUploadHash[shader.uid] = true;\n    }\n    renderer.shader.updateUniformGroup(renderer.globalUniforms.uniformGroup);\n    renderer.geometry.bind(geometry, shader.glProgram);\n  }\n  execute(batchPipe, batch) {\n    const renderer = batchPipe.renderer;\n    this._tempState.blendMode = batch.blendMode;\n    renderer.state.set(this._tempState);\n    const textures = batch.textures.textures;\n    for (let i = 0; i < batch.textures.count; i++) {\n      renderer.texture.bind(textures[i], i);\n    }\n    renderer.geometry.draw(batch.topology, batch.size, batch.start);\n  }\n}\n/** @ignore */\nGlBatchAdaptor.extension = {\n  type: [\n    ExtensionType.WebGLPipesAdaptor\n  ],\n  name: \"batch\"\n};\n\nexport { GlBatchAdaptor };\n//# sourceMappingURL=GlBatchAdaptor.mjs.map\n","\"use strict\";\nvar BUFFER_TYPE = /* @__PURE__ */ ((BUFFER_TYPE2) => {\n  BUFFER_TYPE2[BUFFER_TYPE2[\"ELEMENT_ARRAY_BUFFER\"] = 34963] = \"ELEMENT_ARRAY_BUFFER\";\n  BUFFER_TYPE2[BUFFER_TYPE2[\"ARRAY_BUFFER\"] = 34962] = \"ARRAY_BUFFER\";\n  BUFFER_TYPE2[BUFFER_TYPE2[\"UNIFORM_BUFFER\"] = 35345] = \"UNIFORM_BUFFER\";\n  return BUFFER_TYPE2;\n})(BUFFER_TYPE || {});\n\nexport { BUFFER_TYPE };\n//# sourceMappingURL=const.mjs.map\n","\"use strict\";\nclass GlBuffer {\n  constructor(buffer, type) {\n    this._lastBindBaseLocation = -1;\n    this._lastBindCallId = -1;\n    this.buffer = buffer || null;\n    this.updateID = -1;\n    this.byteLength = -1;\n    this.type = type;\n  }\n}\n\nexport { GlBuffer };\n//# sourceMappingURL=GlBuffer.mjs.map\n","import { ExtensionType } from '../../../../extensions/Extensions.mjs';\nimport { BufferUsage } from '../../shared/buffer/const.mjs';\nimport { BUFFER_TYPE } from './const.mjs';\nimport { GlBuffer } from './GlBuffer.mjs';\n\n\"use strict\";\nclass GlBufferSystem {\n  /**\n   * @param {Renderer} renderer - The renderer this System works for.\n   */\n  constructor(renderer) {\n    this._gpuBuffers = /* @__PURE__ */ Object.create(null);\n    /** Cache keeping track of the base bound buffer bases */\n    this._boundBufferBases = /* @__PURE__ */ Object.create(null);\n    this._minBaseLocation = 0;\n    this._nextBindBaseIndex = this._minBaseLocation;\n    this._bindCallId = 0;\n    this._renderer = renderer;\n    this._renderer.renderableGC.addManagedHash(this, \"_gpuBuffers\");\n  }\n  /** @ignore */\n  destroy() {\n    this._renderer = null;\n    this._gl = null;\n    this._gpuBuffers = null;\n    this._boundBufferBases = null;\n  }\n  /** Sets up the renderer context and necessary buffers. */\n  contextChange() {\n    this._gl = this._renderer.gl;\n    this._gpuBuffers = /* @__PURE__ */ Object.create(null);\n    this._maxBindings = this._renderer.limits.maxUniformBindings;\n  }\n  getGlBuffer(buffer) {\n    return this._gpuBuffers[buffer.uid] || this.createGLBuffer(buffer);\n  }\n  /**\n   * This binds specified buffer. On first run, it will create the webGL buffers for the context too\n   * @param buffer - the buffer to bind to the renderer\n   */\n  bind(buffer) {\n    const { _gl: gl } = this;\n    const glBuffer = this.getGlBuffer(buffer);\n    gl.bindBuffer(glBuffer.type, glBuffer.buffer);\n  }\n  /**\n   * Binds an uniform buffer to at the given index.\n   *\n   * A cache is used so a buffer will not be bound again if already bound.\n   * @param glBuffer - the buffer to bind\n   * @param index - the base index to bind it to.\n   */\n  bindBufferBase(glBuffer, index) {\n    const { _gl: gl } = this;\n    if (this._boundBufferBases[index] !== glBuffer) {\n      this._boundBufferBases[index] = glBuffer;\n      glBuffer._lastBindBaseLocation = index;\n      gl.bindBufferBase(gl.UNIFORM_BUFFER, index, glBuffer.buffer);\n    }\n  }\n  nextBindBase(hasTransformFeedback) {\n    this._bindCallId++;\n    this._minBaseLocation = 0;\n    if (hasTransformFeedback) {\n      this._boundBufferBases[0] = null;\n      this._minBaseLocation = 1;\n      if (this._nextBindBaseIndex < 1) {\n        this._nextBindBaseIndex = 1;\n      }\n    }\n  }\n  freeLocationForBufferBase(glBuffer) {\n    let freeIndex = this.getLastBindBaseLocation(glBuffer);\n    if (freeIndex >= this._minBaseLocation) {\n      glBuffer._lastBindCallId = this._bindCallId;\n      return freeIndex;\n    }\n    let loop = 0;\n    let nextIndex = this._nextBindBaseIndex;\n    while (loop < 2) {\n      if (nextIndex >= this._maxBindings) {\n        nextIndex = this._minBaseLocation;\n        loop++;\n      }\n      const curBuf = this._boundBufferBases[nextIndex];\n      if (curBuf && curBuf._lastBindCallId === this._bindCallId) {\n        nextIndex++;\n        continue;\n      }\n      break;\n    }\n    freeIndex = nextIndex;\n    this._nextBindBaseIndex = nextIndex + 1;\n    if (loop >= 2) {\n      return -1;\n    }\n    glBuffer._lastBindCallId = this._bindCallId;\n    this._boundBufferBases[freeIndex] = null;\n    return freeIndex;\n  }\n  getLastBindBaseLocation(glBuffer) {\n    const index = glBuffer._lastBindBaseLocation;\n    if (this._boundBufferBases[index] === glBuffer) {\n      return index;\n    }\n    return -1;\n  }\n  /**\n   * Binds a buffer whilst also binding its range.\n   * This will make the buffer start from the offset supplied rather than 0 when it is read.\n   * @param glBuffer - the buffer to bind\n   * @param index - the base index to bind at, defaults to 0\n   * @param offset - the offset to bind at (this is blocks of 256). 0 = 0, 1 = 256, 2 = 512 etc\n   * @param size - the size to bind at (this is blocks of 256).\n   */\n  bindBufferRange(glBuffer, index, offset, size) {\n    const { _gl: gl } = this;\n    offset || (offset = 0);\n    index || (index = 0);\n    this._boundBufferBases[index] = null;\n    gl.bindBufferRange(gl.UNIFORM_BUFFER, index || 0, glBuffer.buffer, offset * 256, size || 256);\n  }\n  /**\n   * Will ensure the data in the buffer is uploaded to the GPU.\n   * @param {Buffer} buffer - the buffer to update\n   */\n  updateBuffer(buffer) {\n    const { _gl: gl } = this;\n    const glBuffer = this.getGlBuffer(buffer);\n    if (buffer._updateID === glBuffer.updateID) {\n      return glBuffer;\n    }\n    glBuffer.updateID = buffer._updateID;\n    gl.bindBuffer(glBuffer.type, glBuffer.buffer);\n    const data = buffer.data;\n    const drawType = buffer.descriptor.usage & BufferUsage.STATIC ? gl.STATIC_DRAW : gl.DYNAMIC_DRAW;\n    if (data) {\n      if (glBuffer.byteLength >= data.byteLength) {\n        gl.bufferSubData(glBuffer.type, 0, data, 0, buffer._updateSize / data.BYTES_PER_ELEMENT);\n      } else {\n        glBuffer.byteLength = data.byteLength;\n        gl.bufferData(glBuffer.type, data, drawType);\n      }\n    } else {\n      glBuffer.byteLength = buffer.descriptor.size;\n      gl.bufferData(glBuffer.type, glBuffer.byteLength, drawType);\n    }\n    return glBuffer;\n  }\n  /** dispose all WebGL resources of all managed buffers */\n  destroyAll() {\n    const gl = this._gl;\n    for (const id in this._gpuBuffers) {\n      gl.deleteBuffer(this._gpuBuffers[id].buffer);\n    }\n    this._gpuBuffers = /* @__PURE__ */ Object.create(null);\n  }\n  /**\n   * Disposes buffer\n   * @param {Buffer} buffer - buffer with data\n   * @param {boolean} [contextLost=false] - If context was lost, we suppress deleteVertexArray\n   */\n  onBufferDestroy(buffer, contextLost) {\n    const glBuffer = this._gpuBuffers[buffer.uid];\n    const gl = this._gl;\n    if (!contextLost) {\n      gl.deleteBuffer(glBuffer.buffer);\n    }\n    this._gpuBuffers[buffer.uid] = null;\n  }\n  /**\n   * creates and attaches a GLBuffer object tied to the current context.\n   * @param buffer\n   * @protected\n   */\n  createGLBuffer(buffer) {\n    const { _gl: gl } = this;\n    let type = BUFFER_TYPE.ARRAY_BUFFER;\n    if (buffer.descriptor.usage & BufferUsage.INDEX) {\n      type = BUFFER_TYPE.ELEMENT_ARRAY_BUFFER;\n    } else if (buffer.descriptor.usage & BufferUsage.UNIFORM) {\n      type = BUFFER_TYPE.UNIFORM_BUFFER;\n    }\n    const glBuffer = new GlBuffer(gl.createBuffer(), type);\n    this._gpuBuffers[buffer.uid] = glBuffer;\n    buffer.on(\"destroy\", this.onBufferDestroy, this);\n    return glBuffer;\n  }\n  resetState() {\n    this._boundBufferBases = /* @__PURE__ */ Object.create(null);\n  }\n}\n/** @ignore */\nGlBufferSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"buffer\"\n};\n\nexport { GlBufferSystem };\n//# sourceMappingURL=GlBufferSystem.mjs.map\n","import { DOMAdapter } from '../../../../environment/adapter.mjs';\nimport { ExtensionType } from '../../../../extensions/Extensions.mjs';\nimport { warn } from '../../../../utils/logging/warn.mjs';\n\n\"use strict\";\nconst _GlContextSystem = class _GlContextSystem {\n  /** @param renderer - The renderer this System works for. */\n  constructor(renderer) {\n    /**\n     * Features supported by current renderer.\n     * @type {object}\n     * @readonly\n     */\n    this.supports = {\n      /** Support for 32-bit indices buffer. */\n      uint32Indices: true,\n      /** Support for UniformBufferObjects */\n      uniformBufferObject: true,\n      /** Support for VertexArrayObjects */\n      vertexArrayObject: true,\n      /** Support for SRGB texture format */\n      srgbTextures: true,\n      /** Support for wrapping modes if a texture is non-power of two */\n      nonPowOf2wrapping: true,\n      /** Support for MSAA (antialiasing of dynamic textures) */\n      msaa: true,\n      /** Support for mipmaps if a texture is non-power of two */\n      nonPowOf2mipmaps: true\n    };\n    this._renderer = renderer;\n    this.extensions = /* @__PURE__ */ Object.create(null);\n    this.handleContextLost = this.handleContextLost.bind(this);\n    this.handleContextRestored = this.handleContextRestored.bind(this);\n  }\n  /**\n   * `true` if the context is lost\n   * @readonly\n   */\n  get isLost() {\n    return !this.gl || this.gl.isContextLost();\n  }\n  /**\n   * Handles the context change event.\n   * @param {WebGLRenderingContext} gl - New WebGL context.\n   */\n  contextChange(gl) {\n    this.gl = gl;\n    this._renderer.gl = gl;\n  }\n  init(options) {\n    options = { ..._GlContextSystem.defaultOptions, ...options };\n    let multiView = this.multiView = options.multiView;\n    if (options.context && multiView) {\n      warn(\"Renderer created with both a context and multiview enabled. Disabling multiView as both cannot work together.\");\n      multiView = false;\n    }\n    if (multiView) {\n      this.canvas = DOMAdapter.get().createCanvas(this._renderer.canvas.width, this._renderer.canvas.height);\n    } else {\n      this.canvas = this._renderer.view.canvas;\n    }\n    if (options.context) {\n      this.initFromContext(options.context);\n    } else {\n      const alpha = this._renderer.background.alpha < 1;\n      const premultipliedAlpha = options.premultipliedAlpha ?? true;\n      const antialias = options.antialias && !this._renderer.backBuffer.useBackBuffer;\n      this.createContext(options.preferWebGLVersion, {\n        alpha,\n        premultipliedAlpha,\n        antialias,\n        stencil: true,\n        preserveDrawingBuffer: options.preserveDrawingBuffer,\n        powerPreference: options.powerPreference ?? \"default\"\n      });\n    }\n  }\n  ensureCanvasSize(targetCanvas) {\n    if (!this.multiView) {\n      if (targetCanvas !== this.canvas) {\n        warn(\"multiView is disabled, but targetCanvas is not the main canvas\");\n      }\n      return;\n    }\n    const { canvas } = this;\n    if (canvas.width < targetCanvas.width || canvas.height < targetCanvas.height) {\n      canvas.width = Math.max(targetCanvas.width, targetCanvas.width);\n      canvas.height = Math.max(targetCanvas.height, targetCanvas.height);\n    }\n  }\n  /**\n   * Initializes the context.\n   * @protected\n   * @param {WebGLRenderingContext} gl - WebGL context\n   */\n  initFromContext(gl) {\n    this.gl = gl;\n    this.webGLVersion = gl instanceof DOMAdapter.get().getWebGLRenderingContext() ? 1 : 2;\n    this.getExtensions();\n    this.validateContext(gl);\n    this._renderer.runners.contextChange.emit(gl);\n    const element = this._renderer.view.canvas;\n    element.addEventListener(\"webglcontextlost\", this.handleContextLost, false);\n    element.addEventListener(\"webglcontextrestored\", this.handleContextRestored, false);\n  }\n  /**\n   * Initialize from context options\n   * @protected\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/getContext\n   * @param preferWebGLVersion\n   * @param {object} options - context attributes\n   */\n  createContext(preferWebGLVersion, options) {\n    let gl;\n    const canvas = this.canvas;\n    if (preferWebGLVersion === 2) {\n      gl = canvas.getContext(\"webgl2\", options);\n    }\n    if (!gl) {\n      gl = canvas.getContext(\"webgl\", options);\n      if (!gl) {\n        throw new Error(\"This browser does not support WebGL. Try using the canvas renderer\");\n      }\n    }\n    this.gl = gl;\n    this.initFromContext(this.gl);\n  }\n  /** Auto-populate the {@link GlContextSystem.extensions extensions}. */\n  getExtensions() {\n    const { gl } = this;\n    const common = {\n      anisotropicFiltering: gl.getExtension(\"EXT_texture_filter_anisotropic\"),\n      floatTextureLinear: gl.getExtension(\"OES_texture_float_linear\"),\n      s3tc: gl.getExtension(\"WEBGL_compressed_texture_s3tc\"),\n      s3tc_sRGB: gl.getExtension(\"WEBGL_compressed_texture_s3tc_srgb\"),\n      // eslint-disable-line camelcase\n      etc: gl.getExtension(\"WEBGL_compressed_texture_etc\"),\n      etc1: gl.getExtension(\"WEBGL_compressed_texture_etc1\"),\n      pvrtc: gl.getExtension(\"WEBGL_compressed_texture_pvrtc\") || gl.getExtension(\"WEBKIT_WEBGL_compressed_texture_pvrtc\"),\n      atc: gl.getExtension(\"WEBGL_compressed_texture_atc\"),\n      astc: gl.getExtension(\"WEBGL_compressed_texture_astc\"),\n      bptc: gl.getExtension(\"EXT_texture_compression_bptc\"),\n      rgtc: gl.getExtension(\"EXT_texture_compression_rgtc\"),\n      loseContext: gl.getExtension(\"WEBGL_lose_context\")\n    };\n    if (this.webGLVersion === 1) {\n      this.extensions = {\n        ...common,\n        drawBuffers: gl.getExtension(\"WEBGL_draw_buffers\"),\n        depthTexture: gl.getExtension(\"WEBGL_depth_texture\"),\n        vertexArrayObject: gl.getExtension(\"OES_vertex_array_object\") || gl.getExtension(\"MOZ_OES_vertex_array_object\") || gl.getExtension(\"WEBKIT_OES_vertex_array_object\"),\n        uint32ElementIndex: gl.getExtension(\"OES_element_index_uint\"),\n        // Floats and half-floats\n        floatTexture: gl.getExtension(\"OES_texture_float\"),\n        floatTextureLinear: gl.getExtension(\"OES_texture_float_linear\"),\n        textureHalfFloat: gl.getExtension(\"OES_texture_half_float\"),\n        textureHalfFloatLinear: gl.getExtension(\"OES_texture_half_float_linear\"),\n        vertexAttribDivisorANGLE: gl.getExtension(\"ANGLE_instanced_arrays\"),\n        srgb: gl.getExtension(\"EXT_sRGB\")\n      };\n    } else {\n      this.extensions = {\n        ...common,\n        colorBufferFloat: gl.getExtension(\"EXT_color_buffer_float\")\n      };\n      const provokeExt = gl.getExtension(\"WEBGL_provoking_vertex\");\n      if (provokeExt) {\n        provokeExt.provokingVertexWEBGL(provokeExt.FIRST_VERTEX_CONVENTION_WEBGL);\n      }\n    }\n  }\n  /**\n   * Handles a lost webgl context\n   * @param {WebGLContextEvent} event - The context lost event.\n   */\n  handleContextLost(event) {\n    event.preventDefault();\n    if (this._contextLossForced) {\n      this._contextLossForced = false;\n      setTimeout(() => {\n        if (this.gl.isContextLost()) {\n          this.extensions.loseContext?.restoreContext();\n        }\n      }, 0);\n    }\n  }\n  /** Handles a restored webgl context. */\n  handleContextRestored() {\n    this.getExtensions();\n    this._renderer.runners.contextChange.emit(this.gl);\n  }\n  destroy() {\n    const element = this._renderer.view.canvas;\n    this._renderer = null;\n    element.removeEventListener(\"webglcontextlost\", this.handleContextLost);\n    element.removeEventListener(\"webglcontextrestored\", this.handleContextRestored);\n    this.gl.useProgram(null);\n    this.extensions.loseContext?.loseContext();\n  }\n  /**\n   * this function can be called to force a webGL context loss\n   * this will release all resources on the GPU.\n   * Useful if you need to put Pixi to sleep, and save some GPU memory\n   *\n   * As soon as render is called - all resources will be created again.\n   */\n  forceContextLoss() {\n    this.extensions.loseContext?.loseContext();\n    this._contextLossForced = true;\n  }\n  /**\n   * Validate context.\n   * @param {WebGLRenderingContext} gl - Render context.\n   */\n  validateContext(gl) {\n    const attributes = gl.getContextAttributes();\n    if (attributes && !attributes.stencil) {\n      warn(\"Provided WebGL context does not have a stencil buffer, masks may not render correctly\");\n    }\n    const supports = this.supports;\n    const isWebGl2 = this.webGLVersion === 2;\n    const extensions = this.extensions;\n    supports.uint32Indices = isWebGl2 || !!extensions.uint32ElementIndex;\n    supports.uniformBufferObject = isWebGl2;\n    supports.vertexArrayObject = isWebGl2 || !!extensions.vertexArrayObject;\n    supports.srgbTextures = isWebGl2 || !!extensions.srgb;\n    supports.nonPowOf2wrapping = isWebGl2;\n    supports.nonPowOf2mipmaps = isWebGl2;\n    supports.msaa = isWebGl2;\n    if (!supports.uint32Indices) {\n      warn(\"Provided WebGL context does not support 32 index buffer, large scenes may not render correctly\");\n    }\n  }\n};\n/** @ignore */\n_GlContextSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"context\"\n};\n/** The default options for the system. */\n_GlContextSystem.defaultOptions = {\n  /**\n   * {@link WebGLOptions.context}\n   * @default null\n   */\n  context: null,\n  /**\n   * {@link WebGLOptions.premultipliedAlpha}\n   * @default true\n   */\n  premultipliedAlpha: true,\n  /**\n   * {@link WebGLOptions.preserveDrawingBuffer}\n   * @default false\n   */\n  preserveDrawingBuffer: false,\n  /**\n   * {@link WebGLOptions.powerPreference}\n   * @default default\n   */\n  powerPreference: void 0,\n  /**\n   * {@link WebGLOptions.webGLVersion}\n   * @default 2\n   */\n  preferWebGLVersion: 2,\n  /**\n   * {@link WebGLOptions.multiView}\n   * @default false\n   */\n  multiView: false\n};\nlet GlContextSystem = _GlContextSystem;\n\nexport { GlContextSystem };\n//# sourceMappingURL=GlContextSystem.mjs.map\n","\"use strict\";\nvar GL_FORMATS = /* @__PURE__ */ ((GL_FORMATS2) => {\n  GL_FORMATS2[GL_FORMATS2[\"RGBA\"] = 6408] = \"RGBA\";\n  GL_FORMATS2[GL_FORMATS2[\"RGB\"] = 6407] = \"RGB\";\n  GL_FORMATS2[GL_FORMATS2[\"RG\"] = 33319] = \"RG\";\n  GL_FORMATS2[GL_FORMATS2[\"RED\"] = 6403] = \"RED\";\n  GL_FORMATS2[GL_FORMATS2[\"RGBA_INTEGER\"] = 36249] = \"RGBA_INTEGER\";\n  GL_FORMATS2[GL_FORMATS2[\"RGB_INTEGER\"] = 36248] = \"RGB_INTEGER\";\n  GL_FORMATS2[GL_FORMATS2[\"RG_INTEGER\"] = 33320] = \"RG_INTEGER\";\n  GL_FORMATS2[GL_FORMATS2[\"RED_INTEGER\"] = 36244] = \"RED_INTEGER\";\n  GL_FORMATS2[GL_FORMATS2[\"ALPHA\"] = 6406] = \"ALPHA\";\n  GL_FORMATS2[GL_FORMATS2[\"LUMINANCE\"] = 6409] = \"LUMINANCE\";\n  GL_FORMATS2[GL_FORMATS2[\"LUMINANCE_ALPHA\"] = 6410] = \"LUMINANCE_ALPHA\";\n  GL_FORMATS2[GL_FORMATS2[\"DEPTH_COMPONENT\"] = 6402] = \"DEPTH_COMPONENT\";\n  GL_FORMATS2[GL_FORMATS2[\"DEPTH_STENCIL\"] = 34041] = \"DEPTH_STENCIL\";\n  return GL_FORMATS2;\n})(GL_FORMATS || {});\nvar GL_TARGETS = /* @__PURE__ */ ((GL_TARGETS2) => {\n  GL_TARGETS2[GL_TARGETS2[\"TEXTURE_2D\"] = 3553] = \"TEXTURE_2D\";\n  GL_TARGETS2[GL_TARGETS2[\"TEXTURE_CUBE_MAP\"] = 34067] = \"TEXTURE_CUBE_MAP\";\n  GL_TARGETS2[GL_TARGETS2[\"TEXTURE_2D_ARRAY\"] = 35866] = \"TEXTURE_2D_ARRAY\";\n  GL_TARGETS2[GL_TARGETS2[\"TEXTURE_CUBE_MAP_POSITIVE_X\"] = 34069] = \"TEXTURE_CUBE_MAP_POSITIVE_X\";\n  GL_TARGETS2[GL_TARGETS2[\"TEXTURE_CUBE_MAP_NEGATIVE_X\"] = 34070] = \"TEXTURE_CUBE_MAP_NEGATIVE_X\";\n  GL_TARGETS2[GL_TARGETS2[\"TEXTURE_CUBE_MAP_POSITIVE_Y\"] = 34071] = \"TEXTURE_CUBE_MAP_POSITIVE_Y\";\n  GL_TARGETS2[GL_TARGETS2[\"TEXTURE_CUBE_MAP_NEGATIVE_Y\"] = 34072] = \"TEXTURE_CUBE_MAP_NEGATIVE_Y\";\n  GL_TARGETS2[GL_TARGETS2[\"TEXTURE_CUBE_MAP_POSITIVE_Z\"] = 34073] = \"TEXTURE_CUBE_MAP_POSITIVE_Z\";\n  GL_TARGETS2[GL_TARGETS2[\"TEXTURE_CUBE_MAP_NEGATIVE_Z\"] = 34074] = \"TEXTURE_CUBE_MAP_NEGATIVE_Z\";\n  return GL_TARGETS2;\n})(GL_TARGETS || {});\nvar GL_WRAP_MODES = /* @__PURE__ */ ((GL_WRAP_MODES2) => {\n  GL_WRAP_MODES2[GL_WRAP_MODES2[\"CLAMP\"] = 33071] = \"CLAMP\";\n  GL_WRAP_MODES2[GL_WRAP_MODES2[\"REPEAT\"] = 10497] = \"REPEAT\";\n  GL_WRAP_MODES2[GL_WRAP_MODES2[\"MIRRORED_REPEAT\"] = 33648] = \"MIRRORED_REPEAT\";\n  return GL_WRAP_MODES2;\n})(GL_WRAP_MODES || {});\nvar GL_TYPES = /* @__PURE__ */ ((GL_TYPES2) => {\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_BYTE\"] = 5121] = \"UNSIGNED_BYTE\";\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_SHORT\"] = 5123] = \"UNSIGNED_SHORT\";\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_SHORT_5_6_5\"] = 33635] = \"UNSIGNED_SHORT_5_6_5\";\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_SHORT_4_4_4_4\"] = 32819] = \"UNSIGNED_SHORT_4_4_4_4\";\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_SHORT_5_5_5_1\"] = 32820] = \"UNSIGNED_SHORT_5_5_5_1\";\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_INT\"] = 5125] = \"UNSIGNED_INT\";\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_INT_10F_11F_11F_REV\"] = 35899] = \"UNSIGNED_INT_10F_11F_11F_REV\";\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_INT_2_10_10_10_REV\"] = 33640] = \"UNSIGNED_INT_2_10_10_10_REV\";\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_INT_24_8\"] = 34042] = \"UNSIGNED_INT_24_8\";\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_INT_5_9_9_9_REV\"] = 35902] = \"UNSIGNED_INT_5_9_9_9_REV\";\n  GL_TYPES2[GL_TYPES2[\"BYTE\"] = 5120] = \"BYTE\";\n  GL_TYPES2[GL_TYPES2[\"SHORT\"] = 5122] = \"SHORT\";\n  GL_TYPES2[GL_TYPES2[\"INT\"] = 5124] = \"INT\";\n  GL_TYPES2[GL_TYPES2[\"FLOAT\"] = 5126] = \"FLOAT\";\n  GL_TYPES2[GL_TYPES2[\"FLOAT_32_UNSIGNED_INT_24_8_REV\"] = 36269] = \"FLOAT_32_UNSIGNED_INT_24_8_REV\";\n  GL_TYPES2[GL_TYPES2[\"HALF_FLOAT\"] = 36193] = \"HALF_FLOAT\";\n  return GL_TYPES2;\n})(GL_TYPES || {});\n\nexport { GL_FORMATS, GL_TARGETS, GL_TYPES, GL_WRAP_MODES };\n//# sourceMappingURL=const.mjs.map\n","import { GL_TYPES } from '../../texture/const.mjs';\n\n\"use strict\";\nconst infoMap = {\n  uint8x2: GL_TYPES.UNSIGNED_BYTE,\n  uint8x4: GL_TYPES.UNSIGNED_BYTE,\n  sint8x2: GL_TYPES.BYTE,\n  sint8x4: GL_TYPES.BYTE,\n  unorm8x2: GL_TYPES.UNSIGNED_BYTE,\n  unorm8x4: GL_TYPES.UNSIGNED_BYTE,\n  snorm8x2: GL_TYPES.BYTE,\n  snorm8x4: GL_TYPES.BYTE,\n  uint16x2: GL_TYPES.UNSIGNED_SHORT,\n  uint16x4: GL_TYPES.UNSIGNED_SHORT,\n  sint16x2: GL_TYPES.SHORT,\n  sint16x4: GL_TYPES.SHORT,\n  unorm16x2: GL_TYPES.UNSIGNED_SHORT,\n  unorm16x4: GL_TYPES.UNSIGNED_SHORT,\n  snorm16x2: GL_TYPES.SHORT,\n  snorm16x4: GL_TYPES.SHORT,\n  float16x2: GL_TYPES.HALF_FLOAT,\n  float16x4: GL_TYPES.HALF_FLOAT,\n  float32: GL_TYPES.FLOAT,\n  float32x2: GL_TYPES.FLOAT,\n  float32x3: GL_TYPES.FLOAT,\n  float32x4: GL_TYPES.FLOAT,\n  uint32: GL_TYPES.UNSIGNED_INT,\n  uint32x2: GL_TYPES.UNSIGNED_INT,\n  uint32x3: GL_TYPES.UNSIGNED_INT,\n  uint32x4: GL_TYPES.UNSIGNED_INT,\n  sint32: GL_TYPES.INT,\n  sint32x2: GL_TYPES.INT,\n  sint32x3: GL_TYPES.INT,\n  sint32x4: GL_TYPES.INT\n};\nfunction getGlTypeFromFormat(format) {\n  return infoMap[format] ?? infoMap.float32;\n}\n\nexport { getGlTypeFromFormat };\n//# sourceMappingURL=getGlTypeFromFormat.mjs.map\n","import { ExtensionType } from '../../../../extensions/Extensions.mjs';\nimport { getAttributeInfoFromFormat } from '../../shared/geometry/utils/getAttributeInfoFromFormat.mjs';\nimport { ensureAttributes } from '../shader/program/ensureAttributes.mjs';\nimport { getGlTypeFromFormat } from './utils/getGlTypeFromFormat.mjs';\n\n\"use strict\";\nconst topologyToGlMap = {\n  \"point-list\": 0,\n  \"line-list\": 1,\n  \"line-strip\": 3,\n  \"triangle-list\": 4,\n  \"triangle-strip\": 5\n};\nclass GlGeometrySystem {\n  /** @param renderer - The renderer this System works for. */\n  constructor(renderer) {\n    this._geometryVaoHash = /* @__PURE__ */ Object.create(null);\n    this._renderer = renderer;\n    this._activeGeometry = null;\n    this._activeVao = null;\n    this.hasVao = true;\n    this.hasInstance = true;\n    this._renderer.renderableGC.addManagedHash(this, \"_geometryVaoHash\");\n  }\n  /** Sets up the renderer context and necessary buffers. */\n  contextChange() {\n    const gl = this.gl = this._renderer.gl;\n    if (!this._renderer.context.supports.vertexArrayObject) {\n      throw new Error(\"[PixiJS] Vertex Array Objects are not supported on this device\");\n    }\n    const nativeVaoExtension = this._renderer.context.extensions.vertexArrayObject;\n    if (nativeVaoExtension) {\n      gl.createVertexArray = () => nativeVaoExtension.createVertexArrayOES();\n      gl.bindVertexArray = (vao) => nativeVaoExtension.bindVertexArrayOES(vao);\n      gl.deleteVertexArray = (vao) => nativeVaoExtension.deleteVertexArrayOES(vao);\n    }\n    const nativeInstancedExtension = this._renderer.context.extensions.vertexAttribDivisorANGLE;\n    if (nativeInstancedExtension) {\n      gl.drawArraysInstanced = (a, b, c, d) => {\n        nativeInstancedExtension.drawArraysInstancedANGLE(a, b, c, d);\n      };\n      gl.drawElementsInstanced = (a, b, c, d, e) => {\n        nativeInstancedExtension.drawElementsInstancedANGLE(a, b, c, d, e);\n      };\n      gl.vertexAttribDivisor = (a, b) => nativeInstancedExtension.vertexAttribDivisorANGLE(a, b);\n    }\n    this._activeGeometry = null;\n    this._activeVao = null;\n    this._geometryVaoHash = /* @__PURE__ */ Object.create(null);\n  }\n  /**\n   * Binds geometry so that is can be drawn. Creating a Vao if required\n   * @param geometry - Instance of geometry to bind.\n   * @param program - Instance of program to use vao for.\n   */\n  bind(geometry, program) {\n    const gl = this.gl;\n    this._activeGeometry = geometry;\n    const vao = this.getVao(geometry, program);\n    if (this._activeVao !== vao) {\n      this._activeVao = vao;\n      gl.bindVertexArray(vao);\n    }\n    this.updateBuffers();\n  }\n  /** Reset and unbind any active VAO and geometry. */\n  resetState() {\n    this.unbind();\n  }\n  /** Update buffers of the currently bound geometry. */\n  updateBuffers() {\n    const geometry = this._activeGeometry;\n    const bufferSystem = this._renderer.buffer;\n    for (let i = 0; i < geometry.buffers.length; i++) {\n      const buffer = geometry.buffers[i];\n      bufferSystem.updateBuffer(buffer);\n    }\n  }\n  /**\n   * Check compatibility between a geometry and a program\n   * @param geometry - Geometry instance.\n   * @param program - Program instance.\n   */\n  checkCompatibility(geometry, program) {\n    const geometryAttributes = geometry.attributes;\n    const shaderAttributes = program._attributeData;\n    for (const j in shaderAttributes) {\n      if (!geometryAttributes[j]) {\n        throw new Error(`shader and geometry incompatible, geometry missing the \"${j}\" attribute`);\n      }\n    }\n  }\n  /**\n   * Takes a geometry and program and generates a unique signature for them.\n   * @param geometry - To get signature from.\n   * @param program - To test geometry against.\n   * @returns - Unique signature of the geometry and program\n   */\n  getSignature(geometry, program) {\n    const attribs = geometry.attributes;\n    const shaderAttributes = program._attributeData;\n    const strings = [\"g\", geometry.uid];\n    for (const i in attribs) {\n      if (shaderAttributes[i]) {\n        strings.push(i, shaderAttributes[i].location);\n      }\n    }\n    return strings.join(\"-\");\n  }\n  getVao(geometry, program) {\n    return this._geometryVaoHash[geometry.uid]?.[program._key] || this.initGeometryVao(geometry, program);\n  }\n  /**\n   * Creates or gets Vao with the same structure as the geometry and stores it on the geometry.\n   * If vao is created, it is bound automatically. We use a shader to infer what and how to set up the\n   * attribute locations.\n   * @param geometry - Instance of geometry to to generate Vao for.\n   * @param program\n   * @param _incRefCount - Increment refCount of all geometry buffers.\n   */\n  initGeometryVao(geometry, program, _incRefCount = true) {\n    const gl = this._renderer.gl;\n    const bufferSystem = this._renderer.buffer;\n    this._renderer.shader._getProgramData(program);\n    this.checkCompatibility(geometry, program);\n    const signature = this.getSignature(geometry, program);\n    if (!this._geometryVaoHash[geometry.uid]) {\n      this._geometryVaoHash[geometry.uid] = /* @__PURE__ */ Object.create(null);\n      geometry.on(\"destroy\", this.onGeometryDestroy, this);\n    }\n    const vaoObjectHash = this._geometryVaoHash[geometry.uid];\n    let vao = vaoObjectHash[signature];\n    if (vao) {\n      vaoObjectHash[program._key] = vao;\n      return vao;\n    }\n    ensureAttributes(geometry, program._attributeData);\n    const buffers = geometry.buffers;\n    vao = gl.createVertexArray();\n    gl.bindVertexArray(vao);\n    for (let i = 0; i < buffers.length; i++) {\n      const buffer = buffers[i];\n      bufferSystem.bind(buffer);\n    }\n    this.activateVao(geometry, program);\n    vaoObjectHash[program._key] = vao;\n    vaoObjectHash[signature] = vao;\n    gl.bindVertexArray(null);\n    return vao;\n  }\n  /**\n   * Disposes geometry.\n   * @param geometry - Geometry with buffers. Only VAO will be disposed\n   * @param [contextLost=false] - If context was lost, we suppress deleteVertexArray\n   */\n  onGeometryDestroy(geometry, contextLost) {\n    const vaoObjectHash = this._geometryVaoHash[geometry.uid];\n    const gl = this.gl;\n    if (vaoObjectHash) {\n      if (contextLost) {\n        for (const i in vaoObjectHash) {\n          if (this._activeVao !== vaoObjectHash[i]) {\n            this.unbind();\n          }\n          gl.deleteVertexArray(vaoObjectHash[i]);\n        }\n      }\n      this._geometryVaoHash[geometry.uid] = null;\n    }\n  }\n  /**\n   * Dispose all WebGL resources of all managed geometries.\n   * @param [contextLost=false] - If context was lost, we suppress `gl.delete` calls\n   */\n  destroyAll(contextLost = false) {\n    const gl = this.gl;\n    for (const i in this._geometryVaoHash) {\n      if (contextLost) {\n        for (const j in this._geometryVaoHash[i]) {\n          const vaoObjectHash = this._geometryVaoHash[i];\n          if (this._activeVao !== vaoObjectHash) {\n            this.unbind();\n          }\n          gl.deleteVertexArray(vaoObjectHash[j]);\n        }\n      }\n      this._geometryVaoHash[i] = null;\n    }\n  }\n  /**\n   * Activate vertex array object.\n   * @param geometry - Geometry instance.\n   * @param program - Shader program instance.\n   */\n  activateVao(geometry, program) {\n    const gl = this._renderer.gl;\n    const bufferSystem = this._renderer.buffer;\n    const attributes = geometry.attributes;\n    if (geometry.indexBuffer) {\n      bufferSystem.bind(geometry.indexBuffer);\n    }\n    let lastBuffer = null;\n    for (const j in attributes) {\n      const attribute = attributes[j];\n      const buffer = attribute.buffer;\n      const glBuffer = bufferSystem.getGlBuffer(buffer);\n      const programAttrib = program._attributeData[j];\n      if (programAttrib) {\n        if (lastBuffer !== glBuffer) {\n          bufferSystem.bind(buffer);\n          lastBuffer = glBuffer;\n        }\n        const location = programAttrib.location;\n        gl.enableVertexAttribArray(location);\n        const attributeInfo = getAttributeInfoFromFormat(attribute.format);\n        const type = getGlTypeFromFormat(attribute.format);\n        if (programAttrib.format?.substring(1, 4) === \"int\") {\n          gl.vertexAttribIPointer(\n            location,\n            attributeInfo.size,\n            type,\n            attribute.stride,\n            attribute.offset\n          );\n        } else {\n          gl.vertexAttribPointer(\n            location,\n            attributeInfo.size,\n            type,\n            attributeInfo.normalised,\n            attribute.stride,\n            attribute.offset\n          );\n        }\n        if (attribute.instance) {\n          if (this.hasInstance) {\n            const divisor = attribute.divisor ?? 1;\n            gl.vertexAttribDivisor(location, divisor);\n          } else {\n            throw new Error(\"geometry error, GPU Instancing is not supported on this device\");\n          }\n        }\n      }\n    }\n  }\n  /**\n   * Draws the currently bound geometry.\n   * @param topology - The type primitive to render.\n   * @param size - The number of elements to be rendered. If not specified, all vertices after the\n   *  starting vertex will be drawn.\n   * @param start - The starting vertex in the geometry to start drawing from. If not specified,\n   *  drawing will start from the first vertex.\n   * @param instanceCount - The number of instances of the set of elements to execute. If not specified,\n   *  all instances will be drawn.\n   * @returns This instance of the geometry system.\n   */\n  draw(topology, size, start, instanceCount) {\n    const { gl } = this._renderer;\n    const geometry = this._activeGeometry;\n    const glTopology = topologyToGlMap[topology || geometry.topology];\n    instanceCount ?? (instanceCount = geometry.instanceCount);\n    if (geometry.indexBuffer) {\n      const byteSize = geometry.indexBuffer.data.BYTES_PER_ELEMENT;\n      const glType = byteSize === 2 ? gl.UNSIGNED_SHORT : gl.UNSIGNED_INT;\n      if (instanceCount > 1) {\n        gl.drawElementsInstanced(glTopology, size || geometry.indexBuffer.data.length, glType, (start || 0) * byteSize, instanceCount);\n      } else {\n        gl.drawElements(glTopology, size || geometry.indexBuffer.data.length, glType, (start || 0) * byteSize);\n      }\n    } else if (instanceCount > 1) {\n      gl.drawArraysInstanced(glTopology, start || 0, size || geometry.getSize(), instanceCount);\n    } else {\n      gl.drawArrays(glTopology, start || 0, size || geometry.getSize());\n    }\n    return this;\n  }\n  /** Unbind/reset everything. */\n  unbind() {\n    this.gl.bindVertexArray(null);\n    this._activeVao = null;\n    this._activeGeometry = null;\n  }\n  destroy() {\n    this._renderer = null;\n    this.gl = null;\n    this._activeVao = null;\n    this._activeGeometry = null;\n    this._geometryVaoHash = null;\n  }\n}\n/** @ignore */\nGlGeometrySystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"geometry\"\n};\n\nexport { GlGeometrySystem };\n//# sourceMappingURL=GlGeometrySystem.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { warn } from '../../../utils/logging/warn.mjs';\nimport { Geometry } from '../shared/geometry/Geometry.mjs';\nimport { Shader } from '../shared/shader/Shader.mjs';\nimport { State } from '../shared/state/State.mjs';\nimport { TextureSource } from '../shared/texture/sources/TextureSource.mjs';\nimport { Texture } from '../shared/texture/Texture.mjs';\nimport { GlProgram } from './shader/GlProgram.mjs';\n\n\"use strict\";\nconst bigTriangleGeometry = new Geometry({\n  attributes: {\n    aPosition: [\n      -1,\n      -1,\n      // Bottom left corner\n      3,\n      -1,\n      // Bottom right corner, extending beyond right edge\n      -1,\n      3\n      // Top left corner, extending beyond top edge\n    ]\n  }\n});\nconst _GlBackBufferSystem = class _GlBackBufferSystem {\n  constructor(renderer) {\n    /** if true, the back buffer is used */\n    this.useBackBuffer = false;\n    this._useBackBufferThisRender = false;\n    this._renderer = renderer;\n  }\n  init(options = {}) {\n    const { useBackBuffer, antialias } = { ..._GlBackBufferSystem.defaultOptions, ...options };\n    this.useBackBuffer = useBackBuffer;\n    this._antialias = antialias;\n    if (!this._renderer.context.supports.msaa) {\n      warn(\"antialiasing, is not supported on when using the back buffer\");\n      this._antialias = false;\n    }\n    this._state = State.for2d();\n    const bigTriangleProgram = new GlProgram({\n      vertex: `\n                attribute vec2 aPosition;\n                out vec2 vUv;\n\n                void main() {\n                    gl_Position = vec4(aPosition, 0.0, 1.0);\n\n                    vUv = (aPosition + 1.0) / 2.0;\n\n                    // flip dem UVs\n                    vUv.y = 1.0 - vUv.y;\n                }`,\n      fragment: `\n                in vec2 vUv;\n                out vec4 finalColor;\n\n                uniform sampler2D uTexture;\n\n                void main() {\n                    finalColor = texture(uTexture, vUv);\n                }`,\n      name: \"big-triangle\"\n    });\n    this._bigTriangleShader = new Shader({\n      glProgram: bigTriangleProgram,\n      resources: {\n        uTexture: Texture.WHITE.source\n      }\n    });\n  }\n  /**\n   * This is called before the RenderTargetSystem is started. This is where\n   * we replace the target with the back buffer if required.\n   * @param options - The options for this render.\n   */\n  renderStart(options) {\n    const renderTarget = this._renderer.renderTarget.getRenderTarget(options.target);\n    this._useBackBufferThisRender = this.useBackBuffer && !!renderTarget.isRoot;\n    if (this._useBackBufferThisRender) {\n      const renderTarget2 = this._renderer.renderTarget.getRenderTarget(options.target);\n      this._targetTexture = renderTarget2.colorTexture;\n      options.target = this._getBackBufferTexture(renderTarget2.colorTexture);\n    }\n  }\n  renderEnd() {\n    this._presentBackBuffer();\n  }\n  _presentBackBuffer() {\n    const renderer = this._renderer;\n    renderer.renderTarget.finishRenderPass();\n    if (!this._useBackBufferThisRender)\n      return;\n    renderer.renderTarget.bind(this._targetTexture, false);\n    this._bigTriangleShader.resources.uTexture = this._backBufferTexture.source;\n    renderer.encoder.draw({\n      geometry: bigTriangleGeometry,\n      shader: this._bigTriangleShader,\n      state: this._state\n    });\n  }\n  _getBackBufferTexture(targetSourceTexture) {\n    this._backBufferTexture = this._backBufferTexture || new Texture({\n      source: new TextureSource({\n        width: targetSourceTexture.width,\n        height: targetSourceTexture.height,\n        resolution: targetSourceTexture._resolution,\n        antialias: this._antialias\n      })\n    });\n    this._backBufferTexture.source.resize(\n      targetSourceTexture.width,\n      targetSourceTexture.height,\n      targetSourceTexture._resolution\n    );\n    return this._backBufferTexture;\n  }\n  /** destroys the back buffer */\n  destroy() {\n    if (this._backBufferTexture) {\n      this._backBufferTexture.destroy();\n      this._backBufferTexture = null;\n    }\n  }\n};\n/** @ignore */\n_GlBackBufferSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"backBuffer\",\n  priority: 1\n};\n/** default options for the back buffer system */\n_GlBackBufferSystem.defaultOptions = {\n  /** if true will use the back buffer where required */\n  useBackBuffer: false\n};\nlet GlBackBufferSystem = _GlBackBufferSystem;\n\nexport { GlBackBufferSystem };\n//# sourceMappingURL=GlBackBufferSystem.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\n\n\"use strict\";\nclass GlColorMaskSystem {\n  constructor(renderer) {\n    this._colorMaskCache = 15;\n    this._renderer = renderer;\n  }\n  setMask(colorMask) {\n    if (this._colorMaskCache === colorMask)\n      return;\n    this._colorMaskCache = colorMask;\n    this._renderer.gl.colorMask(\n      !!(colorMask & 8),\n      !!(colorMask & 4),\n      !!(colorMask & 2),\n      !!(colorMask & 1)\n    );\n  }\n}\n/** @ignore */\nGlColorMaskSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"colorMask\"\n};\n\nexport { GlColorMaskSystem };\n//# sourceMappingURL=GlColorMaskSystem.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\n\n\"use strict\";\nclass GlEncoderSystem {\n  constructor(renderer) {\n    this.commandFinished = Promise.resolve();\n    this._renderer = renderer;\n  }\n  setGeometry(geometry, shader) {\n    this._renderer.geometry.bind(geometry, shader.glProgram);\n  }\n  finishRenderPass() {\n  }\n  draw(options) {\n    const renderer = this._renderer;\n    const { geometry, shader, state, skipSync, topology: type, size, start, instanceCount } = options;\n    renderer.shader.bind(shader, skipSync);\n    renderer.geometry.bind(geometry, renderer.shader._activeProgram);\n    if (state) {\n      renderer.state.set(state);\n    }\n    renderer.geometry.draw(type, size, start, instanceCount ?? geometry.instanceCount);\n  }\n  destroy() {\n    this._renderer = null;\n  }\n}\n/** @ignore */\nGlEncoderSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"encoder\"\n};\n\nexport { GlEncoderSystem };\n//# sourceMappingURL=GlEncoderSystem.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { checkMaxIfStatementsInShader } from '../../batcher/gl/utils/checkMaxIfStatementsInShader.mjs';\n\n\"use strict\";\nclass GlLimitsSystem {\n  constructor(renderer) {\n    this._renderer = renderer;\n  }\n  contextChange() {\n    const gl = this._renderer.gl;\n    this.maxTextures = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n    this.maxBatchableTextures = checkMaxIfStatementsInShader(this.maxTextures, gl);\n    const isWebGl2 = this._renderer.context.webGLVersion === 2;\n    this.maxUniformBindings = isWebGl2 ? gl.getParameter(gl.MAX_UNIFORM_BUFFER_BINDINGS) : 0;\n  }\n  destroy() {\n  }\n}\n/** @ignore */\nGlLimitsSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"limits\"\n};\n\nexport { GlLimitsSystem };\n//# sourceMappingURL=GlLimitsSystem.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { GpuStencilModesToPixi } from '../gpu/state/GpuStencilModesToPixi.mjs';\nimport { STENCIL_MODES } from '../shared/state/const.mjs';\n\n\"use strict\";\nclass GlStencilSystem {\n  constructor(renderer) {\n    this._stencilCache = {\n      enabled: false,\n      stencilReference: 0,\n      stencilMode: STENCIL_MODES.NONE\n    };\n    this._renderTargetStencilState = /* @__PURE__ */ Object.create(null);\n    renderer.renderTarget.onRenderTargetChange.add(this);\n  }\n  contextChange(gl) {\n    this._gl = gl;\n    this._comparisonFuncMapping = {\n      always: gl.ALWAYS,\n      never: gl.NEVER,\n      equal: gl.EQUAL,\n      \"not-equal\": gl.NOTEQUAL,\n      less: gl.LESS,\n      \"less-equal\": gl.LEQUAL,\n      greater: gl.GREATER,\n      \"greater-equal\": gl.GEQUAL\n    };\n    this._stencilOpsMapping = {\n      keep: gl.KEEP,\n      zero: gl.ZERO,\n      replace: gl.REPLACE,\n      invert: gl.INVERT,\n      \"increment-clamp\": gl.INCR,\n      \"decrement-clamp\": gl.DECR,\n      \"increment-wrap\": gl.INCR_WRAP,\n      \"decrement-wrap\": gl.DECR_WRAP\n    };\n    this.resetState();\n  }\n  onRenderTargetChange(renderTarget) {\n    if (this._activeRenderTarget === renderTarget)\n      return;\n    this._activeRenderTarget = renderTarget;\n    let stencilState = this._renderTargetStencilState[renderTarget.uid];\n    if (!stencilState) {\n      stencilState = this._renderTargetStencilState[renderTarget.uid] = {\n        stencilMode: STENCIL_MODES.DISABLED,\n        stencilReference: 0\n      };\n    }\n    this.setStencilMode(stencilState.stencilMode, stencilState.stencilReference);\n  }\n  resetState() {\n    this._stencilCache.enabled = false;\n    this._stencilCache.stencilMode = STENCIL_MODES.NONE;\n    this._stencilCache.stencilReference = 0;\n  }\n  setStencilMode(stencilMode, stencilReference) {\n    const stencilState = this._renderTargetStencilState[this._activeRenderTarget.uid];\n    const gl = this._gl;\n    const mode = GpuStencilModesToPixi[stencilMode];\n    const _stencilCache = this._stencilCache;\n    stencilState.stencilMode = stencilMode;\n    stencilState.stencilReference = stencilReference;\n    if (stencilMode === STENCIL_MODES.DISABLED) {\n      if (this._stencilCache.enabled) {\n        this._stencilCache.enabled = false;\n        gl.disable(gl.STENCIL_TEST);\n      }\n      return;\n    }\n    if (!this._stencilCache.enabled) {\n      this._stencilCache.enabled = true;\n      gl.enable(gl.STENCIL_TEST);\n    }\n    if (stencilMode !== _stencilCache.stencilMode || _stencilCache.stencilReference !== stencilReference) {\n      _stencilCache.stencilMode = stencilMode;\n      _stencilCache.stencilReference = stencilReference;\n      gl.stencilFunc(this._comparisonFuncMapping[mode.stencilBack.compare], stencilReference, 255);\n      gl.stencilOp(gl.KEEP, gl.KEEP, this._stencilOpsMapping[mode.stencilBack.passOp]);\n    }\n  }\n}\n/** @ignore */\nGlStencilSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"stencil\"\n};\n\nexport { GlStencilSystem };\n//# sourceMappingURL=GlStencilSystem.mjs.map\n","\"use strict\";\nconst WGSL_TO_STD40_SIZE = {\n  f32: 4,\n  i32: 4,\n  \"vec2<f32>\": 8,\n  \"vec3<f32>\": 12,\n  \"vec4<f32>\": 16,\n  \"vec2<i32>\": 8,\n  \"vec3<i32>\": 12,\n  \"vec4<i32>\": 16,\n  \"mat2x2<f32>\": 16 * 2,\n  \"mat3x3<f32>\": 16 * 3,\n  \"mat4x4<f32>\": 16 * 4\n  // TODO - not essential for now but support these in the future\n  // int:      4,\n  // ivec2:    8,\n  // ivec3:    12,\n  // ivec4:    16,\n  // uint:     4,\n  // uvec2:    8,\n  // uvec3:    12,\n  // uvec4:    16,\n  // bool:     4,\n  // bvec2:    8,\n  // bvec3:    12,\n  // bvec4:    16,\n  // mat2:     16 * 2,\n  // mat3:     16 * 3,\n  // mat4:     16 * 4,\n};\nfunction createUboElementsSTD40(uniformData) {\n  const uboElements = uniformData.map((data) => ({\n    data,\n    offset: 0,\n    size: 0\n  }));\n  const chunkSize = 16;\n  let size = 0;\n  let offset = 0;\n  for (let i = 0; i < uboElements.length; i++) {\n    const uboElement = uboElements[i];\n    size = WGSL_TO_STD40_SIZE[uboElement.data.type];\n    if (!size) {\n      throw new Error(`Unknown type ${uboElement.data.type}`);\n    }\n    if (uboElement.data.size > 1) {\n      size = Math.max(size, chunkSize) * uboElement.data.size;\n    }\n    const boundary = size === 12 ? 16 : size;\n    uboElement.size = size;\n    const curOffset = offset % chunkSize;\n    if (curOffset > 0 && chunkSize - curOffset < boundary) {\n      offset += (chunkSize - curOffset) % 16;\n    } else {\n      offset += (size - curOffset % size) % size;\n    }\n    uboElement.offset = offset;\n    offset += size;\n  }\n  offset = Math.ceil(offset / 16) * 16;\n  return { uboElements, size: offset };\n}\n\nexport { WGSL_TO_STD40_SIZE, createUboElementsSTD40 };\n//# sourceMappingURL=createUboElementsSTD40.mjs.map\n","import { WGSL_TO_STD40_SIZE } from './createUboElementsSTD40.mjs';\n\n\"use strict\";\nfunction generateArraySyncSTD40(uboElement, offsetToAdd) {\n  const rowSize = Math.max(WGSL_TO_STD40_SIZE[uboElement.data.type] / 16, 1);\n  const elementSize = uboElement.data.value.length / uboElement.data.size;\n  const remainder = (4 - elementSize % 4) % 4;\n  const data = uboElement.data.type.indexOf(\"i32\") >= 0 ? \"dataInt32\" : \"data\";\n  return `\n        v = uv.${uboElement.data.name};\n        offset += ${offsetToAdd};\n\n        arrayOffset = offset;\n\n        t = 0;\n\n        for(var i=0; i < ${uboElement.data.size * rowSize}; i++)\n        {\n            for(var j = 0; j < ${elementSize}; j++)\n            {\n                ${data}[arrayOffset++] = v[t++];\n            }\n            ${remainder !== 0 ? `arrayOffset += ${remainder};` : \"\"}\n        }\n    `;\n}\n\nexport { generateArraySyncSTD40 };\n//# sourceMappingURL=generateArraySyncSTD40.mjs.map\n","import { createUboSyncFunction } from '../../../shared/shader/utils/createUboSyncFunction.mjs';\nimport { uboSyncFunctionsSTD40 } from '../../../shared/shader/utils/uboSyncFunctions.mjs';\nimport { generateArraySyncSTD40 } from './generateArraySyncSTD40.mjs';\n\n\"use strict\";\nfunction createUboSyncFunctionSTD40(uboElements) {\n  return createUboSyncFunction(\n    uboElements,\n    \"uboStd40\",\n    generateArraySyncSTD40,\n    uboSyncFunctionsSTD40\n  );\n}\n\nexport { createUboSyncFunctionSTD40 };\n//# sourceMappingURL=createUboSyncSTD40.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { UboSystem } from '../shared/shader/UboSystem.mjs';\nimport { createUboElementsSTD40 } from './shader/utils/createUboElementsSTD40.mjs';\nimport { createUboSyncFunctionSTD40 } from './shader/utils/createUboSyncSTD40.mjs';\n\n\"use strict\";\nclass GlUboSystem extends UboSystem {\n  constructor() {\n    super({\n      createUboElements: createUboElementsSTD40,\n      generateUboSync: createUboSyncFunctionSTD40\n    });\n  }\n}\n/** @ignore */\nGlUboSystem.extension = {\n  type: [ExtensionType.WebGLSystem],\n  name: \"ubo\"\n};\n\nexport { GlUboSystem };\n//# sourceMappingURL=GlUboSystem.mjs.map\n","\"use strict\";\nclass GlRenderTarget {\n  constructor() {\n    this.width = -1;\n    this.height = -1;\n    this.msaa = false;\n    this.msaaRenderBuffer = [];\n  }\n}\n\nexport { GlRenderTarget };\n//# sourceMappingURL=GlRenderTarget.mjs.map\n","import { Rectangle } from '../../../../maths/shapes/Rectangle.mjs';\nimport { warn } from '../../../../utils/logging/warn.mjs';\nimport { CanvasSource } from '../../shared/texture/sources/CanvasSource.mjs';\nimport { CLEAR } from '../const.mjs';\nimport { GlRenderTarget } from '../GlRenderTarget.mjs';\n\n\"use strict\";\nclass GlRenderTargetAdaptor {\n  constructor() {\n    this._clearColorCache = [0, 0, 0, 0];\n    this._viewPortCache = new Rectangle();\n  }\n  init(renderer, renderTargetSystem) {\n    this._renderer = renderer;\n    this._renderTargetSystem = renderTargetSystem;\n    renderer.runners.contextChange.add(this);\n  }\n  contextChange() {\n    this._clearColorCache = [0, 0, 0, 0];\n    this._viewPortCache = new Rectangle();\n  }\n  copyToTexture(sourceRenderSurfaceTexture, destinationTexture, originSrc, size, originDest) {\n    const renderTargetSystem = this._renderTargetSystem;\n    const renderer = this._renderer;\n    const glRenderTarget = renderTargetSystem.getGpuRenderTarget(sourceRenderSurfaceTexture);\n    const gl = renderer.gl;\n    this.finishRenderPass(sourceRenderSurfaceTexture);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, glRenderTarget.resolveTargetFramebuffer);\n    renderer.texture.bind(destinationTexture, 0);\n    gl.copyTexSubImage2D(\n      gl.TEXTURE_2D,\n      0,\n      originDest.x,\n      originDest.y,\n      originSrc.x,\n      originSrc.y,\n      size.width,\n      size.height\n    );\n    return destinationTexture;\n  }\n  startRenderPass(renderTarget, clear = true, clearColor, viewport) {\n    const renderTargetSystem = this._renderTargetSystem;\n    const source = renderTarget.colorTexture;\n    const gpuRenderTarget = renderTargetSystem.getGpuRenderTarget(renderTarget);\n    let viewPortY = viewport.y;\n    if (renderTarget.isRoot) {\n      viewPortY = source.pixelHeight - viewport.height;\n    }\n    renderTarget.colorTextures.forEach((texture) => {\n      this._renderer.texture.unbind(texture);\n    });\n    const gl = this._renderer.gl;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, gpuRenderTarget.framebuffer);\n    const viewPortCache = this._viewPortCache;\n    if (viewPortCache.x !== viewport.x || viewPortCache.y !== viewPortY || viewPortCache.width !== viewport.width || viewPortCache.height !== viewport.height) {\n      viewPortCache.x = viewport.x;\n      viewPortCache.y = viewPortY;\n      viewPortCache.width = viewport.width;\n      viewPortCache.height = viewport.height;\n      gl.viewport(\n        viewport.x,\n        viewPortY,\n        viewport.width,\n        viewport.height\n      );\n    }\n    if (!gpuRenderTarget.depthStencilRenderBuffer && (renderTarget.stencil || renderTarget.depth)) {\n      this._initStencil(gpuRenderTarget);\n    }\n    this.clear(renderTarget, clear, clearColor);\n  }\n  finishRenderPass(renderTarget) {\n    const renderTargetSystem = this._renderTargetSystem;\n    const glRenderTarget = renderTargetSystem.getGpuRenderTarget(renderTarget);\n    if (!glRenderTarget.msaa)\n      return;\n    const gl = this._renderer.gl;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, glRenderTarget.resolveTargetFramebuffer);\n    gl.bindFramebuffer(gl.READ_FRAMEBUFFER, glRenderTarget.framebuffer);\n    gl.blitFramebuffer(\n      0,\n      0,\n      glRenderTarget.width,\n      glRenderTarget.height,\n      0,\n      0,\n      glRenderTarget.width,\n      glRenderTarget.height,\n      gl.COLOR_BUFFER_BIT,\n      gl.NEAREST\n    );\n    gl.bindFramebuffer(gl.FRAMEBUFFER, glRenderTarget.framebuffer);\n  }\n  initGpuRenderTarget(renderTarget) {\n    const renderer = this._renderer;\n    const gl = renderer.gl;\n    const glRenderTarget = new GlRenderTarget();\n    const colorTexture = renderTarget.colorTexture;\n    if (colorTexture instanceof CanvasSource) {\n      this._renderer.context.ensureCanvasSize(renderTarget.colorTexture.resource);\n      glRenderTarget.framebuffer = null;\n      return glRenderTarget;\n    }\n    this._initColor(renderTarget, glRenderTarget);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    return glRenderTarget;\n  }\n  destroyGpuRenderTarget(gpuRenderTarget) {\n    const gl = this._renderer.gl;\n    if (gpuRenderTarget.framebuffer) {\n      gl.deleteFramebuffer(gpuRenderTarget.framebuffer);\n      gpuRenderTarget.framebuffer = null;\n    }\n    if (gpuRenderTarget.resolveTargetFramebuffer) {\n      gl.deleteFramebuffer(gpuRenderTarget.resolveTargetFramebuffer);\n      gpuRenderTarget.resolveTargetFramebuffer = null;\n    }\n    if (gpuRenderTarget.depthStencilRenderBuffer) {\n      gl.deleteRenderbuffer(gpuRenderTarget.depthStencilRenderBuffer);\n      gpuRenderTarget.depthStencilRenderBuffer = null;\n    }\n    gpuRenderTarget.msaaRenderBuffer.forEach((renderBuffer) => {\n      gl.deleteRenderbuffer(renderBuffer);\n    });\n    gpuRenderTarget.msaaRenderBuffer = null;\n  }\n  clear(_renderTarget, clear, clearColor) {\n    if (!clear)\n      return;\n    const renderTargetSystem = this._renderTargetSystem;\n    if (typeof clear === \"boolean\") {\n      clear = clear ? CLEAR.ALL : CLEAR.NONE;\n    }\n    const gl = this._renderer.gl;\n    if (clear & CLEAR.COLOR) {\n      clearColor ?? (clearColor = renderTargetSystem.defaultClearColor);\n      const clearColorCache = this._clearColorCache;\n      const clearColorArray = clearColor;\n      if (clearColorCache[0] !== clearColorArray[0] || clearColorCache[1] !== clearColorArray[1] || clearColorCache[2] !== clearColorArray[2] || clearColorCache[3] !== clearColorArray[3]) {\n        clearColorCache[0] = clearColorArray[0];\n        clearColorCache[1] = clearColorArray[1];\n        clearColorCache[2] = clearColorArray[2];\n        clearColorCache[3] = clearColorArray[3];\n        gl.clearColor(clearColorArray[0], clearColorArray[1], clearColorArray[2], clearColorArray[3]);\n      }\n    }\n    gl.clear(clear);\n  }\n  resizeGpuRenderTarget(renderTarget) {\n    if (renderTarget.isRoot)\n      return;\n    const renderTargetSystem = this._renderTargetSystem;\n    const glRenderTarget = renderTargetSystem.getGpuRenderTarget(renderTarget);\n    this._resizeColor(renderTarget, glRenderTarget);\n    if (renderTarget.stencil || renderTarget.depth) {\n      this._resizeStencil(glRenderTarget);\n    }\n  }\n  _initColor(renderTarget, glRenderTarget) {\n    const renderer = this._renderer;\n    const gl = renderer.gl;\n    const resolveTargetFramebuffer = gl.createFramebuffer();\n    glRenderTarget.resolveTargetFramebuffer = resolveTargetFramebuffer;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, resolveTargetFramebuffer);\n    glRenderTarget.width = renderTarget.colorTexture.source.pixelWidth;\n    glRenderTarget.height = renderTarget.colorTexture.source.pixelHeight;\n    renderTarget.colorTextures.forEach((colorTexture, i) => {\n      const source = colorTexture.source;\n      if (source.antialias) {\n        if (renderer.context.supports.msaa) {\n          glRenderTarget.msaa = true;\n        } else {\n          warn(\"[RenderTexture] Antialiasing on textures is not supported in WebGL1\");\n        }\n      }\n      renderer.texture.bindSource(source, 0);\n      const glSource = renderer.texture.getGlSource(source);\n      const glTexture = glSource.texture;\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0 + i,\n        3553,\n        // texture.target,\n        glTexture,\n        0\n      );\n    });\n    if (glRenderTarget.msaa) {\n      const viewFramebuffer = gl.createFramebuffer();\n      glRenderTarget.framebuffer = viewFramebuffer;\n      gl.bindFramebuffer(gl.FRAMEBUFFER, viewFramebuffer);\n      renderTarget.colorTextures.forEach((_, i) => {\n        const msaaRenderBuffer = gl.createRenderbuffer();\n        glRenderTarget.msaaRenderBuffer[i] = msaaRenderBuffer;\n      });\n    } else {\n      glRenderTarget.framebuffer = resolveTargetFramebuffer;\n    }\n    this._resizeColor(renderTarget, glRenderTarget);\n  }\n  _resizeColor(renderTarget, glRenderTarget) {\n    const source = renderTarget.colorTexture.source;\n    glRenderTarget.width = source.pixelWidth;\n    glRenderTarget.height = source.pixelHeight;\n    renderTarget.colorTextures.forEach((colorTexture, i) => {\n      if (i === 0)\n        return;\n      colorTexture.source.resize(source.width, source.height, source._resolution);\n    });\n    if (glRenderTarget.msaa) {\n      const renderer = this._renderer;\n      const gl = renderer.gl;\n      const viewFramebuffer = glRenderTarget.framebuffer;\n      gl.bindFramebuffer(gl.FRAMEBUFFER, viewFramebuffer);\n      renderTarget.colorTextures.forEach((colorTexture, i) => {\n        const source2 = colorTexture.source;\n        renderer.texture.bindSource(source2, 0);\n        const glSource = renderer.texture.getGlSource(source2);\n        const glInternalFormat = glSource.internalFormat;\n        const msaaRenderBuffer = glRenderTarget.msaaRenderBuffer[i];\n        gl.bindRenderbuffer(\n          gl.RENDERBUFFER,\n          msaaRenderBuffer\n        );\n        gl.renderbufferStorageMultisample(\n          gl.RENDERBUFFER,\n          4,\n          glInternalFormat,\n          source2.pixelWidth,\n          source2.pixelHeight\n        );\n        gl.framebufferRenderbuffer(\n          gl.FRAMEBUFFER,\n          gl.COLOR_ATTACHMENT0 + i,\n          gl.RENDERBUFFER,\n          msaaRenderBuffer\n        );\n      });\n    }\n  }\n  _initStencil(glRenderTarget) {\n    if (glRenderTarget.framebuffer === null)\n      return;\n    const gl = this._renderer.gl;\n    const depthStencilRenderBuffer = gl.createRenderbuffer();\n    glRenderTarget.depthStencilRenderBuffer = depthStencilRenderBuffer;\n    gl.bindRenderbuffer(\n      gl.RENDERBUFFER,\n      depthStencilRenderBuffer\n    );\n    gl.framebufferRenderbuffer(\n      gl.FRAMEBUFFER,\n      gl.DEPTH_STENCIL_ATTACHMENT,\n      gl.RENDERBUFFER,\n      depthStencilRenderBuffer\n    );\n    this._resizeStencil(glRenderTarget);\n  }\n  _resizeStencil(glRenderTarget) {\n    const gl = this._renderer.gl;\n    gl.bindRenderbuffer(\n      gl.RENDERBUFFER,\n      glRenderTarget.depthStencilRenderBuffer\n    );\n    if (glRenderTarget.msaa) {\n      gl.renderbufferStorageMultisample(\n        gl.RENDERBUFFER,\n        4,\n        gl.DEPTH24_STENCIL8,\n        glRenderTarget.width,\n        glRenderTarget.height\n      );\n    } else {\n      gl.renderbufferStorage(\n        gl.RENDERBUFFER,\n        this._renderer.context.webGLVersion === 2 ? gl.DEPTH24_STENCIL8 : gl.DEPTH_STENCIL,\n        glRenderTarget.width,\n        glRenderTarget.height\n      );\n    }\n  }\n  prerender(renderTarget) {\n    const resource = renderTarget.colorTexture.resource;\n    if (this._renderer.context.multiView && CanvasSource.test(resource)) {\n      this._renderer.context.ensureCanvasSize(resource);\n    }\n  }\n  postrender(renderTarget) {\n    if (!this._renderer.context.multiView)\n      return;\n    if (CanvasSource.test(renderTarget.colorTexture.resource)) {\n      const contextCanvas = this._renderer.context.canvas;\n      const canvasSource = renderTarget.colorTexture;\n      canvasSource.context2D.drawImage(\n        contextCanvas,\n        0,\n        canvasSource.pixelHeight - contextCanvas.height\n      );\n    }\n  }\n}\n\nexport { GlRenderTargetAdaptor };\n//# sourceMappingURL=GlRenderTargetAdaptor.mjs.map\n","import { ExtensionType } from '../../../../extensions/Extensions.mjs';\nimport { RenderTargetSystem } from '../../shared/renderTarget/RenderTargetSystem.mjs';\nimport { GlRenderTargetAdaptor } from './GlRenderTargetAdaptor.mjs';\n\n\"use strict\";\nclass GlRenderTargetSystem extends RenderTargetSystem {\n  constructor(renderer) {\n    super(renderer);\n    this.adaptor = new GlRenderTargetAdaptor();\n    this.adaptor.init(renderer, this);\n  }\n}\n/** @ignore */\nGlRenderTargetSystem.extension = {\n  type: [ExtensionType.WebGLSystem],\n  name: \"renderTarget\"\n};\n\nexport { GlRenderTargetSystem };\n//# sourceMappingURL=GlRenderTargetSystem.mjs.map\n","\"use strict\";\nclass IGLUniformData {\n}\nclass GlProgramData {\n  /**\n   * Makes a new Pixi program.\n   * @param program - webgl program\n   * @param uniformData - uniforms\n   */\n  constructor(program, uniformData) {\n    this.program = program;\n    this.uniformData = uniformData;\n    this.uniformGroups = {};\n    this.uniformDirtyGroups = {};\n    this.uniformBlockBindings = {};\n  }\n  /** Destroys this program. */\n  destroy() {\n    this.uniformData = null;\n    this.uniformGroups = null;\n    this.uniformDirtyGroups = null;\n    this.uniformBlockBindings = null;\n    this.program = null;\n  }\n}\n\nexport { GlProgramData, IGLUniformData };\n//# sourceMappingURL=GlProgramData.mjs.map\n","\"use strict\";\nfunction compileShader(gl, type, src) {\n  const shader = gl.createShader(type);\n  gl.shaderSource(shader, src);\n  gl.compileShader(shader);\n  return shader;\n}\n\nexport { compileShader };\n//# sourceMappingURL=compileShader.mjs.map\n","\"use strict\";\nfunction booleanArray(size) {\n  const array = new Array(size);\n  for (let i = 0; i < array.length; i++) {\n    array[i] = false;\n  }\n  return array;\n}\nfunction defaultValue(type, size) {\n  switch (type) {\n    case \"float\":\n      return 0;\n    case \"vec2\":\n      return new Float32Array(2 * size);\n    case \"vec3\":\n      return new Float32Array(3 * size);\n    case \"vec4\":\n      return new Float32Array(4 * size);\n    case \"int\":\n    case \"uint\":\n    case \"sampler2D\":\n    case \"sampler2DArray\":\n      return 0;\n    case \"ivec2\":\n      return new Int32Array(2 * size);\n    case \"ivec3\":\n      return new Int32Array(3 * size);\n    case \"ivec4\":\n      return new Int32Array(4 * size);\n    case \"uvec2\":\n      return new Uint32Array(2 * size);\n    case \"uvec3\":\n      return new Uint32Array(3 * size);\n    case \"uvec4\":\n      return new Uint32Array(4 * size);\n    case \"bool\":\n      return false;\n    case \"bvec2\":\n      return booleanArray(2 * size);\n    case \"bvec3\":\n      return booleanArray(3 * size);\n    case \"bvec4\":\n      return booleanArray(4 * size);\n    case \"mat2\":\n      return new Float32Array([\n        1,\n        0,\n        0,\n        1\n      ]);\n    case \"mat3\":\n      return new Float32Array([\n        1,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        1\n      ]);\n    case \"mat4\":\n      return new Float32Array([\n        1,\n        0,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        0,\n        1\n      ]);\n  }\n  return null;\n}\n\nexport { defaultValue };\n//# sourceMappingURL=defaultValue.mjs.map\n","\"use strict\";\nlet GL_TABLE = null;\nconst GL_TO_GLSL_TYPES = {\n  FLOAT: \"float\",\n  FLOAT_VEC2: \"vec2\",\n  FLOAT_VEC3: \"vec3\",\n  FLOAT_VEC4: \"vec4\",\n  INT: \"int\",\n  INT_VEC2: \"ivec2\",\n  INT_VEC3: \"ivec3\",\n  INT_VEC4: \"ivec4\",\n  UNSIGNED_INT: \"uint\",\n  UNSIGNED_INT_VEC2: \"uvec2\",\n  UNSIGNED_INT_VEC3: \"uvec3\",\n  UNSIGNED_INT_VEC4: \"uvec4\",\n  BOOL: \"bool\",\n  BOOL_VEC2: \"bvec2\",\n  BOOL_VEC3: \"bvec3\",\n  BOOL_VEC4: \"bvec4\",\n  FLOAT_MAT2: \"mat2\",\n  FLOAT_MAT3: \"mat3\",\n  FLOAT_MAT4: \"mat4\",\n  SAMPLER_2D: \"sampler2D\",\n  INT_SAMPLER_2D: \"sampler2D\",\n  UNSIGNED_INT_SAMPLER_2D: \"sampler2D\",\n  SAMPLER_CUBE: \"samplerCube\",\n  INT_SAMPLER_CUBE: \"samplerCube\",\n  UNSIGNED_INT_SAMPLER_CUBE: \"samplerCube\",\n  SAMPLER_2D_ARRAY: \"sampler2DArray\",\n  INT_SAMPLER_2D_ARRAY: \"sampler2DArray\",\n  UNSIGNED_INT_SAMPLER_2D_ARRAY: \"sampler2DArray\"\n};\nconst GLSL_TO_VERTEX_TYPES = {\n  float: \"float32\",\n  vec2: \"float32x2\",\n  vec3: \"float32x3\",\n  vec4: \"float32x4\",\n  int: \"sint32\",\n  ivec2: \"sint32x2\",\n  ivec3: \"sint32x3\",\n  ivec4: \"sint32x4\",\n  uint: \"uint32\",\n  uvec2: \"uint32x2\",\n  uvec3: \"uint32x3\",\n  uvec4: \"uint32x4\",\n  bool: \"uint32\",\n  bvec2: \"uint32x2\",\n  bvec3: \"uint32x3\",\n  bvec4: \"uint32x4\"\n};\nfunction mapType(gl, type) {\n  if (!GL_TABLE) {\n    const typeNames = Object.keys(GL_TO_GLSL_TYPES);\n    GL_TABLE = {};\n    for (let i = 0; i < typeNames.length; ++i) {\n      const tn = typeNames[i];\n      GL_TABLE[gl[tn]] = GL_TO_GLSL_TYPES[tn];\n    }\n  }\n  return GL_TABLE[type];\n}\nfunction mapGlToVertexFormat(gl, type) {\n  const typeValue = mapType(gl, type);\n  return GLSL_TO_VERTEX_TYPES[typeValue] || \"float32\";\n}\n\nexport { mapGlToVertexFormat, mapType };\n//# sourceMappingURL=mapType.mjs.map\n","\"use strict\";\nfunction logPrettyShaderError(gl, shader) {\n  const shaderSrc = gl.getShaderSource(shader).split(\"\\n\").map((line, index) => `${index}: ${line}`);\n  const shaderLog = gl.getShaderInfoLog(shader);\n  const splitShader = shaderLog.split(\"\\n\");\n  const dedupe = {};\n  const lineNumbers = splitShader.map((line) => parseFloat(line.replace(/^ERROR\\: 0\\:([\\d]+)\\:.*$/, \"$1\"))).filter((n) => {\n    if (n && !dedupe[n]) {\n      dedupe[n] = true;\n      return true;\n    }\n    return false;\n  });\n  const logArgs = [\"\"];\n  lineNumbers.forEach((number) => {\n    shaderSrc[number - 1] = `%c${shaderSrc[number - 1]}%c`;\n    logArgs.push(\"background: #FF0000; color:#FFFFFF; font-size: 10px\", \"font-size: 10px\");\n  });\n  const fragmentSourceToLog = shaderSrc.join(\"\\n\");\n  logArgs[0] = fragmentSourceToLog;\n  console.error(shaderLog);\n  console.groupCollapsed(\"click to view full shader code\");\n  console.warn(...logArgs);\n  console.groupEnd();\n}\nfunction logProgramError(gl, program, vertexShader, fragmentShader) {\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      logPrettyShaderError(gl, vertexShader);\n    }\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      logPrettyShaderError(gl, fragmentShader);\n    }\n    console.error(\"PixiJS Error: Could not initialize shader.\");\n    if (gl.getProgramInfoLog(program) !== \"\") {\n      console.warn(\"PixiJS Warning: gl.getProgramInfoLog()\", gl.getProgramInfoLog(program));\n    }\n  }\n}\n\nexport { logProgramError };\n//# sourceMappingURL=logProgramError.mjs.map\n","import { ExtensionType } from '../../../../extensions/Extensions.mjs';\nimport { generateShaderSyncCode } from './GenerateShaderSyncCode.mjs';\nimport { generateProgram } from './program/generateProgram.mjs';\n\n\"use strict\";\nconst defaultSyncData = {\n  textureCount: 0,\n  blockIndex: 0\n};\nclass GlShaderSystem {\n  constructor(renderer) {\n    /** @internal */\n    this._activeProgram = null;\n    this._programDataHash = /* @__PURE__ */ Object.create(null);\n    this._shaderSyncFunctions = /* @__PURE__ */ Object.create(null);\n    this._renderer = renderer;\n    this._renderer.renderableGC.addManagedHash(this, \"_programDataHash\");\n  }\n  contextChange(gl) {\n    this._gl = gl;\n    this._programDataHash = /* @__PURE__ */ Object.create(null);\n    this._shaderSyncFunctions = /* @__PURE__ */ Object.create(null);\n    this._activeProgram = null;\n  }\n  /**\n   * Changes the current shader to the one given in parameter.\n   * @param shader - the new shader\n   * @param skipSync - false if the shader should automatically sync its uniforms.\n   * @returns the glProgram that belongs to the shader.\n   */\n  bind(shader, skipSync) {\n    this._setProgram(shader.glProgram);\n    if (skipSync)\n      return;\n    defaultSyncData.textureCount = 0;\n    defaultSyncData.blockIndex = 0;\n    let syncFunction = this._shaderSyncFunctions[shader.glProgram._key];\n    if (!syncFunction) {\n      syncFunction = this._shaderSyncFunctions[shader.glProgram._key] = this._generateShaderSync(shader, this);\n    }\n    this._renderer.buffer.nextBindBase(!!shader.glProgram.transformFeedbackVaryings);\n    syncFunction(this._renderer, shader, defaultSyncData);\n  }\n  /**\n   * Updates the uniform group.\n   * @param uniformGroup - the uniform group to update\n   */\n  updateUniformGroup(uniformGroup) {\n    this._renderer.uniformGroup.updateUniformGroup(uniformGroup, this._activeProgram, defaultSyncData);\n  }\n  /**\n   * Binds a uniform block to the shader.\n   * @param uniformGroup - the uniform group to bind\n   * @param name - the name of the uniform block\n   * @param index - the index of the uniform block\n   */\n  bindUniformBlock(uniformGroup, name, index = 0) {\n    const bufferSystem = this._renderer.buffer;\n    const programData = this._getProgramData(this._activeProgram);\n    const isBufferResource = uniformGroup._bufferResource;\n    if (!isBufferResource) {\n      this._renderer.ubo.updateUniformGroup(uniformGroup);\n    }\n    const buffer = uniformGroup.buffer;\n    const glBuffer = bufferSystem.updateBuffer(buffer);\n    const boundLocation = bufferSystem.freeLocationForBufferBase(glBuffer);\n    if (isBufferResource) {\n      const { offset, size } = uniformGroup;\n      if (offset === 0 && size === buffer.data.byteLength) {\n        bufferSystem.bindBufferBase(glBuffer, boundLocation);\n      } else {\n        bufferSystem.bindBufferRange(glBuffer, boundLocation, offset);\n      }\n    } else if (bufferSystem.getLastBindBaseLocation(glBuffer) !== boundLocation) {\n      bufferSystem.bindBufferBase(glBuffer, boundLocation);\n    }\n    const uniformBlockIndex = this._activeProgram._uniformBlockData[name].index;\n    if (programData.uniformBlockBindings[index] === boundLocation)\n      return;\n    programData.uniformBlockBindings[index] = boundLocation;\n    this._renderer.gl.uniformBlockBinding(programData.program, uniformBlockIndex, boundLocation);\n  }\n  _setProgram(program) {\n    if (this._activeProgram === program)\n      return;\n    this._activeProgram = program;\n    const programData = this._getProgramData(program);\n    this._gl.useProgram(programData.program);\n  }\n  /**\n   * @param program - the program to get the data for\n   * @internal\n   */\n  _getProgramData(program) {\n    return this._programDataHash[program._key] || this._createProgramData(program);\n  }\n  _createProgramData(program) {\n    const key = program._key;\n    this._programDataHash[key] = generateProgram(this._gl, program);\n    return this._programDataHash[key];\n  }\n  destroy() {\n    for (const key of Object.keys(this._programDataHash)) {\n      const programData = this._programDataHash[key];\n      programData.destroy();\n      this._programDataHash[key] = null;\n    }\n    this._programDataHash = null;\n    this._shaderSyncFunctions = null;\n    this._activeProgram = null;\n    this._renderer = null;\n    this._gl = null;\n  }\n  /**\n   * Creates a function that can be executed that will sync the shader as efficiently as possible.\n   * Overridden by the unsafe eval package if you don't want eval used in your project.\n   * @param shader - the shader to generate the sync function for\n   * @param shaderSystem - the shader system to use\n   * @returns - the generated sync function\n   * @ignore\n   */\n  _generateShaderSync(shader, shaderSystem) {\n    return generateShaderSyncCode(shader, shaderSystem);\n  }\n  resetState() {\n    this._activeProgram = null;\n  }\n}\n/** @ignore */\nGlShaderSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"shader\"\n};\n\nexport { GlShaderSystem };\n//# sourceMappingURL=GlShaderSystem.mjs.map\n","import { warn } from '../../../../../utils/logging/warn.mjs';\nimport { GlProgramData } from '../GlProgramData.mjs';\nimport { compileShader } from './compileShader.mjs';\nimport { defaultValue } from './defaultValue.mjs';\nimport { extractAttributesFromGlProgram } from './extractAttributesFromGlProgram.mjs';\nimport { getUboData } from './getUboData.mjs';\nimport { getUniformData } from './getUniformData.mjs';\nimport { logProgramError } from './logProgramError.mjs';\n\n\"use strict\";\nfunction generateProgram(gl, program) {\n  const glVertShader = compileShader(gl, gl.VERTEX_SHADER, program.vertex);\n  const glFragShader = compileShader(gl, gl.FRAGMENT_SHADER, program.fragment);\n  const webGLProgram = gl.createProgram();\n  gl.attachShader(webGLProgram, glVertShader);\n  gl.attachShader(webGLProgram, glFragShader);\n  const transformFeedbackVaryings = program.transformFeedbackVaryings;\n  if (transformFeedbackVaryings) {\n    if (typeof gl.transformFeedbackVaryings !== \"function\") {\n      warn(`TransformFeedback is not supported but TransformFeedbackVaryings are given.`);\n    } else {\n      gl.transformFeedbackVaryings(\n        webGLProgram,\n        transformFeedbackVaryings.names,\n        transformFeedbackVaryings.bufferMode === \"separate\" ? gl.SEPARATE_ATTRIBS : gl.INTERLEAVED_ATTRIBS\n      );\n    }\n  }\n  gl.linkProgram(webGLProgram);\n  if (!gl.getProgramParameter(webGLProgram, gl.LINK_STATUS)) {\n    logProgramError(gl, webGLProgram, glVertShader, glFragShader);\n  }\n  program._attributeData = extractAttributesFromGlProgram(\n    webGLProgram,\n    gl,\n    !/^[ \\t]*#[ \\t]*version[ \\t]+300[ \\t]+es[ \\t]*$/m.test(program.vertex)\n  );\n  program._uniformData = getUniformData(webGLProgram, gl);\n  program._uniformBlockData = getUboData(webGLProgram, gl);\n  gl.deleteShader(glVertShader);\n  gl.deleteShader(glFragShader);\n  const uniformData = {};\n  for (const i in program._uniformData) {\n    const data = program._uniformData[i];\n    uniformData[i] = {\n      location: gl.getUniformLocation(webGLProgram, i),\n      value: defaultValue(data.type, data.size)\n    };\n  }\n  const glProgram = new GlProgramData(webGLProgram, uniformData);\n  return glProgram;\n}\n\nexport { generateProgram };\n//# sourceMappingURL=generateProgram.mjs.map\n","import { getAttributeInfoFromFormat } from '../../../shared/geometry/utils/getAttributeInfoFromFormat.mjs';\nimport { mapGlToVertexFormat } from './mapType.mjs';\n\n\"use strict\";\nfunction extractAttributesFromGlProgram(program, gl, sortAttributes = false) {\n  const attributes = {};\n  const totalAttributes = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n  for (let i = 0; i < totalAttributes; i++) {\n    const attribData = gl.getActiveAttrib(program, i);\n    if (attribData.name.startsWith(\"gl_\")) {\n      continue;\n    }\n    const format = mapGlToVertexFormat(gl, attribData.type);\n    attributes[attribData.name] = {\n      location: 0,\n      // set further down..\n      format,\n      stride: getAttributeInfoFromFormat(format).stride,\n      offset: 0,\n      instance: false,\n      start: 0\n    };\n  }\n  const keys = Object.keys(attributes);\n  if (sortAttributes) {\n    keys.sort((a, b) => a > b ? 1 : -1);\n    for (let i = 0; i < keys.length; i++) {\n      attributes[keys[i]].location = i;\n      gl.bindAttribLocation(program, i, keys[i]);\n    }\n    gl.linkProgram(program);\n  } else {\n    for (let i = 0; i < keys.length; i++) {\n      attributes[keys[i]].location = gl.getAttribLocation(program, keys[i]);\n    }\n  }\n  return attributes;\n}\n\nexport { extractAttributesFromGlProgram };\n//# sourceMappingURL=extractAttributesFromGlProgram.mjs.map\n","import { defaultValue } from './defaultValue.mjs';\nimport { mapType } from './mapType.mjs';\n\n\"use strict\";\nfunction getUniformData(program, gl) {\n  const uniforms = {};\n  const totalUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n  for (let i = 0; i < totalUniforms; i++) {\n    const uniformData = gl.getActiveUniform(program, i);\n    const name = uniformData.name.replace(/\\[.*?\\]$/, \"\");\n    const isArray = !!uniformData.name.match(/\\[.*?\\]$/);\n    const type = mapType(gl, uniformData.type);\n    uniforms[name] = {\n      name,\n      index: i,\n      type,\n      size: uniformData.size,\n      isArray,\n      value: defaultValue(type, uniformData.size)\n    };\n  }\n  return uniforms;\n}\n\nexport { getUniformData };\n//# sourceMappingURL=getUniformData.mjs.map\n","\"use strict\";\nfunction getUboData(program, gl) {\n  if (!gl.ACTIVE_UNIFORM_BLOCKS)\n    return {};\n  const uniformBlocks = {};\n  const totalUniformsBlocks = gl.getProgramParameter(program, gl.ACTIVE_UNIFORM_BLOCKS);\n  for (let i = 0; i < totalUniformsBlocks; i++) {\n    const name = gl.getActiveUniformBlockName(program, i);\n    const uniformBlockIndex = gl.getUniformBlockIndex(program, name);\n    const size = gl.getActiveUniformBlockParameter(program, i, gl.UNIFORM_BLOCK_DATA_SIZE);\n    uniformBlocks[name] = {\n      name,\n      index: uniformBlockIndex,\n      size\n    };\n  }\n  return uniformBlocks;\n}\n\nexport { getUboData };\n//# sourceMappingURL=getUboData.mjs.map\n","import { BufferResource } from '../../shared/buffer/BufferResource.mjs';\nimport { UniformGroup } from '../../shared/shader/UniformGroup.mjs';\nimport { TextureSource } from '../../shared/texture/sources/TextureSource.mjs';\n\n\"use strict\";\nfunction generateShaderSyncCode(shader, shaderSystem) {\n  const funcFragments = [];\n  const headerFragments = [`\n        var g = s.groups;\n        var sS = r.shader;\n        var p = s.glProgram;\n        var ugS = r.uniformGroup;\n        var resources;\n    `];\n  let addedTextreSystem = false;\n  let textureCount = 0;\n  const programData = shaderSystem._getProgramData(shader.glProgram);\n  for (const i in shader.groups) {\n    const group = shader.groups[i];\n    funcFragments.push(`\n            resources = g[${i}].resources;\n        `);\n    for (const j in group.resources) {\n      const resource = group.resources[j];\n      if (resource instanceof UniformGroup) {\n        if (resource.ubo) {\n          const resName = shader._uniformBindMap[i][Number(j)];\n          funcFragments.push(`\n                        sS.bindUniformBlock(\n                            resources[${j}],\n                            '${resName}',\n                            ${shader.glProgram._uniformBlockData[resName].index}\n                        );\n                    `);\n        } else {\n          funcFragments.push(`\n                        ugS.updateUniformGroup(resources[${j}], p, sD);\n                    `);\n        }\n      } else if (resource instanceof BufferResource) {\n        const resName = shader._uniformBindMap[i][Number(j)];\n        funcFragments.push(`\n                    sS.bindUniformBlock(\n                        resources[${j}],\n                        '${resName}',\n                        ${shader.glProgram._uniformBlockData[resName].index}\n                    );\n                `);\n      } else if (resource instanceof TextureSource) {\n        const uniformName = shader._uniformBindMap[i][j];\n        const uniformData = programData.uniformData[uniformName];\n        if (uniformData) {\n          if (!addedTextreSystem) {\n            addedTextreSystem = true;\n            headerFragments.push(`\n                        var tS = r.texture;\n                        `);\n          }\n          shaderSystem._gl.uniform1i(uniformData.location, textureCount);\n          funcFragments.push(`\n                        tS.bind(resources[${j}], ${textureCount});\n                    `);\n          textureCount++;\n        }\n      }\n    }\n  }\n  const functionSource = [...headerFragments, ...funcFragments].join(\"\\n\");\n  return new Function(\"r\", \"s\", \"sD\", functionSource);\n}\n\nexport { generateShaderSyncCode };\n//# sourceMappingURL=GenerateShaderSyncCode.mjs.map\n","\"use strict\";\nconst UNIFORM_TO_SINGLE_SETTERS = {\n  f32: `if (cv !== v) {\n            cu.value = v;\n            gl.uniform1f(location, v);\n        }`,\n  \"vec2<f32>\": `if (cv[0] !== v[0] || cv[1] !== v[1]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            gl.uniform2f(location, v[0], v[1]);\n        }`,\n  \"vec3<f32>\": `if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            cv[2] = v[2];\n            gl.uniform3f(location, v[0], v[1], v[2]);\n        }`,\n  \"vec4<f32>\": `if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2] || cv[3] !== v[3]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            cv[2] = v[2];\n            cv[3] = v[3];\n            gl.uniform4f(location, v[0], v[1], v[2], v[3]);\n        }`,\n  i32: `if (cv !== v) {\n            cu.value = v;\n            gl.uniform1i(location, v);\n        }`,\n  \"vec2<i32>\": `if (cv[0] !== v[0] || cv[1] !== v[1]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            gl.uniform2i(location, v[0], v[1]);\n        }`,\n  \"vec3<i32>\": `if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            cv[2] = v[2];\n            gl.uniform3i(location, v[0], v[1], v[2]);\n        }`,\n  \"vec4<i32>\": `if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2] || cv[3] !== v[3]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            cv[2] = v[2];\n            cv[3] = v[3];\n            gl.uniform4i(location, v[0], v[1], v[2], v[3]);\n        }`,\n  u32: `if (cv !== v) {\n            cu.value = v;\n            gl.uniform1ui(location, v);\n        }`,\n  \"vec2<u32>\": `if (cv[0] !== v[0] || cv[1] !== v[1]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            gl.uniform2ui(location, v[0], v[1]);\n        }`,\n  \"vec3<u32>\": `if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            cv[2] = v[2];\n            gl.uniform3ui(location, v[0], v[1], v[2]);\n        }`,\n  \"vec4<u32>\": `if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2] || cv[3] !== v[3]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            cv[2] = v[2];\n            cv[3] = v[3];\n            gl.uniform4ui(location, v[0], v[1], v[2], v[3]);\n        }`,\n  bool: `if (cv !== v) {\n            cu.value = v;\n            gl.uniform1i(location, v);\n        }`,\n  \"vec2<bool>\": `if (cv[0] !== v[0] || cv[1] !== v[1]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            gl.uniform2i(location, v[0], v[1]);\n        }`,\n  \"vec3<bool>\": `if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            cv[2] = v[2];\n            gl.uniform3i(location, v[0], v[1], v[2]);\n        }`,\n  \"vec4<bool>\": `if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2] || cv[3] !== v[3]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            cv[2] = v[2];\n            cv[3] = v[3];\n            gl.uniform4i(location, v[0], v[1], v[2], v[3]);\n        }`,\n  \"mat2x2<f32>\": `gl.uniformMatrix2fv(location, false, v);`,\n  \"mat3x3<f32>\": `gl.uniformMatrix3fv(location, false, v);`,\n  \"mat4x4<f32>\": `gl.uniformMatrix4fv(location, false, v);`\n};\nconst UNIFORM_TO_ARRAY_SETTERS = {\n  f32: `gl.uniform1fv(location, v);`,\n  \"vec2<f32>\": `gl.uniform2fv(location, v);`,\n  \"vec3<f32>\": `gl.uniform3fv(location, v);`,\n  \"vec4<f32>\": `gl.uniform4fv(location, v);`,\n  \"mat2x2<f32>\": `gl.uniformMatrix2fv(location, false, v);`,\n  \"mat3x3<f32>\": `gl.uniformMatrix3fv(location, false, v);`,\n  \"mat4x4<f32>\": `gl.uniformMatrix4fv(location, false, v);`,\n  i32: `gl.uniform1iv(location, v);`,\n  \"vec2<i32>\": `gl.uniform2iv(location, v);`,\n  \"vec3<i32>\": `gl.uniform3iv(location, v);`,\n  \"vec4<i32>\": `gl.uniform4iv(location, v);`,\n  u32: `gl.uniform1iv(location, v);`,\n  \"vec2<u32>\": `gl.uniform2iv(location, v);`,\n  \"vec3<u32>\": `gl.uniform3iv(location, v);`,\n  \"vec4<u32>\": `gl.uniform4iv(location, v);`,\n  bool: `gl.uniform1iv(location, v);`,\n  \"vec2<bool>\": `gl.uniform2iv(location, v);`,\n  \"vec3<bool>\": `gl.uniform3iv(location, v);`,\n  \"vec4<bool>\": `gl.uniform4iv(location, v);`\n};\n\nexport { UNIFORM_TO_ARRAY_SETTERS, UNIFORM_TO_SINGLE_SETTERS };\n//# sourceMappingURL=generateUniformsSyncTypes.mjs.map\n","import { ExtensionType } from '../../../../extensions/Extensions.mjs';\nimport { generateUniformsSync } from './utils/generateUniformsSync.mjs';\n\n\"use strict\";\nclass GlUniformGroupSystem {\n  /** @param renderer - The renderer this System works for. */\n  constructor(renderer) {\n    /** Cache to holds the generated functions. Stored against UniformObjects unique signature. */\n    this._cache = {};\n    this._uniformGroupSyncHash = {};\n    this._renderer = renderer;\n    this.gl = null;\n    this._cache = {};\n  }\n  contextChange(gl) {\n    this.gl = gl;\n  }\n  /**\n   * Uploads the uniforms values to the currently bound shader.\n   * @param group - the uniforms values that be applied to the current shader\n   * @param program\n   * @param syncData\n   * @param syncData.textureCount\n   */\n  updateUniformGroup(group, program, syncData) {\n    const programData = this._renderer.shader._getProgramData(program);\n    if (!group.isStatic || group._dirtyId !== programData.uniformDirtyGroups[group.uid]) {\n      programData.uniformDirtyGroups[group.uid] = group._dirtyId;\n      const syncFunc = this._getUniformSyncFunction(group, program);\n      syncFunc(programData.uniformData, group.uniforms, this._renderer, syncData);\n    }\n  }\n  /**\n   * Overridable by the pixi.js/unsafe-eval package to use static syncUniforms instead.\n   * @param group\n   * @param program\n   */\n  _getUniformSyncFunction(group, program) {\n    return this._uniformGroupSyncHash[group._signature]?.[program._key] || this._createUniformSyncFunction(group, program);\n  }\n  _createUniformSyncFunction(group, program) {\n    const uniformGroupSyncHash = this._uniformGroupSyncHash[group._signature] || (this._uniformGroupSyncHash[group._signature] = {});\n    const id = this._getSignature(group, program._uniformData, \"u\");\n    if (!this._cache[id]) {\n      this._cache[id] = this._generateUniformsSync(group, program._uniformData);\n    }\n    uniformGroupSyncHash[program._key] = this._cache[id];\n    return uniformGroupSyncHash[program._key];\n  }\n  _generateUniformsSync(group, uniformData) {\n    return generateUniformsSync(group, uniformData);\n  }\n  /**\n   * Takes a uniform group and data and generates a unique signature for them.\n   * @param group - The uniform group to get signature of\n   * @param group.uniforms\n   * @param uniformData - Uniform information generated by the shader\n   * @param preFix\n   * @returns Unique signature of the uniform group\n   */\n  _getSignature(group, uniformData, preFix) {\n    const uniforms = group.uniforms;\n    const strings = [`${preFix}-`];\n    for (const i in uniforms) {\n      strings.push(i);\n      if (uniformData[i]) {\n        strings.push(uniformData[i].type);\n      }\n    }\n    return strings.join(\"-\");\n  }\n  /** Destroys this System and removes all its textures. */\n  destroy() {\n    this._renderer = null;\n    this._cache = null;\n  }\n}\n/** @ignore */\nGlUniformGroupSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"uniformGroup\"\n};\n\nexport { GlUniformGroupSystem };\n//# sourceMappingURL=GlUniformGroupSystem.mjs.map\n","import { BufferResource } from '../../../shared/buffer/BufferResource.mjs';\nimport { UniformGroup } from '../../../shared/shader/UniformGroup.mjs';\nimport { uniformParsers } from '../../../shared/shader/utils/uniformParsers.mjs';\nimport { UNIFORM_TO_SINGLE_SETTERS, UNIFORM_TO_ARRAY_SETTERS } from './generateUniformsSyncTypes.mjs';\n\n\"use strict\";\nfunction generateUniformsSync(group, uniformData) {\n  const funcFragments = [`\n        var v = null;\n        var cv = null;\n        var cu = null;\n        var t = 0;\n        var gl = renderer.gl;\n        var name = null;\n    `];\n  for (const i in group.uniforms) {\n    if (!uniformData[i]) {\n      if (group.uniforms[i] instanceof UniformGroup) {\n        if (group.uniforms[i].ubo) {\n          funcFragments.push(`\n                        renderer.shader.bindUniformBlock(uv.${i}, \"${i}\");\n                    `);\n        } else {\n          funcFragments.push(`\n                        renderer.shader.updateUniformGroup(uv.${i});\n                    `);\n        }\n      } else if (group.uniforms[i] instanceof BufferResource) {\n        funcFragments.push(`\n                        renderer.shader.bindBufferResource(uv.${i}, \"${i}\");\n                    `);\n      }\n      continue;\n    }\n    const uniform = group.uniformStructures[i];\n    let parsed = false;\n    for (let j = 0; j < uniformParsers.length; j++) {\n      const parser = uniformParsers[j];\n      if (uniform.type === parser.type && parser.test(uniform)) {\n        funcFragments.push(`name = \"${i}\";`, uniformParsers[j].uniform);\n        parsed = true;\n        break;\n      }\n    }\n    if (!parsed) {\n      const templateType = uniform.size === 1 ? UNIFORM_TO_SINGLE_SETTERS : UNIFORM_TO_ARRAY_SETTERS;\n      const template = templateType[uniform.type].replace(\"location\", `ud[\"${i}\"].location`);\n      funcFragments.push(`\n            cu = ud[\"${i}\"];\n            cv = cu.value;\n            v = uv[\"${i}\"];\n            ${template};`);\n    }\n  }\n  return new Function(\"ud\", \"uv\", \"renderer\", \"syncData\", funcFragments.join(\"\\n\"));\n}\n\nexport { generateUniformsSync };\n//# sourceMappingURL=generateUniformsSync.mjs.map\n","import { ExtensionType } from '../../../../extensions/Extensions.mjs';\nimport { State } from '../../shared/state/State.mjs';\nimport { mapWebGLBlendModesToPixi } from './mapWebGLBlendModesToPixi.mjs';\n\n\"use strict\";\nconst BLEND = 0;\nconst OFFSET = 1;\nconst CULLING = 2;\nconst DEPTH_TEST = 3;\nconst WINDING = 4;\nconst DEPTH_MASK = 5;\nconst _GlStateSystem = class _GlStateSystem {\n  constructor(renderer) {\n    /**\n     * Whether to invert the front face when rendering\n     * This is used for render textures where the Y-coordinate is flipped\n     * @default false\n     */\n    this._invertFrontFace = false;\n    this.gl = null;\n    this.stateId = 0;\n    this.polygonOffset = 0;\n    this.blendMode = \"none\";\n    this._blendEq = false;\n    this.map = [];\n    this.map[BLEND] = this.setBlend;\n    this.map[OFFSET] = this.setOffset;\n    this.map[CULLING] = this.setCullFace;\n    this.map[DEPTH_TEST] = this.setDepthTest;\n    this.map[WINDING] = this.setFrontFace;\n    this.map[DEPTH_MASK] = this.setDepthMask;\n    this.checks = [];\n    this.defaultState = State.for2d();\n    renderer.renderTarget.onRenderTargetChange.add(this);\n  }\n  onRenderTargetChange(renderTarget) {\n    this._invertFrontFace = !renderTarget.isRoot;\n    if (this._cullFace) {\n      this.setFrontFace(this._frontFace);\n    } else {\n      this._frontFaceDirty = true;\n    }\n  }\n  contextChange(gl) {\n    this.gl = gl;\n    this.blendModesMap = mapWebGLBlendModesToPixi(gl);\n    this.resetState();\n  }\n  /**\n   * Sets the current state\n   * @param {*} state - The state to set.\n   */\n  set(state) {\n    state || (state = this.defaultState);\n    if (this.stateId !== state.data) {\n      let diff = this.stateId ^ state.data;\n      let i = 0;\n      while (diff) {\n        if (diff & 1) {\n          this.map[i].call(this, !!(state.data & 1 << i));\n        }\n        diff >>= 1;\n        i++;\n      }\n      this.stateId = state.data;\n    }\n    for (let i = 0; i < this.checks.length; i++) {\n      this.checks[i](this, state);\n    }\n  }\n  /**\n   * Sets the state, when previous state is unknown.\n   * @param {*} state - The state to set\n   */\n  forceState(state) {\n    state || (state = this.defaultState);\n    for (let i = 0; i < this.map.length; i++) {\n      this.map[i].call(this, !!(state.data & 1 << i));\n    }\n    for (let i = 0; i < this.checks.length; i++) {\n      this.checks[i](this, state);\n    }\n    this.stateId = state.data;\n  }\n  /**\n   * Sets whether to enable or disable blending.\n   * @param value - Turn on or off WebGl blending.\n   */\n  setBlend(value) {\n    this._updateCheck(_GlStateSystem._checkBlendMode, value);\n    this.gl[value ? \"enable\" : \"disable\"](this.gl.BLEND);\n  }\n  /**\n   * Sets whether to enable or disable polygon offset fill.\n   * @param value - Turn on or off webgl polygon offset testing.\n   */\n  setOffset(value) {\n    this._updateCheck(_GlStateSystem._checkPolygonOffset, value);\n    this.gl[value ? \"enable\" : \"disable\"](this.gl.POLYGON_OFFSET_FILL);\n  }\n  /**\n   * Sets whether to enable or disable depth test.\n   * @param value - Turn on or off webgl depth testing.\n   */\n  setDepthTest(value) {\n    this.gl[value ? \"enable\" : \"disable\"](this.gl.DEPTH_TEST);\n  }\n  /**\n   * Sets whether to enable or disable depth mask.\n   * @param value - Turn on or off webgl depth mask.\n   */\n  setDepthMask(value) {\n    this.gl.depthMask(value);\n  }\n  /**\n   * Sets whether to enable or disable cull face.\n   * @param {boolean} value - Turn on or off webgl cull face.\n   */\n  setCullFace(value) {\n    this._cullFace = value;\n    this.gl[value ? \"enable\" : \"disable\"](this.gl.CULL_FACE);\n    if (this._cullFace && this._frontFaceDirty) {\n      this.setFrontFace(this._frontFace);\n    }\n  }\n  /**\n   * Sets the gl front face.\n   * @param {boolean} value - true is clockwise and false is counter-clockwise\n   */\n  setFrontFace(value) {\n    this._frontFace = value;\n    this._frontFaceDirty = false;\n    const faceMode = this._invertFrontFace ? !value : value;\n    if (this._glFrontFace !== faceMode) {\n      this._glFrontFace = faceMode;\n      this.gl.frontFace(this.gl[faceMode ? \"CW\" : \"CCW\"]);\n    }\n  }\n  /**\n   * Sets the blend mode.\n   * @param {number} value - The blend mode to set to.\n   */\n  setBlendMode(value) {\n    if (!this.blendModesMap[value]) {\n      value = \"normal\";\n    }\n    if (value === this.blendMode) {\n      return;\n    }\n    this.blendMode = value;\n    const mode = this.blendModesMap[value];\n    const gl = this.gl;\n    if (mode.length === 2) {\n      gl.blendFunc(mode[0], mode[1]);\n    } else {\n      gl.blendFuncSeparate(mode[0], mode[1], mode[2], mode[3]);\n    }\n    if (mode.length === 6) {\n      this._blendEq = true;\n      gl.blendEquationSeparate(mode[4], mode[5]);\n    } else if (this._blendEq) {\n      this._blendEq = false;\n      gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n    }\n  }\n  /**\n   * Sets the polygon offset.\n   * @param {number} value - the polygon offset\n   * @param {number} scale - the polygon offset scale\n   */\n  setPolygonOffset(value, scale) {\n    this.gl.polygonOffset(value, scale);\n  }\n  /** Resets all the logic and disables the VAOs. */\n  resetState() {\n    this._glFrontFace = false;\n    this._frontFace = false;\n    this._cullFace = false;\n    this._frontFaceDirty = false;\n    this._invertFrontFace = false;\n    this.gl.frontFace(this.gl.CCW);\n    this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, false);\n    this.forceState(this.defaultState);\n    this._blendEq = true;\n    this.blendMode = \"\";\n    this.setBlendMode(\"normal\");\n  }\n  /**\n   * Checks to see which updates should be checked based on which settings have been activated.\n   *\n   * For example, if blend is enabled then we should check the blend modes each time the state is changed\n   * or if polygon fill is activated then we need to check if the polygon offset changes.\n   * The idea is that we only check what we have too.\n   * @param func - the checking function to add or remove\n   * @param value - should the check function be added or removed.\n   */\n  _updateCheck(func, value) {\n    const index = this.checks.indexOf(func);\n    if (value && index === -1) {\n      this.checks.push(func);\n    } else if (!value && index !== -1) {\n      this.checks.splice(index, 1);\n    }\n  }\n  /**\n   * A private little wrapper function that we call to check the blend mode.\n   * @param system - the System to perform the state check on\n   * @param state - the state that the blendMode will pulled from\n   */\n  static _checkBlendMode(system, state) {\n    system.setBlendMode(state.blendMode);\n  }\n  /**\n   * A private little wrapper function that we call to check the polygon offset.\n   * @param system - the System to perform the state check on\n   * @param state - the state that the blendMode will pulled from\n   */\n  static _checkPolygonOffset(system, state) {\n    system.setPolygonOffset(1, state.polygonOffset);\n  }\n  /** @ignore */\n  destroy() {\n    this.gl = null;\n    this.checks.length = 0;\n  }\n};\n/** @ignore */\n_GlStateSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"state\"\n};\nlet GlStateSystem = _GlStateSystem;\n\nexport { GlStateSystem };\n//# sourceMappingURL=GlStateSystem.mjs.map\n","import { DOMAdapter } from '../../../../environment/adapter.mjs';\n\n\"use strict\";\nfunction mapWebGLBlendModesToPixi(gl) {\n  const blendMap = {};\n  blendMap.normal = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  blendMap.add = [gl.ONE, gl.ONE];\n  blendMap.multiply = [gl.DST_COLOR, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  blendMap.screen = [gl.ONE, gl.ONE_MINUS_SRC_COLOR, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  blendMap.none = [0, 0];\n  blendMap[\"normal-npm\"] = [gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  blendMap[\"add-npm\"] = [gl.SRC_ALPHA, gl.ONE, gl.ONE, gl.ONE];\n  blendMap[\"screen-npm\"] = [gl.SRC_ALPHA, gl.ONE_MINUS_SRC_COLOR, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  blendMap.erase = [gl.ZERO, gl.ONE_MINUS_SRC_ALPHA];\n  const isWebGl2 = !(gl instanceof DOMAdapter.get().getWebGLRenderingContext());\n  if (isWebGl2) {\n    blendMap.min = [gl.ONE, gl.ONE, gl.ONE, gl.ONE, gl.MIN, gl.MIN];\n    blendMap.max = [gl.ONE, gl.ONE, gl.ONE, gl.ONE, gl.MAX, gl.MAX];\n  } else {\n    const ext = gl.getExtension(\"EXT_blend_minmax\");\n    if (ext) {\n      blendMap.min = [gl.ONE, gl.ONE, gl.ONE, gl.ONE, ext.MIN_EXT, ext.MIN_EXT];\n      blendMap.max = [gl.ONE, gl.ONE, gl.ONE, gl.ONE, ext.MAX_EXT, ext.MAX_EXT];\n    }\n  }\n  return blendMap;\n}\n\nexport { mapWebGLBlendModesToPixi };\n//# sourceMappingURL=mapWebGLBlendModesToPixi.mjs.map\n","import { GL_TARGETS, GL_TYPES, GL_FORMATS } from './const.mjs';\n\n\"use strict\";\nclass GlTexture {\n  constructor(texture) {\n    this.target = GL_TARGETS.TEXTURE_2D;\n    this.texture = texture;\n    this.width = -1;\n    this.height = -1;\n    this.type = GL_TYPES.UNSIGNED_BYTE;\n    this.internalFormat = GL_FORMATS.RGBA;\n    this.format = GL_FORMATS.RGBA;\n    this.samplerType = 0;\n  }\n}\n\nexport { GlTexture };\n//# sourceMappingURL=GlTexture.mjs.map\n","\"use strict\";\nconst glUploadBufferImageResource = {\n  id: \"buffer\",\n  upload(source, glTexture, gl) {\n    if (glTexture.width === source.width || glTexture.height === source.height) {\n      gl.texSubImage2D(\n        gl.TEXTURE_2D,\n        0,\n        0,\n        0,\n        source.width,\n        source.height,\n        glTexture.format,\n        glTexture.type,\n        source.resource\n      );\n    } else {\n      gl.texImage2D(\n        glTexture.target,\n        0,\n        glTexture.internalFormat,\n        source.width,\n        source.height,\n        0,\n        glTexture.format,\n        glTexture.type,\n        source.resource\n      );\n    }\n    glTexture.width = source.width;\n    glTexture.height = source.height;\n  }\n};\n\nexport { glUploadBufferImageResource };\n//# sourceMappingURL=glUploadBufferImageResource.mjs.map\n","\"use strict\";\nconst compressedFormatMap = {\n  \"bc1-rgba-unorm\": true,\n  \"bc1-rgba-unorm-srgb\": true,\n  \"bc2-rgba-unorm\": true,\n  \"bc2-rgba-unorm-srgb\": true,\n  \"bc3-rgba-unorm\": true,\n  \"bc3-rgba-unorm-srgb\": true,\n  \"bc4-r-unorm\": true,\n  \"bc4-r-snorm\": true,\n  \"bc5-rg-unorm\": true,\n  \"bc5-rg-snorm\": true,\n  \"bc6h-rgb-ufloat\": true,\n  \"bc6h-rgb-float\": true,\n  \"bc7-rgba-unorm\": true,\n  \"bc7-rgba-unorm-srgb\": true,\n  // ETC2 compressed formats usable if \"texture-compression-etc2\" is both\n  // supported by the device/user agent and enabled in requestDevice.\n  \"etc2-rgb8unorm\": true,\n  \"etc2-rgb8unorm-srgb\": true,\n  \"etc2-rgb8a1unorm\": true,\n  \"etc2-rgb8a1unorm-srgb\": true,\n  \"etc2-rgba8unorm\": true,\n  \"etc2-rgba8unorm-srgb\": true,\n  \"eac-r11unorm\": true,\n  \"eac-r11snorm\": true,\n  \"eac-rg11unorm\": true,\n  \"eac-rg11snorm\": true,\n  // ASTC compressed formats usable if \"texture-compression-astc\" is both\n  // supported by the device/user agent and enabled in requestDevice.\n  \"astc-4x4-unorm\": true,\n  \"astc-4x4-unorm-srgb\": true,\n  \"astc-5x4-unorm\": true,\n  \"astc-5x4-unorm-srgb\": true,\n  \"astc-5x5-unorm\": true,\n  \"astc-5x5-unorm-srgb\": true,\n  \"astc-6x5-unorm\": true,\n  \"astc-6x5-unorm-srgb\": true,\n  \"astc-6x6-unorm\": true,\n  \"astc-6x6-unorm-srgb\": true,\n  \"astc-8x5-unorm\": true,\n  \"astc-8x5-unorm-srgb\": true,\n  \"astc-8x6-unorm\": true,\n  \"astc-8x6-unorm-srgb\": true,\n  \"astc-8x8-unorm\": true,\n  \"astc-8x8-unorm-srgb\": true,\n  \"astc-10x5-unorm\": true,\n  \"astc-10x5-unorm-srgb\": true,\n  \"astc-10x6-unorm\": true,\n  \"astc-10x6-unorm-srgb\": true,\n  \"astc-10x8-unorm\": true,\n  \"astc-10x8-unorm-srgb\": true,\n  \"astc-10x10-unorm\": true,\n  \"astc-10x10-unorm-srgb\": true,\n  \"astc-12x10-unorm\": true,\n  \"astc-12x10-unorm-srgb\": true,\n  \"astc-12x12-unorm\": true,\n  \"astc-12x12-unorm-srgb\": true\n};\nconst glUploadCompressedTextureResource = {\n  id: \"compressed\",\n  upload(source, glTexture, gl) {\n    gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    let mipWidth = source.pixelWidth;\n    let mipHeight = source.pixelHeight;\n    const compressed = !!compressedFormatMap[source.format];\n    for (let i = 0; i < source.resource.length; i++) {\n      const levelBuffer = source.resource[i];\n      if (compressed) {\n        gl.compressedTexImage2D(\n          gl.TEXTURE_2D,\n          i,\n          glTexture.internalFormat,\n          mipWidth,\n          mipHeight,\n          0,\n          levelBuffer\n        );\n      } else {\n        gl.texImage2D(\n          gl.TEXTURE_2D,\n          i,\n          glTexture.internalFormat,\n          mipWidth,\n          mipHeight,\n          0,\n          glTexture.format,\n          glTexture.type,\n          levelBuffer\n        );\n      }\n      mipWidth = Math.max(mipWidth >> 1, 1);\n      mipHeight = Math.max(mipHeight >> 1, 1);\n    }\n  }\n};\n\nexport { glUploadCompressedTextureResource };\n//# sourceMappingURL=glUploadCompressedTextureResource.mjs.map\n","\"use strict\";\nconst glUploadImageResource = {\n  id: \"image\",\n  upload(source, glTexture, gl, webGLVersion) {\n    const glWidth = glTexture.width;\n    const glHeight = glTexture.height;\n    const textureWidth = source.pixelWidth;\n    const textureHeight = source.pixelHeight;\n    const resourceWidth = source.resourceWidth;\n    const resourceHeight = source.resourceHeight;\n    if (resourceWidth < textureWidth || resourceHeight < textureHeight) {\n      if (glWidth !== textureWidth || glHeight !== textureHeight) {\n        gl.texImage2D(\n          glTexture.target,\n          0,\n          glTexture.internalFormat,\n          textureWidth,\n          textureHeight,\n          0,\n          glTexture.format,\n          glTexture.type,\n          null\n        );\n      }\n      if (webGLVersion === 2) {\n        gl.texSubImage2D(\n          gl.TEXTURE_2D,\n          0,\n          0,\n          0,\n          resourceWidth,\n          resourceHeight,\n          glTexture.format,\n          glTexture.type,\n          source.resource\n        );\n      } else {\n        gl.texSubImage2D(\n          gl.TEXTURE_2D,\n          0,\n          0,\n          0,\n          glTexture.format,\n          glTexture.type,\n          source.resource\n        );\n      }\n    } else if (glWidth === textureWidth && glHeight === textureHeight) {\n      gl.texSubImage2D(\n        gl.TEXTURE_2D,\n        0,\n        0,\n        0,\n        glTexture.format,\n        glTexture.type,\n        source.resource\n      );\n    } else if (webGLVersion === 2) {\n      gl.texImage2D(\n        glTexture.target,\n        0,\n        glTexture.internalFormat,\n        textureWidth,\n        textureHeight,\n        0,\n        glTexture.format,\n        glTexture.type,\n        source.resource\n      );\n    } else {\n      gl.texImage2D(\n        glTexture.target,\n        0,\n        glTexture.internalFormat,\n        glTexture.format,\n        glTexture.type,\n        source.resource\n      );\n    }\n    glTexture.width = textureWidth;\n    glTexture.height = textureHeight;\n  }\n};\n\nexport { glUploadImageResource };\n//# sourceMappingURL=glUploadImageResource.mjs.map\n","import { glUploadImageResource } from './glUploadImageResource.mjs';\n\n\"use strict\";\nconst glUploadVideoResource = {\n  id: \"video\",\n  upload(source, glTexture, gl, webGLVersion) {\n    if (!source.isValid) {\n      gl.texImage2D(\n        glTexture.target,\n        0,\n        glTexture.internalFormat,\n        1,\n        1,\n        0,\n        glTexture.format,\n        glTexture.type,\n        null\n      );\n      return;\n    }\n    glUploadImageResource.upload(source, glTexture, gl, webGLVersion);\n  }\n};\n\nexport { glUploadVideoResource };\n//# sourceMappingURL=glUploadVideoResource.mjs.map\n","\"use strict\";\nconst scaleModeToGlFilter = {\n  linear: 9729,\n  nearest: 9728\n};\nconst mipmapScaleModeToGlFilter = {\n  linear: {\n    linear: 9987,\n    nearest: 9985\n  },\n  nearest: {\n    linear: 9986,\n    nearest: 9984\n  }\n};\nconst wrapModeToGlAddress = {\n  \"clamp-to-edge\": 33071,\n  repeat: 10497,\n  \"mirror-repeat\": 33648\n};\nconst compareModeToGlCompare = {\n  never: 512,\n  less: 513,\n  equal: 514,\n  \"less-equal\": 515,\n  greater: 516,\n  \"not-equal\": 517,\n  \"greater-equal\": 518,\n  always: 519\n};\n\nexport { compareModeToGlCompare, mipmapScaleModeToGlFilter, scaleModeToGlFilter, wrapModeToGlAddress };\n//# sourceMappingURL=pixiToGlMaps.mjs.map\n","import { wrapModeToGlAddress, scaleModeToGlFilter, mipmapScaleModeToGlFilter, compareModeToGlCompare } from './pixiToGlMaps.mjs';\n\n\"use strict\";\nfunction applyStyleParams(style, gl, mipmaps, anisotropicExt, glFunctionName, firstParam, forceClamp, firstCreation) {\n  const castParam = firstParam;\n  if (!firstCreation || style.addressModeU !== \"repeat\" || style.addressModeV !== \"repeat\" || style.addressModeW !== \"repeat\") {\n    const wrapModeS = wrapModeToGlAddress[forceClamp ? \"clamp-to-edge\" : style.addressModeU];\n    const wrapModeT = wrapModeToGlAddress[forceClamp ? \"clamp-to-edge\" : style.addressModeV];\n    const wrapModeR = wrapModeToGlAddress[forceClamp ? \"clamp-to-edge\" : style.addressModeW];\n    gl[glFunctionName](castParam, gl.TEXTURE_WRAP_S, wrapModeS);\n    gl[glFunctionName](castParam, gl.TEXTURE_WRAP_T, wrapModeT);\n    if (gl.TEXTURE_WRAP_R)\n      gl[glFunctionName](castParam, gl.TEXTURE_WRAP_R, wrapModeR);\n  }\n  if (!firstCreation || style.magFilter !== \"linear\") {\n    gl[glFunctionName](castParam, gl.TEXTURE_MAG_FILTER, scaleModeToGlFilter[style.magFilter]);\n  }\n  if (mipmaps) {\n    if (!firstCreation || style.mipmapFilter !== \"linear\") {\n      const glFilterMode = mipmapScaleModeToGlFilter[style.minFilter][style.mipmapFilter];\n      gl[glFunctionName](castParam, gl.TEXTURE_MIN_FILTER, glFilterMode);\n    }\n  } else {\n    gl[glFunctionName](castParam, gl.TEXTURE_MIN_FILTER, scaleModeToGlFilter[style.minFilter]);\n  }\n  if (anisotropicExt && style.maxAnisotropy > 1) {\n    const level = Math.min(style.maxAnisotropy, gl.getParameter(anisotropicExt.MAX_TEXTURE_MAX_ANISOTROPY_EXT));\n    gl[glFunctionName](castParam, anisotropicExt.TEXTURE_MAX_ANISOTROPY_EXT, level);\n  }\n  if (style.compare) {\n    gl[glFunctionName](castParam, gl.TEXTURE_COMPARE_FUNC, compareModeToGlCompare[style.compare]);\n  }\n}\n\nexport { applyStyleParams };\n//# sourceMappingURL=applyStyleParams.mjs.map\n","import { DOMAdapter } from '../../../../environment/adapter.mjs';\nimport { ExtensionType } from '../../../../extensions/Extensions.mjs';\nimport { Texture } from '../../shared/texture/Texture.mjs';\nimport { GlTexture } from './GlTexture.mjs';\nimport { glUploadBufferImageResource } from './uploaders/glUploadBufferImageResource.mjs';\nimport { glUploadCompressedTextureResource } from './uploaders/glUploadCompressedTextureResource.mjs';\nimport { glUploadImageResource } from './uploaders/glUploadImageResource.mjs';\nimport { glUploadVideoResource } from './uploaders/glUploadVideoResource.mjs';\nimport { applyStyleParams } from './utils/applyStyleParams.mjs';\nimport { mapFormatToGlFormat } from './utils/mapFormatToGlFormat.mjs';\nimport { mapFormatToGlInternalFormat } from './utils/mapFormatToGlInternalFormat.mjs';\nimport { mapFormatToGlType } from './utils/mapFormatToGlType.mjs';\nimport './utils/unpremultiplyAlpha.mjs';\n\n\"use strict\";\nconst BYTES_PER_PIXEL = 4;\nclass GlTextureSystem {\n  constructor(renderer) {\n    this.managedTextures = [];\n    this._glTextures = /* @__PURE__ */ Object.create(null);\n    this._glSamplers = /* @__PURE__ */ Object.create(null);\n    this._boundTextures = [];\n    this._activeTextureLocation = -1;\n    this._boundSamplers = /* @__PURE__ */ Object.create(null);\n    this._uploads = {\n      image: glUploadImageResource,\n      buffer: glUploadBufferImageResource,\n      video: glUploadVideoResource,\n      compressed: glUploadCompressedTextureResource\n    };\n    this._premultiplyAlpha = false;\n    // TODO - separate samplers will be a cool thing to add, but not right now!\n    this._useSeparateSamplers = false;\n    this._renderer = renderer;\n    this._renderer.renderableGC.addManagedHash(this, \"_glTextures\");\n    this._renderer.renderableGC.addManagedHash(this, \"_glSamplers\");\n  }\n  contextChange(gl) {\n    this._gl = gl;\n    if (!this._mapFormatToInternalFormat) {\n      this._mapFormatToInternalFormat = mapFormatToGlInternalFormat(gl, this._renderer.context.extensions);\n      this._mapFormatToType = mapFormatToGlType(gl);\n      this._mapFormatToFormat = mapFormatToGlFormat(gl);\n    }\n    this._glTextures = /* @__PURE__ */ Object.create(null);\n    this._glSamplers = /* @__PURE__ */ Object.create(null);\n    this._boundSamplers = /* @__PURE__ */ Object.create(null);\n    this._premultiplyAlpha = false;\n    for (let i = 0; i < 16; i++) {\n      this.bind(Texture.EMPTY, i);\n    }\n  }\n  /**\n   * Initializes a texture source, if it has already been initialized nothing will happen.\n   * @param source - The texture source to initialize.\n   * @returns The initialized texture source.\n   */\n  initSource(source) {\n    this.bind(source);\n  }\n  bind(texture, location = 0) {\n    const source = texture.source;\n    if (texture) {\n      this.bindSource(source, location);\n      if (this._useSeparateSamplers) {\n        this._bindSampler(source.style, location);\n      }\n    } else {\n      this.bindSource(null, location);\n      if (this._useSeparateSamplers) {\n        this._bindSampler(null, location);\n      }\n    }\n  }\n  bindSource(source, location = 0) {\n    const gl = this._gl;\n    source._touched = this._renderer.textureGC.count;\n    if (this._boundTextures[location] !== source) {\n      this._boundTextures[location] = source;\n      this._activateLocation(location);\n      source || (source = Texture.EMPTY.source);\n      const glTexture = this.getGlSource(source);\n      gl.bindTexture(glTexture.target, glTexture.texture);\n    }\n  }\n  _bindSampler(style, location = 0) {\n    const gl = this._gl;\n    if (!style) {\n      this._boundSamplers[location] = null;\n      gl.bindSampler(location, null);\n      return;\n    }\n    const sampler = this._getGlSampler(style);\n    if (this._boundSamplers[location] !== sampler) {\n      this._boundSamplers[location] = sampler;\n      gl.bindSampler(location, sampler);\n    }\n  }\n  unbind(texture) {\n    const source = texture.source;\n    const boundTextures = this._boundTextures;\n    const gl = this._gl;\n    for (let i = 0; i < boundTextures.length; i++) {\n      if (boundTextures[i] === source) {\n        this._activateLocation(i);\n        const glTexture = this.getGlSource(source);\n        gl.bindTexture(glTexture.target, null);\n        boundTextures[i] = null;\n      }\n    }\n  }\n  _activateLocation(location) {\n    if (this._activeTextureLocation !== location) {\n      this._activeTextureLocation = location;\n      this._gl.activeTexture(this._gl.TEXTURE0 + location);\n    }\n  }\n  _initSource(source) {\n    const gl = this._gl;\n    const glTexture = new GlTexture(gl.createTexture());\n    glTexture.type = this._mapFormatToType[source.format];\n    glTexture.internalFormat = this._mapFormatToInternalFormat[source.format];\n    glTexture.format = this._mapFormatToFormat[source.format];\n    if (source.autoGenerateMipmaps && (this._renderer.context.supports.nonPowOf2mipmaps || source.isPowerOfTwo)) {\n      const biggestDimension = Math.max(source.width, source.height);\n      source.mipLevelCount = Math.floor(Math.log2(biggestDimension)) + 1;\n    }\n    this._glTextures[source.uid] = glTexture;\n    if (!this.managedTextures.includes(source)) {\n      source.on(\"update\", this.onSourceUpdate, this);\n      source.on(\"resize\", this.onSourceUpdate, this);\n      source.on(\"styleChange\", this.onStyleChange, this);\n      source.on(\"destroy\", this.onSourceDestroy, this);\n      source.on(\"unload\", this.onSourceUnload, this);\n      source.on(\"updateMipmaps\", this.onUpdateMipmaps, this);\n      this.managedTextures.push(source);\n    }\n    this.onSourceUpdate(source);\n    this.updateStyle(source, false);\n    return glTexture;\n  }\n  onStyleChange(source) {\n    this.updateStyle(source, false);\n  }\n  updateStyle(source, firstCreation) {\n    const gl = this._gl;\n    const glTexture = this.getGlSource(source);\n    gl.bindTexture(gl.TEXTURE_2D, glTexture.texture);\n    this._boundTextures[this._activeTextureLocation] = source;\n    applyStyleParams(\n      source.style,\n      gl,\n      source.mipLevelCount > 1,\n      this._renderer.context.extensions.anisotropicFiltering,\n      \"texParameteri\",\n      gl.TEXTURE_2D,\n      // will force a clamp to edge if the texture is not a power of two\n      !this._renderer.context.supports.nonPowOf2wrapping && !source.isPowerOfTwo,\n      firstCreation\n    );\n  }\n  onSourceUnload(source) {\n    const glTexture = this._glTextures[source.uid];\n    if (!glTexture)\n      return;\n    this.unbind(source);\n    this._glTextures[source.uid] = null;\n    this._gl.deleteTexture(glTexture.texture);\n  }\n  onSourceUpdate(source) {\n    const gl = this._gl;\n    const glTexture = this.getGlSource(source);\n    gl.bindTexture(gl.TEXTURE_2D, glTexture.texture);\n    this._boundTextures[this._activeTextureLocation] = source;\n    const premultipliedAlpha = source.alphaMode === \"premultiply-alpha-on-upload\";\n    if (this._premultiplyAlpha !== premultipliedAlpha) {\n      this._premultiplyAlpha = premultipliedAlpha;\n      gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, premultipliedAlpha);\n    }\n    if (this._uploads[source.uploadMethodId]) {\n      this._uploads[source.uploadMethodId].upload(source, glTexture, gl, this._renderer.context.webGLVersion);\n    } else {\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, source.pixelWidth, source.pixelHeight, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n    }\n    if (source.autoGenerateMipmaps && source.mipLevelCount > 1) {\n      this.onUpdateMipmaps(source, false);\n    }\n  }\n  onUpdateMipmaps(source, bind = true) {\n    if (bind)\n      this.bindSource(source, 0);\n    const glTexture = this.getGlSource(source);\n    this._gl.generateMipmap(glTexture.target);\n  }\n  onSourceDestroy(source) {\n    source.off(\"destroy\", this.onSourceDestroy, this);\n    source.off(\"update\", this.onSourceUpdate, this);\n    source.off(\"resize\", this.onSourceUpdate, this);\n    source.off(\"unload\", this.onSourceUnload, this);\n    source.off(\"styleChange\", this.onStyleChange, this);\n    source.off(\"updateMipmaps\", this.onUpdateMipmaps, this);\n    this.managedTextures.splice(this.managedTextures.indexOf(source), 1);\n    this.onSourceUnload(source);\n  }\n  _initSampler(style) {\n    const gl = this._gl;\n    const glSampler = this._gl.createSampler();\n    this._glSamplers[style._resourceId] = glSampler;\n    applyStyleParams(\n      style,\n      gl,\n      this._boundTextures[this._activeTextureLocation].mipLevelCount > 1,\n      this._renderer.context.extensions.anisotropicFiltering,\n      \"samplerParameteri\",\n      glSampler,\n      false,\n      true\n    );\n    return this._glSamplers[style._resourceId];\n  }\n  _getGlSampler(sampler) {\n    return this._glSamplers[sampler._resourceId] || this._initSampler(sampler);\n  }\n  getGlSource(source) {\n    return this._glTextures[source.uid] || this._initSource(source);\n  }\n  generateCanvas(texture) {\n    const { pixels, width, height } = this.getPixels(texture);\n    const canvas = DOMAdapter.get().createCanvas();\n    canvas.width = width;\n    canvas.height = height;\n    const ctx = canvas.getContext(\"2d\");\n    if (ctx) {\n      const imageData = ctx.createImageData(width, height);\n      imageData.data.set(pixels);\n      ctx.putImageData(imageData, 0, 0);\n    }\n    return canvas;\n  }\n  getPixels(texture) {\n    const resolution = texture.source.resolution;\n    const frame = texture.frame;\n    const width = Math.max(Math.round(frame.width * resolution), 1);\n    const height = Math.max(Math.round(frame.height * resolution), 1);\n    const pixels = new Uint8Array(BYTES_PER_PIXEL * width * height);\n    const renderer = this._renderer;\n    const renderTarget = renderer.renderTarget.getRenderTarget(texture);\n    const glRenterTarget = renderer.renderTarget.getGpuRenderTarget(renderTarget);\n    const gl = renderer.gl;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, glRenterTarget.resolveTargetFramebuffer);\n    gl.readPixels(\n      Math.round(frame.x * resolution),\n      Math.round(frame.y * resolution),\n      width,\n      height,\n      gl.RGBA,\n      gl.UNSIGNED_BYTE,\n      pixels\n    );\n    if (false) {\n      unpremultiplyAlpha(pixels);\n    }\n    return { pixels: new Uint8ClampedArray(pixels.buffer), width, height };\n  }\n  destroy() {\n    this.managedTextures.slice().forEach((source) => this.onSourceDestroy(source));\n    this.managedTextures = null;\n    this._glTextures = null;\n    this._glSamplers = null;\n    this._boundTextures = null;\n    this._boundSamplers = null;\n    this._mapFormatToInternalFormat = null;\n    this._mapFormatToType = null;\n    this._mapFormatToFormat = null;\n    this._uploads = null;\n    this._renderer = null;\n  }\n  resetState() {\n    this._activeTextureLocation = -1;\n    this._boundTextures.fill(Texture.EMPTY.source);\n    this._boundSamplers = /* @__PURE__ */ Object.create(null);\n    const gl = this._gl;\n    this._premultiplyAlpha = false;\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this._premultiplyAlpha);\n  }\n}\n/** @ignore */\nGlTextureSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"texture\"\n};\n\nexport { GlTextureSystem };\n//# sourceMappingURL=GlTextureSystem.mjs.map\n","import { DOMAdapter } from '../../../../../environment/adapter.mjs';\n\n\"use strict\";\nfunction mapFormatToGlInternalFormat(gl, extensions) {\n  let srgb = {};\n  let bgra8unorm = gl.RGBA;\n  if (!(gl instanceof DOMAdapter.get().getWebGLRenderingContext())) {\n    srgb = {\n      \"rgba8unorm-srgb\": gl.SRGB8_ALPHA8,\n      \"bgra8unorm-srgb\": gl.SRGB8_ALPHA8\n    };\n    bgra8unorm = gl.RGBA8;\n  } else if (extensions.srgb) {\n    srgb = {\n      \"rgba8unorm-srgb\": extensions.srgb.SRGB8_ALPHA8_EXT,\n      \"bgra8unorm-srgb\": extensions.srgb.SRGB8_ALPHA8_EXT\n    };\n  }\n  return {\n    // 8-bit formats\n    r8unorm: gl.R8,\n    r8snorm: gl.R8_SNORM,\n    r8uint: gl.R8UI,\n    r8sint: gl.R8I,\n    // 16-bit formats\n    r16uint: gl.R16UI,\n    r16sint: gl.R16I,\n    r16float: gl.R16F,\n    rg8unorm: gl.RG8,\n    rg8snorm: gl.RG8_SNORM,\n    rg8uint: gl.RG8UI,\n    rg8sint: gl.RG8I,\n    // 32-bit formats\n    r32uint: gl.R32UI,\n    r32sint: gl.R32I,\n    r32float: gl.R32F,\n    rg16uint: gl.RG16UI,\n    rg16sint: gl.RG16I,\n    rg16float: gl.RG16F,\n    rgba8unorm: gl.RGBA,\n    ...srgb,\n    // Packed 32-bit formats\n    rgba8snorm: gl.RGBA8_SNORM,\n    rgba8uint: gl.RGBA8UI,\n    rgba8sint: gl.RGBA8I,\n    bgra8unorm,\n    rgb9e5ufloat: gl.RGB9_E5,\n    rgb10a2unorm: gl.RGB10_A2,\n    rg11b10ufloat: gl.R11F_G11F_B10F,\n    // 64-bit formats\n    rg32uint: gl.RG32UI,\n    rg32sint: gl.RG32I,\n    rg32float: gl.RG32F,\n    rgba16uint: gl.RGBA16UI,\n    rgba16sint: gl.RGBA16I,\n    rgba16float: gl.RGBA16F,\n    // 128-bit formats\n    rgba32uint: gl.RGBA32UI,\n    rgba32sint: gl.RGBA32I,\n    rgba32float: gl.RGBA32F,\n    // Depth/stencil formats\n    stencil8: gl.STENCIL_INDEX8,\n    depth16unorm: gl.DEPTH_COMPONENT16,\n    depth24plus: gl.DEPTH_COMPONENT24,\n    \"depth24plus-stencil8\": gl.DEPTH24_STENCIL8,\n    depth32float: gl.DEPTH_COMPONENT32F,\n    \"depth32float-stencil8\": gl.DEPTH32F_STENCIL8,\n    // Compressed formats\n    ...extensions.s3tc ? {\n      \"bc1-rgba-unorm\": extensions.s3tc.COMPRESSED_RGBA_S3TC_DXT1_EXT,\n      \"bc2-rgba-unorm\": extensions.s3tc.COMPRESSED_RGBA_S3TC_DXT3_EXT,\n      \"bc3-rgba-unorm\": extensions.s3tc.COMPRESSED_RGBA_S3TC_DXT5_EXT\n    } : {},\n    ...extensions.s3tc_sRGB ? {\n      \"bc1-rgba-unorm-srgb\": extensions.s3tc_sRGB.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT,\n      \"bc2-rgba-unorm-srgb\": extensions.s3tc_sRGB.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT,\n      \"bc3-rgba-unorm-srgb\": extensions.s3tc_sRGB.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT\n    } : {},\n    ...extensions.rgtc ? {\n      \"bc4-r-unorm\": extensions.rgtc.COMPRESSED_RED_RGTC1_EXT,\n      \"bc4-r-snorm\": extensions.rgtc.COMPRESSED_SIGNED_RED_RGTC1_EXT,\n      \"bc5-rg-unorm\": extensions.rgtc.COMPRESSED_RED_GREEN_RGTC2_EXT,\n      \"bc5-rg-snorm\": extensions.rgtc.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT\n    } : {},\n    ...extensions.bptc ? {\n      \"bc6h-rgb-float\": extensions.bptc.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT,\n      \"bc6h-rgb-ufloat\": extensions.bptc.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT,\n      \"bc7-rgba-unorm\": extensions.bptc.COMPRESSED_RGBA_BPTC_UNORM_EXT,\n      \"bc7-rgba-unorm-srgb\": extensions.bptc.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT\n    } : {},\n    ...extensions.etc ? {\n      \"etc2-rgb8unorm\": extensions.etc.COMPRESSED_RGB8_ETC2,\n      \"etc2-rgb8unorm-srgb\": extensions.etc.COMPRESSED_SRGB8_ETC2,\n      \"etc2-rgb8a1unorm\": extensions.etc.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2,\n      \"etc2-rgb8a1unorm-srgb\": extensions.etc.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2,\n      \"etc2-rgba8unorm\": extensions.etc.COMPRESSED_RGBA8_ETC2_EAC,\n      \"etc2-rgba8unorm-srgb\": extensions.etc.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC,\n      \"eac-r11unorm\": extensions.etc.COMPRESSED_R11_EAC,\n      // 'eac-r11snorm'\n      \"eac-rg11unorm\": extensions.etc.COMPRESSED_SIGNED_RG11_EAC\n      // 'eac-rg11snorm'\n    } : {},\n    ...extensions.astc ? {\n      \"astc-4x4-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_4x4_KHR,\n      \"astc-4x4-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR,\n      \"astc-5x4-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_5x4_KHR,\n      \"astc-5x4-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR,\n      \"astc-5x5-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_5x5_KHR,\n      \"astc-5x5-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR,\n      \"astc-6x5-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_6x5_KHR,\n      \"astc-6x5-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR,\n      \"astc-6x6-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_6x6_KHR,\n      \"astc-6x6-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR,\n      \"astc-8x5-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_8x5_KHR,\n      \"astc-8x5-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR,\n      \"astc-8x6-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_8x6_KHR,\n      \"astc-8x6-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR,\n      \"astc-8x8-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_8x8_KHR,\n      \"astc-8x8-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR,\n      \"astc-10x5-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_10x5_KHR,\n      \"astc-10x5-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR,\n      \"astc-10x6-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_10x6_KHR,\n      \"astc-10x6-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR,\n      \"astc-10x8-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_10x8_KHR,\n      \"astc-10x8-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR,\n      \"astc-10x10-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_10x10_KHR,\n      \"astc-10x10-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR,\n      \"astc-12x10-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_12x10_KHR,\n      \"astc-12x10-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR,\n      \"astc-12x12-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_12x12_KHR,\n      \"astc-12x12-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR\n    } : {}\n  };\n}\n\nexport { mapFormatToGlInternalFormat };\n//# sourceMappingURL=mapFormatToGlInternalFormat.mjs.map\n","\"use strict\";\nfunction mapFormatToGlType(gl) {\n  return {\n    // 8-bit formats\n    r8unorm: gl.UNSIGNED_BYTE,\n    r8snorm: gl.BYTE,\n    r8uint: gl.UNSIGNED_BYTE,\n    r8sint: gl.BYTE,\n    // 16-bit formats\n    r16uint: gl.UNSIGNED_SHORT,\n    r16sint: gl.SHORT,\n    r16float: gl.HALF_FLOAT,\n    rg8unorm: gl.UNSIGNED_BYTE,\n    rg8snorm: gl.BYTE,\n    rg8uint: gl.UNSIGNED_BYTE,\n    rg8sint: gl.BYTE,\n    // 32-bit formats\n    r32uint: gl.UNSIGNED_INT,\n    r32sint: gl.INT,\n    r32float: gl.FLOAT,\n    rg16uint: gl.UNSIGNED_SHORT,\n    rg16sint: gl.SHORT,\n    rg16float: gl.HALF_FLOAT,\n    rgba8unorm: gl.UNSIGNED_BYTE,\n    \"rgba8unorm-srgb\": gl.UNSIGNED_BYTE,\n    // Packed 32-bit formats\n    rgba8snorm: gl.BYTE,\n    rgba8uint: gl.UNSIGNED_BYTE,\n    rgba8sint: gl.BYTE,\n    bgra8unorm: gl.UNSIGNED_BYTE,\n    \"bgra8unorm-srgb\": gl.UNSIGNED_BYTE,\n    rgb9e5ufloat: gl.UNSIGNED_INT_5_9_9_9_REV,\n    rgb10a2unorm: gl.UNSIGNED_INT_2_10_10_10_REV,\n    rg11b10ufloat: gl.UNSIGNED_INT_10F_11F_11F_REV,\n    // 64-bit formats\n    rg32uint: gl.UNSIGNED_INT,\n    rg32sint: gl.INT,\n    rg32float: gl.FLOAT,\n    rgba16uint: gl.UNSIGNED_SHORT,\n    rgba16sint: gl.SHORT,\n    rgba16float: gl.HALF_FLOAT,\n    // 128-bit formats\n    rgba32uint: gl.UNSIGNED_INT,\n    rgba32sint: gl.INT,\n    rgba32float: gl.FLOAT,\n    // Depth/stencil formats\n    stencil8: gl.UNSIGNED_BYTE,\n    depth16unorm: gl.UNSIGNED_SHORT,\n    depth24plus: gl.UNSIGNED_INT,\n    \"depth24plus-stencil8\": gl.UNSIGNED_INT_24_8,\n    depth32float: gl.FLOAT,\n    \"depth32float-stencil8\": gl.FLOAT_32_UNSIGNED_INT_24_8_REV\n  };\n}\n\nexport { mapFormatToGlType };\n//# sourceMappingURL=mapFormatToGlType.mjs.map\n","\"use strict\";\nfunction mapFormatToGlFormat(gl) {\n  return {\n    // 8-bit formats\n    r8unorm: gl.RED,\n    r8snorm: gl.RED,\n    r8uint: gl.RED,\n    r8sint: gl.RED,\n    // 16-bit formats\n    r16uint: gl.RED,\n    r16sint: gl.RED,\n    r16float: gl.RED,\n    rg8unorm: gl.RG,\n    rg8snorm: gl.RG,\n    rg8uint: gl.RG,\n    rg8sint: gl.RG,\n    // 32-bit formats\n    r32uint: gl.RED,\n    r32sint: gl.RED,\n    r32float: gl.RED,\n    rg16uint: gl.RG,\n    rg16sint: gl.RG,\n    rg16float: gl.RG,\n    rgba8unorm: gl.RGBA,\n    \"rgba8unorm-srgb\": gl.RGBA,\n    // Packed 32-bit formats\n    rgba8snorm: gl.RGBA,\n    rgba8uint: gl.RGBA,\n    rgba8sint: gl.RGBA,\n    bgra8unorm: gl.RGBA,\n    \"bgra8unorm-srgb\": gl.RGBA,\n    rgb9e5ufloat: gl.RGB,\n    rgb10a2unorm: gl.RGBA,\n    rg11b10ufloat: gl.RGB,\n    // 64-bit formats\n    rg32uint: gl.RG,\n    rg32sint: gl.RG,\n    rg32float: gl.RG,\n    rgba16uint: gl.RGBA,\n    rgba16sint: gl.RGBA,\n    rgba16float: gl.RGBA,\n    // 128-bit formats\n    rgba32uint: gl.RGBA,\n    rgba32sint: gl.RGBA,\n    rgba32float: gl.RGBA,\n    // Depth/stencil formats\n    stencil8: gl.STENCIL_INDEX8,\n    depth16unorm: gl.DEPTH_COMPONENT,\n    depth24plus: gl.DEPTH_COMPONENT,\n    \"depth24plus-stencil8\": gl.DEPTH_STENCIL,\n    depth32float: gl.DEPTH_COMPONENT,\n    \"depth32float-stencil8\": gl.DEPTH_STENCIL\n  };\n}\n\nexport { mapFormatToGlFormat };\n//# sourceMappingURL=mapFormatToGlFormat.mjs.map\n","import { extensions, ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { GlGraphicsAdaptor } from '../../../scene/graphics/gl/GlGraphicsAdaptor.mjs';\nimport { GlMeshAdaptor } from '../../../scene/mesh/gl/GlMeshAdaptor.mjs';\nimport { GlBatchAdaptor } from '../../batcher/gl/GlBatchAdaptor.mjs';\nimport { AbstractRenderer } from '../shared/system/AbstractRenderer.mjs';\nimport { SharedSystems, SharedRenderPipes } from '../shared/system/SharedSystems.mjs';\nimport { RendererType } from '../types.mjs';\nimport { GlBufferSystem } from './buffer/GlBufferSystem.mjs';\nimport { GlContextSystem } from './context/GlContextSystem.mjs';\nimport { GlGeometrySystem } from './geometry/GlGeometrySystem.mjs';\nimport { GlBackBufferSystem } from './GlBackBufferSystem.mjs';\nimport { GlColorMaskSystem } from './GlColorMaskSystem.mjs';\nimport { GlEncoderSystem } from './GlEncoderSystem.mjs';\nimport { GlLimitsSystem } from './GlLimitsSystem.mjs';\nimport { GlStencilSystem } from './GlStencilSystem.mjs';\nimport { GlUboSystem } from './GlUboSystem.mjs';\nimport { GlRenderTargetSystem } from './renderTarget/GlRenderTargetSystem.mjs';\nimport { GlShaderSystem } from './shader/GlShaderSystem.mjs';\nimport { GlUniformGroupSystem } from './shader/GlUniformGroupSystem.mjs';\nimport { GlStateSystem } from './state/GlStateSystem.mjs';\nimport { GlTextureSystem } from './texture/GlTextureSystem.mjs';\n\n\"use strict\";\nconst DefaultWebGLSystems = [\n  ...SharedSystems,\n  GlUboSystem,\n  GlBackBufferSystem,\n  GlContextSystem,\n  GlLimitsSystem,\n  GlBufferSystem,\n  GlTextureSystem,\n  GlRenderTargetSystem,\n  GlGeometrySystem,\n  GlUniformGroupSystem,\n  GlShaderSystem,\n  GlEncoderSystem,\n  GlStateSystem,\n  GlStencilSystem,\n  GlColorMaskSystem\n];\nconst DefaultWebGLPipes = [...SharedRenderPipes];\nconst DefaultWebGLAdapters = [GlBatchAdaptor, GlMeshAdaptor, GlGraphicsAdaptor];\nconst systems = [];\nconst renderPipes = [];\nconst renderPipeAdaptors = [];\nextensions.handleByNamedList(ExtensionType.WebGLSystem, systems);\nextensions.handleByNamedList(ExtensionType.WebGLPipes, renderPipes);\nextensions.handleByNamedList(ExtensionType.WebGLPipesAdaptor, renderPipeAdaptors);\nextensions.add(...DefaultWebGLSystems, ...DefaultWebGLPipes, ...DefaultWebGLAdapters);\nclass WebGLRenderer extends AbstractRenderer {\n  constructor() {\n    const systemConfig = {\n      name: \"webgl\",\n      type: RendererType.WEBGL,\n      systems,\n      renderPipes,\n      renderPipeAdaptors\n    };\n    super(systemConfig);\n  }\n}\n\nexport { WebGLRenderer };\n//# sourceMappingURL=WebGLRenderer.mjs.map\n"],"names":["GlGraphicsAdaptor","contextChange","renderer","uniforms","UniformGroup","uColor","value","Float32Array","type","uTransformMatrix","Matrix","uRound","maxTextures","limits","maxBatchableTextures","glProgram","name","bits","colorBit","generateTextureBatchBit","localUniformBit","roundPixelsBit","this","shader","Shader","resources","localUniforms","batchSamplers","getBatchSamplersUniformGroup","execute","graphicsPipe","renderable","context","customShader","contextSystem","graphicsContext","batcher","instructions","getContextRenderData","groups","globalUniforms","bindGroup","state","set","bind","geometry","batches","i","instructionSize","batch","size","j","textures","count","texture","draw","topology","start","destroy","extension","WebGLPipesAdaptor","GlMeshAdaptor","init","textureBit","_shader","uTexture","Texture","EMPTY","source","textureUniforms","uTextureMatrix","meshPipe","mesh","warn","uSampler","style","textureMatrix","mapCoord","localUniformsBindGroup","encoder","_geometry","GlBatchAdaptor","constructor","_tempState","State","for2d","_didUploadHash","batcherPipe","runners","add","batchPipe","didUpload","uid","updateUniformGroup","uniformGroup","blendMode","BUFFER_TYPE","BUFFER_TYPE2","GlBuffer","buffer","_lastBindBaseLocation","_lastBindCallId","updateID","byteLength","GlBufferSystem","_gpuBuffers","Object","create","_boundBufferBases","_minBaseLocation","_nextBindBaseIndex","_bindCallId","_renderer","renderableGC","addManagedHash","_gl","gl","_maxBindings","maxUniformBindings","getGlBuffer","createGLBuffer","glBuffer","bindBuffer","bindBufferBase","index","UNIFORM_BUFFER","nextBindBase","hasTransformFeedback","freeLocationForBufferBase","freeIndex","getLastBindBaseLocation","loop","nextIndex","curBuf","bindBufferRange","offset","updateBuffer","_updateID","data","drawType","descriptor","usage","STATIC","STATIC_DRAW","DYNAMIC_DRAW","bufferSubData","_updateSize","BYTES_PER_ELEMENT","bufferData","destroyAll","id","deleteBuffer","onBufferDestroy","contextLost","ARRAY_BUFFER","INDEX","ELEMENT_ARRAY_BUFFER","UNIFORM","createBuffer","on","resetState","WebGLSystem","_GlContextSystem","supports","uint32Indices","uniformBufferObject","vertexArrayObject","srgbTextures","nonPowOf2wrapping","msaa","nonPowOf2mipmaps","extensions","handleContextLost","handleContextRestored","isLost","isContextLost","options","defaultOptions","multiView","canvas","get","createCanvas","width","height","view","initFromContext","alpha","background","premultipliedAlpha","antialias","backBuffer","useBackBuffer","createContext","preferWebGLVersion","stencil","preserveDrawingBuffer","powerPreference","ensureCanvasSize","targetCanvas","Math","max","webGLVersion","getWebGLRenderingContext","getExtensions","validateContext","emit","element","addEventListener","getContext","Error","common","anisotropicFiltering","getExtension","floatTextureLinear","s3tc","s3tc_sRGB","etc","etc1","pvrtc","atc","astc","bptc","rgtc","loseContext","drawBuffers","depthTexture","uint32ElementIndex","floatTexture","textureHalfFloat","textureHalfFloatLinear","vertexAttribDivisorANGLE","srgb","colorBufferFloat","provokeExt","provokingVertexWEBGL","FIRST_VERTEX_CONVENTION_WEBGL","event","preventDefault","_contextLossForced","setTimeout","restoreContext","removeEventListener","useProgram","forceContextLoss","attributes","getContextAttributes","isWebGl2","GlContextSystem","GL_FORMATS","GL_FORMATS2","GL_TARGETS","GL_TARGETS2","GL_TYPES","GL_TYPES2","infoMap","uint8x2","UNSIGNED_BYTE","uint8x4","sint8x2","BYTE","sint8x4","unorm8x2","unorm8x4","snorm8x2","snorm8x4","uint16x2","UNSIGNED_SHORT","uint16x4","sint16x2","SHORT","sint16x4","unorm16x2","unorm16x4","snorm16x2","snorm16x4","float16x2","HALF_FLOAT","float16x4","float32","FLOAT","float32x2","float32x3","float32x4","uint32","UNSIGNED_INT","uint32x2","uint32x3","uint32x4","sint32","INT","sint32x2","sint32x3","sint32x4","getGlTypeFromFormat","format","topologyToGlMap","GlGeometrySystem","_geometryVaoHash","_activeGeometry","_activeVao","hasVao","hasInstance","nativeVaoExtension","createVertexArray","createVertexArrayOES","bindVertexArray","vao","bindVertexArrayOES","deleteVertexArray","deleteVertexArrayOES","nativeInstancedExtension","drawArraysInstanced","a","b","c","d","drawArraysInstancedANGLE","drawElementsInstanced","e","drawElementsInstancedANGLE","vertexAttribDivisor","program","getVao","updateBuffers","unbind","bufferSystem","buffers","length","checkCompatibility","geometryAttributes","shaderAttributes","_attributeData","getSignature","attribs","strings","push","location","join","_key","initGeometryVao","_incRefCount","_getProgramData","signature","onGeometryDestroy","vaoObjectHash","ensureAttributes","activateVao","indexBuffer","lastBuffer","attribute","programAttrib","enableVertexAttribArray","attributeInfo","getAttributeInfoFromFormat","substring","vertexAttribIPointer","stride","vertexAttribPointer","normalised","instance","divisor","instanceCount","glTopology","byteSize","glType","drawElements","getSize","drawArrays","bigTriangleGeometry","Geometry","aPosition","_GlBackBufferSystem","_useBackBufferThisRender","_antialias","_state","bigTriangleProgram","GlProgram","vertex","fragment","_bigTriangleShader","WHITE","renderStart","renderTarget","getRenderTarget","target","isRoot","renderTarget2","_targetTexture","colorTexture","_getBackBufferTexture","renderEnd","_presentBackBuffer","finishRenderPass","_backBufferTexture","targetSourceTexture","TextureSource","resolution","_resolution","resize","priority","GlBackBufferSystem","GlColorMaskSystem","_colorMaskCache","setMask","colorMask","GlEncoderSystem","commandFinished","Promise","resolve","setGeometry","skipSync","_activeProgram","GlLimitsSystem","getParameter","MAX_TEXTURE_IMAGE_UNITS","checkMaxIfStatementsInShader","MAX_UNIFORM_BUFFER_BINDINGS","GlStencilSystem","_stencilCache","enabled","stencilReference","stencilMode","NONE","_renderTargetStencilState","onRenderTargetChange","_comparisonFuncMapping","always","ALWAYS","never","NEVER","equal","EQUAL","NOTEQUAL","less","LESS","LEQUAL","greater","GREATER","GEQUAL","_stencilOpsMapping","keep","KEEP","zero","ZERO","replace","REPLACE","invert","INVERT","INCR","DECR","INCR_WRAP","DECR_WRAP","_activeRenderTarget","stencilState","DISABLED","setStencilMode","mode","GpuStencilModesToPixi","enable","STENCIL_TEST","stencilFunc","stencilBack","compare","stencilOp","passOp","disable","WGSL_TO_STD40_SIZE","f32","i32","createUboElementsSTD40","uniformData","uboElements","map","uboElement","boundary","curOffset","ceil","generateArraySyncSTD40","offsetToAdd","rowSize","elementSize","remainder","indexOf","createUboSyncFunctionSTD40","createUboSyncFunction","uboSyncFunctions","GlUboSystem","UboSystem","super","createUboElements","generateUboSync","GlRenderTarget","msaaRenderBuffer","GlRenderTargetAdaptor","_clearColorCache","_viewPortCache","Rectangle","renderTargetSystem","_renderTargetSystem","copyToTexture","sourceRenderSurfaceTexture","destinationTexture","originSrc","originDest","glRenderTarget","getGpuRenderTarget","bindFramebuffer","FRAMEBUFFER","resolveTargetFramebuffer","copyTexSubImage2D","TEXTURE_2D","x","y","startRenderPass","clear","clearColor","viewport","gpuRenderTarget","viewPortY","pixelHeight","colorTextures","forEach","framebuffer","viewPortCache","depthStencilRenderBuffer","depth","_initStencil","READ_FRAMEBUFFER","blitFramebuffer","COLOR_BUFFER_BIT","NEAREST","initGpuRenderTarget","CanvasSource","resource","_initColor","destroyGpuRenderTarget","deleteFramebuffer","deleteRenderbuffer","renderBuffer","_renderTarget","ALL","COLOR","defaultClearColor","clearColorCache","clearColorArray","resizeGpuRenderTarget","_resizeColor","_resizeStencil","createFramebuffer","pixelWidth","bindSource","glTexture","getGlSource","framebufferTexture2D","COLOR_ATTACHMENT0","viewFramebuffer","_","createRenderbuffer","source2","glInternalFormat","internalFormat","bindRenderbuffer","RENDERBUFFER","renderbufferStorageMultisample","framebufferRenderbuffer","DEPTH_STENCIL_ATTACHMENT","DEPTH24_STENCIL8","renderbufferStorage","DEPTH_STENCIL","prerender","test","postrender","contextCanvas","canvasSource","context2D","drawImage","GlRenderTargetSystem","RenderTargetSystem","adaptor","GlProgramData","uniformGroups","uniformDirtyGroups","uniformBlockBindings","compileShader","src","createShader","shaderSource","booleanArray","array","Array","defaultValue","Int32Array","Uint32Array","GL_TABLE","GL_TO_GLSL_TYPES","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","INT_VEC2","INT_VEC3","INT_VEC4","UNSIGNED_INT_VEC2","UNSIGNED_INT_VEC3","UNSIGNED_INT_VEC4","BOOL","BOOL_VEC2","BOOL_VEC3","BOOL_VEC4","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","SAMPLER_2D","INT_SAMPLER_2D","UNSIGNED_INT_SAMPLER_2D","SAMPLER_CUBE","INT_SAMPLER_CUBE","UNSIGNED_INT_SAMPLER_CUBE","SAMPLER_2D_ARRAY","INT_SAMPLER_2D_ARRAY","UNSIGNED_INT_SAMPLER_2D_ARRAY","GLSL_TO_VERTEX_TYPES","float","vec2","vec3","vec4","int","ivec2","ivec3","ivec4","uint","uvec2","uvec3","uvec4","bool","bvec2","bvec3","bvec4","mapType","typeNames","keys","tn","mapGlToVertexFormat","typeValue","logPrettyShaderError","shaderSrc","getShaderSource","split","line","shaderLog","getShaderInfoLog","splitShader","dedupe","lineNumbers","parseFloat","filter","n","logArgs","number","fragmentSourceToLog","console","error","groupCollapsed","groupEnd","defaultSyncData","textureCount","blockIndex","GlShaderSystem","_programDataHash","_shaderSyncFunctions","_setProgram","syncFunction","_generateShaderSync","transformFeedbackVaryings","bindUniformBlock","programData","isBufferResource","_bufferResource","ubo","boundLocation","uniformBlockIndex","_uniformBlockData","uniformBlockBinding","_createProgramData","key","glVertShader","VERTEX_SHADER","glFragShader","FRAGMENT_SHADER","webGLProgram","createProgram","attachShader","names","bufferMode","SEPARATE_ATTRIBS","INTERLEAVED_ATTRIBS","linkProgram","getProgramParameter","LINK_STATUS","vertexShader","fragmentShader","getShaderParameter","COMPILE_STATUS","getProgramInfoLog","logProgramError","sortAttributes","totalAttributes","ACTIVE_ATTRIBUTES","attribData","getActiveAttrib","startsWith","sort","bindAttribLocation","getAttribLocation","extractAttributesFromGlProgram","_uniformData","totalUniforms","ACTIVE_UNIFORMS","getActiveUniform","isArray","match","getUniformData","ACTIVE_UNIFORM_BLOCKS","uniformBlocks","totalUniformsBlocks","getActiveUniformBlockName","getUniformBlockIndex","getActiveUniformBlockParameter","UNIFORM_BLOCK_DATA_SIZE","getUboData","deleteShader","getUniformLocation","generateProgram","shaderSystem","funcFragments","headerFragments","addedTextreSystem","group","resName","_uniformBindMap","Number","BufferResource","uniformName","uniform1i","functionSource","Function","generateShaderSyncCode","UNIFORM_TO_SINGLE_SETTERS","u32","UNIFORM_TO_ARRAY_SETTERS","GlUniformGroupSystem","_cache","_uniformGroupSyncHash","syncData","isStatic","_dirtyId","_getUniformSyncFunction","syncFunc","_signature","_createUniformSyncFunction","uniformGroupSyncHash","_getSignature","_generateUniformsSync","uniform","uniformStructures","parsed","uniformParsers","parser","template","generateUniformsSync","preFix","_GlStateSystem","_invertFrontFace","stateId","polygonOffset","_blendEq","setBlend","setOffset","setCullFace","setDepthTest","setFrontFace","setDepthMask","checks","defaultState","_cullFace","_frontFace","_frontFaceDirty","blendModesMap","blendMap","normal","ONE","ONE_MINUS_SRC_ALPHA","multiply","DST_COLOR","screen","ONE_MINUS_SRC_COLOR","none","SRC_ALPHA","erase","ext","min","MIN_EXT","MAX_EXT","MIN","MAX","mapWebGLBlendModesToPixi","diff","call","forceState","_updateCheck","_checkBlendMode","BLEND","_checkPolygonOffset","POLYGON_OFFSET_FILL","DEPTH_TEST","depthMask","CULL_FACE","faceMode","_glFrontFace","frontFace","setBlendMode","blendFunc","blendFuncSeparate","blendEquationSeparate","FUNC_ADD","setPolygonOffset","scale","CCW","pixelStorei","UNPACK_FLIP_Y_WEBGL","func","splice","system","GlStateSystem","GlTexture","RGBA","samplerType","glUploadBufferImageResource","upload","texSubImage2D","texImage2D","compressedFormatMap","glUploadCompressedTextureResource","UNPACK_ALIGNMENT","mipWidth","mipHeight","compressed","levelBuffer","compressedTexImage2D","glUploadImageResource","glWidth","glHeight","textureWidth","textureHeight","resourceWidth","resourceHeight","glUploadVideoResource","isValid","scaleModeToGlFilter","linear","nearest","mipmapScaleModeToGlFilter","wrapModeToGlAddress","repeat","compareModeToGlCompare","applyStyleParams","mipmaps","anisotropicExt","glFunctionName","firstParam","forceClamp","firstCreation","castParam","addressModeU","addressModeV","addressModeW","wrapModeS","wrapModeT","wrapModeR","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","magFilter","TEXTURE_MAG_FILTER","mipmapFilter","glFilterMode","minFilter","TEXTURE_MIN_FILTER","maxAnisotropy","level","MAX_TEXTURE_MAX_ANISOTROPY_EXT","TEXTURE_MAX_ANISOTROPY_EXT","TEXTURE_COMPARE_FUNC","GlTextureSystem","managedTextures","_glTextures","_glSamplers","_boundTextures","_activeTextureLocation","_boundSamplers","_uploads","image","video","_premultiplyAlpha","_useSeparateSamplers","_mapFormatToInternalFormat","bgra8unorm","SRGB8_ALPHA8_EXT","SRGB8_ALPHA8","RGBA8","r8unorm","R8","r8snorm","R8_SNORM","r8uint","R8UI","r8sint","R8I","r16uint","R16UI","r16sint","R16I","r16float","R16F","rg8unorm","RG8","rg8snorm","RG8_SNORM","rg8uint","RG8UI","rg8sint","RG8I","r32uint","R32UI","r32sint","R32I","r32float","R32F","rg16uint","RG16UI","rg16sint","RG16I","rg16float","RG16F","rgba8unorm","rgba8snorm","RGBA8_SNORM","rgba8uint","RGBA8UI","rgba8sint","RGBA8I","rgb9e5ufloat","RGB9_E5","rgb10a2unorm","RGB10_A2","rg11b10ufloat","R11F_G11F_B10F","rg32uint","RG32UI","rg32sint","RG32I","rg32float","RG32F","rgba16uint","RGBA16UI","rgba16sint","RGBA16I","rgba16float","RGBA16F","rgba32uint","RGBA32UI","rgba32sint","RGBA32I","rgba32float","RGBA32F","stencil8","STENCIL_INDEX8","depth16unorm","DEPTH_COMPONENT16","depth24plus","DEPTH_COMPONENT24","depth32float","DEPTH_COMPONENT32F","DEPTH32F_STENCIL8","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RED_RGTC1_EXT","COMPRESSED_SIGNED_RED_RGTC1_EXT","COMPRESSED_RED_GREEN_RGTC2_EXT","COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT","COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT","COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2","COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_R11_EAC","COMPRESSED_SIGNED_RG11_EAC","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","mapFormatToGlInternalFormat","_mapFormatToType","UNSIGNED_INT_5_9_9_9_REV","UNSIGNED_INT_2_10_10_10_REV","UNSIGNED_INT_10F_11F_11F_REV","UNSIGNED_INT_24_8","FLOAT_32_UNSIGNED_INT_24_8_REV","mapFormatToGlType","_mapFormatToFormat","RED","RG","RGB","DEPTH_COMPONENT","mapFormatToGlFormat","initSource","_bindSampler","_touched","textureGC","_activateLocation","bindTexture","bindSampler","sampler","_getGlSampler","boundTextures","activeTexture","TEXTURE0","_initSource","createTexture","autoGenerateMipmaps","isPowerOfTwo","biggestDimension","mipLevelCount","floor","log2","includes","onSourceUpdate","onStyleChange","onSourceDestroy","onSourceUnload","onUpdateMipmaps","updateStyle","deleteTexture","alphaMode","UNPACK_PREMULTIPLY_ALPHA_WEBGL","uploadMethodId","generateMipmap","off","_initSampler","glSampler","createSampler","_resourceId","generateCanvas","pixels","getPixels","ctx","imageData","createImageData","putImageData","frame","round","Uint8Array","glRenterTarget","readPixels","Uint8ClampedArray","slice","fill","DefaultWebGLSystems","SharedSystems","DefaultWebGLPipes","DefaultWebGLAdapters","systems","renderPipes","renderPipeAdaptors","handleByNamedList","WebGLPipes","WebGLRenderer","AbstractRenderer","WEBGL"],"sourceRoot":""}