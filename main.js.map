{"version":3,"file":"main.js","mappings":"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C;QAAAlpC,QAAA,CAAA/J,CAAA;QAAA,OACpBizC,MAAM,CAACrhC,KAAK,CAAC,CAAC;MAAA;QAEpB;QACMshC,IAAI,GAAG,IAAI/D,IAAI,CAAC/G,GAAG,EAAES,OAAO,CAAC;QACnCT,GAAG,CAACqE,KAAK,CAACziC,WAAW,CAACipC,MAAM,CAAC;QAC7B7K,GAAG,CAACqE,KAAK,CAAChpB,QAAQ,CAACyvB,IAAI,CAAC;;QAExB;QACA9K,GAAG,CAACqE,KAAK,CAACzqB,EAAE,CAAC,aAAa,EAAE,UAAAyxB,KAAK,EAAI;UACnC;QAAA,CACD,CAAC;MAAA;QAAA,OAAA1pC,QAAA,CAAA9I,CAAA;IAAA;EAAA,GAAA6I,OAAA;AAAA,CACH,GAAE,CAAC,C;;;;;;;;;;;;;;AC1CJ;AAC8J;AACjB;AAC7I,8BAA8B,sIAA2B,CAAC,+IAAqC;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,iFAAiF,YAAY,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,OAAO,UAAU,YAAY,WAAW,UAAU,YAAY,aAAa,aAAa,OAAO,KAAK,UAAU,YAAY,WAAW,YAAY,aAAa,aAAa,OAAO,MAAM,YAAY,aAAa,aAAa,aAAa,WAAW,YAAY,aAAa,WAAW,YAAY,MAAM,MAAM,YAAY,MAAM,KAAK,YAAY,MAAM,KAAK,UAAU,UAAU,UAAU,YAAY,WAAW,UAAU,UAAU,YAAY,WAAW,UAAU,YAAY,OAAO,KAAK,UAAU,YAAY,aAAa,WAAW,MAAM,KAAK,UAAU,MAAM,KAAK,YAAY,WAAW,UAAU,UAAU,UAAU,YAAY,aAAa,OAAO,KAAK,YAAY,WAAW,MAAM,KAAK,YAAY,W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","sources":["webpack://rts-game/./app/styles.css?5553","webpack://rts-game/./app/constants/index.js","webpack://rts-game/./app/lib/graphics.js","webpack://rts-game/./app/lib/accounting.js","webpack://rts-game/./app/lib/maths.js","webpack://rts-game/./app/lib/grid.js","webpack://rts-game/./app/lib/extra.js","webpack://rts-game/./app/lib/index.js","webpack://rts-game/./app/classes/resource.js","webpack://rts-game/./app/classes/projectile.js","webpack://rts-game/./app/classes/building.js","webpack://rts-game/./app/classes/unit.js","webpack://rts-game/./app/classes/players/player.js","webpack://rts-game/./app/classes/players/ai.js","webpack://rts-game/./app/classes/animal.js","webpack://rts-game/./app/classes/players/gaia.js","webpack://rts-game/./app/classes/players/human.js","webpack://rts-game/./app/classes/players/index.js","webpack://rts-game/./app/classes/cell.js","webpack://rts-game/./app/classes/map.js","webpack://rts-game/./app/classes/menu.js","webpack://rts-game/./app/classes/controls.js","webpack://rts-game/./app/screens/Game.js","webpack://rts-game/./app/screens/Loader.js","webpack://rts-game/./app/entry.js","webpack://rts-game/./app/styles.css"],"sourcesContent":["\n      import API from \"!../node_modules/.pnpm/style-loader@4.0.0_webpack@5.101.3/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/.pnpm/style-loader@4.0.0_webpack@5.101.3/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/.pnpm/style-loader@4.0.0_webpack@5.101.3/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/.pnpm/style-loader@4.0.0_webpack@5.101.3/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/.pnpm/style-loader@4.0.0_webpack@5.101.3/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/.pnpm/style-loader@4.0.0_webpack@5.101.3/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/.pnpm/css-loader@7.1.2_webpack@5.101.3/node_modules/css-loader/dist/cjs.js!./styles.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/.pnpm/css-loader@7.1.2_webpack@5.101.3/node_modules/css-loader/dist/cjs.js!./styles.css\";\n       export default content && content.locals ? content.locals : undefined;\n","export const CELL_WIDTH = 64\nexport const CELL_HEIGHT = 32\nexport const CELL_DEPTH = 16\n\nexport const ACCELERATOR = 1.5\nexport const STEP_TIME = 20\n\nexport const IS_MOBILE = window.innerWidth <= 800 && window.innerHeight <= 600\nexport const LONG_CLICK_DURATION = 200\n\nexport const PLAYER_TYPES = {\n  human: 'Human',\n  ai: 'AI',\n}\n\nexport const FAMILY_TYPES = {\n  animal: 'animal',\n  building: 'building',\n  cell: 'cell',\n  projectile: 'projectile',\n  resource: 'resource',\n  unit: 'unit',\n  player: 'player',\n}\n\nexport const WORK_TYPES = {\n  fisher: 'fisher',\n  hunter: 'hunter',\n  farmer: 'farmer',\n  forager: 'forager',\n  woodcutter: 'woodcutter',\n  stoneminer: 'stoneminer',\n  goldminer: 'goldminer',\n  builder: 'builder',\n  attacker: 'attacker',\n  healer: 'healer',\n}\n\nexport const ACTION_TYPES = {\n  delivery: 'delivery',\n  takemeat: 'takemeat',\n  hunt: 'hunt',\n  attack: 'attack',\n  fishing: 'fishing',\n  build: 'build',\n  farm: 'farm',\n  forageberry: 'forageberry',\n  minegold: 'minegold',\n  minestone: 'minestone',\n  chopwood: 'chopwood',\n}\n\nexport const LOADING_TYPES = {\n  meat: 'meat',\n  wheat: 'wheat',\n  berry: 'berry',\n  fish: 'fish',\n  stone: 'stone',\n  gold: 'gold',\n  wood: 'wood',\n}\n\nexport const WORK_FOOD_TYPES = [WORK_TYPES.fisher, WORK_TYPES.hunter, WORK_TYPES.farmer, WORK_TYPES.forager]\nexport const LOADING_FOOD_TYPES = [LOADING_TYPES.meat, LOADING_TYPES.wheat, LOADING_TYPES.berry, LOADING_TYPES.fish]\n\nexport const COLOR_WHITE = 0xffffff\nexport const COLOR_BLACK = 0x000000\nexport const COLOR_GREY = 0x808080\nexport const COLOR_RED = 0xff0000\nexport const COLOR_ORANGE = 0xffa500\nexport const COLOR_YELLOW = 0xffff00\nexport const COLOR_GREEN = 0x008000\nexport const COLOR_BLUE = 0x0000ff\nexport const COLOR_INDIGO = 0x4b0082\nexport const COLOR_VIOLET = 0xee82ee\nexport const COLOR_BONE = 0xe2dac2\nexport const COLOR_SHIP_GREY = 0x3c3b3d\nexport const COLOR_FOG = 0x999999\nexport const COLOR_FLASHY_GREEN = 0x00ff00\nexport const COLOR_ARROW = 0xe8e3df\n\nexport const TYPE_ACTION = {\n  Stone: ACTION_TYPES.minestone,\n  Gold: ACTION_TYPES.minegold,\n  Berrybush: ACTION_TYPES.forageberry,\n  Tree: ACTION_TYPES.chopwood,\n  Fish: ACTION_TYPES.fishing,\n}\n\nexport const CORPSE_TIME = 120\nexport const RUBBLE_TIME = 120\nexport const MAX_SELECT_UNITS = 10\nexport const POPULATION_MAX = 200\n","import { Graphics } from 'pixi.js'\nimport { Texture } from 'pixi.js'\nimport { COLOR_FLASHY_GREEN } from '../constants'\nimport { MultiColorReplaceFilter } from 'pixi-filters'\n\nexport function getIconPath(name) {\n  const id = name.split('_')[1]\n  const index = name.split('_')[0]\n  return `assets/interface/${id}/${index}_${id}.png`\n}\n\nexport function getBuildingTextureNameWithSize(size) {\n  switch (size) {\n    case 1:\n      return '000_256'\n    case 2:\n      return '000_258'\n    case 3:\n      return '000_261'\n  }\n}\n\nexport function getBuildingRubbleTextureNameWithSize(size) {\n  switch (size) {\n    case 1:\n      return '000_153'\n    case 2:\n      return '000_154'\n    case 3:\n      return '000_155'\n  }\n}\n\nexport function getBuildingAsset(type, owner, assets) {\n  const path = assets.cache.get(owner.civ.toLowerCase()).buildings\n  if (path[owner.age][type]) {\n    return path[owner.age][type]\n  } else if (path[owner.age - 1][type]) {\n    return path[owner.age - 1][type]\n  } else if (path[owner.age - 2][type]) {\n    return path[owner.age - 2][type]\n  } else if (path[0][type]) {\n    return path[0][type]\n  }\n}\n\n/**\n * Retrieve a texture from the assets cache based on its name.\n *\n * @param {string} name - The name of the texture, formatted as 'index_id'.\n * @param {object} assets - The assets object containing the cache of textures.\n * @returns {object} - The requested texture from the spritesheet.\n * @throws {Error} - If the texture cannot be found in the spritesheet.\n */\nexport function getTexture(name, assets) {\n  const [index, id] = name.split('_')\n  const spritesheet = assets.cache.get(id)\n\n  if (!spritesheet || !spritesheet.textures) {\n    throw new Error(`Spritesheet for ID \"${id}\" not found in assets.`)\n  }\n\n  const textureName = `${index}_${id}.png`\n  const texture = spritesheet.textures[textureName]\n\n  if (!texture) {\n    throw new Error(`Texture \"${textureName}\" not found in spritesheet.`)\n  }\n\n  // Set the hit area for the texture\n  texture.hitArea = spritesheet.data.frames[textureName].hitArea\n\n  return texture\n}\n\nexport const colors = ['blue', 'red', 'yellow', 'brown', 'orange', 'green', 'grey', 'cyan']\n\n/**\n * Get the hex color code for a given color name.\n * @param {string} name - The name of the color.\n * @returns {string} The hex color code, or '#ffffff' if the color is not found.\n */\nexport function getHexColor(name) {\n  const colorMap = {\n    blue: '#3f5f9f',\n    red: '#e30b00',\n    yellow: '#c3a31b',\n    brown: '#8b5b37',\n    orange: '#ef6307',\n    green: '#4b6b2b',\n    grey: '#8f8f8f',\n    cyan: '#00837b',\n  }\n  return colorMap[name] || '#ffffff' // Default to white if not found\n}\n\n/**\n * Change the color of a sprite directly by manipulating its texture.\n * @param {object} sprite - The sprite to change the color of.\n * @param {string} color - The new color to apply to the sprite.\n */\nexport function changeSpriteColorDirectly(sprite, color) {\n  if (color === 'blue') {\n    return // Skip processing if color is blue\n  }\n\n  const sourceColors = [0x93bbd7, 0x739bc7, 0x577bb3, 0x3f5f9f, 0x273f8f, 0x17277b, 0x070f67, 0x000057]\n\n  const colors = {\n    red: [0xff8f8f, 0xff5f5f, 0xff2f2f, 0xe30b00, 0xc71700, 0x8f1f00, 0x6f0b07, 0x530b00],\n    yellow: [0xe3e300, 0xdfcf0f, 0xdfcf0f, 0xc3a31b, 0xa37317, 0x876727, 0x6b4b27, 0x4f3723],\n    brown: [0xcfa343, 0xb78b2b, 0xa3734f, 0x8b5b37, 0x734727, 0x5f331b, 0x3f3723, 0x23231f],\n    orange: [0xfb9f1f, 0xf78b17, 0xf3770f, 0xef6307, 0xcf4300, 0x9f3300, 0x872b00, 0x6f2300],\n    green: [0x8b9f4f, 0x7f8b37, 0x637b2f, 0x4b6b2b, 0x375f27, 0x1b431b, 0x133313, 0x0b1b0b],\n    grey: [0xdbdbdb, 0xc7c7c7, 0xb3b3b3, 0x8f8f8f, 0x6b6b6b, 0x474747, 0x373737, 0x232323],\n    cyan: [0x5fd39f, 0x2bbf93, 0x00ab93, 0x00837b, 0x006f6b, 0x004f4f, 0x003f43, 0x002327],\n  }\n\n  const targetColors = colors[color]\n\n  if (!targetColors) {\n    throw new Error('Invalid color selected.') // Throw error for invalid color\n  }\n\n  const baseTexture = sprite.texture.baseTexture.resource\n\n  const canvas = document.createElement('canvas')\n  canvas.width = sprite.texture.width\n  canvas.height = sprite.texture.height\n\n  const ctx = canvas.getContext('2d')\n  ctx.drawImage(\n    baseTexture,\n    sprite.texture.frame.x,\n    sprite.texture.frame.y,\n    sprite.texture.frame.width,\n    sprite.texture.frame.height,\n    0,\n    0,\n    sprite.texture.frame.width,\n    sprite.texture.frame.height\n  )\n\n  const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height)\n  const data = imageData.data\n\n  const sourceColorMap = new Map(sourceColors.map((color, index) => [color, targetColors[index]]))\n\n  for (let i = 0; i < data.length; i += 4) {\n    const r = data[i]\n    const g = data[i + 1]\n    const b = data[i + 2]\n    const rgb = (r << 16) | (g << 8) | b\n\n    if (sourceColorMap.has(rgb)) {\n      const targetColor = sourceColorMap.get(rgb)\n      data[i] = (targetColor >> 16) & 0xff // Red\n      data[i + 1] = (targetColor >> 8) & 0xff // Green\n      data[i + 2] = targetColor & 0xff // Blue\n    }\n  }\n\n  ctx.putImageData(imageData, 0, 0)\n\n  const newTexture = Texture.from(canvas)\n  sprite.texture = newTexture\n}\n\n/**\n * Change the color of a sprite based on the specified color.\n *\n * @param {object} sprite - The sprite object whose color will be changed.\n * @param {string} color - The target color. Supported colors: 'red', 'yellow', 'brown', 'orange', 'green', 'grey', 'cyan'.\n * @returns {void}\n */\nexport function changeSpriteColor(sprite, color) {\n  // Skip color change if the specified color is blue\n  if (color === 'blue') {\n    return\n  }\n\n  // Source colors (Hex)\n  const source = [0x93bbd7, 0x739bc7, 0x577bb3, 0x3f5f9f, 0x273f8f, 0x17277b, 0x070f67, 0x000057]\n\n  // Define color mappings\n  const colors = {\n    red: [0xff8f8f, 0xff5f5f, 0xff2f2f, 0xe30b00, 0xc71700, 0x8f1f00, 0x6f0b07, 0x530b00],\n    yellow: [0xe3e300, 0xdfcf0f, 0xdfcf0f, 0xc3a31b, 0xa37317, 0x876727, 0x6b4b27, 0x4f3723],\n    brown: [0xcfa343, 0xb78b2b, 0xa3734f, 0x8b5b37, 0x734727, 0x5f331b, 0x3f3723, 0x23231f],\n    orange: [0xfb9f1f, 0xf78b17, 0xf3770f, 0xef6307, 0xcf4300, 0x9f3300, 0x872b00, 0x6f2300],\n    green: [0x8b9f4f, 0x7f8b37, 0x637b2f, 0x4b6b2b, 0x375f27, 0x1b431b, 0x133313, 0x0b1b0b],\n    grey: [0xdbdbdb, 0xc7c7c7, 0xb3b3b3, 0x8f8f8f, 0x6b6b6b, 0x474747, 0x373737, 0x232323],\n    cyan: [0x5fd39f, 0x2bbf93, 0x00ab93, 0x00837b, 0x006f6b, 0x004f4f, 0x003f43, 0x002327],\n  }\n\n  // Check if the color is supported\n  if (!colors[color]) {\n    return\n  }\n\n  // Create final color mapping\n  const replacements = []\n  for (let i = 0; i < source.length; i++) {\n    replacements.push([source[i], colors[color][i]])\n  }\n\n  const filter = new MultiColorReplaceFilter({ replacements, tolerance: 0.1 })\n\n  sprite.filters = [filter]\n}\n\n/**\n * Draws a blinking selection around the given instance.\n * @param {object} instance - The instance to draw the selection around.\n */\nexport function drawInstanceBlinkingSelection(instance) {\n  const selection = new Graphics()\n  selection.label = 'selection'\n  selection.zIndex = 3\n\n  // Define the path for the selection\n  const path = [-32 * instance.size, 0, 0, -16 * instance.size, 32 * instance.size, 0, 0, 16 * instance.size]\n  selection.poly(path)\n  selection.stroke(COLOR_FLASHY_GREEN)\n  instance.addChildAt(selection, 0)\n\n  // Helper function for blinking effect\n  const blink = (alpha, duration) => {\n    return new Promise(resolve => {\n      selection.alpha = alpha\n      setTimeout(resolve, duration)\n    })\n  }\n\n  const blinkSequence = async () => {\n    await blink(1, 500) // Show\n    await blink(0, 300) // Hide\n    await blink(1, 300) // Show\n    await blink(0, 300) // Hide\n    await blink(1, 300) // Show\n    instance.removeChild(selection) // Clean up\n  }\n\n  blinkSequence()\n}\n/**\n * Draw a filled rectangle on the canvas.\n * @param {CanvasRenderingContext2D} context\n * @param {number} x - The x-coordinate of the rectangle's top-left corner.\n * @param {number} y - The y-coordinate of the rectangle's top-left corner.\n * @param {number} width - The width of the rectangle.\n * @param {number} height - The height of the rectangle.\n * @param {string} color - The fill color for the rectangle.\n */\nexport function canvasDrawRectangle(context, x, y, width, height, color) {\n  context.fillStyle = color\n  context.fillRect(x, y, width, height)\n}\n\n/**\n * Draw a stroked rectangle on the canvas.\n * @param {CanvasRenderingContext2D} context\n * @param {number} x - The x-coordinate of the rectangle's top-left corner.\n * @param {number} y - The y-coordinate of the rectangle's top-left corner.\n * @param {number} width - The width of the rectangle.\n * @param {number} height - The height of the rectangle.\n * @param {string} color - The stroke color for the rectangle.\n */\nexport function canvasDrawStrokeRectangle(context, x, y, width, height, color) {\n  context.strokeStyle = color\n  context.strokeRect(x, y, width, height)\n}\n\n/**\n * Draw a diamond shape on the canvas.\n * @param {CanvasRenderingContext2D} context\n * @param {number} x - The x-coordinate of the diamond's center.\n * @param {number} y - The y-coordinate of the diamond's center.\n * @param {number} width - The width of the diamond.\n * @param {number} height - The height of the diamond.\n * @param {string} color - The fill color for the diamond.\n */\nexport function canvasDrawDiamond(context, x, y, width, height, color) {\n  context.save()\n  context.beginPath()\n  context.moveTo(x, y)\n  context.lineTo(x - width / 2, y + height / 2)\n  context.lineTo(x, y + height)\n  context.lineTo(x + width / 2, y + height / 2)\n  context.closePath()\n\n  context.fillStyle = color\n  context.fill()\n  context.restore() // Restore the context state\n}\n\n/**\n * Execute a callback when a sprite reaches a specific frame.\n * @param {object} sprite - The sprite to monitor.\n * @param {number} frame - The target frame to trigger the callback.\n * @param {function} cb - The callback to execute.\n */\nexport function onSpriteLoopAtFrame(sprite, frame, cb) {\n  sprite.onFrameChange = currentFrame => {\n    if (currentFrame === frame) {\n      cb()\n    }\n  }\n}\n","/**\n * Refunds costs to the player's resources.\n * @param {object} player - The player object containing resources.\n * @param {object} cost - An object representing the costs to refund.\n */\nexport function refundCost(player, cost) {\n  if (!player || typeof player !== 'object' || !cost || typeof cost !== 'object') {\n    console.error('Invalid arguments provided to refundCost.')\n    return\n  }\n\n  Object.keys(cost).forEach(prop => {\n    if (typeof cost[prop] === 'number') {\n      player[prop] += cost[prop]\n    } else {\n      console.warn(`Cost for ${prop} is not a number:`, cost[prop])\n    }\n  })\n}\n\n/**\n * Deducts costs from the player's resources.\n * @param {object} player - The player object containing resources.\n * @param {object} cost - An object representing the costs to pay.\n */\nexport function payCost(player, cost) {\n  if (!player || typeof player !== 'object' || !cost || typeof cost !== 'object') {\n    console.error('Invalid arguments provided to payCost.')\n    return\n  }\n\n  Object.keys(cost).forEach(prop => {\n    if (typeof cost[prop] === 'number') {\n      player[prop] -= cost[prop]\n    } else {\n      console.warn(`Cost for ${prop} is not a number:`, cost[prop])\n    }\n  })\n}\n\n/**\n * Checks if the player can afford the given costs.\n * @param {object} player - The player object containing resources.\n * @param {object} cost - An object representing the costs to check.\n * @returns {boolean} - True if the player can afford the costs, false otherwise.\n */\nexport function canAfford(player, cost) {\n  // Validate inputs\n  if (!player || typeof player !== 'object' || !cost || typeof cost !== 'object') {\n    console.error('Invalid arguments provided to canAfford.')\n    return false\n  }\n\n  // Iterate over the cost object\n  for (const prop in cost) {\n    // Check if the cost for the property is a number\n    if (typeof cost[prop] === 'number') {\n      // Early return if player cannot afford the cost\n      if (player[prop] < cost[prop]) {\n        return false\n      }\n    }\n  }\n\n  // If all costs are affordable, return true\n  return true\n}\n","import { CELL_WIDTH, CELL_HEIGHT, CELL_DEPTH } from '../constants'\n\n/**\n * Generate a version 4 UUID.\n * @returns {string} - A random UUID.\n */\nexport function uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const randomValue = crypto.getRandomValues(new Uint8Array(1))[0] & 15 // Get a random value\n    const hexValue = (c === 'x' ? randomValue : (randomValue & 0x3) | 0x8).toString(16) // Adjust for 'y'\n    return hexValue\n  })\n}\n\n/**\n * Format a number with three character\n * @param {number} nbr\n */\nexport function formatNumber(nbr) {\n  return ('00' + nbr).slice(-3)\n}\n\n/**\n * Convert cartesian to isometric\n * @param {number} x\n * @param {number} y\n */\nexport function cartesianToIsometric(x, y) {\n  return [Math.floor(((x - y) * CELL_WIDTH) / 2), Math.floor(((x + y) * CELL_HEIGHT) / 2)]\n}\n\n/**\n * Convert isometric position to cartesian\n * @param {number} x\n * @param {number} y\n */\nexport function isometricToCartesian(x, y) {\n  return [\n    Math.round((x / (CELL_WIDTH / 2) + y / (CELL_HEIGHT / 2)) / 2),\n    Math.round((y / (CELL_HEIGHT / 2) - x / (CELL_WIDTH / 2)) / 2),\n  ]\n}\n\n/**\n * Get percentage with two numbers\n * @param {number} a\n * @param {number} b\n */\nexport function getPercentage(a, b) {\n  return Math.floor((a / b) * 100)\n}\n\n/**\n * Get value of percentage\n * @param {number} a\n * @param {number} b\n */\nexport function getValuePercentage(val, perc) {\n  return Math.floor((perc * val) / 100)\n}\n\n/**\n * Get average between two numbers\n * @param {number} a\n * @param {number} b\n */\nexport function average(a, b) {\n  return (a + b) / 2\n}\n\n/**\n * Check if point is between two points can be used with line thickness\n * @param {object} line1\n * @param {object} line2\n * @param {object} pnt\n * @param {number} lineThickness\n */\n/**\n * Check if a point is within a certain distance from a line segment\n * @param {{x:number, y:number}} line1 - Start point of the line\n * @param {{x:number, y:number}} line2 - End point of the line\n * @param {{x:number, y:number}} pnt - Point to check\n * @param {number} lineThickness - Maximum allowed distance from the line\n * @returns {boolean}\n */\nexport function pointIsBetweenTwoPoint(line1, line2, pnt, lineThickness) {\n  const dx = line2.x - line1.x\n  const dy = line2.y - line1.y\n  const L2 = dx * dx + dy * dy\n  if (L2 === 0) {\n    // line1 == line2\n    const dist = Math.hypot(line1.x - pnt.x, line1.y - pnt.y)\n    return dist <= lineThickness\n  }\n\n  // Projection parameter\n  const r = ((pnt.x - line1.x) * dx + (pnt.y - line1.y) * dy) / L2\n\n  if (r < 0) {\n    return Math.hypot(line1.x - pnt.x, line1.y - pnt.y) <= lineThickness\n  } else if (r > 1) {\n    return Math.hypot(line2.x - pnt.x, line2.y - pnt.y) <= lineThickness\n  } else {\n    // Perpendicular distance from point to line\n    const s = ((line1.y - pnt.y) * dx - (line1.x - pnt.x) * dy) / L2\n    return Math.abs(s) * Math.sqrt(L2) <= lineThickness\n  }\n}\n\n/**\n * Get a random number between two numbers\n * @param {number} min\n * @param {number} max\n */\nexport function randomRange(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min)\n}\n\n/**\n * Get a random item from a array\n * @param {array} array\n */\nexport function randomItem(array = []) {\n  return array[Math.round(Math.random() * (array.length - 1))]\n}\n\n/**\n * Get distance between two instances, can use iso (x, y) or cartesian (i, j)\n * @param {object} a\n * @param {object} b\n * @param {boolean} useCartesian\n */\nexport function instancesDistance(a, b, useCartesian = true) {\n  return useCartesian ? pointsDistance(a.i, a.j, b.i, b.j) : pointsDistance(a.x, a.y, b.x, b.y)\n}\n\n/**\n * Get the instance zIndex according to his position\n * @param {object} instance\n */\nexport function getInstanceZIndex(instance) {\n  const pos = isometricToCartesian(instance.x, instance.y + instance.z * CELL_DEPTH)\n  return pos[0] + pos[1]\n}\n\n/**\n * Get the difference between two number\n * @param {number} a\n * @param {number} b\n */\nexport function diff(a, b) {\n  return Math.abs(a - b)\n}\n\n/**\n * Get degree of instance according to a point\n * @param {object} instance\n * @param {number} x\n * @param {number} y\n */\nexport function getInstanceDegree(instance, x, y) {\n  return getPointsDegree(instance.x, instance.y, x, y)\n}\n\n/**\n * Get the degree from one point to another.\n * @param {number} x1 - The x-coordinate of the first point.\n * @param {number} y1 - The y-coordinate of the first point.\n * @param {number} x2 - The x-coordinate of the second point.\n * @param {number} y2 - The y-coordinate of the second point.\n * @returns {number} - The angle in degrees from the first point to the second.\n */\nexport function getPointsDegree(x1, y1, x2, y2) {\n  const tX = x2 - x1\n  const tY = y2 - y1\n  return Math.round((Math.atan2(tY, tX) * 180) / Math.PI + 180)\n}\n\n/**\n * Convert degrees to radians.\n * @param {number} degrees - The angle in degrees.\n * @returns {number} - The angle in radians.\n */\nexport function degreesToRadians(degrees) {\n  return degrees * (Math.PI / 180)\n}\n\n/**\n * Get distance between two points\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n */\nexport function pointsDistance(x1, y1, x2, y2) {\n  let a = x1 - x2\n  let b = y1 - y2\n  return Math.floor(Math.sqrt(a * a + b * b))\n}\n\n/**\n * Check if point is in a rectangle or not\n * @param {number} x\n * @param {number} y\n * @param {number} left\n * @param {number} top\n * @param {number} width\n * @param {number} height\n */\nexport function pointInRectangle(x, y, left, top, width, height, allDirection = false) {\n  return allDirection\n    ? (x > left && x < left + width && y > top && y < top + height) ||\n        (x < left && x > left + width && y < top && y > top + height) ||\n        (x > left && x < left + width && y < top && y > top + height) ||\n        (x < left && x > left + width && y > top && y < top + height)\n    : x > left && x < left + width && y > top && y < top + height\n}\n\n/**\n * Check if two instance are on diagonal axes\n * @param {object} instance\n * @param {object} instance\n */\nexport function cellIsDiag(src, target) {\n  return Math.abs(target.i - src.i) === Math.abs(target.j - src.j)\n}\n\nexport function degreeToDirection(degree) {\n  if (degree > 67.5 && degree < 112.5) {\n    return 'north'\n  } else if (degree > 247.5 && degree < 292.5) {\n    return 'south'\n  } else if (degree > 337.5 || degree < 22.5) {\n    return 'west'\n  } else if (degree >= 22.5 && degree <= 67.5) {\n    return 'northwest'\n  } else if (degree >= 292.5 && degree <= 337.5) {\n    return 'southwest'\n  } else if (degree > 157.5 && degree < 202.5) {\n    return 'est'\n  } else if (degree > 112.5 && degree < 157.5) {\n    return 'northest'\n  } else if (degree > 202.5 && degree < 247.5) {\n    return 'southest'\n  }\n}\n","import { ACCELERATOR, FAMILY_TYPES } from '../constants'\nimport * as exports from './maths'\nObject.entries(exports).forEach(([name, exported]) => (window[name] = exported))\n\n/**\n * Check if two instances are in contact.\n *\n * @param {object} a - The first instance. Should have properties like `x`, `y`, and `size`.\n * @param {object} b - The second instance. Should have properties like `x`, `y`, `size`, and `isDestroyed`.\n * @returns {boolean} - True if instance `a` is in contact with instance `b`, false otherwise.\n */\nexport function instanceContactInstance(a, b) {\n  // Check if the distance between instances is less than or equal to (b.size - 1) and b is not destroyed\n  return Math.floor(instancesDistance(a, b)) <= (b.size - 1 || 1) && !b.isDestroyed\n}\n\n/**\n * Move an instance towards a specific point (x, y) at a given speed.\n *\n * @param {object} instance - The instance to move. Should have properties like `x`, `y`, and `degree`.\n * @param {number} x - The target x-coordinate to move towards.\n * @param {number} y - The target y-coordinate to move towards.\n * @param {number} speed - The speed at which the instance should move.\n */\nexport function moveTowardPoint(instance, x, y, speed) {\n  const dist = pointsDistance(x, y, instance.x, instance.y)\n\n  if (dist === 0) return // Prevent division by zero\n\n  // Calculate the direction vector from the instance to the target point\n  const tX = x - instance.x\n  const tY = y - instance.y\n\n  // Calculate the velocity based on the speed and distance\n  const velX = (tX / dist) * (speed * ACCELERATOR)\n  const velY = (tY / dist) * (speed * ACCELERATOR)\n\n  // Update the instance's degree (rotation) to face the target point\n  instance.degree = getInstanceDegree(instance, x, y)\n\n  // Update the instance's position by adding the velocity components\n  instance.x += velX\n  instance.y += velY\n}\n\n/**\n * Get the first free cell coordinate around a point\n * @param {number} x - The x-coordinate of the starting point\n * @param {number} y - The y-coordinate of the starting point\n * @param {number} size - The starting search radius\n * @param {object} grid - The grid to search in\n * @param {function} condition - A function to test if a cell is free\n * @returns {object|null} - The coordinates of the first free cell or null if none found\n */\nexport function getFreeCellAroundPoint(x, y, size, grid, condition) {\n  const maxDistance = 50\n\n  for (let distance = size; distance < maxDistance; distance++) {\n    const cells = getCellsAroundPoint(x, y, grid, distance, condition)\n    if (cells.length > 0) {\n      return randomItem(cells)\n    }\n  }\n\n  return null\n}\n\n/**\n * Get the closest available path for an instance to a destination\n * @param {object} instance - The instance seeking a path\n * @param {object} target - The target object to reach\n * @param {object} map - The map containing grid information\n * @returns {Array} - The shortest path to a free cell or an empty array if none found\n */\nexport function getInstanceClosestFreeCellPath(instance, target, map) {\n  const size = target.size || (target.has && target.has.size) || 1\n  const paths = []\n\n  // Get cells around the target based on size\n  const distance = size === 3 ? 2 : 1\n  getCellsAroundPoint(target.i, target.j, map.grid, distance, cell => {\n    const path = getInstancePath(instance, cell.i, cell.j, map)\n    if (path.length) {\n      paths.push(path)\n    }\n  })\n\n  // Return the shortest path if available\n  return paths.length\n    ? paths.reduce((shortest, current) => (current.length < shortest.length ? current : shortest))\n    : []\n}\n\n/**\n * Get the shortest path for a instance to a destination\n * @param {object} instance\n * @param {number} x\n * @param {number} y\n * @param {object} map\n */\nexport function getInstancePath(instance, x, y, map) {\n  const maxZone = 10\n  const end = map.grid[x][y]\n  const start = map.grid[instance.i][instance.j]\n  let minX = Math.max(Math.min(start.i, end.i) - maxZone, 0)\n  let maxX = Math.min(Math.max(start.i, end.i) + maxZone, map.size)\n  let minY = Math.max(Math.min(start.j, end.j) - maxZone, 0)\n  let maxY = Math.min(Math.max(start.j, end.j) + maxZone, map.size)\n\n  function isCellReachable(cell) {\n    if (cell.solid) {\n      return false\n    }\n    const allowWaterCellCategory = instance.category === 'Boat'\n    return allowWaterCellCategory ? cell.category === 'Water' : cell.category !== 'Water'\n  }\n\n  let cloneGrid = []\n  for (var i = minX; i <= maxX; i++) {\n    for (var j = minY; j <= maxY; j++) {\n      if (cloneGrid[i] == null) {\n        cloneGrid[i] = []\n      }\n      cloneGrid[i][j] = {\n        i,\n        j,\n        x: map.grid[i][j].x,\n        y: map.grid[i][j].y,\n        z: map.grid[i][j].z,\n        solid: map.grid[i][j].solid,\n        category: map.grid[i][j].category,\n      }\n    }\n  }\n  let isFinish = false\n  let path = []\n  let openCells = []\n  let closedCells = []\n  const cloneEnd = cloneGrid[end.i][end.j]\n  const cloneStart = cloneGrid[start.i][start.j]\n  openCells.push(cloneStart)\n  while (!isFinish) {\n    if (openCells.length > 0) {\n      // find the lowest f in open cells\n      let lowestF = 0\n      for (let i = 0; i < openCells.length; i++) {\n        if (openCells[i].f < openCells[lowestF].f) {\n          lowestF = i\n        }\n\n        if (openCells[i].f == openCells[lowestF].f) {\n          if (openCells[i].g > openCells[lowestF].g) {\n            lowestF = i\n          }\n        }\n      }\n      let current = openCells[lowestF]\n      if (current === cloneEnd) {\n        // reached the end cell\n        isFinish = true\n      }\n      // calculate path\n      path = [cloneEnd]\n      let temp = current\n\n      while (temp.previous) {\n        path.push(temp.previous)\n        temp = temp.previous\n      }\n      openCells.splice(openCells.indexOf(current), 1)\n      closedCells.push(current)\n      // check neighbours\n      getCellsAroundPoint(current.i, current.j, cloneGrid, 1, neighbour => {\n        const validDiag =\n          !cellIsDiag(current, neighbour) ||\n          (isCellReachable(cloneGrid[current.i][neighbour.j]) && isCellReachable(cloneGrid[neighbour.i][current.j]))\n        if (!closedCells.includes(neighbour) && isCellReachable(neighbour) && validDiag) {\n          let tempG = current.g + instancesDistance(neighbour, current)\n          if (!openCells.includes(neighbour)) {\n            openCells.push(neighbour)\n            neighbour.g = tempG\n            neighbour.h = instancesDistance(neighbour, cloneEnd)\n            neighbour.f = neighbour.g + neighbour.h\n            neighbour.previous = current\n          }\n        }\n      })\n    } else {\n      // no solution\n      path = []\n      isFinish = true\n    }\n  }\n  path.pop()\n  return [...path]\n}\n\n/**\n * Find a sized zone in the grid that meets a condition.\n *\n * This function searches within a given zone in the grid for a region of the specified `size`,\n * and checks whether all cells within that region meet a specified condition.\n *\n * @param {object} zone - An object containing the boundaries of the search area (minX, maxX, minY, maxY).\n * @param {object[][]} grid - A 2D grid representing the map.\n * @param {number} size - The size of the area to check around each grid point.\n * @param {function} condition - A callback function that evaluates whether a cell is valid.\n * @returns {object|null} The coordinates {i, j} of the first valid zone found, or null if none are found.\n */\nexport function getZoneInGridWithCondition(zone, grid, size, condition) {\n  // Iterate over the specified zone in the grid\n  for (let i = zone.minX; i <= zone.maxX; i++) {\n    if (!grid[i]) continue // Skip if out of bounds\n\n    for (let j = zone.minY; j <= zone.maxY; j++) {\n      const cell = grid[i]?.[j]\n      if (!cell) continue // Skip if cell doesn't exist\n\n      // Assume the area around (i, j) is free initially\n      let isFree = true\n\n      // Check the surrounding cells of size `size` to ensure they all meet the condition\n      const surroundingCells = getPlainCellsAroundPoint(i, j, grid, size)\n      for (const surroundingCell of surroundingCells) {\n        if (!condition(surroundingCell)) {\n          isFree = false\n          break // Exit early if a cell does not meet the condition\n        }\n      }\n\n      // Return the first valid {i, j} coordinates if the area is free\n      if (isFree) {\n        return { i, j }\n      }\n    }\n  }\n\n  // Return null if no valid zone is found\n  return null\n}\n\n/**\n * Finds all instances within the sight range of a given instance that meet a specific condition.\n *\n * @param {object} instance - The instance whose sight is being processed. Should have properties like `i`, `j`, `sight`, and `parent.grid`.\n * @param {function} condition - A callback function that receives an instance and returns `true` if the instance matches the desired condition.\n * @returns {Array} - List of instances that are within the sight range and match the condition.\n */\nexport function findInstancesInSight(instance, condition) {\n  const {\n    i: instX,\n    j: instY,\n    sight,\n    parent: { grid },\n  } = instance\n  let instances = []\n\n  for (let x = Math.max(instX - sight, 0); x <= Math.min(instX + sight, grid.length - 1); x++) {\n    for (let y = Math.max(instY - sight, 0); y <= Math.min(instY + sight, grid[x].length - 1); y++) {\n      // Check if the cell is within the instance's sight range\n      if (pointsDistance(instX, instY, x, y) <= sight) {\n        const cell = grid[x][y]\n\n        // Ensure the cell has an instance and the condition is met\n        if (cell?.has && typeof condition === 'function' && condition(cell.has)) {\n          instances.push(cell.has)\n        }\n      }\n    }\n  }\n\n  return instances\n}\n\n/**\n * Updates the cells within a instance's line of sight.\n * Handles fog, viewBy, and visibility efficiently by diffing old vs new cells.\n *\n * @param {object} instance - The instance instance with properties i, j, sight, owner, parent, context.\n */\nexport function updateInstanceVisibility(instance) {\n  const { i: cx, j: cy, sight, owner } = instance\n  const map = instance.context.map\n  const sightSq = sight * sight\n  const newVisible = new Set()\n\n  // Collect all cells within sight\n  if (!instance.isDead) {\n    getPlainCellsAroundPoint(cx, cy, owner.views, sight, cell => {\n      const dx = cell.i - cx\n      const dy = cell.j - cy\n      if (dx * dx + dy * dy <= sightSq) {\n        newVisible.add(cell)\n      }\n    })\n  }\n\n  const prevVisible = instance.visibleCells || new Set()\n\n  // Hide cells that left sight\n  for (let cell of prevVisible) {\n    if (!newVisible.has(cell)) {\n      const idx = cell.viewBy.indexOf(instance)\n      if (idx !== -1) {\n        cell.viewBy.splice(idx, 1)\n      }\n\n      if (!cell.viewBy.length && owner.isPlayed && !map.revealEverything) {\n        map.grid[cell.i][cell.j].setFog()\n      }\n\n      if (cell.has) {\n        cell.has.visible = false\n      }\n    }\n  }\n\n  // Show new cells\n  for (let cell of newVisible) {\n    if (!prevVisible.has(cell)) {\n      cell.visible = true\n      if (!cell.viewBy.includes(instance)) {\n        cell.viewBy.push(instance)\n      }\n\n      if (!cell.viewed) {\n        owner.cellViewed++\n        cell.onViewed?.()\n        cell.viewed = true\n      }\n\n      if (owner.isPlayed && !map.revealEverything) {\n        map.grid[cell.i][cell.j].removeFog()\n      }\n\n      // Optional: detect other instances in sight\n      const globalCell = map.grid[cell.i][cell.j]\n      if (globalCell.has && globalCell.has.sight && typeof globalCell.has.detect === 'function') {\n        const distSq = (cx - globalCell.has.i) ** 2 + (cy - globalCell.has.j) ** 2\n        if (distSq <= globalCell.has.sight ** 2) {\n          globalCell.has.detect(instance)\n        }\n      }\n    }\n  }\n\n  instance.visibleCells = newVisible\n}\n\n/**\n * Updates AI knowledge of trees, berrybushes, and enemy buildings when an AI instance views a global cell.\n *\n * @param {object} globalCell - The cell in the global grid.\n * @param {object} cell - The current local cell being processed.\n * @param {object} instance - The AI instance viewing the cell.\n */\nfunction updateAIKnowledge(globalCell, cell, instance) {\n  const { owner } = instance\n\n  // Sync local cell's \"has\" object with the global cell if different\n  if (globalCell.has && (!cell.has || cell.has.label !== globalCell.has.label)) {\n    cell.has = globalCell.has\n\n    // Detect tree resources and update AI's knowledge\n    if (globalCell.has.type === 'Tree' && globalCell.has.quantity > 0 && !owner.foundedTrees.includes(globalCell.has)) {\n      owner.foundedTrees.push(globalCell.has)\n    }\n\n    // Detect berrybush resources and update AI's knowledge\n    if (\n      globalCell.has.type === 'Berrybush' &&\n      globalCell.has.quantity > 0 &&\n      !owner.foundedBerrybushs.includes(globalCell.has)\n    ) {\n      owner.foundedBerrybushs.push(globalCell.has)\n    }\n\n    // Detect enemy buildings and update AI's knowledge\n    if (\n      globalCell.has.family === FAMILY_TYPES.building &&\n      globalCell.has.hitPoints > 0 &&\n      globalCell.has.owner.label !== owner.label &&\n      !owner.foundedEnemyBuildings.includes(globalCell.has)\n    ) {\n      owner.foundedEnemyBuildings.push(globalCell.has)\n    }\n  }\n}\n\n/**\n * Randomly finds a valid position in the grid within a specified zone and size, considering certain conditions.\n *\n * This function attempts to find a valid cell in the grid around the specified zone by randomly generating coordinates\n * and checking if they meet specific conditions, such as avoiding inclined, solid, or border cells.\n *\n * @param {object} zone - The area of the grid to search within (must have properties `minX`, `minY`, `maxX`, `maxY`).\n * @param {object[][]} grid - The grid representing the map, where each cell contains coordinates and attributes.\n * @param {number} size - The size of the instance for which we are finding space.\n * @param {function} condition - A function that returns true if the cell meets the conditions, false otherwise.\n * @param {number} attempts - The number of random attempts to find a valid cell.\n * @returns {object|null} The position {i, j} of a valid cell or null if no valid cell is found.\n */\nexport function getRandomZoneInGridWithCondition(zone, grid, size, condition, attempts = 100) {\n  for (let attempt = 0; attempt < attempts; attempt++) {\n    // Generate random coordinates within the zone\n    const randomX = Math.floor(Math.random() * (zone.maxX - zone.minX + 1)) + zone.minX\n    const randomY = Math.floor(Math.random() * (zone.maxY - zone.minY + 1)) + zone.minY\n\n    const cell = grid[randomX]?.[randomY]\n    if (!cell) continue // Skip if cell doesn't exist\n\n    // Assume the area around (randomX, randomY) is free initially\n    let isFree = true\n\n    // Check the surrounding cells of size `size` to ensure they all meet the condition\n    const surroundingCells = getPlainCellsAroundPoint(randomX, randomY, grid, size)\n    for (const surroundingCell of surroundingCells) {\n      if (!condition(surroundingCell)) {\n        isFree = false\n        break // Exit early if a cell does not meet the condition\n      }\n    }\n\n    // If the area is free, return the valid cell\n    if (isFree) {\n      return { i: randomX, j: randomY }\n    }\n  }\n\n  // Return null if no valid cells found after all attempts\n  return null\n}\n\n/**\n * Find a valid position in the grid around an instance within a specified space range.\n *\n * This function searches for a position around a given instance within the grid, considering a range of space,\n * the size of the object, and additional conditions like avoiding inclined, solid, or border cells. It can\n * use either a random zone search or a fixed zone search depending on the `random` parameter.\n *\n * @param {object} instance - The instance around which to search (must have properties `i`, `j`, and `parent` grid).\n * @param {object[][]} grid - The grid representing the map, where each cell contains coordinates and attributes.\n * @param {number[]} space - An array [minSpace, maxSpace] that defines the distance range to search within.\n * @param {number} size - The size of the instance for which we are finding space.\n * @param {boolean} [allowInclined=false] - Whether to allow inclined cells in the search.\n * @param {function} [extraCondition] - An optional callback for extra conditions that a valid cell must meet.\n * @param {boolean} [random=true] - If `true`, uses `getRandomZoneInGridWithCondition`; otherwise, uses `getZoneInGridWithCondition`.\n * @returns {object|null} The position {i, j} of a valid cell or null if no valid cell is found.\n */\nexport function getPositionInGridAroundInstance(\n  instance,\n  grid,\n  space,\n  size,\n  allowInclined = false,\n  extraCondition,\n  random = true\n) {\n  const [minSpace, maxSpace] = space\n\n  // Define the search zone based on instance's position and maxSpace\n  const zone = {\n    minX: Math.max(instance.i - maxSpace, 0),\n    minY: Math.max(instance.j - maxSpace, 0),\n    maxX: Math.min(instance.i + maxSpace, instance.parent.size - 1),\n    maxY: Math.min(instance.j + maxSpace, instance.parent.size - 1),\n  }\n\n  // Condition to check if the cell is valid based on space, solid, inclined, etc.\n  const cellCondition = cell => {\n    const distance = instancesDistance(instance, cell, true)\n    return (\n      distance >= minSpace && // Ensure it's at least the minimum distance away\n      distance <= maxSpace && // Ensure it's within the maximum distance\n      !cell.solid && // Ensure the cell is not solid\n      !cell.border && // Ensure the cell is not at the border\n      (allowInclined || !cell.inclined) && // Check inclined condition\n      (!extraCondition || extraCondition(cell)) // Apply any additional conditions\n    )\n  }\n\n  // Use either the random zone search or fixed zone search based on the 'random' flag\n  let pos\n  if (random) {\n    pos = getRandomZoneInGridWithCondition(zone, grid, size, cellCondition)\n  } else {\n    pos = getZoneInGridWithCondition(zone, grid, size, cellCondition)\n  }\n\n  // Return the found position or null if none is found\n  return pos || null\n}\n\n/**\n * Instance is in a player sight\n * @param {object} instance\n * @param {object} player\n */\nexport function instanceIsInPlayerSight(instance, player) {\n  const dist = instance.size === 3 ? 1 : 0\n  let isInSight = false // Flag to track if the instance is in player sight\n\n  player?.views &&\n    getPlainCellsAroundPoint(instance.i, instance.j, player.views, dist, cell => {\n      if (cell.viewBy.length > 0) {\n        isInSight = true // Set the flag if the condition is met\n      }\n    })\n\n  return isInSight // Return the flag\n}\n\n/**\n * Get all the coordinates around a point within a maximum distance.\n *\n * @param {number} startX - The X coordinate of the center point.\n * @param {number} startY - The Y coordinate of the center point.\n * @param {number} dist - The maximum distance from the center point.\n * @param {object[][]} grid - 2D array representing the grid.\n * @param {function} [callback] - Optional callback function to filter cells. If provided, it should return true for valid cells.\n * @returns {object[]} - Array of valid cells around the point within the distance.\n */\nexport function getPlainCellsAroundPoint(startX, startY, grid, dist = 0, callback) {\n  const result = []\n\n  // Handle single-cell case\n  if (dist === 0) {\n    const row = grid[startX]\n    if (row) {\n      const cell = row[startY]\n      if (cell && (!callback || callback(cell))) result.push(cell)\n    }\n    return result\n  }\n\n  const minX = Math.max(startX - dist, 0)\n  const maxX = Math.min(startX + dist, grid.length - 1)\n\n  for (let i = minX; i <= maxX; i++) {\n    const row = grid[i]\n    if (!row) continue\n    const minY = Math.max(startY - dist, 0)\n    const maxY = Math.min(startY + dist, row.length - 1)\n\n    for (let j = minY; j <= maxY; j++) {\n      const cell = row[j]\n      if (cell && (!callback || callback(cell))) result.push(cell)\n    }\n  }\n\n  return result\n}\n\n/**\n * Get the coordinates around a point within a Manhattan distance\n * @param {number} startX\n * @param {number} startY\n * @param {Array} grid\n * @param {number} dist\n * @param {Function} callback\n * @returns {Array} Array of cells that match the criteria\n */\n/**\n * Get the coordinates around a point within a Manhattan distance (safe for irregular grids)\n * @param {number} startX\n * @param {number} startY\n * @param {Array} grid\n * @param {number} dist\n * @param {Function} callback\n * @returns {Array} Array of cells that match the criteria\n */\nexport function getCellsAroundPoint(startX, startY, grid, dist, callback) {\n  const result = []\n\n  // Special case: distance 0\n  const startCell = grid[startX]?.[startY]\n  if (dist === 0) {\n    if (startCell && (!callback || callback(startCell))) result.push(startCell)\n    return result\n  }\n\n  // Iterate over Manhattan distance\n  for (let dx = -dist; dx <= dist; dx++) {\n    const x = startX + dx\n    if (!grid[x]) continue // Skip if row does not exist\n\n    const dyMax = dist - Math.abs(dx)\n    for (let dy = -dyMax; dy <= dyMax; dy++) {\n      const y = startY + dy\n      const row = grid[x]\n      if (!row || !row[y]) continue // Skip if cell does not exist\n\n      const cell = row[y]\n      if (!callback || callback(cell)) result.push(cell)\n    }\n  }\n\n  return result\n}\n\n/**\n * Get the closest instance to a given instance.\n *\n * @param {object} instance - The reference instance. Should have properties like `x`, `y`.\n * @param {Array<object>} instances - The array of other instances to check. Each should have properties like `x`, `y`.\n * @returns {object|boolean} - The closest instance or false if no instances are found.\n */\nexport function getClosestInstance(instance, instances) {\n  let closestInstance = null\n  let closestDistance = Infinity\n\n  // Iterate through the instances to find the one with the minimum distance to the reference instance\n  for (const targetInstance of instances) {\n    const distance = instancesDistance(instance, targetInstance)\n\n    if (distance < closestDistance) {\n      closestDistance = distance\n      closestInstance = targetInstance\n    }\n  }\n\n  // Return the closest instance, or false if no valid instance was found\n  return closestInstance || false\n}\n\n/**\n * Get the closest instance with a valid path.\n *\n * This function calculates the closest instance that can be reached by a valid path\n * from the given `instance`. It checks all provided `instances` and computes the path\n * to each of them, then returns the instance with the shortest valid path.\n *\n * @param {object} instance - The current instance trying to reach other instances.\n * @param {Array<object>} instances - An array of target instances to find the closest reachable one.\n * @returns {object|null} The closest instance with its path or null if no valid path is found.\n */\nexport function getClosestInstanceWithPath(instance, instances) {\n  let closest = null\n\n  for (const target of instances) {\n    const path = getInstanceClosestFreeCellPath(instance, target, instance.parent)\n\n    // If a valid path exists, compare its length to the current closest\n    if (path.length && (!closest || path.length < closest.path.length)) {\n      closest = {\n        instance: target,\n        path,\n      }\n    }\n  }\n\n  return closest\n}\n","import { FAMILY_TYPES, WORK_TYPES } from '../constants'\nimport { instanceIsInPlayerSight } from './grid'\nimport { degreeToDirection, uuidv4 } from './maths'\n\nexport function setUnitTexture(sheet, instance, ACCELERATOR) {\n  const animationSpeed = {\n    standingSheet: 0.15,\n    corpseSheet: 0,\n  }\n  const { paused } = instance.context\n  if (paused) {\n    return\n  }\n  const sheetToReset = ['actionSheet', 'dyingSheet', 'corpseSheet']\n  // Sheet don't exist we just block the current sheet\n  if (!instance[sheet]) {\n    if (instance.currentSheet !== 'walkingSheet' && instance.walkingSheet) {\n      instance.sprite.textures = [instance.walkingSheet.textures[Object.keys(instance.walkingSheet.textures)[0]]]\n    } else {\n      instance.sprite.textures = [instance.sprite.textures[instance.sprite.currentFrame]]\n    }\n    instance.currentSheet = 'walkingSheet'\n    instance.sprite.stop()\n    instance.sprite.anchor.set(\n      instance.sprite.textures[instance.sprite.currentFrame].defaultAnchor.x,\n      instance.sprite.textures[instance.sprite.currentFrame].defaultAnchor.y\n    )\n    return\n  }\n  // Reset action loop\n  if (!sheetToReset.includes(sheet)) {\n    instance.sprite.onLoop = null\n    instance.sprite.onFrameChange = null\n  }\n  const goto = instance.currentSheet === sheet && instance.sprite.currentFrame\n  instance.currentSheet = sheet\n  const direction = degreeToDirection(instance.degree)\n  switch (direction) {\n    case 'southest':\n      instance.sprite.scale.x = -1\n      instance.sprite.textures = instance[sheet].animations['southwest']\n      break\n    case 'northest':\n      instance.sprite.scale.x = -1\n      instance.sprite.textures = instance[sheet].animations['northwest']\n      break\n    case 'est':\n      instance.sprite.scale.x = -1\n      instance.sprite.textures = instance[sheet].animations['west']\n      break\n    default:\n      instance.sprite.scale.x = 1\n      instance.sprite.textures = instance[sheet].animations[direction]\n  }\n  instance.sprite.animationSpeed = (instance[sheet].data.animationSpeed ?? animationSpeed[sheet] ?? 0.3) * ACCELERATOR\n  goto && goto < instance.sprite.textures.length ? instance.sprite.gotoAndPlay(goto) : instance.sprite.play()\n}\n\n/**\n * Filters an object by the specified keys.\n * @param {object} obj - The object to filter.\n * @param {Array<string>} keys - The keys to retain in the new object.\n * @returns {object} - The filtered object.\n */\nexport function filterObject(obj, keys) {\n  if (typeof obj !== 'object' || obj === null) {\n    throw new Error('Expected an object to filter.')\n  }\n  return keys.reduce((acc, key) => {\n    if (obj.hasOwnProperty(key)) {\n      acc[key] = obj[key]\n    }\n    return acc\n  }, {})\n}\n\n/**\n * Modal constructor for displaying content in a modal dialog.\n * @param {HTMLElement} content - The content to display inside the modal.\n */\nexport var Modal = function (content) {\n  if (!(content instanceof HTMLElement)) {\n    throw new Error('Content must be an HTML element.')\n  }\n\n  const id = uuidv4()\n\n  this.open = () => {\n    const modal = document.createElement('div')\n    modal.id = id\n    modal.className = 'modal'\n\n    const modalContent = document.createElement('div')\n    modalContent.className = 'modal-content'\n    modalContent.appendChild(content)\n\n    modal.appendChild(modalContent)\n    document.body.appendChild(modal)\n    return modal\n  }\n\n  this.close = () => {\n    const modal = document.getElementById(id)\n    if (modal) {\n      modal.remove()\n    }\n  }\n\n  this.open()\n}\n\n/**\n * Custom timeout implementation with pause and resume functionality.\n * @param {function} callback - The function to execute after the delay.\n * @param {number} delay - The delay in milliseconds.\n */\nexport var CustomTimeout = function (callback, delay) {\n  if (typeof callback !== 'function' || typeof delay !== 'number') {\n    throw new Error('Invalid arguments for CustomTimeout.')\n  }\n\n  let timerId,\n    start,\n    remaining = delay\n\n  this.pause = () => {\n    window.clearTimeout(timerId)\n    timerId = null\n    remaining -= Date.now() - start\n    return remaining\n  }\n\n  this.resume = () => {\n    if (timerId) {\n      return // Already running\n    }\n\n    start = Date.now()\n    timerId = window.setTimeout(callback, remaining)\n  }\n\n  this.reset = () => {\n    this.pause()\n    remaining = delay\n    this.resume()\n  }\n\n  this.resume() // Start the timer immediately\n}\n\n/**\n * Throttles a function to ensure it only executes once within a specified time frame.\n * @param {Function} callback - The function to throttle.\n * @param {number} wait - The time frame in milliseconds to throttle calls.\n * @param {boolean} [immediate=false] - If true, trigger the function on the leading edge instead of the trailing.\n * @returns {Function} - The throttled function.\n */\nexport function throttle(callback, wait, immediate = false) {\n  if (typeof callback !== 'function' || typeof wait !== 'number') {\n    throw new Error('Invalid arguments: callback must be a function and wait must be a number.')\n  }\n\n  let timeout = null\n  let initialCall = true\n\n  return function (...args) {\n    const callNow = immediate && initialCall\n\n    const next = () => {\n      callback.apply(this, args)\n      timeout = null\n    }\n\n    if (callNow) {\n      initialCall = false\n      next()\n    }\n\n    if (!timeout) {\n      timeout = setTimeout(next, wait)\n    }\n  }\n}\n\n/**\n * Debounces a function to ensure it only executes after a specified delay.\n * @param {Function} callback - The function to debounce.\n * @param {number} wait - The delay in milliseconds before the function can be called again.\n * @returns {Function} - The debounced function.\n */\nexport const debounce = (callback, wait) => {\n  if (typeof callback !== 'function' || typeof wait !== 'number') {\n    throw new Error('Invalid arguments: callback must be a function and wait must be a number.')\n  }\n\n  let timeoutId = null\n  return function (...args) {\n    window.clearTimeout(timeoutId)\n    timeoutId = window.setTimeout(() => {\n      callback.apply(this, args)\n    }, wait)\n  }\n}\n\n/**\n * Maps loading types to their corresponding work roles.\n * @param {string} loadingType - The type of resource being loaded.\n * @returns {string} - The corresponding work role for the loading type.\n */\nexport function getWorkWithLoadingType(loadingType) {\n  const workMapping = {\n    wheat: WORK_TYPES.farmer,\n    wood: WORK_TYPES.woodcutter,\n    berry: WORK_TYPES.forager,\n    stone: WORK_TYPES.stoneminer,\n    gold: WORK_TYPES.goldminer,\n    meat: WORK_TYPES.hunter,\n    fish: WORK_TYPES.fisher,\n  }\n\n  return workMapping[loadingType] || 'default' // Fallback to 'default' if loadingType is not found\n}\n\n/**\n * Capitalizes the first letter of a string.\n * @param {string} string - The input string to capitalize.\n * @returns {string} - The string with the first letter capitalized.\n */\nexport function capitalizeFirstLetter(string) {\n  if (typeof string !== 'string') {\n    throw new TypeError('Expected a string')\n  }\n\n  return string.length > 0 ? string.charAt(0).toUpperCase() + string.slice(1) : ''\n}\n\n/**\n * Calculates the damage dealt by a source to a target.\n * @param {object} source - The attacking unit with attack attributes.\n * @param {object} target - The defending unit with armor attributes.\n * @returns {number} The calculated damage, at least 1.\n */\nexport function getDamage(source, target) {\n  const meleeAttack = source.meleeAttack || 0\n  const pierceAttack = source.pierceAttack || 0\n  const meleeArmor = target.meleeArmor || 0\n  const pierceArmor = target.pierceArmor || 0\n\n  // Calculate damage considering armor\n  return Math.max(1, Math.max(0, meleeAttack - meleeArmor) + Math.max(0, pierceAttack - pierceArmor))\n}\n\n/**\n * Calculates the remaining hit points of a target after taking damage.\n * @param {object} source - The attacking unit (for damage calculation).\n * @param {object} target - The defending unit with hit points.\n * @param {number} [defaultDamage] - An optional damage value.\n * @returns {number} The remaining hit points of the target, at least 0.\n */\nexport function getHitPointsWithDamage(source, target, defaultDamage) {\n  const damage = defaultDamage || getDamage(source, target)\n  return Math.max(0, target.hitPoints - damage)\n}\n\n/**\n * Updates a nested property in an object based on the specified operation.\n * @param {Object} target - The object to be updated.\n * @param {Object} operation - An object describing the update operation.\n * @param {string} operation.key - The key representing the path to the property.\n * @param {string} operation.op - The operation to perform ('*' or '+').\n * @param {number} operation.value - The value to use in the operation.\n */\nexport const updateObject = (target, operation) => {\n  if (typeof target !== 'object' || target === null) {\n    throw new Error('Target must be a non-null object.')\n  }\n\n  if (!operation || !operation.key || !operation.op || typeof operation.value !== 'number') {\n    throw new Error('Invalid operation: key, op, and value are required.')\n  }\n\n  function setToValue(obj, value, path) {\n    const keys = path.split('.')\n    for (let i = 0; i < keys.length - 1; i++) {\n      if (!obj[keys[i]]) {\n        throw new Error(`Path not found: ${keys.slice(0, i + 1).join('.')}`)\n      }\n      obj = obj[keys[i]]\n    }\n    obj[keys[keys.length - 1]] = value\n  }\n\n  const keys = operation.key.split('.')\n  let result = target\n\n  // Navigate to the specified path\n  for (const key of keys) {\n    if (result[key] === undefined) {\n      throw new Error(`Key not found: ${operation.key}`)\n    }\n    result = result[key]\n  }\n\n  switch (operation.op) {\n    case '*':\n      setToValue(target, result * Number(operation.value), operation.key)\n      break\n    case '+':\n      setToValue(target, result + Number(operation.value), operation.key)\n      break\n    default:\n      throw new Error(`Invalid operation: ${operation.op}`)\n  }\n}\n\nexport const canUpdateMinimap = (instance, player) => {\n  return instance.owner.isPlayed || (player.label !== instance.owner.label && instanceIsInPlayerSight(instance, player))\n}\n\n/**\n * Checks if a given condition is valid based on specified values.\n * @param {Object} condition - The condition object containing operation, key, and value.\n * @param {Object} values - The values to evaluate against.\n * @returns {boolean} - True if the condition is valid, false otherwise.\n */\nexport const isValidCondition = (condition, values) => {\n  if (!condition) {\n    return true // No condition means it's always valid\n  }\n\n  const { op, key, value } = condition\n  const expectedValue = values[key]\n\n  if (expectedValue === undefined) {\n    throw new Error(`Key not found in values: ${key}`)\n  }\n\n  switch (op) {\n    case '=':\n    case '!=': {\n      const result = Array.isArray(value) ? arraysEqual(value, expectedValue) : value === expectedValue\n\n      return op === '!=' ? !result : result\n    }\n    case '<':\n      return expectedValue < value\n    case '<=':\n      return expectedValue <= value\n    case '>=':\n      return expectedValue >= value\n    case '>':\n      return expectedValue > value\n    case 'includes':\n      return expectedValue.includes(value)\n    case 'notincludes':\n      return !expectedValue.includes(value)\n    default:\n      throw new Error(`Invalid condition operation provided: ${op}`)\n  }\n}\n\n/**\n * Compares two arrays for equality, disregarding order.\n * @param {Array} a - The first array.\n * @param {Array} b - The second array.\n * @returns {boolean} - True if arrays are equal, false otherwise.\n */\nconst arraysEqual = (a, b) => {\n  if (!Array.isArray(a) || !Array.isArray(b)) return false\n  if (a.length !== b.length) return false\n\n  const sortedA = a.slice().sort()\n  const sortedB = b.slice().sort()\n\n  return sortedA.every((val, index) => val === sortedB[index])\n}\n\nexport const getActionCondition = (source, target, action, props) => {\n  if (!action) {\n    return false\n  }\n  const conditions = {\n    delivery: props =>\n      source.loading > 0 &&\n      target.hitPoints > 0 &&\n      target.isBuilt &&\n      (!props || props.buildingTypes.includes(target.type)),\n    takemeat: () =>\n      source.type === 'Villager' &&\n      target.family === FAMILY_TYPES.animal &&\n      target.quantity > 0 &&\n      target.isDead &&\n      !target.isDestroyed,\n    fishing: () =>\n      target.category === 'Fish' &&\n      target.allowAction.includes(source.type) &&\n      target.quantity > 0 &&\n      !target.isDestroyed,\n    hunt: () =>\n      source.type === 'Villager' &&\n      target.family === FAMILY_TYPES.animal &&\n      target.quantity > 0 &&\n      target.hitPoints > 0 &&\n      !target.isDead,\n    chopwood: () => source.type === 'Villager' && target.type === 'Tree' && target.quantity > 0 && !target.isDead,\n    farm: () =>\n      source.type === 'Villager' &&\n      target.type === 'Farm' &&\n      target.hitPoints > 0 &&\n      target.owner?.label === source.owner.label &&\n      target.quantity > 0 &&\n      (!target.isUsedBy || target.isUsedBy === source) &&\n      !target.isDead,\n    forageberry: () =>\n      source.type === 'Villager' && target.type === 'Berrybush' && target.quantity > 0 && !target.isDead,\n    minestone: () => source.type === 'Villager' && target.type === 'Stone' && target.quantity > 0 && !target.isDead,\n    minegold: () => source.type === 'Villager' && target.type === 'Gold' && target.quantity > 0 && !target.isDead,\n    build: () =>\n      source.type === 'Villager' &&\n      target.owner?.label === source.owner.label &&\n      target.family === FAMILY_TYPES.building &&\n      target.hitPoints > 0 &&\n      (!target.isBuilt || target.hitPoints < target.totalHitPoints) &&\n      !target.isDead,\n    attack: () =>\n      target &&\n      target.owner?.label !== source.owner.label &&\n      [FAMILY_TYPES.building, FAMILY_TYPES.unit, FAMILY_TYPES.animal].includes(target.family) &&\n      target.hitPoints > 0 &&\n      !target.isDead,\n    heal: () =>\n      target &&\n      target.owner?.label === source.owner.label &&\n      target.family === FAMILY_TYPES.unit &&\n      target.hitPoints > 0 &&\n      target.hitPoints < target.totalHitPoints &&\n      !target.isDead,\n  }\n  return target && target !== source && source.hitPoints > 0 && !source.isDead && conditions[action](props)\n}\n","export * from './graphics'\nexport * from './accounting'\nexport * from './maths'\nexport * from './extra'\nexport * from './grid'\n","import { sound } from '@pixi/sound'\nimport { Container, Graphics, Sprite, Assets, Polygon, AnimatedSprite } from 'pixi.js'\nimport {\n  getInstanceZIndex,\n  instanceIsInPlayerSight,\n  getIconPath,\n  randomItem,\n  drawInstanceBlinkingSelection,\n  getActionCondition,\n  uuidv4,\n} from '../lib'\nimport { TYPE_ACTION, CELL_WIDTH, CELL_HEIGHT, COLOR_WHITE, FAMILY_TYPES, PLAYER_TYPES } from '../constants'\n\nexport class Resource extends Container {\n  constructor(options, context) {\n    super()\n\n    this.context = context\n\n    const {\n      context: { map },\n    } = this\n\n    this.label = uuidv4()\n    this.family = FAMILY_TYPES.resource\n\n    this.selected = false\n    this.isDead = false\n    this.isDestroyed = false\n    this.size = 1\n\n    Object.keys(options).forEach(prop => {\n      this[prop] = options[prop]\n    })\n    const config = Assets.cache.get('config')\n    Object.keys(config.resources[this.type]).forEach(prop => {\n      this[prop] = config.resources[this.type][prop]\n    })\n\n    this.quantity = this.quantity ?? this.totalQuantity\n    this.hitPoints = this.hitPoints ?? this.totalHitPoints\n    this.x = map.grid[this.i][this.j].x\n    this.y = map.grid[this.i][this.j].y\n    this.z = map.grid[this.i][this.j].z\n    this.zIndex = getInstanceZIndex(this)\n    this.visible = false\n\n    // Set solid zone\n    const cell = map.grid[this.i][this.j]\n    cell.solid = true\n    cell.has = this\n\n    this.eventMode = 'auto'\n    this.allowClick = false\n    this.allowMove = false\n\n    this.interface = {\n      info: element => {\n        const data = config.resources[this.type]\n        this.setDefaultInterface(element, data)\n      },\n    }\n    if (this.isAnimated) {\n      const spritesheetJump = Assets.cache.get(this.assets)\n      this.sprite = new AnimatedSprite(spritesheetJump.animations.jump)\n      this.sprite.play()\n      this.sprite.animationSpeed = 0.2\n    } else {\n      this.textureName =\n        this.textureName || randomItem(Array.isArray(this.assets) ? this.assets : this.assets[cell.type])\n      const resourceName = this.textureName.split('_')[1]\n      const textureFile = this.textureName + '.png'\n      const spritesheet = Assets.cache.get(resourceName)\n      const texture = spritesheet.textures[textureFile]\n      this.sprite = Sprite.from(texture)\n      this.sprite.hitArea =\n        spritesheet.data.frames[textureFile].hitArea && new Polygon(spritesheet.data.frames[textureFile].hitArea)\n    }\n\n    this.sprite.updateAnchor = true\n    this.sprite.label = 'sprite'\n    if (this.sprite) {\n      this.sprite.allowMove = false\n      this.sprite.eventMode = 'static'\n      this.sprite.roundPixels = true\n\n      this.sprite.on('pointertap', () => {\n        const {\n          context: { player, menu },\n        } = this\n        if (!player.selectedUnits.length && (instanceIsInPlayerSight(this, player) || map.revealEverything)) {\n          player.unselectAll()\n          this.select()\n          menu.setBottombar(this)\n          player.selectedOther = this\n        }\n      })\n      this.sprite.on('pointerup', evt => {\n        const {\n          context: { player, controls },\n        } = this\n        const action = TYPE_ACTION[this.category || this.type]\n        if (controls.mouseBuilding || controls.mouseRectangle || !controls.isMouseInApp(evt)) {\n          return\n        }\n        controls.mouse.prevent = true\n        // Send Villager to forage the berry\n        let hasVillager = false\n        let hasOther = false\n        for (let i = 0; i < player.selectedUnits.length; i++) {\n          const unit = player.selectedUnits[i]\n          if (getActionCondition(unit, this, action)) {\n            hasVillager = true\n            const sendToFunc = `sendTo${this.category || this.type}`\n            typeof unit[sendToFunc] === 'function' ? unit[sendToFunc](this) : unit.sendTo(this)\n          } else {\n            hasOther = true\n            unit.sendTo(this)\n          }\n        }\n        if (hasVillager) {\n          drawInstanceBlinkingSelection(this)\n        }\n        if (hasOther) {\n          const voice = randomItem(['5075', '5076', '5128', '5164'])\n          voice && sound.play(voice)\n        } else if (hasVillager) {\n          const voice = Assets.cache.get('config').units.Villager.sounds[action]\n          voice && sound.play(voice)\n        }\n      })\n\n      this.addChild(this.sprite)\n    }\n  }\n\n  select() {\n    if (this.selected) {\n      return\n    }\n    this.selected = true\n    const selection = new Graphics()\n    selection.label = 'selection'\n    selection.zIndex = 3\n    const path = [-32 * this.size, 0, 0, -16 * this.size, 32 * this.size, 0, 0, 16 * this.size]\n    selection.poly(path)\n    selection.stroke(COLOR_WHITE)\n    this.addChildAt(selection, 0)\n  }\n\n  unselect() {\n    if (!this.selected) {\n      return\n    }\n    this.selected = false\n    const selection = this.getChildByLabel('selection')\n    if (selection) {\n      this.removeChild(selection)\n    }\n  }\n\n  die(immediate) {\n    if (this.isDead) {\n      return\n    }\n    const {\n      context: { player, players, map, menu },\n    } = this\n    if (this.selected && player.selectedOther === this) {\n      player.unselectAll()\n    }\n    const listName = 'founded' + this.type + 's'\n    for (let i = 0; i < players.length; i++) {\n      if (players[i].type === PLAYER_TYPES.ai) {\n        const list = players[i][listName]\n        if (list) {\n          const index = list.indexOf(this)\n          list.splice(index, 1)\n        }\n      }\n    }\n    // Remove from map resources\n    let index = map.resources.indexOf(this)\n    if (index >= 0) {\n      map.resources.splice(index, 1)\n    }\n    menu.updateResourcesMiniMap()\n    this.isDead = true\n    if (this.type === 'Tree' && !immediate) {\n      this.onTreeDie()\n    } else {\n      this.clear()\n    }\n  }\n\n  setCuttedTreeTexture() {\n    const { sprite } = this\n    const spritesheet = Assets.cache.get('636')\n    this.textureName = `00${randomRange(0, 3)}_636.png`\n    const texture = spritesheet.textures[this.textureName]\n    sprite.texture = texture\n    const points = [-CELL_WIDTH / 2, 0, 0, -CELL_HEIGHT / 2, CELL_WIDTH / 2, 0, 0, CELL_HEIGHT / 2]\n    sprite.hitArea = new Polygon(points)\n    sprite.anchor.set(texture.defaultAnchor.x, texture.defaultAnchor.y)\n  }\n\n  onTreeDie() {\n    const {\n      context: { map },\n    } = this\n    const spritesheet = Assets.cache.get('623')\n    this.textureName = `00${randomRange(0, 3)}_623.png`\n    const texture = spritesheet.textures[this.textureName]\n    const { sprite } = this\n    sprite.texture = texture\n    sprite.eventMode = 'none'\n    this.zIndex--\n    if (map.grid[this.i][this.j].has === this) {\n      map.grid[this.i][this.j].has = null\n      map.grid[this.i][this.j].corpses.push(this)\n      map.grid[this.i][this.j].solid = false\n    }\n  }\n\n  clear() {\n    if (this.isDestroyed) {\n      return\n    }\n    const {\n      context: { map },\n    } = this\n    this.isDestroyed = true\n    if (map.grid[this.i][this.j].has === this) {\n      map.grid[this.i][this.j].has = null\n      map.grid[this.i][this.j].solid = false\n    }\n    const corpseIndex = map.grid[this.i][this.j].corpses.indexOf(this)\n    corpseIndex >= 0 && map.grid[this.i][this.j].corpses.splice(corpseIndex, 1)\n    map.removeChild(this)\n    this.destroy({ child: true, texture: true })\n  }\n\n  setDefaultInterface(element, data) {\n    const {\n      context: { menu },\n    } = this\n    const typeDiv = document.createElement('div')\n    typeDiv.id = 'type'\n    typeDiv.textContent = this.type\n    element.appendChild(typeDiv)\n\n    const iconImg = document.createElement('img')\n    iconImg.id = 'icon'\n    iconImg.src = getIconPath(data.icon)\n    element.appendChild(iconImg)\n\n    if (this.hitPoints) {\n      const hitPointsDiv = document.createElement('div')\n      hitPointsDiv.id = 'hitPoints'\n      hitPointsDiv.textContent = this.hitPoints + '/' + this.totalHitPoints\n      element.appendChild(hitPointsDiv)\n    }\n    if (this.quantity) {\n      const quantityDiv = document.createElement('div')\n\n      quantityDiv.id = 'quantity'\n      quantityDiv.className = 'resource-quantity'\n\n      let iconToUse\n      switch (this.type) {\n        case 'Tree':\n          iconToUse = menu.infoIcons['wood']\n          break\n        case 'Salmon':\n        case 'Berrybush':\n          iconToUse = menu.infoIcons['food']\n          break\n        case 'Stone':\n          iconToUse = menu.infoIcons['stone']\n          break\n        case 'Gold':\n          iconToUse = menu.infoIcons['gold']\n          break\n      }\n      const smallIconImg = document.createElement('img')\n      smallIconImg.src = iconToUse\n      smallIconImg.className = 'resource-quantity-icon'\n      const textDiv = document.createElement('div')\n      textDiv.id = 'quantity-text'\n      textDiv.textContent = this.quantity\n      quantityDiv.appendChild(smallIconImg)\n      quantityDiv.appendChild(textDiv)\n      element.appendChild(quantityDiv)\n    }\n  }\n}\n","import { Container, Graphics } from 'pixi.js'\nimport {\n  degreesToRadians,\n  getHitPointsWithDamage,\n  moveTowardPoint,\n  pointsDistance,\n  instancesDistance,\n  average,\n  randomItem,\n  uuidv4,\n} from '../lib'\nimport { COLOR_ARROW, FAMILY_TYPES, STEP_TIME } from '../constants'\nimport { sound } from '@pixi/sound'\n\nexport class Projectile extends Container {\n  constructor(options, context) {\n    super()\n\n    this.context = context\n    this.label = uuidv4()\n    this.family = FAMILY_TYPES.projectile\n\n    Object.keys(options).forEach(prop => {\n      this[prop] = options[prop]\n    })\n    Object.keys(this.owner.owner.config.projectiles[this.type]).forEach(prop => {\n      this[prop] = this.owner.owner.config.projectiles[this.type][prop]\n    })\n\n    this.x = this.owner.x\n    this.y = this.owner.y - this.owner.sprite.height / 2\n    const { x: targetX, y: targetY } = this.destination || this.target\n\n    this.owner.visible &&\n      this.sounds.start &&\n      sound.play(Array.isArray(this.sounds.start) ? randomItem(this.sounds.start) : this.sounds.start)\n\n    this.distance = instancesDistance(this, this.target, false)\n    const degree = this.degree || getPointsDegree(this.x, this.y, targetX, targetY)\n    const sprite = new Graphics()\n    sprite.rect(1, 1, this.size, 1)\n    sprite.fill(COLOR_ARROW)\n    sprite.rotation = degreesToRadians(degree)\n    sprite.label = 'sprite'\n    sprite.allowMove = false\n    sprite.eventMode = 'none'\n    sprite.allowClick = false\n    sprite.roundPixels = true\n    this.addChild(sprite)\n\n    const interval = setInterval(() => {\n      if (pointsDistance(this.x, this.y, targetX, targetY) <= Math.max(this.speed, this.size)) {\n        if (\n          pointsDistance(targetX, targetY, this.target.x, this.target.y) <=\n          average(this.target.width, this.target.height)\n        ) {\n          this.onHit(this.target)\n        }\n        clearInterval(interval)\n        this.die()\n        return\n      }\n      moveTowardPoint(this, targetX, targetY, this.speed)\n    }, STEP_TIME)\n  }\n\n  onHit(instance) {\n    const {\n      context: { menu, player },\n    } = this\n    instance.hitPoints = getHitPointsWithDamage(this.owner, instance, this.damage)\n    if (instance.selected && player.selectedOther === instance) {\n      menu.updateInfo('hitPoints', instance.hitPoints + '/' + instance.totalHitPoints)\n    }\n    if (instance.hitPoints <= 0) {\n      instance.die()\n    } else {\n      typeof instance.isAttacked === 'function' && instance.isAttacked(this.owner)\n    }\n  }\n\n  die() {\n    this.isDead = true\n    this.destroy({ child: true, texture: true })\n  }\n}\n","import { sound } from '@pixi/sound'\nimport { Container, Assets, Sprite, AnimatedSprite, Graphics } from 'pixi.js'\nimport {\n  ACCELERATOR,\n  ACTION_TYPES,\n  COLOR_WHITE,\n  FAMILY_TYPES,\n  PLAYER_TYPES,\n  POPULATION_MAX,\n  RUBBLE_TIME,\n} from '../constants'\nimport {\n  getTexture,\n  getInstanceZIndex,\n  getPlainCellsAroundPoint,\n  getPercentage,\n  getFreeCellAroundPoint,\n  getIconPath,\n  canAfford,\n  drawInstanceBlinkingSelection,\n  payCost,\n  instanceIsInPlayerSight,\n  getActionCondition,\n  capitalizeFirstLetter,\n  refundCost,\n  getBuildingAsset,\n  getBuildingRubbleTextureNameWithSize,\n  instancesDistance,\n  getBuildingTextureNameWithSize,\n  uuidv4,\n  canUpdateMinimap,\n  CustomTimeout,\n  changeSpriteColorDirectly,\n  updateInstanceVisibility,\n} from '../lib'\nimport { Projectile } from './projectile'\nimport { Polygon } from 'pixi.js'\n\nexport class Building extends Container {\n  constructor(options, context) {\n    super()\n\n    this.context = context\n\n    const { map, controls } = context\n\n    this.label = uuidv4()\n    this.family = FAMILY_TYPES.building\n    this.selected = false\n    this.queue = []\n    this.technology = null\n    this.loading = null\n    this.isDead = false\n    this.isDestroyed = false\n    this.timeout\n    this.isUsedBy = null\n\n    Object.keys(options).forEach(prop => {\n      this[prop] = options[prop]\n    })\n    Object.keys(this.owner.config.buildings[this.type]).forEach(prop => {\n      this[prop] = this.owner.config.buildings[this.type][prop]\n    })\n\n    this.interval\n    this.attackInterval\n\n    if (this.queue.length) {\n      this.buyUnit(this.queue[0], true, true)\n    } else if (this.technology) {\n      this.buyTechnology(this.technology.type, true, true)\n    }\n\n    this.quantity = this.quantity ?? this.totalQuantity\n    this.hitPoints = this.hitPoints ?? (this.isBuilt ? this.totalHitPoints : 1)\n\n    this.x = map.grid[this.i][this.j].x\n    this.y = map.grid[this.i][this.j].y\n    this.z = map.grid[this.i][this.j].z\n    this.zIndex = getInstanceZIndex(this)\n    this.visible = map.revealEverything && controls.instanceInCamera(this) ? true : false\n    let spriteSheet = getBuildingTextureNameWithSize(this.size)\n    if (this.type === 'House' && this.owner.age === 0) {\n      spriteSheet = '000_489'\n    } else if (this.type === 'Dock') {\n      spriteSheet = '000_356'\n    }\n    const texture = getTexture(spriteSheet, Assets)\n    this.sprite = Sprite.from(texture)\n    this.sprite.updateAnchor = true\n    this.sprite.label = 'sprite'\n    this.sprite.hitArea = texture.hitArea\n      ? new Polygon(texture.hitArea)\n      : new Polygon([-32 * this.size, 0, 0, -16 * this.size, 32 * this.size, 0, 0, 16 * this.size])\n    const units = (this.units || []).map(key => context.menu.getUnitButton(key))\n    const technologies = (this.technologies || []).map(key => context.menu.getTechnologyButton(key))\n    this.interface = {\n      info: element => {\n        const assets = getBuildingAsset(this.type, this.owner, Assets)\n        this.setDefaultInterface(element, assets)\n        if (this.displayPopulation && this.owner.isPlayed && this.isBuilt) {\n          const populationDiv = document.createElement('div')\n          populationDiv.id = 'population'\n\n          const populationIcon = document.createElement('img')\n          const populationSpan = document.createElement('span')\n          populationSpan.id = 'population-text'\n          populationSpan.textContent = this.owner.population + '/' + Math.min(POPULATION_MAX, this.owner.POPULATION_MAX)\n\n          populationIcon.src = getIconPath('004_50731')\n          populationDiv.appendChild(populationIcon)\n          populationDiv.appendChild(populationSpan)\n          element.appendChild(populationDiv)\n        }\n        element.appendChild(this.getLoadingElement())\n      },\n      menu: this.owner.isPlayed || map.devMode ? [...units, ...technologies] : [],\n    }\n\n    // Set solid zone\n    const dist = this.size === 3 ? 1 : 0\n    getPlainCellsAroundPoint(this.i, this.j, map.grid, dist, cell => {\n      const set = cell.getChildByLabel('set')\n      if (set) {\n        cell.removeChild(set)\n      }\n      for (let i = 0; i < cell.corpses.length; i++) {\n        typeof cell.corpses[i].clear === 'function' && cell.corpses[i].clear()\n      }\n      cell.has = this\n      cell.solid = true\n      this.owner.views[cell.i][cell.j].viewBy.push(this)\n      if (this.owner.isPlayed && !map.revealEverything) {\n        cell.removeFog()\n      }\n    })\n\n    this.allowMove = false\n    if (this.sprite) {\n      this.sprite.allowMove = false\n      this.sprite.eventMode = 'static'\n      this.sprite.roundPixels = true\n\n      this.sprite.on('pointertap', evt => {\n        const {\n          context: { controls, player, menu },\n        } = this\n        if (controls.mouseBuilding || controls.mouseRectangle || !controls.isMouseInApp(evt)) {\n          return\n        }\n        let hasSentVillager = false\n        let hasSentOther = false\n        controls.mouse.prevent = true\n        if (this.owner.isPlayed) {\n          // Send Villager to build the building\n          if (!this.isBuilt) {\n            for (let i = 0; i < player.selectedUnits.length; i++) {\n              const unit = player.selectedUnits[i]\n              if (unit.type === 'Villager') {\n                if (getActionCondition(unit, this, ACTION_TYPES.build)) {\n                  hasSentVillager = true\n                  unit.sendToBuilding(this)\n                }\n              } else {\n                unit.sendTo(this)\n                hasSentOther = true\n              }\n            }\n            if (hasSentVillager) {\n              drawInstanceBlinkingSelection(this)\n            }\n            if (hasSentOther) {\n              const voice = randomItem(['5075', '5076', '5128', '5164'])\n              sound.play(voice)\n              return\n            } else if (hasSentVillager) {\n              const voice = Assets.cache.get('config').units.Villager.sounds.build\n              sound.play(voice)\n              return\n            }\n          } else if (player.selectedUnits) {\n            // Send Villager to give loading of resources\n            for (let i = 0; i < player.selectedUnits.length; i++) {\n              const unit = player.selectedUnits[i]\n              const accept =\n                unit.category === 'Boat'\n                  ? this.type === 'Dock'\n                  : this.type === 'TownCenter' || (this.accept && this.accept.includes(unit.loadingType))\n              if (unit.type === 'Villager' && getActionCondition(unit, this, ACTION_TYPES.build)) {\n                hasSentVillager = true\n                unit.previousDest = null\n                unit.sendToBuilding(this)\n              } else if (unit.type === 'Villager' && getActionCondition(unit, this, ACTION_TYPES.farm)) {\n                hasSentVillager = true\n                unit.sendToFarm(this)\n              } else if (\n                accept &&\n                getActionCondition(unit, this, ACTION_TYPES.delivery, { buildingTypes: [this.type] })\n              ) {\n                hasSentVillager = true\n                unit.previousDest = null\n                unit.sendTo(this, ACTION_TYPES.delivery)\n              }\n            }\n            if (hasSentVillager) {\n              drawInstanceBlinkingSelection(this)\n            }\n            if (hasSentVillager) {\n              const voice = Assets.cache.get('config').units.Villager.sounds.build\n              sound.play(voice)\n              return\n            }\n          }\n          if (this.owner.selectedBuilding !== this) {\n            this.owner.unselectAll()\n            this.select()\n            menu.setBottombar(this)\n            this.owner.selectedBuilding = this\n          }\n        } else if (player.selectedUnits.length) {\n          drawInstanceBlinkingSelection(this)\n          for (let i = 0; i < player.selectedUnits.length; i++) {\n            const playerUnit = player.selectedUnits[i]\n            if (playerUnit.type === 'Villager') {\n              playerUnit.sendToAttack(this)\n            } else {\n              playerUnit.sendTo(this, ACTION_TYPES.attack)\n            }\n          }\n        } else if (instanceIsInPlayerSight(this, player) || map.revealEverything) {\n          player.unselectAll()\n          this.select()\n          menu.setBottombar(this)\n          player.selectedOther = this\n        }\n      })\n\n      this.addChild(this.sprite)\n    }\n\n    if (this.isBuilt) {\n      setTimeout(() => {\n        updateInstanceVisibility(this)\n      })\n      this.finalTexture()\n      this.onBuilt()\n    }\n  }\n\n  attackAction(target) {\n    const {\n      context: { map },\n    } = this\n\n    this.startAttackInterval(() => {\n      if (getActionCondition(this, target, ACTION_TYPES.attack) && instancesDistance(this, target) <= this.range) {\n        if (target.hitPoints <= 0) {\n          target.die()\n        } else {\n          const projectile = new Projectile(\n            {\n              owner: this,\n              type: this.projectile,\n              target,\n            },\n            this.context\n          )\n          map.addChild(projectile)\n        }\n      } else {\n        this.stopAttackInterval()\n      }\n    }, this.rateOfFire)\n  }\n\n  startInterval(callback, time) {\n    const finalCb = () => {\n      const { paused } = this.context\n      if (paused) {\n        return\n      }\n      callback()\n    }\n    this.stopInterval()\n    this.interval = setInterval(finalCb, (time * 1000) / 100 / ACCELERATOR)\n  }\n\n  stopInterval() {\n    if (this.interval) {\n      clearInterval(this.interval)\n      this.interval = null\n    }\n  }\n\n  startAttackInterval(callback, time) {\n    const finalCb = () => {\n      const { paused } = this.context\n      if (paused) {\n        return\n      }\n      callback()\n    }\n    this.stopAttackInterval()\n    finalCb()\n    this.attackInterval = setInterval(finalCb, time * 1000)\n  }\n\n  stopAttackInterval() {\n    if (this.attackInterval) {\n      clearInterval(this.attackInterval)\n      this.attackInterval = null\n    }\n  }\n\n  pause() {\n    this.timeout?.pause()\n  }\n\n  resume() {\n    this.timeout?.resume()\n  }\n\n  startTimeout(cb, time) {\n    this.stopTimeout()\n    this.timeout = new CustomTimeout(() => cb(), (time * 1000) / ACCELERATOR)\n  }\n\n  stopTimeout() {\n    if (this.timeout) {\n      clearInterval(this.timeout)\n      this.timeout = null\n    }\n  }\n\n  isAttacked(instance) {\n    if (this.isDead) {\n      return\n    }\n    if (\n      this.range &&\n      getActionCondition(this, instance, ACTION_TYPES.attack) &&\n      instancesDistance(this, instance) <= this.range\n    ) {\n      this.attackAction(instance)\n    }\n    this.updateHitPoints(ACTION_TYPES.attack)\n  }\n\n  updateTexture() {\n    const {\n      context: { menu },\n    } = this\n    const percentage = getPercentage(this.hitPoints, this.totalHitPoints)\n    const buildSpritesheetId = this.sprite.texture.label.split('_')[1].split('.')[0]\n    const buildSpritesheet = Assets.cache.get(buildSpritesheetId)\n\n    if (percentage >= 25 && percentage < 50) {\n      const textureName = `001_${buildSpritesheetId}.png`\n      this.sprite.texture = buildSpritesheet.textures[textureName]\n    } else if (percentage >= 50 && percentage < 75) {\n      const textureName = `002_${buildSpritesheetId}.png`\n      this.sprite.texture = buildSpritesheet.textures[textureName]\n    } else if (percentage >= 75 && percentage < 99) {\n      const textureName = `003_${buildSpritesheetId}.png`\n      this.sprite.texture = buildSpritesheet.textures[textureName]\n    } else if (percentage >= 100) {\n      this.finalTexture()\n      if (!this.isBuilt) {\n        if (this.owner.isPlayed && this.sounds && this.sounds.create) {\n          sound.play(this.sounds.create)\n        }\n        this.onBuilt()\n      }\n      this.isBuilt = true\n      if (!this.owner.hasBuilt.includes(this.type)) {\n        this.owner.hasBuilt.push(this.type)\n      }\n      if (this.owner.isPlayed && this.selected) {\n        menu.setBottombar(this)\n      }\n      updateInstanceVisibility(this)\n    }\n  }\n\n  onBuilt() {\n    const {\n      context: { menu },\n    } = this\n    if (this.increasePopulation) {\n      // Increase player population and continue all unit creation that was paused\n      this.owner.POPULATION_MAX += this.increasePopulation\n      // Update bottombar with POPULATION_MAX if house selected\n      if (this.owner.isPlayed && this.owner.selectedBuilding && this.owner.selectedBuilding.displayPopulation) {\n        menu.updateInfo(\n          'population-text',\n          this.owner.population + '/' + Math.min(POPULATION_MAX, this.owner.POPULATION_MAX)\n        )\n      }\n    }\n    if (this.owner.isPlayed && this.selected) {\n      menu.setBottombar(this)\n    }\n  }\n\n  finalTexture() {\n    const assets = getBuildingAsset(this.type, this.owner, Assets)\n\n    const texture = getTexture(assets.images.final, Assets)\n    this.sprite.texture = texture\n    this.sprite.hitArea = texture.hitArea\n      ? new Polygon(texture.hitArea)\n      : new Polygon([-32 * this.size, 0, 0, -16 * this.size, 32 * this.size, 0, 0, 16 * this.size])\n    this.sprite.anchor.set(texture.defaultAnchor.x, texture.defaultAnchor.y)\n\n    const color = this.getChildByLabel('color')\n    if (color) {\n      color.destroy()\n    }\n\n    if (assets.images.color) {\n      const spriteColor = Sprite.from(getTexture(assets.images.color, Assets))\n      spriteColor.label = 'color'\n      changeSpriteColorDirectly(spriteColor, this.owner.color)\n      this.addChild(spriteColor)\n    } else {\n      changeSpriteColorDirectly(this.sprite, this.owner.color)\n    }\n\n    if (this.type === 'House') {\n      if (this.owner.age === 0) {\n        const spritesheetFire = Assets.cache.get('347')\n        const spriteFire = new AnimatedSprite(spritesheetFire.animations['fire'])\n        spriteFire.label = 'deco'\n        spriteFire.allowMove = false\n        spriteFire.allowClick = false\n        spriteFire.eventMode = 'none'\n        spriteFire.roundPixels = true\n        spriteFire.x = 10\n        spriteFire.y = 5\n        spriteFire.play()\n        spriteFire.animationSpeed = 0.2 * ACCELERATOR\n        this.addChild(spriteFire)\n      } else {\n        const fire = this.getChildByLabel('deco')\n        if (fire) {\n          fire.destroy()\n        }\n      }\n    }\n  }\n\n  detect(instance) {\n    if (\n      this.range &&\n      instance.family !== FAMILY_TYPES.animal &&\n      !this.attackInterval &&\n      getActionCondition(this, instance, ACTION_TYPES.attack) &&\n      instancesDistance(this, instance) <= this.range\n    ) {\n      this.attackAction(instance)\n    }\n  }\n\n  updateHitPoints(action) {\n    if (this.hitPoints > this.totalHitPoints) {\n      this.hitPoints = this.totalHitPoints\n    }\n    const percentage = getPercentage(this.hitPoints, this.totalHitPoints)\n\n    if (this.hitPoints <= 0) {\n      this.die()\n    }\n    if (action === ACTION_TYPES.build && !this.isBuilt) {\n      this.updateTexture()\n    } else if ((action === ACTION_TYPES.attack && this.isBuilt) || (action === ACTION_TYPES.build && this.isBuilt)) {\n      if (percentage > 0 && percentage < 25) {\n        generateFire(this, '450')\n      }\n      if (percentage >= 25 && percentage < 50) {\n        generateFire(this, '452')\n      }\n      if (percentage >= 50 && percentage < 75) {\n        generateFire(this, '347')\n      }\n      if (percentage >= 75) {\n        const fire = this.getChildByLabel('fire')\n        if (fire) {\n          this.removeChild(fire)\n        }\n      }\n    }\n    function generateFire(building, spriteId) {\n      const fire = building.getChildByLabel('fire')\n      const spritesheetFire = Assets.cache.get(spriteId)\n      if (fire) {\n        for (let i = 0; i < fire.children.length; i++) {\n          fire.children[i].textures = spritesheetFire.animations['fire']\n          fire.children[i].play()\n        }\n      } else {\n        const newFire = new Container()\n        newFire.label = 'fire'\n        newFire.allowMove = false\n        newFire.allowClick = false\n        newFire.eventMode = 'none'\n        let poses = [[0, 0]]\n        if (building.size === 3) {\n          poses = [\n            [0, -32],\n            [-64, 0],\n            [0, 32],\n            [64, 0],\n          ]\n        }\n        for (let i = 0; i < poses.length; i++) {\n          const spriteFire = new AnimatedSprite(spritesheetFire.animations['fire'])\n          spriteFire.allowMove = false\n          spriteFire.allowClick = false\n          spriteFire.eventMode = 'none'\n          spriteFire.roundPixels = true\n          spriteFire.x = poses[i][0]\n          spriteFire.y = poses[i][1]\n          spriteFire.play()\n          spriteFire.animationSpeed = 0.2 * ACCELERATOR\n          newFire.addChild(spriteFire)\n        }\n        building.addChild(newFire)\n      }\n    }\n  }\n\n  die() {\n    if (this.isDead) {\n      return\n    }\n    const {\n      context: { map, player, players, menu },\n    } = this\n    this.stopInterval()\n    this.isDead = true\n    if (this.selected && player) {\n      player.unselectAll()\n    }\n\n    // Remove from player buildings\n    const index = this.owner.buildings.indexOf(this)\n    if (index >= 0) {\n      this.owner.buildings.splice(index, 1)\n    }\n    // Remove from view of others players\n    for (let i = 0; i < players.length; i++) {\n      if (players[i].type === PLAYER_TYPES.ai) {\n        const list = players[i].foundedEnemyBuildings\n        list.splice(list.indexOf(this), 1)\n      }\n    }\n    const color = this.getChildByLabel('color')\n    color && color.destroy()\n    const deco = this.getChildByLabel('deco')\n    deco && deco.destroy()\n    const fire = this.getChildByLabel('fire')\n    fire && fire.destroy()\n\n    let rubbleSheet = getBuildingRubbleTextureNameWithSize(this.size, Assets)\n    if (this.type === 'Farm') {\n      rubbleSheet = '000_239'\n    }\n    this.sprite.texture = getTexture(rubbleSheet, Assets)\n    this.sprite.allowMove = false\n    this.sprite.eventMode = 'none'\n    this.sprite.allowClick = false\n    this.zIndex--\n    if (this.type === 'Farm') {\n      changeSpriteColorDirectly(this.sprite, this.owner.color)\n    }\n    // Remove solid zone\n    updateInstanceVisibility(this)\n    const dist = this.size === 3 ? 1 : 0\n    getPlainCellsAroundPoint(this.i, this.j, map.grid, dist, cell => {\n      if (cell.has === this) {\n        cell.has = null\n        cell.solid = false\n        cell.corpses.push(this)\n      }\n    })\n    this.startTimeout(() => this.clear(), RUBBLE_TIME)\n    canUpdateMinimap(this, player) && menu.updatePlayerMiniMapEvt(this.owner)\n  }\n\n  clear() {\n    if (this.isDestroyed) {\n      return\n    }\n    const {\n      context: { map },\n    } = this\n    const dist = this.size === 3 ? 1 : 0\n    getPlainCellsAroundPoint(this.i, this.j, map.grid, dist, cell => {\n      const index = cell.corpses.indexOf(this)\n      if (index >= 0) {\n        cell.corpses.splice(index, 1)\n      }\n    })\n    this.isDestroyed = true\n    this.destroy({ child: true, texture: true })\n  }\n\n  select() {\n    if (this.selected) {\n      return\n    }\n    const {\n      context: { menu, player },\n    } = this\n\n    if (this.owner.isPlayed && this.sounds && this.sounds.create) {\n      sound.play(this.sounds.create)\n    }\n\n    this.selected = true\n    const selection = new Graphics()\n    selection.label = 'selection'\n    selection.zIndex = 3\n    const path = [-32 * this.size, 0, 0, -16 * this.size, 32 * this.size, 0, 0, 16 * this.size]\n    selection.poly(path)\n    selection.stroke(COLOR_WHITE)\n    if (this.loading && this.owner.isPlayed) {\n      this.updateInterfaceLoading()\n    }\n    this.addChildAt(selection, 0)\n    canUpdateMinimap(this, player) && menu.updatePlayerMiniMapEvt(this.owner)\n  }\n\n  unselect() {\n    if (!this.selected) {\n      return\n    }\n    const {\n      context: { menu, player },\n    } = this\n\n    this.selected = false\n    const selection = this.getChildByLabel('selection')\n    if (selection) {\n      this.removeChild(selection)\n    }\n    canUpdateMinimap(this, player) && menu.updatePlayerMiniMapEvt(this.owner)\n  }\n\n  placeUnit(type) {\n    const {\n      context: { map, menu },\n    } = this\n    let spawnCell\n    const config = this.owner.config.units[type]\n    if (config.category === 'Boat') {\n      spawnCell = getFreeCellAroundPoint(\n        this.i,\n        this.j,\n        this.size,\n        map.grid,\n        cell => cell.category === 'Water' && !cell.solid\n      )\n    } else {\n      spawnCell = getFreeCellAroundPoint(\n        this.i,\n        this.j,\n        this.size,\n        map.grid,\n        cell => cell.category !== 'Water' && !cell.solid\n      )\n    }\n    if (!spawnCell) {\n      return\n    }\n    this.owner.population++\n\n    const extra = (this.owner.getUnitExtraOptions && this.owner.getUnitExtraOptions(type)) || {}\n    this.owner.createUnit({ i: spawnCell.i, j: spawnCell.j, type, ...extra })\n\n    if (this.owner.isPlayed && this.owner.selectedBuilding && this.owner.selectedBuilding.displayPopulation) {\n      menu.updateInfo(\n        'population-text',\n        this.owner.population + '/' + Math.min(POPULATION_MAX, this.owner.POPULATION_MAX)\n      )\n    }\n  }\n\n  buyUnit(type, alreadyPaid = false, force = false, extra) {\n    const {\n      context: { menu, map },\n    } = this\n    let success = false\n    const unit = this.owner.config.units[type]\n    if (this.isBuilt && !this.isDead && (canAfford(this.owner, unit.cost) || alreadyPaid)) {\n      if (!alreadyPaid) {\n        if (this.owner.type === PLAYER_TYPES.ai) {\n          if (!this.queue.length && this.loading === null) {\n            payCost(this.owner, unit.cost)\n            this.queue.push(type)\n            success = true\n          }\n        } else {\n          payCost(this.owner, unit.cost)\n          this.queue.push(type)\n          if (this.selected && this.owner.isPlayed) {\n            menu.updateButtonContent(type, this.queue.filter(q => q === type).length)\n          }\n          this.owner.isPlayed && menu.updateTopbar()\n          success = true\n        }\n      }\n      if ((this.loading === null && this.queue[0]) || force) {\n        let hasShowedMessage = false\n        this.loading = force ? this.loading : 0\n        if (this.selected && this.owner.isPlayed) {\n          this.updateInterfaceLoading()\n        }\n        this.startInterval(() => {\n          if (this.queue[0] !== type) {\n            this.stopInterval()\n            this.loading = null\n            if (this.queue.length) {\n              this.buyUnit(this.queue[0], true)\n            }\n            hasShowedMessage = false\n            if (this.selected && this.owner.isPlayed) {\n              const still = this.queue.filter(q => q === type).length\n              menu.updateButtonContent(type, still || '')\n              if (still === 0) {\n                menu.toggleButtonCancel(type, false)\n              }\n              this.updateInterfaceLoading()\n            }\n          } else if (this.loading >= 100 || map.devMode) {\n            this.stopInterval()\n            this.placeUnit(type, extra)\n            this.loading = null\n            this.queue.shift()\n            if (this.queue.length) {\n              this.buyUnit(this.queue[0], true)\n            }\n            hasShowedMessage = false\n            if (this.selected && this.owner.isPlayed) {\n              const still = this.queue.filter(q => q === type).length\n              menu.updateButtonContent(type, still || '')\n              if (still === 0) {\n                menu.toggleButtonCancel(type, false)\n              }\n              this.updateInterfaceLoading()\n            }\n          } else if (this.loading < 100) {\n            if (this.owner.population < Math.min(POPULATION_MAX, this.owner.POPULATION_MAX)) {\n              this.loading += 1\n            } else if (this.owner.isPlayed && !hasShowedMessage) {\n              menu.showMessage('You need to build more houses')\n              hasShowedMessage = true\n            }\n            if (this.selected && this.owner.isPlayed) {\n              this.updateInterfaceLoading()\n            }\n          }\n        }, unit.trainingTime)\n      }\n      return success\n    }\n  }\n\n  updateInterfaceLoading() {\n    const {\n      context: { menu },\n    } = this\n    if (this.owner.isPlayed && this.owner.selectedBuilding === this) {\n      if (this.loading === 1) {\n        menu.updateInfo('loading', element => (element.innerHTML = this.getLoadingElement().innerHTML))\n      } else if (this.loading > 1) {\n        menu.updateInfo('loading-text', this.loading + '%')\n      } else {\n        menu.updateInfo('loading', element => (element.innerHTML = ''))\n      }\n    }\n  }\n\n  getLoadingElement() {\n    const loadingDiv = document.createElement('div')\n    loadingDiv.className = 'building-loading'\n    loadingDiv.id = 'loading'\n\n    if (this.loading && this.owner.isPlayed) {\n      const iconImg = document.createElement('img')\n      iconImg.className = 'building-loading-icon'\n      iconImg.src = getIconPath('009_50731')\n      const textDiv = document.createElement('div')\n      textDiv.id = 'loading-text'\n      textDiv.textContent = this.loading + '%'\n      loadingDiv.appendChild(iconImg)\n      loadingDiv.appendChild(textDiv)\n    }\n    return loadingDiv\n  }\n\n  cancelTechnology() {\n    const {\n      context: { player, menu },\n    } = this\n    this.stopInterval()\n    refundCost(player, this.technology.cost)\n    this.technology = null\n    this.loading = null\n    if (this.owner.isPlayed) {\n      menu.updateBottombar()\n      menu.updateTopbar()\n    }\n  }\n\n  upgrade(type) {\n    const data = this.owner.config.buildings[type]\n    this.type = type\n    this.hitPoints = data.totalHitPoints - (this.totalHitPoints - this.hitPoints)\n    for (const [key, value] of Object.entries(data)) {\n      this[key] = value\n    }\n    const assets = getBuildingAsset(this.type, this.owner, Assets)\n    this.sprite.texture = getTexture(assets.images.final, Assets)\n    this.sprite.anchor.set(this.sprite.texture.defaultAnchor.x, this.sprite.texture.defaultAnchor.y)\n    const color = this.getChildByLabel('color')\n    color?.destroy()\n    if (assets.images.color) {\n      const spriteColor = Sprite.from(getTexture(assets.images.color, Assets))\n      spriteColor.label = 'color'\n      changeSpriteColorDirectly(spriteColor, this.owner.color)\n      this.addChild(spriteColor)\n    } else {\n      changeSpriteColorDirectly(this.sprite, this.owner.color)\n    }\n  }\n\n  buyTechnology(type, alreadyPaid, force) {\n    const {\n      context: { menu, map },\n    } = this\n    let success = false\n    const config = this.owner.techs[type]\n    if (\n      !this.queue.length &&\n      this.isBuilt &&\n      (force || this.loading === null) &&\n      !this.isDead &&\n      (alreadyPaid || canAfford(this.owner, config.cost))\n    ) {\n      !alreadyPaid && payCost(this.owner, config.cost)\n      success = true\n      if (this.owner.isPlayed) {\n        menu.updateTopbar()\n      }\n      this.loading = force ? this.loading : 0\n\n      this.technology = { config, type }\n      if (this.selected && this.owner.selectedBuilding === this) {\n        menu.setBottombar(this)\n      }\n      this.startInterval(() => {\n        const { config, type } = this.technology\n        if (this.loading >= 100 || map.devMode) {\n          this.stopInterval()\n          this.loading = null\n          this.technology = null\n          if (Array.isArray(this.owner[config.key])) {\n            this.owner[config.key].push(config.value || type)\n          } else {\n            this.owner[config.key] = config.value || type\n          }\n          if (config.action) {\n            switch (config.action.type) {\n              case 'upgradeUnit':\n                for (let i = 0; i < this.owner.units.length; i++) {\n                  const unit = this.owner.units[i]\n                  if (unit.type === config.action.source) {\n                    unit.upgrade(config.action.target)\n                  }\n                }\n                break\n              case 'upgradeBuilding':\n                for (let i = 0; i < this.owner.buildings.length; i++) {\n                  const building = this.owner.buildings[i]\n                  if (building.type === config.action.source) {\n                    building.upgrade(technconfigology.action.target)\n                  }\n                }\n                break\n              case 'improve':\n                this.owner.updateConfig(config.action.operations)\n                break\n            }\n          }\n          const functionName = `on${capitalizeFirstLetter(config.key)}Change`\n          typeof this.owner[functionName] === 'function' && this.owner[functionName](config.value)\n          if (this.owner.isPlayed) {\n            menu.updateBottombar()\n            menu.updateTopbar()\n          }\n        } else if (this.loading < 100) {\n          this.loading += 1\n          if (this.owner.isPlayed && this.owner.selectedBuilding === this) {\n            this.updateInterfaceLoading()\n          }\n        }\n      }, config.researchTime)\n    }\n    return success\n  }\n\n  setDefaultInterface(element, data) {\n    const {\n      context: { menu },\n    } = this\n\n    const civDiv = document.createElement('div')\n    civDiv.id = 'civ'\n    civDiv.textContent = this.owner.civ\n    element.appendChild(civDiv)\n\n    const typeDiv = document.createElement('div')\n    typeDiv.id = 'type'\n    typeDiv.textContent = this.type\n    element.appendChild(typeDiv)\n\n    const iconImg = document.createElement('img')\n    iconImg.id = 'icon'\n    iconImg.src = getIconPath(data.icon)\n    element.appendChild(iconImg)\n\n    if (this.owner && this.owner.isPlayed) {\n      const hitPointsDiv = document.createElement('div')\n      hitPointsDiv.id = 'hitPoints'\n      hitPointsDiv.textContent = this.hitPoints + '/' + this.totalHitPoints\n      element.appendChild(hitPointsDiv)\n\n      if (this.isBuilt && this.quantity) {\n        const quantityDiv = document.createElement('div')\n        quantityDiv.id = 'quantity'\n        quantityDiv.className = 'resource-quantity'\n        const smallIconImg = document.createElement('img')\n        smallIconImg.src = menu.icons['food']\n        smallIconImg.className = 'resource-quantity-icon'\n        const textDiv = document.createElement('div')\n        textDiv.id = 'quantity-text'\n        textDiv.textContent = this.quantity\n        quantityDiv.appendChild(smallIconImg)\n        quantityDiv.appendChild(textDiv)\n        element.appendChild(quantityDiv)\n      }\n    }\n  }\n}\n","import { sound } from '@pixi/sound'\nimport { Container, Assets, AnimatedSprite, Graphics } from 'pixi.js'\nimport {\n  ACCELERATOR,\n  STEP_TIME,\n  CORPSE_TIME,\n  LOADING_FOOD_TYPES,\n  MAX_SELECT_UNITS,\n  TYPE_ACTION,\n  POPULATION_MAX,\n  WORK_FOOD_TYPES,\n  COLOR_WHITE,\n  WORK_TYPES,\n  ACTION_TYPES,\n  LOADING_TYPES,\n  FAMILY_TYPES,\n} from '../constants'\nimport {\n  getInstanceZIndex,\n  randomRange,\n  getIconPath,\n  getInstancePath,\n  instancesDistance,\n  moveTowardPoint,\n  getInstanceClosestFreeCellPath,\n  instanceContactInstance,\n  getInstanceDegree,\n  changeSpriteColor,\n  findInstancesInSight,\n  getClosestInstanceWithPath,\n  getCellsAroundPoint,\n  drawInstanceBlinkingSelection,\n  instanceIsInPlayerSight,\n  degreeToDirection,\n  onSpriteLoopAtFrame,\n  getActionCondition,\n  randomItem,\n  getHitPointsWithDamage,\n  getClosestInstance,\n  throttle,\n  getFreeCellAroundPoint,\n  uuidv4,\n  canUpdateMinimap,\n  getWorkWithLoadingType,\n  setUnitTexture,\n  updateInstanceVisibility,\n} from '../lib'\nimport { Projectile } from './projectile'\n\nfunction getActionSheet(work, action, Assets, unit) {\n  if (!work) {\n    return\n  }\n  const actionSheet = action === ACTION_TYPES.takemeat ? 'harvestSheet' : 'actionSheet'\n  return Assets.cache.get(unit.allAssets[work][actionSheet])\n}\n\nexport class Unit extends Container {\n  constructor(options, context) {\n    super()\n\n    this.context = context\n\n    const {\n      context: { map, menu },\n    } = this\n    this.label = uuidv4()\n    this.family = FAMILY_TYPES.unit\n\n    this.dest = null\n    this.realDest = null\n    this.previousDest = null\n    this.path = []\n    this.selected = false\n    this.degree = randomRange(1, 360)\n    this.currentFrame = randomRange(0, 4)\n    this.action = null\n    this.loading = 0\n    this.loadingType = null\n    this.currentSheet = 'standingSheet'\n    this.inactif = true\n    this.isDead = false\n    this.isDestroyed = false\n    this.x = null\n    this.y = null\n    this.z = null\n\n    Object.keys(options).forEach(prop => {\n      this[prop] = options[prop]\n    })\n    Object.keys(this.owner.config.units[this.type]).forEach(prop => {\n      this[prop] = this.owner.config.units[this.type][prop]\n    })\n    this.size = 1\n    this.visible = false\n    this.visibleCells = new Set()\n    this.x = this.x ?? map.grid[this.i][this.j].x\n    this.y = this.y ?? map.grid[this.i][this.j].y\n    this.z = this.z ?? map.grid[this.i][this.j].z\n    this.zIndex = getInstanceZIndex(this)\n    this.quantity = this.quantity ?? this.totalQuantity\n    this.hitPoints = this.hitPoints ?? this.totalHitPoints\n\n    this.currentCell = map.grid[this.i][this.j]\n    if (this.currentSheet === 'corpseSheet') {\n      this.owner.corpses.push(this)\n      map.grid[this.i][this.j].corpses.push(this)\n    } else if (!this.isDead) {\n      this.currentCell.has = this\n      this.currentCell.solid = true\n      this.owner.units.push(this)\n    }\n    switch (this.type) {\n      case 'Villager':\n        this.work = this.work || null\n        break\n      case 'Priest':\n        this.work = WORK_TYPES.healer\n        break\n      default:\n        this.work = WORK_TYPES.attacker\n    }\n\n    if (this.assets) {\n      for (const [key, value] of Object.entries(this.assets)) {\n        this[key] = Assets.cache.get(value)\n      }\n    } else if (this.allAssets) {\n      for (const [key, value] of Object.entries(this.allAssets.default)) {\n        this[key] = Assets.cache.get(value)\n      }\n    }\n\n    if (this.owner.isPlayed && map.ready) {\n      sound.play((this.sounds && this.sounds.create) || 5144)\n    }\n\n    this.interface = {\n      info: element => {\n        const data = this.owner.config.units[this.type]\n        this.setDefaultInterface(element, data)\n        if (this.showLoading && this.owner.isPlayed) {\n          element.appendChild(this.getLoadingElement())\n        }\n      },\n      menu:\n        this.showBuildings && this.owner.isPlayed\n          ? [\n              {\n                icon: 'assets/interface/50721/002_50721.png',\n                children: Object.keys(this.owner.config.buildings).map(key => menu.getBuildingButton(key)),\n              },\n            ]\n          : [],\n    }\n\n    this.allowMove = false\n    this.eventMode = 'static'\n    this.actionSheet = this.actionSheet || getActionSheet(this.work, this.action, Assets, this)\n    this.sprite = new AnimatedSprite(this['standingSheet'].animations['south'])\n    this.sprite.label = 'sprite'\n    this.sprite.allowMove = false\n    this.sprite.eventMode = 'auto'\n    this.sprite.allowClick = false\n    this.sprite.roundPixels = true\n    this.sprite.loop = this.loop ?? true\n    if (this.isDead) {\n      this.currentSheet === 'corpseSheet' ? this.decompose() : this.death()\n    } else if (this.loading > 0) {\n      this.walkingSheet = Assets.cache.get(this.allAssets[getWorkWithLoadingType(this.loadingType)].loadedSheet)\n      this.standingSheet = Assets.cache.get(this.allAssets[getWorkWithLoadingType(this.loadingType)].standingSheet)\n    }\n    this.setTextures(this.currentSheet)\n\n    this.sprite.currentFrame = Math.min(this.currentFrame, this.sprite.textures.length - 1)\n    this.sprite.updateAnchor = true\n    this.addChild(this.sprite)\n\n    this.sendTo = this.owner.isPlayed ? throttle(this.sendToEvt, 100, true) : this.sendToEvt\n\n    this.on('pointerdown', evt => {\n      const {\n        context: { controls, player },\n      } = this\n      if (controls.mouseBuilding || controls.mouseRectangle || !controls.isMouseInApp(evt)) {\n        return\n      }\n      if (controls.clicked) {\n        if (this.owner.isPlayed) {\n          controls.getCellOnCamera(cell => {\n            if (\n              player.selectedUnits.length < MAX_SELECT_UNITS &&\n              cell.has &&\n              cell.has.owner &&\n              cell.has.owner.label === this.owner.label &&\n              cell.has.type === this.type\n            ) {\n              cell.has.select()\n              player.selectedUnits.push(cell.has)\n            }\n          })\n        }\n        controls.doubleClicked = true\n      }\n      controls.clicked = false\n    })\n    this.on('pointerup', evt => {\n      const {\n        context: { controls, player, menu },\n      } = this\n      if (controls.doubleClicked || controls.mouseBuilding || controls.mouseRectangle || !controls.isMouseInApp(evt)) {\n        return\n      }\n\n      controls.mouse.prevent = true\n      controls.clicked = true\n      controls.double = setTimeout(() => {\n        controls.clicked = false\n        controls.doubleClicked = false\n      }, 600)\n\n      if (this.owner.isPlayed) {\n        let hasSentHealer = false\n        if (player.selectedUnits.length) {\n          for (let i = 0; i < player.selectedUnits.length; i++) {\n            const playerUnit = player.selectedUnits[i]\n            if (playerUnit.work === WORK_TYPES.healer && this.getActionCondition(playerUnit, 'heal')) {\n              hasSentHealer = true\n              playerUnit.sendTo(this, 'heal')\n            }\n          }\n        }\n        if (hasSentHealer) {\n          drawInstanceBlinkingSelection(this)\n        } else if (player.selectedUnit !== this) {\n          this.owner.unselectAll()\n          this.select()\n          menu.setBottombar(this)\n          player.selectedUnit = this\n          player.selectedUnits = [this]\n        }\n      } else {\n        let hasSentAttacker = false\n        if (player.selectedUnits.length) {\n          for (let i = 0; i < player.selectedUnits.length; i++) {\n            const playerUnit = player.selectedUnits[i]\n            if (this.getActionCondition(playerUnit, ACTION_TYPES.attack))\n              if (playerUnit.type === 'Villager') {\n                hasSentAttacker = true\n                playerUnit.sendToAttack(this)\n              } else if (playerUnit.work === WORK_TYPES.attacker) {\n                hasSentAttacker = true\n                playerUnit.sendTo(this, ACTION_TYPES.attack)\n              }\n          }\n        }\n        if (hasSentAttacker) {\n          drawInstanceBlinkingSelection(this)\n        } else if ((player.selectedOther !== this && instanceIsInPlayerSight(this, player)) || map.revealEverything) {\n          player.unselectAll()\n          this.select()\n          menu.setBottombar(this)\n          player.selectedOther = this\n        }\n      }\n    })\n\n    changeSpriteColor(this.sprite, this.owner.color)\n\n    this.interval = null\n\n    setTimeout(() => {\n      updateInstanceVisibility(this)\n    })\n  }\n\n  pause() {\n    this.sprite?.stop()\n  }\n\n  resume() {\n    this.sprite?.play()\n  }\n\n  select() {\n    if (this.selected) return\n\n    const {\n      context: { menu, player },\n    } = this\n\n    this.selected = true\n\n    const selection = new Graphics()\n    selection.label = 'selection'\n    selection.zIndex = 3\n\n    // Diamond shape\n    const path = [-32 * 0.5, 0, 0, -16 * 0.5, 32 * 0.5, 0, 0, 16 * 0.5]\n    selection.poly(path)\n    selection.stroke(COLOR_WHITE)\n\n    this.addChildAt(selection, 0)\n\n    if (canUpdateMinimap(this, player)) {\n      menu.updatePlayerMiniMapEvt(this.owner)\n    }\n  }\n\n  unselect() {\n    if (!this.selected) {\n      return\n    }\n    const {\n      context: { menu, player },\n    } = this\n\n    this.selected = false\n    const selection = this.getChildByLabel('selection')\n    if (selection) {\n      this.removeChild(selection)\n    }\n    canUpdateMinimap(this, player) && menu.updatePlayerMiniMapEvt(this.owner)\n  }\n\n  hasPath() {\n    return this.path.length > 0\n  }\n\n  setDest(dest) {\n    if (!dest) {\n      this.stop()\n      return\n    }\n    this.handleSetDest && this.handleSetDest(dest, this)\n    this.dest = dest\n    this.realDest = {\n      i: dest.i,\n      j: dest.j,\n      x: dest.x,\n      y: dest.y,\n      label: dest.label,\n    }\n  }\n\n  setPath(path) {\n    if (!path.length) {\n      this.stop()\n      return\n    }\n    this.setTextures('walkingSheet')\n    this.inactif = false\n    this.path = path\n    this.startInterval(() => this.step(), STEP_TIME)\n  }\n\n  handleChangeDest() {\n    if (this.dest && this.dest.isUsedBy === this) {\n      this.dest.isUsedBy = null\n    }\n  }\n\n  sendToEvt(dest, action) {\n    const {\n      context: { map },\n    } = this\n    this.handleChangeDest()\n    this.stopInterval()\n    let path = []\n    // No instance we cancel the destination\n    if (!dest || this.isDead) {\n      return\n    }\n    // Unit is already beside our target\n    if (\n      this.isUnitAtDest(action, dest) &&\n      (!map.grid[this.i][this.j].solid ||\n        (map.grid[this.i][this.j].solid && map.grid[this.i][this.j].has?.label === this.label))\n    ) {\n      this.setDest(dest)\n      this.action = action\n      this.degree = getInstanceDegree(this, dest.x, dest.y)\n      this.getAction(action)\n      return\n    }\n    // Set unit path\n    if (map.grid[dest.i] && map.grid[dest.i][dest.j]) {\n      const allowWaterCellCategory = this.category === 'Boat'\n      if (map.grid[dest.i][dest.j].solid) {\n        path = getInstanceClosestFreeCellPath(this, dest, map)\n        if (!path.length && this.work) {\n          this.action = action\n          this.affectNewDest()\n          return\n        }\n      } else if (!allowWaterCellCategory && dest.category === 'Water') {\n        const cell = getFreeCellAroundPoint(\n          dest.i,\n          dest.j,\n          1,\n          map.grid,\n          cell => cell.category !== 'Water' && !cell.solid\n        )\n        this.sendToEvt(cell)\n        return\n      }\n    }\n    if (!path.length) {\n      path = getInstancePath(this, dest.i, dest.j, map)\n    }\n    // Unit found a path, set the action and play walking animation\n    if (path.length) {\n      this.setDest(dest)\n      this.action = action\n      this.setPath(path)\n    } else {\n      this.stop()\n    }\n  }\n\n  getActionCondition(target, action = this.action, props) {\n    return getActionCondition(this, target, action, props)\n  }\n\n  goBackToPrevious() {\n    const {\n      context: { map },\n    } = this\n\n    if (!this.previousDest) {\n      this.stop()\n      return\n    }\n    const dest = this.previousDest\n    const type = dest.category || dest.type\n    this.previousDest = null\n    if (dest.family === FAMILY_TYPES.animal) {\n      if (this.getActionCondition(dest, ACTION_TYPES.takemeat)) {\n        this.sendToTakeMeat(dest)\n      } else {\n        this.sendTo(map.grid[dest.i][dest.j], ACTION_TYPES.hunt)\n      }\n    } else if (dest.family === FAMILY_TYPES.building) {\n      if (this.getActionCondition(dest, ACTION_TYPES.build)) {\n        this.sendToBuilding(dest)\n      } else if (this.getActionCondition(dest, ACTION_TYPES.farm)) {\n        this.sendToFarm(dest)\n      } else {\n        this.sendTo(map.grid[dest.i][dest.j], ACTION_TYPES.build)\n      }\n    } else if (TYPE_ACTION[type]) {\n      if (this.getActionCondition(dest, TYPE_ACTION[type])) {\n        const sendToFunc = `sendTo${type}`\n        typeof this[sendToFunc] === 'function' ? this[sendToFunc](dest) : this.stop()\n      } else {\n        this.sendTo(map.grid[dest.i][dest.j], TYPE_ACTION[type])\n      }\n    } else {\n      this.sendTo(map.grid[dest.i][dest.j])\n    }\n  }\n\n  getAction(name) {\n    const {\n      context: { menu, player, map },\n    } = this\n    this.sprite.onLoop = null\n    this.sprite.onFrameChange = null\n    switch (name) {\n      case ACTION_TYPES.delivery:\n        if (!this.getActionCondition(this.dest, this.action)) {\n          this.stop()\n          return\n        }\n        this.owner[LOADING_FOOD_TYPES.includes(this.loadingType) ? 'food' : this.loadingType] += this.loading\n        this.owner.isPlayed && menu.updateTopbar()\n        this.loading = 0\n        this.updateInterfaceLoading()\n        if (this.allAssets && this.allAssets[this.work]) {\n          this.standingSheet = Assets.cache.get(this.allAssets[this.work].standingSheet)\n          this.walkingSheet = Assets.cache.get(this.allAssets[this.work].walkingSheet)\n        }\n\n        if (this.previousDest) {\n          this.goBackToPrevious()\n        } else {\n          this.stop()\n        }\n        break\n      case ACTION_TYPES.farm:\n        if (!this.getActionCondition(this.dest)) {\n          this.affectNewDest()\n          return\n        }\n        this.dest.isUsedBy = this\n        this.setTextures('actionSheet')\n        this.startInterval(\n          () => {\n            if (!this.getActionCondition(this.dest)) {\n              if (this.dest.quantity <= 0) {\n                this.dest.die()\n              }\n              this.affectNewDest()\n              return\n            }\n            this.dest.isUsedBy = this\n            // Villager is full we send him delivery first\n            if (this.loading === this.loadingMax[this.loadingType] || !this.dest) {\n              this.sendToDelivery()\n              this.dest.isUsedBy = null\n              return\n            }\n            // Villager farm the farm\n            this.loading++\n            this.loadingType = LOADING_TYPES.wheat\n            this.updateInterfaceLoading()\n\n            this.visible && sound.play('5178')\n            this.dest.quantity = Math.max(this.dest.quantity - 1, 0)\n            if (this.dest.selected) {\n              menu.updateInfo('quantity-text', this.dest.quantity)\n            }\n            // Destroy farm if it out of quantity\n            if (this.dest.quantity <= 0) {\n              this.dest.die()\n              this.affectNewDest()\n            }\n            // Set the walking with berrybush animation\n            if (this.loading > 0) {\n              if (this.allAssets[this.work]) {\n                this.walkingSheet = Assets.cache.get(this.allAssets[this.work].loadedSheet)\n              }\n              this.standingSheet = null\n            }\n          },\n          (1 / this.gatheringRate[this.work]) * 1000,\n          false\n        )\n        break\n      case ACTION_TYPES.chopwood:\n        if (!this.getActionCondition(this.dest)) {\n          this.affectNewDest()\n          return\n        }\n        this.setTextures('actionSheet')\n        this.startInterval(\n          () => {\n            if (!this.getActionCondition(this.dest)) {\n              if (this.dest.quantity <= 0) {\n                this.dest.die()\n              }\n              this.affectNewDest()\n              return\n            }\n            // Villager is full we send him delivery first\n            if (this.loading === this.loadingMax[this.loadingType] || !this.dest) {\n              this.sendToDelivery()\n              return\n            }\n\n            this.visible && sound.play('5048')\n\n            // Tree destination is still alive we cut him until it's dead\n            if (this.dest.hitPoints > 0) {\n              this.dest.hitPoints = Math.max(this.dest.hitPoints - 1, 0)\n\n              if (this.dest.selected) {\n                menu.updateInfo(\n                  'hitPoints',\n                  this.dest.hitPoints > 0 ? this.dest.hitPoints + '/' + this.dest.totalHitPoints : ''\n                )\n              }\n              if (this.dest.hitPoints <= 0) {\n                // Set cutted tree texture\n                this.dest.hitPoints = 0\n                this.dest.setCuttedTreeTexture()\n              }\n            } else {\n              // Villager cut the stump\n              this.loading++\n              this.loadingType = LOADING_TYPES.wood\n              this.updateInterfaceLoading()\n\n              this.dest.quantity = Math.max(this.dest.quantity - 1, 0)\n              if (this.dest.selected) {\n                menu.updateInfo('quantity-text', this.dest.quantity)\n              }\n              // Destroy tree if stump out of quantity\n              if (this.dest.quantity <= 0) {\n                this.dest.die()\n                this.affectNewDest()\n              }\n              // Set the walking with wood animation\n              if (this.loading > 0) {\n                if (this.allAssets[this.work]) {\n                  this.walkingSheet = Assets.cache.get(this.allAssets[this.work].loadedSheet)\n                }\n                this.standingSheet = null\n              }\n            }\n          },\n          (1 / this.gatheringRate[this.work]) * 1000,\n          false\n        )\n        break\n      case ACTION_TYPES.forageberry:\n        if (!this.getActionCondition(this.dest)) {\n          this.affectNewDest()\n          return\n        }\n        this.setTextures('actionSheet')\n        this.startInterval(\n          () => {\n            if (!this.getActionCondition(this.dest)) {\n              if (this.dest.quantity <= 0) {\n                this.dest.die()\n              }\n              this.affectNewDest()\n              return\n            }\n            // Villager is full we send him delivery first\n            if (this.loading === this.loadingMax[this.loadingType] || !this.dest) {\n              this.sendToDelivery()\n              return\n            }\n            // Villager forage the berrybush\n            this.loading++\n            this.loadingType = LOADING_TYPES.berry\n            this.updateInterfaceLoading()\n\n            this.visible && sound.play('5085')\n\n            this.dest.quantity = Math.max(this.dest.quantity - 1, 0)\n            if (this.dest.selected) {\n              menu.updateInfo('quantity-text', this.dest.quantity)\n            }\n            // Destroy berrybush if it out of quantity\n            if (this.dest.quantity <= 0) {\n              this.dest.die()\n              this.affectNewDest()\n            }\n            // Set the walking with berrybush animation\n            if (this.loading > 0) {\n              if (this.allAssets[this.work]) {\n                this.walkingSheet = Assets.cache.get(this.allAssets[this.work].loadedSheet)\n              }\n              this.standingSheet = null\n            }\n          },\n          (1 / this.gatheringRate[this.work]) * 1000,\n          false\n        )\n        break\n      case ACTION_TYPES.minestone:\n        if (!this.getActionCondition(this.dest)) {\n          this.affectNewDest()\n          return\n        }\n        this.setTextures('actionSheet')\n        this.startInterval(\n          () => {\n            if (!this.getActionCondition(this.dest)) {\n              if (this.dest.quantity <= 0) {\n                this.dest.die()\n              }\n              this.affectNewDest()\n              return\n            }\n            // Villager is full we send him delivery first\n            if (this.loading === this.loadingMax[this.loadingType] || !this.dest) {\n              this.sendToDelivery()\n              return\n            }\n            // Villager mine the stone\n            this.loading++\n            this.loadingType = LOADING_TYPES.stone\n            this.updateInterfaceLoading()\n\n            this.visible && sound.play('5159')\n\n            this.dest.quantity = Math.max(this.dest.quantity - 1, 0)\n            if (this.dest.selected) {\n              menu.updateInfo('quantity-text', this.dest.quantity)\n            }\n            // Destroy stone if it out of quantity\n            if (this.dest.quantity <= 0) {\n              this.dest.die()\n              this.affectNewDest()\n            }\n            // Set the walking with stone animation\n            if (this.loading > 0) {\n              if (this.allAssets[this.work]) {\n                this.walkingSheet = Assets.cache.get(this.allAssets[this.work].loadedSheet)\n              }\n              this.standingSheet = null\n            }\n          },\n          (1 / this.gatheringRate[this.work]) * 1000,\n          false\n        )\n        break\n      case ACTION_TYPES.minegold:\n        if (!this.getActionCondition(this.dest)) {\n          this.affectNewDest()\n          return\n        }\n        this.setTextures('actionSheet')\n        this.startInterval(\n          () => {\n            if (!this.getActionCondition(this.dest)) {\n              this.affectNewDest()\n              return\n            }\n            // Villager is full we send him delivery first\n            if (this.loading === this.loadingMax[this.loadingType] || !this.dest) {\n              this.sendToDelivery()\n              return\n            }\n            // Villager mine the gold\n            this.loading++\n            this.loadingType = LOADING_TYPES.gold\n            this.updateInterfaceLoading()\n\n            this.visible && sound.play('5159')\n            this.dest.quantity = Math.max(this.dest.quantity - 1, 0)\n            if (this.dest.selected) {\n              menu.updateInfo('quantity-text', this.dest.quantity)\n            }\n            // Destroy gold if it out of quantity\n            if (this.dest.quantity <= 0) {\n              this.dest.die()\n              this.affectNewDest()\n            }\n            // Set the walking with gold animation\n            if (this.loading > 0) {\n              if (this.allAssets[this.work]) {\n                this.walkingSheet = Assets.cache.get(this.allAssets[this.work].loadedSheet)\n              }\n              this.standingSheet = null\n            }\n          },\n          (1 / this.gatheringRate[this.work]) * 1000,\n          false\n        )\n        break\n      case ACTION_TYPES.build:\n        if (!this.getActionCondition(this.dest)) {\n          this.affectNewDest()\n          return\n        }\n        this.setTextures('actionSheet')\n        this.startInterval(\n          () => {\n            if (!this.getActionCondition(this.dest)) {\n              if (this.dest.type === 'Farm' && !this.dest.isUsedBy) {\n                this.sendToFarm(this.dest)\n              }\n              this.affectNewDest()\n              return\n            }\n            if (this.dest.hitPoints < this.dest.totalHitPoints) {\n              this.visible && sound.play('5107')\n              this.dest.hitPoints = Math.min(\n                Math.round(this.dest.hitPoints + this.dest.totalHitPoints / this.dest.constructionTime),\n                this.dest.totalHitPoints\n              )\n              if (this.dest.selected && this.owner.isPlayed) {\n                menu.updateInfo('hitPoints', this.dest.hitPoints + '/' + this.dest.totalHitPoints)\n              }\n              this.dest.updateHitPoints(this.action)\n            } else {\n              if (!this.dest.isBuilt) {\n                this.depst.updateHitPoints(this.action)\n                this.dest.isBuilt = true\n                if (this.dest.type === 'Farm' && !this.dest.isUsedBy) {\n                  this.sendToFarm(this.dest)\n                }\n              }\n              this.affectNewDest()\n            }\n          },\n          1000,\n          false\n        )\n        break\n      case ACTION_TYPES.attack:\n        if (!this.getActionCondition(this.dest)) {\n          this.affectNewDest()\n          return\n        }\n        this.setTextures('actionSheet')\n        if (this.range && this.type !== 'Villager') {\n          this.sprite.onLoop = () => {\n            if (!this.getActionCondition(this.dest)) {\n              if (this.dest && this.dest.hitPoints <= 0) {\n                this.dest.die()\n              }\n              this.affectNewDest()\n              return\n            }\n            if (!this.isUnitAtDest(this.action, this.dest)) {\n              this.stop()\n              return\n            }\n            if (this.destHasMoved()) {\n              this.realDest.i = this.dest.i\n              this.realDest.j = this.dest.j\n              this.realDest.x = this.dest.x\n              this.realDest.y = this.dest.y\n              const oldDeg = this.degree\n              this.degree = getInstanceDegree(this, this.dest.x, this.dest.y)\n              if (degreeToDirection(oldDeg) !== degreeToDirection(this.degree)) {\n                this.setTextures('actionSheet')\n              }\n            }\n          }\n          onSpriteLoopAtFrame(this.sprite, 6, () => {\n            const projectile = new Projectile(\n              {\n                owner: this,\n                target: this.dest,\n                type: this.projectile,\n                destination: this.realDest,\n              },\n              this.context\n            )\n            map.addChild(projectile)\n          })\n        } else {\n          this.startInterval(\n            () => {\n              if (!this.getActionCondition(this.dest)) {\n                if (this.dest && this.dest.hitPoints <= 0) {\n                  this.dest.die()\n                }\n                this.affectNewDest()\n                return\n              }\n              if (this.destHasMoved()) {\n                this.realDest.i = this.dest.i\n                this.realDest.j = this.dest.j\n                this.realDest.x = this.dest.x\n                this.realDest.y = this.dest.y\n                const oldDeg = this.degree\n                this.degree = getInstanceDegree(this, this.dest.x, this.dest.y)\n                if (degreeToDirection(oldDeg) !== degreeToDirection(this.degree)) {\n                  this.setTextures('actionSheet')\n                }\n              }\n              if (!this.isUnitAtDest(this.action, this.dest)) {\n                this.sendTo(this.dest, ACTION_TYPES.attack)\n                return\n              }\n              if (this.sounds && this.sounds.hit) {\n                this.visible &&\n                  sound.play(Array.isArray(this.sounds.hit) ? randomItem(this.sounds.hit) : this.sounds.hit)\n              }\n              if (this.dest.hitPoints > 0) {\n                this.dest.hitPoints = getHitPointsWithDamage(this, this.dest)\n                if (\n                  this.dest.selected &&\n                  (player.selectedUnit === this.dest ||\n                    player.selectedBuilding === this.dest ||\n                    player.selectedOther === this.dest)\n                ) {\n                  menu.updateInfo('hitPoints', this.dest.hitPoints + '/' + this.dest.totalHitPoints)\n                }\n                this.dest.isAttacked(this)\n                if (this.dest.hitPoints <= 0) {\n                  this.dest.die()\n                  this.affectNewDest()\n                }\n              }\n            },\n            this.rateOfFire * 1000,\n            false\n          )\n        }\n        break\n      case 'heal':\n        if (!this.getActionCondition(this.dest)) {\n          this.affectNewDest()\n          return\n        }\n        this.setTextures('actionSheet')\n        this.sprite.onLoop = () => {\n          if (!this.getActionCondition(this.dest)) {\n            this.affectNewDest()\n            return\n          }\n          if (this.destHasMoved()) {\n            this.realDest.i = this.dest.i\n            this.realDest.j = this.dest.j\n            this.realDest.x = this.dest.x\n            this.realDest.y = this.dest.y\n            const oldDeg = this.degree\n            this.degree = getInstanceDegree(this, this.dest.x, this.dest.y)\n            if (degreeToDirection(oldDeg) !== degreeToDirection(this.degree)) {\n              this.setTextures('actionSheet')\n            }\n          }\n          if (!this.isUnitAtDest(this.action, this.dest)) {\n            this.sendTo(this.dest, 'heal')\n            return\n          }\n          if (this.dest.hitPoints < this.dest.totalHitPoints) {\n            this.dest.hitPoints = Math.min(this.dest.hitPoints + this.healing, this.dest.totalHitPoints)\n            if (this.dest.selected && player.selectedUnit === this.dest) {\n              menu.updateInfo('hitPoints', this.dest.hitPoints + '/' + this.dest.totalHitPoints)\n            }\n          }\n        }\n        break\n      case ACTION_TYPES.takemeat:\n        if (!this.getActionCondition(this.dest)) {\n          this.affectNewDest()\n          return\n        }\n        this.setTextures('actionSheet')\n        this.startInterval(\n          () => {\n            if (!this.getActionCondition(this.dest)) {\n              this.affectNewDest()\n              return\n            }\n            // Villager is full we send him delivery first\n            if (this.loading === this.loadingMax[this.loadingType] || !this.dest) {\n              this.sendToDelivery()\n              return\n            }\n            // Villager take meat\n            this.visible && sound.play('5178')\n\n            this.loading++\n            this.loadingType = LOADING_TYPES.meat\n            this.updateInterfaceLoading()\n\n            this.dest.quantity = Math.max(this.dest.quantity - 1, 0)\n            this.dest.updateTexture()\n            if (this.dest.selected && this.owner.isPlayed) {\n              menu.updateInfo('quantity-text', this.dest.quantity)\n            }\n            // Set the walking with meat animation\n            if (this.loading > 0) {\n              if (this.allAssets[this.work]) {\n                this.walkingSheet = Assets.cache.get(this.allAssets[this.work].loadedSheet)\n              }\n              this.standingSheet = null\n            }\n            // Destroy corps if it out of quantity\n            if (this.dest.quantity <= 0) {\n              this.affectNewDest()\n            }\n          },\n          (1 / this.gatheringRate[this.work]) * 1000,\n          false\n        )\n        break\n      case ACTION_TYPES.fishing:\n        if (!this.getActionCondition(this.dest)) {\n          this.affectNewDest()\n          return\n        }\n        this.setTextures('actionSheet')\n        this.startInterval(\n          () => {\n            if (!this.getActionCondition(this.dest)) {\n              this.affectNewDest()\n              return\n            }\n            // Villager is full we send him delivery first\n            if (this.loading === this.loadingMax[this.loadingType] || !this.dest) {\n              this.sendToDelivery()\n              return\n            }\n            // Villager fish\n            this.loading++\n            this.loadingType = LOADING_TYPES.fish\n            this.updateInterfaceLoading()\n\n            this.dest.quantity = Math.max(this.dest.quantity - 1, 0)\n            if (this.dest.selected && this.owner.isPlayed) {\n              menu.updateInfo('quantity-text', this.dest.quantity)\n            }\n            // Set the walking with meat animation\n            if (this.loading > 0) {\n              if (this.allAssets && this.allAssets[this.work]) {\n                this.walkingSheet = Assets.cache.get(this.allAssets[this.work].loadedSheet)\n              }\n              this.standingSheet = null\n            }\n            // Destroy corps if it out of quantity\n            if (this.dest.quantity <= 0) {\n              this.affectNewDest()\n            }\n          },\n          (1 / this.gatheringRate[this.work]) * 1000,\n          false\n        )\n        if (this.category !== 'Boat') {\n          onSpriteLoopAtFrame(this.sprite, 6, () => {\n            this.visible && sound.play('5125')\n          })\n        }\n        break\n      case ACTION_TYPES.hunt:\n        if (!this.getActionCondition(this.dest)) {\n          this.affectNewDest()\n          return\n        }\n        if (this.dest.isDead) {\n          this.previousDest ? this.goBackToPrevious() : this.sendToTakeMeat(this.dest)\n        }\n        this.setTextures('actionSheet')\n        this.sprite.onLoop = () => {\n          if (!this.getActionCondition(this.dest)) {\n            if (this.dest && this.dest.hitPoints <= 0) {\n              this.dest.die()\n              this.previousDest ? this.goBackToPrevious() : this.sendToTakeMeat(this.dest)\n              return\n            }\n            this.affectNewDest()\n            return\n          }\n          if (!this.isUnitAtDest(this.action, this.dest)) {\n            this.stop()\n            return\n          }\n          if (this.destHasMoved()) {\n            this.realDest.i = this.dest.i\n            this.realDest.j = this.dest.j\n            this.realDest.x = this.dest.x\n            this.realDest.y = this.dest.y\n            const oldDeg = this.degree\n            this.degree = getInstanceDegree(this, this.dest.x, this.dest.y)\n            if (degreeToDirection(oldDeg) !== degreeToDirection(this.degree)) {\n              this.setTextures('actionSheet')\n            }\n          }\n        }\n        onSpriteLoopAtFrame(this.sprite, 6, () => {\n          const projectile = new Projectile(\n            {\n              owner: this,\n              target: this.dest,\n              type: 'Spear',\n              destination: this.realDest,\n              damage: 4,\n            },\n            this.context\n          )\n          map.addChild(projectile)\n        })\n        break\n      default:\n        this.stop()\n    }\n  }\n\n  detect(instance) {\n    if (\n      this.work === WORK_TYPES.attacker &&\n      instance &&\n      instance.family === FAMILY_TYPES.unit &&\n      !this.path.length &&\n      !this.dest &&\n      this.getActionCondition(instance, ACTION_TYPES.attack)\n    ) {\n      this.sendTo(instance, ACTION_TYPES.attack)\n    }\n  }\n\n  handleAffectNewDestHunter() {\n    const firstTargets = findInstancesInSight(this, instance =>\n      this.getActionCondition(instance, ACTION_TYPES.takemeat)\n    )\n    if (firstTargets.length) {\n      const target = getClosestInstanceWithPath(this, firstTargets)\n      if (target) {\n        if (this.action !== ACTION_TYPES.takemeat) {\n          this.action = ACTION_TYPES.takemeat\n          if (this.allAssets[this.work]) {\n            this.actionSheet = Assets.cache.get(this.allAssets[this.work].harvestSheet)\n          }\n        }\n        if (instanceContactInstance(this, target)) {\n          this.degree = getInstanceDegree(this, target.x, target.y)\n          this.getAction(this.action)\n          return true\n        }\n        this.setDest(target.instance)\n        this.setPath(target.path)\n        return true\n      }\n    }\n    const secondTargets = findInstancesInSight(this, instance => this.getActionCondition(instance, ACTION_TYPES.hunt))\n    if (secondTargets.length) {\n      const target = getClosestInstanceWithPath(this, secondTargets)\n      if (target) {\n        if (this.action !== ACTION_TYPES.hunt) {\n          this.action = ACTION_TYPES.hunt\n          if (this.allAssets[this.work]) {\n            this.actionSheet = Assets.cache.get(this.allAssets[this.work].actionSheet)\n          }\n        }\n        if (instanceContactInstance(this, target)) {\n          this.degree = getInstanceDegree(this, target.x, target.y)\n          this.getAction(this.action)\n          return true\n        }\n        this.setDest(target.instance)\n        this.setPath(target.path)\n        return true\n      }\n    }\n    return false\n  }\n\n  upgrade(type) {\n    const data = this.owner.config.units[type]\n    this.type = type\n    this.hitPoints = data.totalHitPoints - (this.totalHitPoints - this.hitPoints)\n    for (const [key, value] of Object.entries(data)) {\n      this[key] = value\n    }\n    for (const [key, value] of Object.entries(this.assets)) {\n      this[key] = Assets.cache.get(value)\n    }\n    if (this.action && !this.path.length) {\n      this.getAction(this.action)\n    } else {\n      this.setTextures(this.currentSheet)\n    }\n  }\n\n  affectNewDest() {\n    this.stopInterval()\n    if (this.previousDest && this.action !== ACTION_TYPES.delivery) {\n      this.goBackToPrevious()\n      return\n    }\n    let handleSuccess = false\n    if (this.type === 'Villager' && (this.action === ACTION_TYPES.takemeat || this.action === ACTION_TYPES.hunt)) {\n      handleSuccess = this.handleAffectNewDestHunter()\n    } else if (!this.dest || this.dest.family !== FAMILY_TYPES.animal) {\n      const targets = findInstancesInSight(this, instance => this.getActionCondition(instance))\n      if (targets.length) {\n        const target = getClosestInstanceWithPath(this, targets)\n        if (target) {\n          if (instanceContactInstance(this, target)) {\n            this.degree = getInstanceDegree(this, target.x, target.y)\n            this.getAction(this.action)\n            return\n          }\n          this.setDest(target.instance)\n          this.setPath(target.path)\n          return\n        }\n      }\n    }\n    if (!handleSuccess) {\n      const notDeliveryWork = [WORK_TYPES.builder, WORK_TYPES.attacker, WORK_TYPES.healer]\n      if (this.loading && !notDeliveryWork.includes(this.work)) {\n        this.sendToDelivery()\n      } else {\n        this.stop()\n      }\n    }\n  }\n\n  isUnitAtDest(action, dest) {\n    if (!action) {\n      return false\n    }\n    if (!dest) {\n      this.affectNewDest()\n      return false\n    }\n    if (\n      (this.type !== 'Villager' || action === ACTION_TYPES.hunt) &&\n      this.range &&\n      instancesDistance(this, dest) <= this.range\n    ) {\n      return true\n    }\n    return instanceContactInstance(this, dest)\n  }\n\n  destHasMoved() {\n    return (\n      (this.dest.i !== this.realDest.i || this.dest.j !== this.realDest.j) &&\n      instancesDistance(this, this.dest) <= this.sight\n    )\n  }\n\n  moveToPath() {\n    const {\n      context: { map },\n    } = this\n    const next = this.path[this.path.length - 1]\n    const nextCell = map.grid[next.i][next.j]\n    if (!this.dest || this.dest.isDestroyed) {\n      this.affectNewDest()\n      return\n    }\n    // Collision with another walking unit, we block the mouvement\n    if (\n      nextCell.has &&\n      nextCell.has.family === FAMILY_TYPES.unit &&\n      nextCell.has.label !== this.label &&\n      nextCell.has.hasPath() &&\n      instancesDistance(this, nextCell.has) <= 1 &&\n      nextCell.has.sprite.playing\n    ) {\n      this.sprite.stop()\n      return\n    }\n    if (nextCell.solid && this.dest) {\n      this.sendTo(this.dest, this.action)\n      return\n    }\n\n    if (!this.sprite.playing) {\n      this.sprite.play()\n    }\n\n    this.zIndex = getInstanceZIndex(this)\n    if (instancesDistance(this, nextCell, false) <= this.speed) {\n      this.z = nextCell.z\n      this.i = nextCell.i\n      this.j = nextCell.j\n      if (this.currentCell.has === this) {\n        this.currentCell.has = null\n        this.currentCell.solid = false\n      }\n      this.currentCell = map.grid[this.i][this.j]\n      if (this.currentCell.has === null) {\n        this.currentCell.has = this\n        this.currentCell.solid = true\n      }\n      updateInstanceVisibility(this)\n      this.path.pop()\n\n      // Destination moved\n      if (this.destHasMoved()) {\n        this.sendTo(this.dest, this.action)\n        return\n      }\n      if (this.isUnitAtDest(this.action, this.dest)) {\n        this.path = []\n        this.stopInterval()\n        this.degree = getInstanceDegree(this, this.dest.x, this.dest.y)\n        this.getAction(this.action)\n        return\n      }\n\n      if (!this.path.length) {\n        this.stop()\n      }\n    } else {\n      const {\n        context: { menu, player },\n      } = this\n      // Move to next\n      const oldDeg = this.degree\n      let speed = this.speed\n      if (this.loading > 0) {\n        speed *= 0.8\n      }\n      moveTowardPoint(this, nextCell.x, nextCell.y, this.speed)\n      canUpdateMinimap(this, player) && menu.updatePlayerMiniMap(this.owner)\n      if (degreeToDirection(oldDeg) !== degreeToDirection(this.degree)) {\n        // Change animation according to degree\n        this.setTextures('walkingSheet')\n      }\n    }\n  }\n\n  isAttacked(instance) {\n    if (!instance || this.dest === instance || this.isDead) {\n      return\n    }\n    const currentDest = this.dest\n    if (this.type === 'Villager') {\n      if (instance.family === FAMILY_TYPES.animal) {\n        this.sendToHunt(instance)\n      } else {\n        this.sendToAttack(instance)\n      }\n    } else {\n      this.sendTo(instance, ACTION_TYPES.attack)\n    }\n    this.previousDest = currentDest\n  }\n\n  stop() {\n    if (this.currentCell.has.label !== this.label && this.currentCell.solid) {\n      this.sendTo(this.currentCell)\n      return\n    }\n    this.handleChangeDest()\n    this.inactif = true\n    this.action = null\n    this.dest = null\n    this.realDest = null\n    this.currentCell.has = this\n    this.currentCell.solid = true\n    this.path = []\n    this.stopInterval()\n    this.setTextures('standingSheet')\n  }\n\n  startInterval(callback, time, immediate = true) {\n    const finalCb = () => {\n      const { paused } = this.context\n      if (paused) {\n        return\n      }\n      callback()\n    }\n    if (this.isDead) {\n      return\n    }\n    this.stopInterval()\n    immediate && finalCb()\n    this.interval = setInterval(finalCb, time)\n  }\n\n  stopInterval() {\n    if (this.interval) {\n      clearInterval(this.interval)\n      this.interval = null\n    }\n  }\n\n  step() {\n    if (this.hitPoints <= 0) {\n      this.die()\n    } else if (this.hasPath()) {\n      this.moveToPath()\n    }\n  }\n\n  explore() {\n    const {\n      context: { map },\n    } = this\n    let dest\n    for (let i = 3; i < 50; i++) {\n      getCellsAroundPoint(this.i, this.j, map.grid, i, cell => {\n        if (!this.owner.views[cell.i][cell.j].viewed && !cell.solid) {\n          dest = this.owner.views[cell.i][cell.j]\n          return\n        }\n      })\n      if (dest) {\n        this.sendTo(dest)\n        break\n      }\n    }\n  }\n\n  runaway(instance) {\n    const {\n      context: { map },\n    } = this\n    let dest = null\n    getCellsAroundPoint(this.i, this.j, map.grid, this.sight, cell => {\n      if (\n        !cell.solid &&\n        (!dest ||\n          pointsDistance(cell.i, cell.j, instance.i, instance.j) >\n            pointsDistance(dest.i, dest.j, instance.i, instance.j))\n      ) {\n        dest = this.owner.views[cell.i][cell.j]\n        return\n      }\n    })\n    if (dest) {\n      this.sendTo(dest)\n    } else {\n      this.stop()\n    }\n  }\n\n  decompose() {\n    const {\n      context: { map },\n    } = this\n    this.setTextures('corpseSheet')\n    this.sprite.animationSpeed = (1 / (CORPSE_TIME * 1000)) * ACCELERATOR\n    if (map.grid[this.i][this.j].has === this) {\n      map.grid[this.i][this.j].has = null\n      map.grid[this.i][this.j].corpses.push(this)\n      map.grid[this.i][this.j].solid = false\n    }\n  }\n\n  death() {\n    this.setTextures('dyingSheet')\n    this.zIndex--\n    this.sprite.loop = false\n    this.sprite.onComplete = () => {\n      updateInstanceVisibility(this)\n      // Remove from player units\n      let index = this.owner.corpses.indexOf(this)\n      if (index < 0) {\n        this.owner.corpses.push(this)\n      }\n      this.decompose()\n    }\n  }\n\n  die() {\n    if (this.isDead) {\n      return\n    }\n    const {\n      context: { player, menu },\n    } = this\n\n    this.sounds &&\n      this.sounds.die &&\n      this.visible &&\n      sound.play(Array.isArray(this.sounds.die) ? randomItem(this.sounds.die) : this.sounds.die)\n\n    this.stopInterval()\n    if (this.selected && player.selectedOther === this) {\n      player.unselectUnit(this)\n    }\n    if (this.dest && this.dest.isUsedBy === this) {\n      this.dest.isUsedBy = null\n    }\n    this.hitPoints = 0\n    this.path = []\n    this.action = null\n    this.eventMode = 'none'\n    this.isDead = true\n    this.unselect()\n    if (this.owner) {\n      this.owner.population--\n      if (this.owner.isPlayed && this.owner.selectedBuilding && this.owner.selectedBuilding.displayPopulation) {\n        menu.updateInfo(\n          'population-text',\n          this.owner.population + '/' + Math.min(POPULATION_MAX, this.owner.POPULATION_MAX)\n        )\n      }\n      // Remove from player units\n      let index = this.owner.units.indexOf(this)\n      if (index >= 0) {\n        this.owner.units.splice(index, 1)\n      }\n      // Update from player selected unit\n      if (this.owner.selectedUnit === this) {\n        menu.updateInfo('hitPoints', this.hitPoints + '/' + this.totalHitPoints)\n      }\n    }\n    this.death()\n    canUpdateMinimap(this, player) && menu.updatePlayerMiniMapEvt(this.owner)\n  }\n\n  clear() {\n    const {\n      context: { map },\n    } = this\n    this.isDestroyed = true\n    // Remove from player units\n    let index = this.owner.corpses.indexOf(this)\n    if (index >= 0) {\n      this.owner.corpses.splice(index, 1)\n    }\n    // Remove from map corpses\n    const corpsesIndex = map.grid[this.i][this.j].corpses.indexOf(this)\n    if (index >= 0) {\n      map.grid[this.i][this.j].corpses.splice(corpsesIndex, 1)\n    }\n    map.removeChild(this)\n    this.destroy({ child: true, texture: true })\n  }\n\n  setTextures(sheet) {\n    setUnitTexture(sheet, this, ACCELERATOR)\n  }\n\n  updateInterfaceLoading() {\n    const {\n      context: { menu },\n    } = this\n    if (this.selected && this.owner.isPlayed && this.owner.selectedUnit === this) {\n      if (this.loading === 1) {\n        menu.updateInfo('loading', element => (element.innerHTML = this.getLoadingElement().innerHTML))\n      } else if (this.loading > 1) {\n        menu.updateInfo('loading-text', this.loading)\n      } else {\n        menu.updateInfo('loading', element => (element.innerHTML = ''))\n      }\n    }\n  }\n\n  getLoadingElement() {\n    const {\n      context: { menu },\n    } = this\n    const loadingDiv = document.createElement('div')\n    loadingDiv.className = 'unit-loading'\n    loadingDiv.id = 'loading'\n\n    if (this.loading) {\n      const iconImg = document.createElement('img')\n      iconImg.className = 'unit-loading-icon'\n      iconImg.src = menu.infoIcons[LOADING_FOOD_TYPES.includes(this.loadingType) ? 'food' : this.loadingType]\n      const textDiv = document.createElement('div')\n      textDiv.id = 'loading-text'\n      textDiv.textContent = this.loading\n      loadingDiv.appendChild(iconImg)\n      loadingDiv.appendChild(textDiv)\n    }\n    return loadingDiv\n  }\n\n  commonSendTo(target, work, action, keepPrevious) {\n    const {\n      context: { menu },\n    } = this\n    const workFromLoading = getWorkWithLoadingType(this.loadingType)\n    if (\n      work !== WORK_TYPES.builder &&\n      work !== workFromLoading &&\n      !(WORK_FOOD_TYPES.includes(work) && WORK_FOOD_TYPES.includes(workFromLoading))\n    ) {\n      this.loading = 0\n      this.loadingType = null\n      this.updateInterfaceLoading()\n    }\n    if (this.work !== work || this.action !== action) {\n      this.work = work\n      this.owner.isPlayed && this.owner.selectedUnit === this && menu.updateInfo('type', this.work)\n      if (this.allAssets && this.allAssets[work]) {\n        this.actionSheet = getActionSheet(work, action, Assets, this)\n        if (!this.loading) {\n          this.standingSheet = Assets.cache.get(this.allAssets[work]['standingSheet'])\n          this.walkingSheet = Assets.cache.get(this.allAssets[work]['walkingSheet'])\n          this.dyingSheet = Assets.cache.get(this.allAssets[work]['dyingSheet'])\n          this.corpseSheet = Assets.cache.get(this.allAssets[work]['corpseSheet'])\n        }\n      }\n    }\n    this.previousDest = keepPrevious ? this.previousDest : null\n    return this.sendTo(target, action)\n  }\n\n  sendToDelivery() {\n    const {\n      context: { map },\n    } = this\n    let buildingTypes = []\n    if (this.category === 'Boat') {\n      buildingTypes = ['Dock']\n    } else {\n      buildingTypes = ['TownCenter']\n      const buildings = {\n        Granary: this.owner.config.buildings.Granary,\n        StoragePit: this.owner.config.buildings.StoragePit,\n      }\n      for (const [key, value] of Object.entries(buildings)) {\n        if (value.accept && value.accept.includes(this.loadingType)) {\n          buildingTypes.push(key)\n          break\n        }\n      }\n    }\n\n    const targets = this.owner.buildings.filter(building =>\n      getActionCondition(this, building, ACTION_TYPES.delivery, { buildingTypes })\n    )\n    const target = getClosestInstance(this, targets)\n    if (this.dest) {\n      this.previousDest = this.dest\n    } else {\n      this.previousDest = map.grid[this.i][this.j]\n    }\n    this.sendTo(target, ACTION_TYPES.delivery)\n  }\n\n  sendToFish(target) {\n    return this.commonSendTo(target, WORK_TYPES.fisher, ACTION_TYPES.fishing)\n  }\n\n  sendToAttack(target) {\n    return this.commonSendTo(target, WORK_TYPES.attacker, ACTION_TYPES.attack, { resource: 'attack' })\n  }\n\n  sendToTakeMeat(target) {\n    return this.commonSendTo(target, WORK_TYPES.hunter, ACTION_TYPES.takemeat, { actionSheet: 'harvestSheet' })\n  }\n\n  sendToHunt(target) {\n    return this.commonSendTo(target, WORK_TYPES.hunter, ACTION_TYPES.hunt)\n  }\n\n  sendToBuilding(target) {\n    return this.commonSendTo(target, WORK_TYPES.builder, ACTION_TYPES.build)\n  }\n\n  sendToFarm(target) {\n    return this.commonSendTo(target, WORK_TYPES.farmer, ACTION_TYPES.farm)\n  }\n\n  sendToTree(target) {\n    return this.commonSendTo(target, WORK_TYPES.woodcutter, ACTION_TYPES.chopwood)\n  }\n\n  sendToBerrybush(target) {\n    return this.commonSendTo(target, WORK_TYPES.forager, ACTION_TYPES.forageberry)\n  }\n\n  sendToStone(target) {\n    return this.commonSendTo(target, WORK_TYPES.stoneminer, ACTION_TYPES.minestone)\n  }\n\n  sendToGold(target) {\n    return this.commonSendTo(target, WORK_TYPES.goldminer, ACTION_TYPES.minegold)\n  }\n\n  setDefaultInterface(element, data) {\n    const civDiv = document.createElement('div')\n    civDiv.id = 'civ'\n    civDiv.textContent = this.owner.civ\n    element.appendChild(civDiv)\n\n    const typeDiv = document.createElement('div')\n    typeDiv.id = 'type'\n    typeDiv.textContent = this.type === 'Villager' ? this.work || this.type : this.type\n    element.appendChild(typeDiv)\n\n    const iconImg = document.createElement('img')\n    iconImg.id = 'icon'\n    iconImg.src = getIconPath(data.icon)\n    element.appendChild(iconImg)\n\n    const hitPointsDiv = document.createElement('div')\n    hitPointsDiv.id = 'hitPoints'\n    hitPointsDiv.textContent = this.hitPoints + '/' + this.totalHitPoints\n    element.appendChild(hitPointsDiv)\n\n    const infosDiv = document.createElement('div')\n    infosDiv.id = 'infos'\n\n    const infos = [\n      ['meleeAttack', '007_50731'],\n      ['pierceAttack', '006_50731'],\n      ['meleeArmor', '008_50731'],\n      ['pierceArmor', '010_50731'],\n    ]\n\n    for (let i = 0; i < infos.length; i++) {\n      const info = infos[i]\n      if (data[info[0]]) {\n        const infoDiv = document.createElement('div')\n        infoDiv.id = 'info'\n\n        const attackImg = document.createElement('img')\n        attackImg.src = getIconPath(info[1])\n        const attackDiv = document.createElement('div')\n        attackDiv.id = info[0]\n        attackDiv.textContent = data[info[0]]\n        infoDiv.appendChild(attackImg)\n        infoDiv.appendChild(attackDiv)\n        infosDiv.appendChild(infoDiv)\n      }\n    }\n\n    element.appendChild(infosDiv)\n  }\n}\n","import { Assets } from 'pixi.js'\nimport {\n  canAfford,\n  drawInstanceBlinkingSelection,\n  payCost,\n  uuidv4,\n  getHexColor,\n  updateObject,\n  getActionCondition,\n  canUpdateMinimap,\n  isValidCondition,\n} from '../../lib'\nimport { sound } from '@pixi/sound'\nimport { Building } from '../building'\nimport { Unit } from '../unit'\nimport { FAMILY_TYPES, PLAYER_TYPES, POPULATION_MAX } from '../../constants'\n\nexport class Player {\n  constructor(options, context) {\n    this.family = FAMILY_TYPES.player\n    this.context = context\n\n    const { map } = context\n    this.label = uuidv4()\n    this.parent = map\n\n    this.wood = map.devMode ? 10000 : 200\n    this.food = map.devMode ? 10000 : 200\n    this.stone = map.devMode ? 10000 : 150\n    this.gold = map.devMode ? 10000 : 0\n    this.corpses = []\n    this.units = []\n    this.buildings = []\n    this.population = 0\n    this.technologies = []\n    this.cellViewed = 0\n    this.age = 0\n    Object.keys(options).forEach(prop => {\n      this[prop] = options[prop]\n    })\n\n    this.POPULATION_MAX = this.POPULATION_MAX || map.devMode ? POPULATION_MAX : 0\n\n    this.colorHex = getHexColor(this.color)\n    this.config = { ...Assets.cache.get('config') }\n    this.techs = { ...Assets.cache.get('technology') }\n    this.hasBuilt = this.hasBuilt || map.devMode ? Object.keys(this.config.buildings).map(key => key) : []\n    const cloneGrid = []\n    for (let i = 0; i <= map.size; i++) {\n      for (let j = 0; j <= map.size; j++) {\n        if (cloneGrid[i] == null) {\n          cloneGrid[i] = []\n        }\n        cloneGrid[i][j] = {\n          i,\n          j,\n          viewBy: this.views?.[i][j].viewBy ?? [],\n          onViewed: () => {\n            const {\n              context: { menu, map },\n            } = this\n            if (this.isPlayed && !map.revealEverything) {\n              menu.updateTerrainMiniMap(i, j)\n            }\n          },\n          viewed:\n            this.views?.[i][j].viewed ??\n            ((this.isPlayed && this.type === PLAYER_TYPES.human && map.revealTerrain) || false),\n        }\n      }\n    }\n    this.views = cloneGrid\n  }\n\n  spawnBuilding(options) {\n    const building = this.createBuilding(options)\n    if (this.isPlayed) {\n      let hasSentVillager = false\n      let hasSentOther = false\n\n      for (let i = 0; i < this.selectedUnits.length; i++) {\n        const unit = this.selectedUnits[i]\n        if (unit.type === 'Villager') {\n          if (getActionCondition(unit, building, ACTION_TYPES.build)) {\n            hasSentVillager = true\n            unit.sendToBuilding(building)\n          }\n        } else {\n          unit.sendTo(building)\n          hasSentOther = true\n        }\n      }\n      if (hasSentVillager) {\n        drawInstanceBlinkingSelection(building)\n      }\n      if (hasSentOther) {\n        const voice = randomItem(['5075', '5076', '5128', '5164'])\n        sound.play(voice)\n        return\n      } else if (hasSentVillager) {\n        const voice = this.config.units.Villager.sounds.build\n        sound.play(voice)\n        return\n      }\n    }\n\n    return building\n  }\n\n  onAgeChange() {\n    const {\n      context: { players, menu },\n    } = this\n    if (this.isPlayed) {\n      sound.play('5169')\n    }\n    for (let i = 0; i < this.buildings.length; i++) {\n      const building = this.buildings[i]\n      if (building.isBuilt && !building.isDead) {\n        building.finalTexture()\n      }\n    }\n    for (let i = 0; i < players.length; i++) {\n      const player = players[i]\n      if (player.type === PLAYER_TYPES.human) {\n        if (player.selectedUnit && player.selectedUnit.owner.label === this.label) {\n          menu.setBottombar(player.selectedUnit)\n        } else if (player.selectedBuilding && player.selectedBuilding.owner.label === this.label) {\n          menu.setBottombar(player.selectedBuilding)\n        } else if (player.selectedOther && player.selectedOther.owner.label === this.label) {\n          menu.setBottombar(player.selectedOther)\n        }\n      }\n    }\n  }\n\n  otherPlayers() {\n    const {\n      context: { players },\n    } = this\n    const others = [...players]\n    others.splice(players.indexOf(this), 1)\n    return others\n  }\n\n  updateConfig(operations) {\n    for (let i = 0; i < operations.length; i++) {\n      const operation = operations[i]\n      const types = Array.isArray(operation.type) ? operation.type : [operation.type]\n      for (let j = 0; j < types.length; j++) {\n        const type = types[j]\n        if (Object.keys(this.config.buildings).includes(type)) {\n          this.config.buildings[type] && updateObject(this.config.buildings[type], operation)\n        } else if (Object.keys(this.config.units).includes(type)) {\n          this.config.units[type] && updateObject(this.config.units[type], operation)\n        }\n      }\n    }\n  }\n\n  buyBuilding(i, j, type) {\n    const {\n      context: { menu, map },\n    } = this\n    const config = this.config.buildings[type]\n    if (\n      canAfford(this, config.cost) &&\n      (!config.conditions || config.conditions.every(condition => isValidCondition(condition, this)))\n    ) {\n      this.spawnBuilding({ i, j, type, isBuilt: map.devMode })\n      payCost(this, config.cost)\n      this.isPlayed && menu.updateTopbar()\n      return true\n    }\n    return false\n  }\n\n  createUnit(options) {\n    const { context } = this\n    let unit = context.map.addChild(new Unit({ ...options, owner: this }, context))\n    canUpdateMinimap(unit, context.player) && context.menu.updatePlayerMiniMapEvt(this)\n    return unit\n  }\n\n  createBuilding(options) {\n    const { context } = this\n    const building = context.map.addChild(new Building({ ...options, owner: this }, context))\n    this.buildings.push(building)\n    canUpdateMinimap(building, context.player) && context.menu.updatePlayerMiniMapEvt(this)\n    return building\n  }\n}\n","import { Player } from './player'\n\nimport {\n  getValuePercentage,\n  getPositionInGridAroundInstance,\n  getClosestInstance,\n  instancesDistance,\n  getCellsAroundPoint,\n  canAfford,\n} from '../../lib'\nimport { WORK_TYPES, ACTION_TYPES, FAMILY_TYPES, PLAYER_TYPES } from '../../constants'\n\nconst styleLogInfo1 = 'background: #00ff00; color: #ffff00'\nconst styleLogInfo2 = 'background: #222; color: #ff0000'\n\nexport class AI extends Player {\n  constructor({ ...props }, context) {\n    super({ ...props, isPlayed: false, type: PLAYER_TYPES.ai }, context)\n    this.foundedTrees = []\n    this.foundedBerrybushs = []\n    this.foundedGolds = []\n    this.foundedStones = []\n    this.foundedEnemyBuildings = []\n    this.interval = setInterval(() => this.step(), 4000)\n    this.selectedUnits = []\n    this.selectedUnit = null\n    this.selectedBuilding = null\n    this.selectedOther = null\n    this.distSpread = 1\n    this.cellViewed = 0\n\n    this.nextAge = {\n      1: 'ToolAge',\n      2: 'BronzeAge',\n      3: 'IronAge',\n    }\n    this.maxVillagerPerAge = {\n      0: 16,\n      1: 24,\n      2: 40,\n      3: 50,\n    }\n    this.villageTargetPercentageByAge = {\n      0: {\n        wood: 40,\n        food: 60,\n        gold: 0,\n        stone: 0,\n      },\n      1: {\n        wood: 45,\n        food: 45,\n        gold: 10,\n        stone: 0,\n      },\n      2: {\n        wood: 35,\n        food: 35,\n        gold: 20,\n        stone: 10,\n      },\n      3: {\n        wood: 30,\n        food: 30,\n        gold: 25,\n        stone: 15,\n      },\n    }\n    this.maxBuildingByAge = {\n      0: {\n        StoragePit: 1,\n        Granary: 1,\n        Barracks: 1,\n        Market: 1,\n      },\n      1: {\n        StoragePit: 2,\n        Granary: 2,\n        Farm: 4,\n        Barracks: 1,\n        Market: 1,\n      },\n      2: {\n        StoragePit: 3,\n        Granary: 3,\n        Farm: 6,\n        Barracks: 2,\n        Market: 1,\n      },\n      3: {\n        StoragePit: 4,\n        Granary: 4,\n        Farm: 10,\n        Barracks: 2,\n        Market: 1,\n      },\n    }\n  }\n\n  hasNotReachBuildingLimit(buildingType, buildings) {\n    return (\n      !this.maxBuildingByAge[this.age][buildingType] || buildings.length < this.maxBuildingByAge[this.age][buildingType]\n    )\n  }\n\n  buildingsByTypes(types) {\n    return this.buildings.filter(b => types.includes(b.type))\n  }\n\n  getUnitExtraOptions(type) {\n    const me = this\n    return {\n      handleSetDest: target => {\n        const { map } = me.context\n        if (type === 'Villager' && target.family === FAMILY_TYPES.resource) {\n          const buildingType = target.type === 'Berrybush' ? 'Granary' : 'StoragePit'\n          const buildings = me.buildingsByTypes([buildingType])\n          if (\n            canAfford(me, me.config.buildings[buildingType]) &&\n            me.hasNotReachBuildingLimit(buildingType, buildings)\n          ) {\n            const closestBuilding = getClosestInstance(target, [...buildings, ...me.buildingsByTypes(['TownCenter'])])\n            if (!closestBuilding || instancesDistance(closestBuilding, target) > 5) {\n              const pos = getPositionInGridAroundInstance(target, map.grid, [1, 5], 1)\n              if (pos && me.buyBuilding(pos.i, pos.j, buildingType)) {\n                console.log(`Building ${buildingType} at:`, pos)\n              }\n            }\n          }\n        }\n      },\n    }\n  }\n\n  step() {\n    const { map, paused } = this.context\n    if (paused) {\n      return\n    }\n\n    const maxVillagers = this.maxVillagerPerAge[this.age]\n    const maxVillagersOnConstruction = 4\n    const maxClubmans = 10\n    const howManyVillagerBeforeBuyingABarracks = 10\n    const howManySoldiersBeforeAttack = 5\n\n    console.log('%c ----Step started', styleLogInfo1)\n\n    console.log(\n      `%c Age: ${this.age}, Wood: ${this.wood}, Food: ${this.food}, Stone: ${this.stone}, Gold: ${this.gold}, Population: ${this.population}/${this.POPULATION_MAX}`,\n      styleLogInfo2\n    )\n\n    const filterUnitsByType = (type, condition = unit => unit.hitPoints > 0) =>\n      this.units.filter(unit => unit.type === type && condition(unit))\n\n    const villagers = filterUnitsByType('Villager')\n    const clubmans = filterUnitsByType('Clubman')\n\n    console.log(\n      `%c Villagers: ${villagers.length}/${maxVillagers}, Clubmans: ${clubmans.length}/${maxClubmans}`,\n      styleLogInfo2\n    )\n\n    const towncenters = this.buildingsByTypes(['TownCenter'])\n    const storagepits = this.buildingsByTypes(['StoragePit'])\n    const houses = this.buildingsByTypes(['House'])\n    const granarys = this.buildingsByTypes(['Granary'])\n    const barracks = this.buildingsByTypes(['Barracks'])\n    const markets = this.buildingsByTypes(['Market'])\n    const farms = this.buildingsByTypes(['Farm'])\n    const emptyFarms = farms.filter(({ isUsedBy }) => !isUsedBy)\n\n    console.log(\n      `%c Towncenters: ${towncenters.length}, Houses: ${houses.length}, StoragePits: ${storagepits.length}, Granaries: ${granarys.length}, Barracks: ${barracks.length}, Markets: ${markets}`,\n      styleLogInfo2\n    )\n\n    const notBuiltBuildings = this.buildings.filter(\n      b => !b.isBuilt || (b.hitPoints > 0 && b.hitPoints < b.totalHitPoints)\n    )\n    const notBuiltHouses = notBuiltBuildings.filter(b => b.type === 'House')\n\n    const villagersByWork = works => villagers.filter(v => !v.inactif && works.includes(v.work))\n    const inactifVillagers = villagers.filter(v => v.inactif && v.action !== ACTION_TYPES.attack)\n\n    const villagersOnWood = villagersByWork([WORK_TYPES.woodcutter])\n    const villagersOnFood = villagersByWork([WORK_TYPES.forager, WORK_TYPES.farmer, WORK_TYPES.hunter])\n    const villagersOnGold = villagersByWork([WORK_TYPES.goldminer])\n    const villagersOnStone = villagersByWork([WORK_TYPES.stoneminer])\n    const builderVillagers = villagersByWork([WORK_TYPES.builder])\n\n    const maxVillagersOnWood = getValuePercentage(villagers.length, this.villageTargetPercentageByAge[this.age]['wood'])\n    const maxVillagersOnFood = getValuePercentage(villagers.length, this.villageTargetPercentageByAge[this.age]['food'])\n    const maxVillagersOnGold = getValuePercentage(villagers.length, this.villageTargetPercentageByAge[this.age]['gold'])\n    const maxVillagersOnStone = getValuePercentage(\n      villagers.length,\n      this.villageTargetPercentageByAge[this.age]['stone']\n    )\n\n    console.log(\n      `%c Villagers on Wood: ${villagersOnWood.length}/${maxVillagersOnWood}, Villagers on Food: ${villagersOnFood.length}/${maxVillagersOnFood}, Villagers on Stone: ${villagersOnStone.length}/${maxVillagersOnStone}, Villagers on Gold: ${villagersOnGold.length}/${maxVillagersOnGold}, Builder Villagers: ${builderVillagers.length}`,\n      styleLogInfo2\n    )\n\n    const inactifClubmans = clubmans.filter(c => c.inactif && c.action !== ACTION_TYPES.attack && c.assault)\n    const waitingClubmans = clubmans.filter(c => c.inactif && c.action !== ACTION_TYPES.attack && !c.assault)\n\n    console.log(\n      `%c Inactif Clubmans: ${inactifClubmans.length}, Waiting Clubmans: ${waitingClubmans.length}`,\n      styleLogInfo2\n    )\n\n    // Player losing condition\n    if (!this.buildings.length && !this.units.length) {\n      console.log('Player has no buildings and units. Dying...')\n      this.die()\n      return\n    }\n\n    // Cell Viewing Logic\n    if (this.cellViewed <= map.totalCells) {\n      getCellsAroundPoint(this.i, this.j, this.views, this.distSpread, cell => {\n        const globalCell = map.grid[cell.i][cell.j]\n        cell.has = globalCell.has\n        if (globalCell.has) {\n          const { has } = globalCell\n          if (has.quantity > 0) {\n            if (has.type === 'Tree' && !this.foundedTrees.includes(has)) {\n              this.foundedTrees.push(has)\n            }\n            if (has.type === 'Berrybush' && !this.foundedBerrybushs.includes(has)) {\n              this.foundedBerrybushs.push(has)\n            }\n            if (has.type === 'Stone' && !this.foundedStones.includes(has)) {\n              this.foundedStones.push(has)\n            }\n            if (has.type === 'Gold' && !this.foundedGolds.includes(has)) {\n              this.foundedGolds.push(has)\n            }\n          }\n          if (\n            has.family === FAMILY_TYPES.building &&\n            has.owner.label !== this.label &&\n            !this.foundedEnemyBuildings.includes(has)\n          ) {\n            this.foundedEnemyBuildings.push(has)\n          }\n        }\n        if (!cell.viewed) {\n          this.cellViewed++\n          cell.viewed = true\n        }\n      })\n      this.distSpread++\n    }\n\n    // Utility function to assign villagers to resources\n    const assignVillagersToResource = (villagers, resourceList, maxVillagers, actionCallback) => {\n      if (resourceList.length) {\n        if (villagers.length < maxVillagers) {\n          for (let i = 0; i < Math.min(maxVillagers, inactifVillagers.length); i++) {\n            const resource = getClosestInstance(inactifVillagers[i], resourceList)\n            actionCallback(inactifVillagers[i], resource)\n          }\n        } else {\n          for (let i = 0; i < villagers.length - maxVillagers; i++) {\n            villagers[i].stop()\n          }\n        }\n      } else {\n        for (let i = 0; i < villagers.length; i++) {\n          villagers[i].stop()\n        }\n      }\n    }\n\n    // Food Gathering Logic\n    assignVillagersToResource(villagersOnFood, this.foundedBerrybushs, maxVillagersOnFood, (villager, bush) => {\n      villager.sendToBerrybush(bush)\n    })\n\n    // Wood Gathering Logic\n    assignVillagersToResource(villagersOnWood, this.foundedTrees, maxVillagersOnWood, (villager, tree) => {\n      villager.sendToTree(tree)\n    })\n\n    // Stone Gathering Logic\n    assignVillagersToResource(villagersOnStone, this.foundedStones, maxVillagersOnStone, (villager, stone) => {\n      villager.sendToStone(stone)\n    })\n\n    // Gold Gathering Logic\n    assignVillagersToResource(villagersOnGold, this.foundedGolds, maxVillagersOnGold, (villager, gold) => {\n      villager.sendToGold(gold)\n    })\n\n    for (let i = 0; i < emptyFarms.length; i++) {\n      const villager = getClosestInstance(emptyFarms[i], inactifVillagers)\n      villager && villager.sendToFarm(emptyFarms[i])\n    }\n\n    // Construction Logic\n    if (notBuiltBuildings.length) {\n      for (const building of notBuiltBuildings) {\n        if (builderVillagers.length >= maxVillagersOnConstruction) break\n        const availableVillagers = villagers.filter(v => v.work !== WORK_TYPES.builder || v.inactif)\n        const villager = getClosestInstance(building, availableVillagers)\n        if (villager) {\n          console.log('Villager sent to build:', building)\n          villager.sendToBuilding(building)\n        }\n      }\n    }\n\n    // Attack Logic\n    const sendToAttack = (clubmans, target) => {\n      console.log('Sending clubmans to attack:', target)\n      clubmans.forEach(clubman => clubman.sendTo(target, ACTION_TYPES.attack))\n    }\n\n    if (waitingClubmans.length >= howManySoldiersBeforeAttack) {\n      const target =\n        this.foundedEnemyBuildings[0] ||\n        map.grid[randomRange(0, map.grid.length - 1)][randomRange(0, map.grid[0].length - 1)]\n      console.log('Clubman attack target:', target)\n      sendToAttack(waitingClubmans, target)\n    }\n\n    if (inactifClubmans.length && this.foundedEnemyBuildings.length) {\n      console.log('Inactif clubmans attacking founded enemy building...')\n      sendToAttack(inactifClubmans, this.foundedEnemyBuildings[0])\n    }\n\n    // Unit Purchasing Logic\n    const buyUnits = (currentCount, maxCount, buildingList, unitType, extra) => {\n      // Calculate how many more units can be bought\n      const unitsNeeded = maxCount - currentCount\n      let unitsBought = 0\n\n      if (unitsNeeded <= 0) {\n        return\n      }\n      // Iterate over the buildings until we reach the needed count\n      for (const building of buildingList) {\n        if (unitsBought >= unitsNeeded) break // Stop if we've bought enough units\n\n        if (building && building.buyUnit(unitType, false, false, extra)) {\n          unitsBought++\n          console.log(`Buying ${unitType} from ${building.type}, Total Bought: ${unitsBought}`)\n        }\n      }\n    }\n\n    buyUnits(villagers.length, maxVillagers, towncenters, 'Villager')\n    buyUnits(clubmans.length, maxClubmans, barracks, 'Clubman')\n\n    // Building Purchasing Logic\n    const buyBuildingIfNeeded = (condition, buildingType, positionCallback) => {\n      const list = {\n        House: houses,\n        Farm: farms,\n        Barracks: barracks,\n        Granary: granarys,\n        StoragePit: storagepits,\n        Market: markets,\n      }\n      const building = this.config.buildings[buildingType]\n      if (\n        condition &&\n        canAfford(this, building.cost) &&\n        this.hasNotReachBuildingLimit(buildingType, list[buildingType])\n      ) {\n        const pos = positionCallback()\n        if (pos && this.buyBuilding(pos.i, pos.j, buildingType)) {\n          console.log(`Buying building: ${buildingType} at position:`, pos)\n        }\n      }\n    }\n\n    // Buy House\n    buyBuildingIfNeeded(this.population + 2 > this.POPULATION_MAX && !notBuiltHouses.length, 'House', () =>\n      getPositionInGridAroundInstance(towncenters[0], map.grid, [6, 10], 0)\n    )\n\n    // Buy Barracks\n    buyBuildingIfNeeded(villagers.length > howManyVillagerBeforeBuyingABarracks, 'Barracks', () =>\n      getPositionInGridAroundInstance(towncenters[0], map.grid, [6, 20], 1, false, cell =>\n        this.otherPlayers().every(\n          player => instancesDistance(cell, player) <= instancesDistance(towncenters[0], player)\n        )\n      )\n    )\n\n    // Buy Markets\n    buyBuildingIfNeeded(markets.length === 0, 'Market', () =>\n      getPositionInGridAroundInstance(towncenters[0], map.grid, [6, 20], 1, false, cell =>\n        this.otherPlayers().every(\n          player => instancesDistance(cell, player) <= instancesDistance(towncenters[0], player)\n        )\n      )\n    )\n\n    // Buy Farm\n    buyBuildingIfNeeded(true, 'Farm', () => {\n      const buildings = [...granarys, ...towncenters] // Combine both granarys and towncenters\n\n      for (const building of buildings) {\n        // Try to find a valid position around each building\n        const position = getPositionInGridAroundInstance(\n          building,\n          map.grid,\n          [2, 10],\n          2,\n          false,\n          cell =>\n            this.otherPlayers().every(player => instancesDistance(cell, player) <= instancesDistance(building, player)),\n          false\n        )\n\n        if (position) {\n          return position // If a valid position is found, return and break the loop\n        }\n      }\n\n      return null // If no valid position is found after looping through all buildings\n    })\n\n    // Unit Purchasing Logic\n    const buyTechnology = (buildingList, technologyType) => {\n      // Iterate over the buildings until we reach the needed count\n      for (const building of buildingList) {\n        if (building && building.buyTechnology(technologyType)) {\n          console.log(`Buying ${technologyType} from ${building.type}`)\n        }\n      }\n    }\n    if (this.nextAge[this.age + 1]) {\n      buyTechnology(towncenters, this.nextAge[this.age + 1])\n    }\n\n    console.log('%c ----Step ended', styleLogInfo1)\n  }\n\n  die() {\n    const {\n      context: { players },\n    } = this\n    clearInterval(this.interval)\n    players.splice(players.indexOf(this), 1)\n  }\n}\n","import { sound } from '@pixi/sound'\nimport { Container, Assets, AnimatedSprite, Graphics } from 'pixi.js'\nimport { ACCELERATOR, STEP_TIME, CORPSE_TIME, COLOR_WHITE, ACTION_TYPES, FAMILY_TYPES } from '../constants'\nimport {\n  getInstanceZIndex,\n  randomRange,\n  getIconPath,\n  getInstancePath,\n  instancesDistance,\n  moveTowardPoint,\n  getInstanceClosestFreeCellPath,\n  instanceContactInstance,\n  getInstanceDegree,\n  drawInstanceBlinkingSelection,\n  findInstancesInSight,\n  getClosestInstanceWithPath,\n  getCellsAroundPoint,\n  instanceIsInPlayerSight,\n  getActionCondition,\n  pointsDistance,\n  getHitPointsWithDamage,\n  uuidv4,\n  CustomTimeout,\n  setUnitTexture,\n  updateInstanceVisibility,\n} from '../lib'\n\nexport class Animal extends Container {\n  constructor(options, context) {\n    super()\n\n    this.context = context\n\n    const {\n      context: { map },\n    } = this\n    this.label = uuidv4()\n    this.family = FAMILY_TYPES.animal\n\n    this.dest = null\n    this.realDest = null\n    this.previousDest = null\n    this.path = []\n    this.selected = false\n    this.degree = randomRange(1, 360)\n    this.action = null\n    this.currentFrame = 0\n    this.currentSheet = 'standingSheet'\n    this.inactif = true\n    this.isDead = false\n    this.isDestroyed = false\n    this.timeout\n    this.x = null\n    this.y = null\n    this.z = null\n\n    Object.keys(options).forEach(prop => {\n      this[prop] = options[prop]\n    })\n    Object.keys(this.owner.config.animals[this.type]).forEach(prop => {\n      this[prop] = this.owner.config.animals[this.type][prop]\n    })\n\n    this.size = 1\n    this.visible = false\n    this.visibleCells = new Set()\n    this.x = this.x ?? map.grid[this.i][this.j].x\n    this.y = this.y ?? map.grid[this.i][this.j].y\n    this.z = this.z ?? map.grid[this.i][this.j].z\n    this.zIndex = getInstanceZIndex(this)\n\n    this.currentCell = map.grid[this.i][this.j]\n    this.currentCell.has = this\n    this.currentCell.solid = true\n\n    this.hitPoints = this.hitPoints ?? this.totalHitPoints\n    this.quantity = this.quantity ?? this.totalQuantity\n\n    for (const [key, value] of Object.entries(this.assets)) {\n      this[key] = Assets.cache.get(value)\n    }\n\n    this.interface = {\n      info: element => {\n        const data = this.owner.config.animals[this.type]\n        this.setDefaultInterface(element, data)\n      },\n    }\n\n    this.allowMove = false\n    this.eventMode = 'static'\n    this.sprite = new AnimatedSprite(this.standingSheet.animations['south'])\n    this.sprite.label = 'sprite'\n    this.sprite.allowMove = false\n    this.sprite.eventMode = 'auto'\n    this.sprite.allowClick = false\n    this.sprite.roundPixels = true\n    this.sprite.loop = this.loop ?? true\n    if (this.isDead) {\n      this.currentSheet === 'corpseSheet' ? this.decompose() : this.death()\n    } else {\n      this.setTextures(this.currentSheet)\n    }\n    this.sprite.currentFrame = this.currentFrame\n\n    this.on('pointerup', evt => {\n      const {\n        context: { controls, player, menu },\n      } = this\n      if (controls.mouseBuilding || controls.mouseRectangle || !controls.isMouseInApp(evt)) {\n        return\n      }\n      controls.mouse.prevent = true\n      let drawDestinationRectangle = false\n      let hasSentVillager = false\n      let hasSentOther = false\n\n      if (player.selectedUnits.length) {\n        for (let i = 0; i < player.selectedUnits.length; i++) {\n          const playerUnit = player.selectedUnits[i]\n          if (playerUnit.type === 'Villager') {\n            if (getActionCondition(playerUnit, this, ACTION_TYPES.hunt)) {\n              playerUnit.sendToHunt(this)\n              hasSentVillager = true\n              drawDestinationRectangle = true\n            } else if (getActionCondition(playerUnit, this, ACTION_TYPES.takemeat)) {\n              playerUnit.sendToTakeMeat(this)\n              hasSentVillager = true\n              drawDestinationRectangle = true\n            }\n          } else if (getActionCondition(playerUnit, this, ACTION_TYPES.attack)) {\n            playerUnit.sendTo(this, ACTION_TYPES.attack)\n            drawDestinationRectangle = true\n            hasSentOther = true\n          }\n        }\n      } else if (player.selectedBuilding && player.selectedBuilding.range) {\n        if (\n          getActionCondition(player.selectedBuilding, this, ACTION_TYPES.attack) &&\n          instancesDistance(player.selectedBuilding, this) <= player.selectedBuilding.range\n        ) {\n          player.selectedBuilding.attackAction(this)\n          drawDestinationRectangle = true\n        }\n      } else if ((instanceIsInPlayerSight(this, player) || map.revealEverything) && this.quantity > 0) {\n        player.unselectAll()\n        this.select()\n        menu.setBottombar(this)\n        player.selectedOther = this\n      }\n\n      if (hasSentOther) {\n        const voice = randomItem(['5075', '5076', '5128', '5164'])\n        sound.play(voice)\n      } else if (hasSentVillager) {\n        const voice = Assets.cache.get('config').units.Villager.sounds.hunt\n        sound.play(voice)\n      }\n      if (drawDestinationRectangle) {\n        drawInstanceBlinkingSelection(this)\n      }\n    })\n\n    this.interval = null\n    this.sprite.updateAnchor = true\n    this.addChild(this.sprite)\n\n    setTimeout(() => {\n      updateInstanceVisibility(this)\n    })\n  }\n\n  startInterval(callback, time, immediate = true) {\n    const finalCb = () => {\n      const { paused } = this.context\n      if (paused) {\n        return\n      }\n      callback()\n    }\n    this.stopInterval()\n    immediate && finalCb()\n    this.interval = setInterval(finalCb, time)\n  }\n\n  stopInterval() {\n    if (this.interval) {\n      clearInterval(this.interval)\n      this.interval = null\n    }\n  }\n\n  select() {\n    if (this.selected) {\n      return\n    }\n\n    this.selected = true\n    const selection = new Graphics()\n    selection.label = 'selection'\n    selection.zIndex = 3\n    const path = [-32 * 0.5, 0, 0, -16 * 0.5, 32 * 0.5, 0, 0, 16 * 0.5]\n    selection.poly(path)\n    selection.stroke(COLOR_WHITE)\n    this.addChildAt(selection, 0)\n  }\n\n  unselect() {\n    if (!this.selected) {\n      return\n    }\n\n    this.selected = false\n    const selection = this.getChildByLabel('selection')\n    if (selection) {\n      this.removeChild(selection)\n    }\n  }\n\n  hasPath() {\n    return this.path.length > 0\n  }\n\n  setDest(dest) {\n    if (!dest) {\n      this.stop()\n      return\n    }\n    this.dest = dest\n    this.realDest = {\n      i: dest.i,\n      j: dest.j,\n    }\n  }\n\n  pause() {\n    this.timeout?.pause()\n    this.sprite?.stop()\n  }\n\n  resume() {\n    this.timeout?.resume()\n    this.sprite?.play()\n  }\n\n  setPath(path) {\n    if (!path.length) {\n      this.stop()\n      return\n    }\n\n    this.setTextures('walkingSheet')\n    this.inactif = false\n    this.path = path\n    this.startInterval(() => this.step(), STEP_TIME, true)\n  }\n\n  isAnimalAtDest(action, dest) {\n    if (!action) {\n      return false\n    }\n    if (!dest) {\n      this.affectNewDest()\n      return false\n    }\n    return instanceContactInstance(this, dest)\n  }\n\n  sendTo(dest, action) {\n    const {\n      context: { map },\n    } = this\n    this.stopInterval()\n    let path = []\n    // No instance we cancel the destination\n    if (!dest) {\n      this.stop()\n      return\n    }\n    // Animal is already beside our target\n    if (\n      this.isAnimalAtDest(action, dest) &&\n      (!map.grid[this.i][this.j].solid ||\n        (map.grid[this.i][this.j].solid && map.grid[this.i][this.j].has?.label === this.label))\n    ) {\n      this.setDest(dest)\n      this.action = action\n      this.degree = getInstanceDegree(this, dest.x, dest.y)\n      this.getAction(action)\n      return\n    }\n    // Set animal path\n    if (map.grid[dest.i] && map.grid[dest.i][dest.j] && map.grid[dest.i][dest.j].solid) {\n      path = getInstanceClosestFreeCellPath(this, dest, map)\n    } else {\n      path = getInstancePath(this, dest.i, dest.j, map)\n    }\n    // Animal found a path, set the action and play walking animation\n    if (path.length) {\n      this.setDest(dest)\n      this.action = action\n      this.setPath(path)\n    } else {\n      this.stop()\n    }\n  }\n\n  getActionCondition(target) {\n    return getActionCondition(this, target, this.action)\n  }\n\n  getAction(name) {\n    const {\n      context: { menu, player },\n    } = this\n    switch (name) {\n      case ACTION_TYPES.attack:\n        if (!this.getActionCondition(this.dest)) {\n          this.affectNewDest()\n          return\n        }\n        this.setTextures('actionSheet')\n        this.startInterval(\n          () => {\n            if (!this.getActionCondition(this.dest)) {\n              if (this.dest && this.dest.hitPoints <= 0) {\n                this.dest.die()\n              }\n              this.affectNewDest()\n              return\n            }\n            if (this.destHasMoved()) {\n              this.degree = getInstanceDegree(this, this.dest.x, this.dest.y)\n              this.setTextures('actionSheet')\n            }\n            if (!instanceContactInstance(this, this.dest)) {\n              this.sendTo(this.dest, ACTION_TYPES.attack)\n              return\n            }\n\n            this.sounds && this.sounds.hit && this.visible && sound.play(this.sounds.hit)\n\n            if (this.dest.hitPoints > 0) {\n              this.dest.hitPoints = getHitPointsWithDamage(this, this.dest)\n              if (\n                this.dest.selected &&\n                player &&\n                (player.selectedUnit === this.dest || player.selectedBuilding === this.dest)\n              ) {\n                menu.updateInfo('hitPoints', this.dest.hitPoints + '/' + this.dest.totalHitPoints)\n              }\n              this.dest.isAttacked(this)\n            }\n\n            if (this.dest.hitPoints <= 0) {\n              this.dest.die()\n              this.affectNewDest()\n            }\n          },\n          this.rateOfFire * 1000,\n          false\n        )\n        break\n      default:\n        this.stop()\n    }\n  }\n\n  affectNewDest() {\n    this.stopInterval()\n    const targets = findInstancesInSight(this, instance => this.getActionCondition(instance))\n    if (targets.length) {\n      const target = getClosestInstanceWithPath(this, targets)\n      if (target) {\n        if (instanceContactInstance(this, target)) {\n          this.degree = getInstanceDegree(this, target.x, target.y)\n          this.getAction(this.action)\n          return\n        }\n        this.setDest(target.instance)\n        this.setPath(target.path)\n        return\n      }\n    }\n    this.stop()\n    return\n  }\n\n  destHasMoved() {\n    return (\n      (this.dest.i !== this.realDest.i || this.dest.j !== this.realDest.j) &&\n      instancesDistance(this, this.dest) <= this.sight\n    )\n  }\n\n  moveToPath() {\n    const {\n      context: { map },\n    } = this\n    const next = this.path[this.path.length - 1]\n    const nextCell = map.grid[next.i][next.j]\n    if (!this.dest || this.dest.isDestroyed) {\n      this.affectNewDest()\n      return\n    }\n    // Collision with another walking unit, we block the mouvement\n    if (\n      nextCell.has &&\n      nextCell.has.family === FAMILY_TYPES.animal &&\n      nextCell.has.label !== this.label &&\n      nextCell.has.hasPath() &&\n      instancesDistance(this, nextCell.has) <= 1 &&\n      nextCell.has.sprite.playing\n    ) {\n      this.sprite.stop()\n      return\n    }\n    if (nextCell.solid && this.dest) {\n      this.sendTo(this.dest, this.action)\n      return\n    }\n\n    if (!this.sprite.playing) {\n      this.sprite.play()\n    }\n\n    this.zIndex = getInstanceZIndex(this)\n    if (instancesDistance(this, nextCell, false) < this.speed) {\n      this.z = nextCell.z\n      this.i = nextCell.i\n      this.j = nextCell.j\n\n      if (this.currentCell.has === this) {\n        this.currentCell.has = null\n        this.currentCell.solid = false\n      }\n      this.currentCell = map.grid[this.i][this.j]\n      if (this.currentCell.has === null) {\n        this.currentCell.has = this\n        this.currentCell.solid = true\n      }\n\n      updateInstanceVisibility(this)\n      this.path.pop()\n\n      // Destination moved\n      if (this.destHasMoved()) {\n        this.sendTo(this.dest, this.action)\n        return\n      }\n      if (this.isAnimalAtDest(this.action, this.dest)) {\n        this.path = []\n        this.stopInterval()\n        this.degree = getInstanceDegree(this, this.dest.x, this.dest.y)\n        this.getAction(this.action)\n        return\n      }\n\n      if (!this.path.length) {\n        this.stop()\n      }\n    } else {\n      // Move to next\n      const oldDeg = this.degree\n      moveTowardPoint(this, nextCell.x, nextCell.y, this.speed)\n      if (degreeToDirection(oldDeg) !== degreeToDirection(this.degree)) {\n        // Change animation according to degree\n        this.setTextures('walkingSheet')\n      }\n    }\n  }\n\n  getReaction(instance) {\n    if (this.strategy === 'runaway') {\n      this.runaway(instance)\n    } else {\n      this.sendTo(instance, ACTION_TYPES.attack)\n    }\n  }\n\n  detect(instance) {\n    if (\n      this.strategy &&\n      instance &&\n      instance.family === FAMILY_TYPES.unit &&\n      !this.isDead &&\n      !this.path.length &&\n      !this.dest\n    ) {\n      this.getReaction(instance)\n    }\n  }\n\n  isAttacked(instance) {\n    if (!instance || this.dest || this.isDead) {\n      return\n    }\n    this.getReaction(instance)\n  }\n\n  stop() {\n    if (this.currentCell.has.label !== this.label && this.currentCell.solid) {\n      this.sendTo(this.currentCell)\n      return\n    }\n    this.inactif = true\n    this.action = null\n    this.dest = null\n    this.realDest = null\n    this.currentCell.has = this\n    this.currentCell.solid = true\n    this.path = []\n    this.stopInterval()\n    this.setTextures('standingSheet')\n  }\n\n  step() {\n    if (this.hitPoints <= 0) {\n      this.die()\n    } else if (this.hasPath()) {\n      this.moveToPath()\n    }\n  }\n\n  runaway(instance) {\n    const {\n      context: { map },\n    } = this\n    let dest = null\n    getCellsAroundPoint(this.i, this.j, map.grid, this.sight, cell => {\n      if (\n        !cell.solid &&\n        (!dest ||\n          pointsDistance(cell.i, cell.j, instance.i, instance.j) >\n            pointsDistance(dest.i, dest.j, instance.i, instance.j))\n      ) {\n        dest = this.owner.views[cell.i][cell.j]\n        return\n      }\n    })\n    if (dest) {\n      this.sendTo(dest)\n    } else {\n      this.stop()\n    }\n  }\n\n  decompose() {\n    const {\n      context: { player, menu },\n    } = this\n    this.setTextures('corpseSheet')\n    this.sprite.animationSpeed = 0\n    this.startInterval(() => {\n      if (this.quantity > 0) {\n        this.quantity--\n        if (this.selected && player.selectedOther === this) {\n          menu.updateInfo('quantity-text', this.quantity)\n        }\n      }\n      this.updateTexture()\n    }, 5000)\n  }\n\n  death() {\n    this.setTextures('dyingSheet')\n    this.zIndex--\n    this.sprite.loop = false\n    this.sprite.onComplete = () => {\n      this.decompose()\n    }\n  }\n\n  die() {\n    if (this.isDead) {\n      return\n    }\n    if (this.sounds && this.visible) {\n      this.sounds.die && sound.play(this.sounds.die)\n      this.sounds.fall && sound.play(this.sounds.fall)\n    }\n    updateInstanceVisibility(this)\n\n    this.owner.population--\n    this.stopInterval()\n    this.isDead = true\n    this.zIndex--\n    this.path = []\n    this.action = null\n    this.death()\n  }\n\n  updateTexture() {\n    const {\n      context: { player, map },\n    } = this\n    const percentage = getPercentage(this.quantity, this.totalQuantity)\n\n    if (percentage > 25 && percentage < 50) {\n      this.sprite.currentFrame = 1\n    } else if (percentage > 0 && percentage <= 25) {\n      this.sprite.currentFrame = 2\n    } else if (percentage <= 0) {\n      this.stopInterval()\n      if (map.grid[this.i][this.j].has === this) {\n        map.grid[this.i][this.j].has = null\n        map.grid[this.i][this.j].corpses.push(this)\n        map.grid[this.i][this.j].solid = false\n      }\n      if (this.selected && player.selectedOther === this) {\n        player.unselectAll()\n      }\n      this.sprite.currentFrame = 3\n      this.timeout = new CustomTimeout(() => {\n        this.clear()\n      }, CORPSE_TIME * 1000)\n    }\n  }\n\n  clear() {\n    const {\n      context: { map },\n    } = this\n    this.isDestroyed = true\n    // Remove from map corpses\n    const corpsesIndex = map.grid[this.i][this.j].corpses.indexOf(this)\n    corpsesIndex >= 0 && map.grid[this.i][this.j].corpses.splice(corpsesIndex, 1)\n    map.removeChild(this)\n    this.destroy({ child: true, texture: true })\n  }\n\n  setTextures(sheet) {\n    setUnitTexture(sheet, this, ACCELERATOR)\n  }\n\n  setDefaultInterface(element, data) {\n    const {\n      context: { menu },\n    } = this\n\n    const civDiv = document.createElement('div')\n    civDiv.id = 'civ'\n    civDiv.textContent = ''\n    element.appendChild(civDiv)\n\n    const typeDiv = document.createElement('div')\n    typeDiv.id = 'type'\n    typeDiv.textContent = this.type\n    element.appendChild(typeDiv)\n\n    const iconImg = document.createElement('img')\n    iconImg.id = 'icon'\n    iconImg.src = getIconPath(data.icon)\n    element.appendChild(iconImg)\n\n    const hitPointsDiv = document.createElement('div')\n    hitPointsDiv.id = 'hitPoints'\n    hitPointsDiv.textContent = this.hitPoints + '/' + this.totalHitPoints\n    element.appendChild(hitPointsDiv)\n\n    const quantityDiv = document.createElement('div')\n    quantityDiv.id = 'quantity'\n    quantityDiv.className = 'resource-quantity'\n    const smallIconImg = document.createElement('img')\n    smallIconImg.src = menu.icons['food']\n    smallIconImg.className = 'resource-quantity-icon'\n    const textDiv = document.createElement('div')\n    textDiv.id = 'quantity-text'\n    textDiv.textContent = this.quantity\n    quantityDiv.appendChild(smallIconImg)\n    quantityDiv.appendChild(textDiv)\n    element.appendChild(quantityDiv)\n  }\n}\n","import { Animal } from '../animal'\nimport { Player } from './player'\n\nexport class Gaia extends Player {\n  constructor(context) {\n    super({ i: 0, j: 0, type: 'Gaia' }, context)\n  }\n  createAnimal(options) {\n    const { context } = this\n    let unit = context.map.addChild(new Animal({ ...options, owner: this }, context))\n    this.units.push(unit)\n    return unit\n  }\n}\n","import { PLAYER_TYPES } from '../../constants'\nimport { Player } from './player'\n\nexport class Human extends Player {\n  constructor({ ...props }, context) {\n    super({ ...props, type: PLAYER_TYPES.human }, context)\n    this.selectedUnits = []\n    this.selectedUnit = null\n    this.selectedBuilding = null\n    this.selectedOther = null\n  }\n\n  unselectUnit(unit) {\n    const {\n      context: { menu },\n    } = this\n    const index = this.selectedUnits.indexOf(unit)\n    this.selectedUnits.splice(index, 1)\n\n    if (!this.selectedUnits.length) {\n      this.selectedUnit = null\n      this.selectedUnits = []\n      menu.setBottombar()\n      return\n    }\n\n    let nextVillager\n    if (this.selectedUnit === unit) {\n      for (let i = 0; i < this.selectedUnits.length; i++) {\n        if (this.selectedUnits[i].type === 'Villager') {\n          nextVillager = this.selectedUnits[i].type\n          break\n        }\n      }\n    }\n    this.selectedUnit = nextVillager || this.selectedUnits[0]\n    menu.setBottombar(this.selectedUnit)\n  }\n\n  unselectAllUnits() {\n    const {\n      context: { menu },\n    } = this\n    for (let i = 0; i < this.selectedUnits.length; i++) {\n      this.selectedUnits[i].unselect()\n    }\n    this.selectedUnit = null\n    this.selectedUnits = []\n    menu.setBottombar()\n  }\n\n  unselectAll() {\n    if (this.selectedBuilding) {\n      this.selectedBuilding.unselect()\n      this.selectedBuilding = null\n    }\n    if (this.selectedOther) {\n      this.selectedOther.unselect()\n      this.selectedOther = null\n    }\n    this.unselectAllUnits()\n  }\n}\n","export * from './ai'\nexport * from './gaia'\nexport * from './human'\n","import { Container, Assets, Sprite } from 'pixi.js'\nimport {\n  randomRange,\n  formatNumber,\n  cartesianToIsometric,\n  getCellsAroundPoint,\n  instanceIsInPlayerSight,\n  instancesDistance,\n  getInstanceZIndex,\n  getBuildingAsset,\n  getTexture,\n  changeSpriteColorDirectly,\n} from '../lib'\nimport { CELL_DEPTH, COLOR_FOG, COLOR_WHITE, FAMILY_TYPES } from '../constants'\n\nexport class Cell extends Container {\n  constructor(options, context) {\n    super()\n\n    this.context = context\n\n    const {\n      context: { map },\n    } = this\n    this.family = FAMILY_TYPES.cell\n    this.map = map\n\n    this.solid = false\n    this.visible = false\n    this.zIndex = 0\n    this.inclined = false\n    this.border = false\n    this.waterBorder = false\n    this.z = 0\n    this.viewed = false\n    this.viewBy = []\n    this.has = null\n    this.corpses = []\n    this.fogSprites = []\n\n    Object.keys(options).forEach(prop => {\n      this[prop] = options[prop]\n    })\n    Object.keys(Assets.cache.get('config').cells[this.type]).forEach(prop => {\n      this[prop] = Assets.cache.get('config').cells[this.type][prop]\n    })\n    const pos = cartesianToIsometric(this.i, this.j)\n\n    this.x = pos[0]\n    this.y = pos[1] - this.z * CELL_DEPTH\n\n    const textureName = randomItem(this.assets)\n    const resourceName = textureName.split('_')[1]\n    const textureFile = textureName + '.png'\n    const spritesheet = Assets.cache.get(resourceName)\n    const texture = spritesheet.textures[textureFile]\n    this.sprite = Sprite.from(texture)\n    this.sprite.label = 'sprite'\n    this.sprite.anchor.set(0.5, 0.5)\n    this.sprite.roundPixels = true\n    this.sprite.allowMove = false\n    this.sprite.eventMode = 'none'\n    this.sprite.allowClick = false\n    this.addChild(this.sprite)\n\n    this.fogSprites.forEach(sprite => this.addFogBuilding(...Object.values(sprite)))\n\n    this.eventMode = 'none'\n    this.allowMove = false\n    this.allowClick = false\n  }\n\n  updateVisible() {\n    const {\n      context: { map, player },\n    } = this\n\n    function updateChild(instance) {\n      if (\n        map.revealEverything ||\n        !instance.owner ||\n        instance.owner.isPlayed ||\n        instanceIsInPlayerSight(instance, player)\n      ) {\n        instance.visible = true\n      }\n    }\n\n    if (!map.revealEverything && !player.views[this.i][this.j].viewed) {\n      return\n    }\n    this.visible = true\n    if (this.has) {\n      updateChild(this.has)\n    }\n    if (this.corpses.length) {\n      for (let i = 0; i < this.corpses.length; i++) {\n        updateChild(this.corpses[i])\n      }\n    }\n  }\n\n  setDesertBorder(direction) {\n    const resourceName = '20002'\n    const { sprite: cellSprite } = this\n    const cellSpriteTextureName = cellSprite.texture.label\n    const cellSpriteIndex = cellSpriteTextureName.split('_')[0]\n    let val = {}\n    let index\n    let cpt = 0\n    for (let i = 0; i < 25; i++) {\n      val[i] = []\n      if (i < 9) {\n        val[i].push(0, 1, 2, 3)\n      } else {\n        for (let j = cpt; j < cpt + 4; j++) {\n          val[i].push(j + 4)\n        }\n        cpt += 4\n      }\n    }\n    switch (direction) {\n      case 'west':\n        index = val[cellSpriteIndex * 1][0]\n        break\n      case 'north':\n        index = val[cellSpriteIndex * 1][1]\n        break\n      case 'south':\n        index = val[cellSpriteIndex * 1][2]\n        break\n      case 'est':\n        index = val[cellSpriteIndex * 1][3]\n        break\n    }\n    const spritesheet = Assets.cache.get(resourceName)\n    const texture = spritesheet.textures[formatNumber(index) + '_' + resourceName + '.png']\n    const sprite = Sprite.from(texture)\n    sprite.direction = direction\n    sprite.anchor.set(0.5, 0.5)\n    sprite.type = 'border'\n    this.addChild(sprite)\n  }\n\n  setWaterBorder(resourceName, index) {\n    const { sprite } = this\n    const spritesheet = Assets.cache.get(resourceName)\n    const texture = spritesheet.textures[index + '_' + resourceName + '.png']\n    this.type = 'Desert'\n    this.border = true\n    this.waterBorder = true\n    if (this.has && typeof this.has.die === 'function') {\n      this.has.die(true)\n    }\n    sprite.texture = texture\n  }\n\n  setReliefBorder(index, elevation = 0) {\n    const { sprite } = this\n    const resourceName = sprite.texture.label.split('_')[1].split('.')[0]\n    const spritesheet = Assets.cache.get(resourceName)\n    const texture = spritesheet.textures[index + '_' + resourceName + '.png']\n    if (elevation) {\n      this.y -= elevation\n    }\n    this.inclined = true\n    if (this.has) {\n      this.has.zIndex = getInstanceZIndex(this.has)\n    }\n    sprite.label = 'sprite'\n    sprite.anchor.set(0.5, 0.5)\n    sprite.texture = texture\n  }\n\n  setWater() {\n    const index = formatNumber(randomRange(0, 3))\n    const resourceName = '15002'\n    const spritesheet = Assets.cache.get(resourceName)\n    this.sprite.texture = spritesheet.textures[index + '_' + resourceName + '.png']\n    this.type = 'Water'\n    this.category = 'Water'\n  }\n  fillWaterCellsAroundCell() {\n    const grid = this.parent.grid\n    if (this.type === 'Water' && !this.sprite.texture.label.includes('15002')) {\n      this.setWater()\n    }\n    getCellsAroundPoint(this.i, this.j, grid, 2, cell => {\n      if (cell.type === 'Water' && this.type === 'Water') {\n        const dist = instancesDistance(this, cell)\n        const velX = Math.round((this.i - cell.i) / dist)\n        const velY = Math.round((this.j - cell.j) / dist)\n        if (grid[cell.i + velX] && grid[cell.i + velX][cell.j + velY]) {\n          const target = grid[cell.i + velX][cell.j + velY]\n          const aside = grid[this.i + cell.i - target.i][this.j + cell.j - target.j]\n          if (target.type !== this.type && aside.type !== this.type) {\n            if (Math.floor(instancesDistance(this, cell)) === 2) {\n              cell.setWater()\n              target.setWater()\n            }\n          }\n        }\n      }\n    })\n  }\n\n  fillReliefCellsAroundCell() {\n    const grid = this.parent.grid\n    getCellsAroundPoint(this.i, this.j, grid, 2, cell => {\n      if (cell.z === this.z) {\n        const dist = instancesDistance(this, cell)\n        const velX = Math.round((this.i - cell.i) / dist)\n        const velY = Math.round((this.j - cell.j) / dist)\n        if (grid[cell.i + velX] && grid[cell.i + velX][cell.j + velY]) {\n          const target = grid[cell.i + velX][cell.j + velY]\n          const aside = grid[this.i + cell.i - target.i][this.j + cell.j - target.j]\n          if (target.z <= this.z && target.z !== this.z && aside.z !== this.z) {\n            if (Math.floor(instancesDistance(this, cell)) === 2) {\n              target.setCellLevel(target.z + 1)\n            }\n          }\n        }\n      }\n    })\n  }\n\n  setCellLevel(level, cpt = 1) {\n    if (level === 0) {\n      this.y += CELL_DEPTH\n      this.z = level\n      return\n    }\n    const grid = this.parent.grid\n    getCellsAroundPoint(this.i, this.j, grid, level - cpt, cell => {\n      if (cell.z < cpt) {\n        cell.y -= (cpt - cell.z) * CELL_DEPTH\n        cell.z = cpt\n        cell.fillReliefCellsAroundCell(grid)\n      }\n    })\n    if (cpt + 1 < level) {\n      this.setCellLevel(level, cpt + 1)\n    }\n    if (this.has) {\n      this.has.zIndex = getInstanceZIndex(this.has)\n    }\n  }\n\n  addFogBuilding(textureSheet, colorSheet, colorName) {\n    const sprite = Sprite.from(getTexture(textureSheet, Assets))\n    sprite.label = 'buildingFog'\n    sprite.tint = COLOR_FOG\n    sprite.anchor.set(sprite.texture.defaultAnchor.x, sprite.texture.defaultAnchor.y)\n    this.addChild(sprite)\n    this.fogSprites.push({ sprite, textureSheet, colorSheet, colorName })\n    if (colorSheet) {\n      const spriteColor = Sprite.from(getTexture(colorSheet, Assets))\n      spriteColor.label = 'buildingColorFog'\n      spriteColor.tint = COLOR_FOG\n      changeSpriteColorDirectly(spriteColor, colorName)\n      this.addChild(spriteColor)\n      this.fogSprites.push({ sprite: spriteColor, textureSheet, colorSheet, colorName })\n    } else {\n      changeSpriteColorDirectly(sprite, colorName)\n    }\n    this.zIndex = 100\n  }\n\n  removeFogBuilding(instance) {\n    const { map } = this.context\n    if (instance.owner && !instance.owner.isPlayed && instance.family === FAMILY_TYPES.building) {\n      let i = 0\n      const localCell = map.grid[instance.i][instance.j]\n      while (i < localCell.fogSprites.length) {\n        if (localCell.fogSprites[i]) {\n          localCell.fogSprites[i].sprite?.destroy() // Destroy the sprite\n          localCell.fogSprites.splice(i, 1) // Remove the destroyed sprite from the array\n        } else {\n          i++ // Only increment if no sprite is destroyed, to avoid skipping elements\n        }\n      }\n    }\n  }\n\n  setFogChildren(instance, init) {\n    const { player, map } = this.context\n    if (!instanceIsInPlayerSight(instance, player)) {\n      if (instance.owner && !instance.owner.isPlayed) {\n        if (!init && instance.family === FAMILY_TYPES.building) {\n          const assets = getBuildingAsset(instance.type, instance.owner, Assets)\n          const localCell = map.grid[instance.i][instance.j]\n          localCell.addFogBuilding(assets.images.final, assets.images.color, instance.owner.color)\n        }\n        instance.visible = false\n      } else {\n        for (let i = 0; i < instance.children.length; i++) {\n          if (instance.children[i].tint) {\n            instance.children[i].tint = COLOR_FOG\n          }\n        }\n      }\n    }\n  }\n\n  setFog(init) {\n    if (this.has) {\n      this.setFogChildren(this.has, init)\n    }\n    for (let i = 0; i < this.children.length; i++) {\n      if (this.children[i].tint) {\n        this.children[i].tint = COLOR_FOG\n      }\n    }\n    if (this.corpses.length) {\n      for (let i = 0; i < this.corpses.length; i++) {\n        this.setFogChildren(this.corpses[i], init)\n      }\n    }\n  }\n\n  removeFog() {\n    const {\n      context: { controls },\n    } = this\n    function setRemoveChildren(instance) {\n      if (controls.instanceInCamera(instance)) {\n        instance.visible = true\n      }\n      for (let i = 0; i < instance.children.length; i++) {\n        if (instance.children[i].tint) {\n          instance.children[i].tint = COLOR_WHITE\n        }\n      }\n    }\n    if (!this.visible) {\n      this.visible = true\n    }\n\n    this.zIndex = 0\n    for (let i = 0; i < this.children.length; i++) {\n      if (this.children[i].tint) {\n        this.children[i].tint = COLOR_WHITE\n      }\n    }\n    if (this.has) {\n      this.removeFogBuilding(this.has)\n      setRemoveChildren(this.has)\n    }\n    if (this.corpses.length) {\n      for (let i = 0; i < this.corpses.length; i++) {\n        setRemoveChildren(this.corpses[i])\n      }\n    }\n  }\n}\n","import { Container, Assets, Sprite } from 'pixi.js'\nimport { Resource } from './resource'\nimport { Human, AI, Gaia } from './players'\nimport {\n  randomRange,\n  getZoneInGridWithCondition,\n  randomItem,\n  getPlainCellsAroundPoint,\n  getCellsAroundPoint,\n  colors,\n  updateInstanceVisibility,\n} from '../lib'\nimport { CELL_DEPTH, FAMILY_TYPES } from '../constants'\nimport { Cell } from './cell'\n\n/**\n * \n *  Map size\t      Tiny\t      Small\t    Medium\t    Normal\t    Large\t\n    Player count\t  2\t          3\t        4\t          6\t          8\n    Dimensions\t    120×120\t    144×144 \t168×168\t    200×200\t    220×220\n */\n\nexport default class Map extends Container {\n  constructor(context) {\n    super()\n\n    this.context = context\n    this.size\n    this.reliefRange = [\n      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2,\n      3,\n    ]\n    this.chanceOfRelief = 0.06\n    this.chanceOfSets = 0.02\n\n    this.ready = false\n    this.grid = []\n    this.sortableChildren = true\n\n    this.allTechnologies = false\n    this.noAI = true\n\n    this.devMode = false\n    this.revealEverything = this.devMode || false\n    this.revealTerrain = this.devMode || false\n\n    this.x = 0\n    this.y = 0\n    this.startingUnits = 3\n\n    this.playersPos = []\n    this.positionsCount = 2\n    this.gaia = null\n    this.resources = []\n\n    this.eventMode = 'auto'\n    this.allowMove = false\n    this.allowClick = false\n    this.totalCells\n  }\n\n  setCoordinate(x, y) {\n    this.x = x\n    this.y = y\n  }\n\n  generateFromJSON({ map, players, camera, resources, animals }) {\n    const classMap = {\n      Human,\n      AI,\n    }\n    const { menu, controls } = this.context\n    this.removeChildren()\n    this.size = map.length - 1\n\n    this.gaia = new Gaia(this.context)\n\n    for (let i = 0; i <= this.size; i++) {\n      const line = map[i]\n      for (let j = 0; j <= this.size; j++) {\n        if (!this.grid[i]) {\n          this.grid[i] = []\n        }\n        const cell = line[j]\n        const newCell = new Cell({ i, j, z: cell.z, type: cell.type, fogSprites: cell.fogSprites }, this.context)\n        this.addChild(newCell)\n        this.grid[i][j] = newCell\n        if (!this.revealEverything) {\n          this.grid[i][j].setFog()\n        }\n      }\n    }\n    for (let i = 0; i <= this.size; i++) {\n      for (let j = 0; j <= this.size; j++) {\n        this.grid[i][j].fillWaterCellsAroundCell()\n      }\n    }\n    this.resources = resources.map(resource => this.addChild(new Resource(resource, this.context)))\n\n    this.formatCellsRelief()\n    this.formatCellsWaterBorder()\n    this.formatCellsDesert()\n\n    this.context.players = players.map(player => {\n      const p = new classMap[player.type](\n        {\n          ...player,\n          corpses: [],\n          buildings: [],\n          units: [],\n        },\n        this.context\n      )\n      if (player.isPlayed) {\n        this.context.player = p\n      }\n      return p\n    })\n    controls.setCamera(camera.x, camera.y, true)\n    menu.init()\n    menu.updateResourcesMiniMap()\n\n    this.context.players.forEach((player, index) => {\n      const { buildings, units, corpses } = players[index]\n      player.buildings = buildings.map(building => player.createBuilding(building))\n      player.units = units.map(unit => player.createUnit(unit))\n      player.corpses = corpses.map(unit => player.createUnit(unit))\n    })\n    animals.forEach(animal => this.gaia.createAnimal(animal))\n\n    function getDest(val, map) {\n      if (val) {\n        if (Array.isArray(val)) {\n          return val[2] ? map.getChildByLabel(val[2]) : map.grid[val[0]][val[1]]\n        } else {\n          return map.getChildByLabel(val)\n        }\n      }\n      return null\n    }\n\n    function processUnit(unit, context) {\n      if (unit.previousDest) {\n        unit.previousDest = getDest(unit.previousDest, context)\n      }\n      if (unit.dest && !unit.isDead) {\n        const dest = getDest(unit.dest, context)\n        if (dest) {\n          unit.commonSendTo ? unit.commonSendTo(dest, unit.work, unit.action, true) : unit.sendTo(dest, unit.action)\n        } else {\n          unit.stop()\n        }\n      }\n    }\n\n    this.gaia.units.forEach(animal => processUnit(animal, this))\n\n    this.context.players.forEach(player => {\n      for (let i = 0; i <= this.size; i++) {\n        const line = player.views[i]\n        for (let j = 0; j <= this.size; j++) {\n          const cell = line[j]\n          if (cell.viewed) {\n            cell.onViewed()\n          }\n          cell.viewBy = cell.viewBy.map(name => getDest(name, this)).filter(Boolean)\n          if (player.isPlayed && cell.viewed) {\n            if (!cell.viewBy.length) {\n              this.grid[i][j].setFog(true)\n            } else {\n              this.grid[i][j].removeFog()\n            }\n          }\n        }\n      }\n      player.units.forEach(unit => processUnit(unit, this))\n    })\n\n    this.ready = true\n  }\n\n  generateMap(repeat = 0) {\n    this.removeChildren()\n    this.generateCells()\n\n    switch (this.size) {\n      case 120:\n        this.positionsCount = 2\n        break\n      case 144:\n        this.positionsCount = 3\n        break\n      case 168:\n        this.positionsCount = 4\n        break\n      case 200:\n        this.positionsCount = 4\n        break\n      case 220:\n        this.positionsCount = 4\n        break\n      default:\n        this.positionsCount = 2\n    }\n\n    this.totalCells = Math.pow(this.size, 2)\n\n    this.playersPos = this.findPlayerPlaces()\n\n    if (this.playersPos.length < this.positionsCount) {\n      if (repeat >= 10) {\n        alert('Error while generating the map')\n        return\n      }\n      this.generateMap(repeat + 1)\n      return\n    }\n\n    this.generateResourcesAroundPlayers(this.playersPos)\n  }\n\n  stylishMap() {\n    const {\n      context: { menu, player },\n    } = this\n\n    this.gaia = new Gaia(this.context)\n\n    //this.generateMapRelief()\n    //this.formatCellsRelief()\n\n    this.generateSets()\n\n    if (!this.revealEverything) {\n      for (let i = 0; i <= this.size; i++) {\n        for (let j = 0; j <= this.size; j++) {\n          this.grid[i][j].setFog()\n        }\n      }\n      for (let i = 0; i < player.buildings.length; i++) {\n        const building = player.buildings[i]\n        updateInstanceVisibility(building)\n      }\n      for (let i = 0; i < player.units.length; i++) {\n        const unit = player.units[i]\n        updateInstanceVisibility(unit)\n      }\n    }\n\n    this.ready = true\n    menu.updateResourcesMiniMap()\n  }\n\n  generatePlayers() {\n    const { context } = this\n\n    const players = []\n    const poses = []\n    const randoms = Array.from(Array(this.playersPos.length).keys())\n\n    for (let i = 0; i < this.playersPos.length; i++) {\n      const pos = randomItem(randoms)\n      poses.push(pos)\n      randoms.splice(randoms.indexOf(pos), 1)\n    }\n\n    for (let i = 0; i < this.positionsCount; i++) {\n      const posI = this.playersPos[poses[i]]?.i\n      const posJ = this.playersPos[poses[i]]?.j\n      if (posI && posJ) {\n        const color = colors[i]\n        if (!i) {\n          players.push(\n            new Human(\n              {\n                i: posI,\n                j: posJ,\n                age: 0,\n                civ: 'Greek',\n                color,\n                isPlayed: true,\n              },\n              context\n            )\n          )\n        } else if (!this.noAI) {\n          players.push(new AI({ i: posI, j: posJ, age: 0, civ: 'Greek', color }, context))\n        }\n      }\n    }\n    return players\n  }\n\n  placePlayers() {\n    const {\n      context: { players },\n    } = this\n\n    // Place a town center\n    for (let i = 0; i < players.length; i++) {\n      const player = players[i]\n      const towncenter = player.spawnBuilding({ i: player.i, j: player.j, type: 'TownCenter', isBuilt: true })\n      for (let i = 0; i < this.startingUnits; i++) {\n        towncenter.placeUnit('Villager')\n      }\n    }\n  }\n\n  generateForestAroundPlayer(\n    player,\n    treeCount,\n    clusterCount = 12,\n    minClusterRadius = 5,\n    maxClusterRadius = 10,\n    safeDistance = 20,\n    clearingProbability = 0.6\n  ) {\n    const { grid } = this\n    const { i: playerI, j: playerJ } = player\n    const gridWidth = grid.length\n    const gridHeight = grid[0].length\n    const forestCells = []\n    const pathCells = new Set()\n\n    // Function to calculate the distance between two points\n    function distance(x1, y1, x2, y2) {\n      return Math.sqrt((x1 - x2) ** 2 + (y1 - y2) ** 2)\n    }\n\n    // Function to create a circle of points within a grid, checking boundaries\n    function createCircle(centerI, centerJ, radius, density = 0.7, edgeNoise = 0) {\n      const circleCells = []\n      for (let x = -radius; x <= radius; x++) {\n        for (let y = -radius; y <= radius; y++) {\n          const distFromCenter = Math.sqrt(x * x + y * y)\n          const noise = Math.random() * edgeNoise - edgeNoise / 2 // Random edge noise\n          if (distFromCenter + noise <= radius) {\n            // If within noisy circle\n            const cellI = centerI + x\n            const cellJ = centerJ + y\n            if (\n              cellI >= 0 &&\n              cellI < gridWidth && // Ensure cell is within grid bounds\n              cellJ >= 0 &&\n              cellJ < gridHeight &&\n              !grid[cellI][cellJ].solid && // Ensure the cell is not solid\n              grid[cellI][cellJ].category !== 'Water' && // Ensure not water\n              grid[cellI][cellJ].type !== 'Border' && // Ensure not border\n              !grid[cellI][cellJ].inclined && // Ensure not inclined\n              Math.random() < density // Tree density control\n            ) {\n              circleCells.push({ i: cellI, j: cellJ })\n            }\n          }\n        }\n      }\n      return circleCells\n    }\n\n    // Create forest clusters\n    for (let cluster = 0; cluster < clusterCount; cluster++) {\n      let clusterCenterI, clusterCenterJ\n      let tries = 0\n      const clusterRadius = Math.floor(Math.random() * (maxClusterRadius - minClusterRadius + 1)) + minClusterRadius // Random radius\n      const clusterDensity = Math.random() * 0.5 + 0.5 // Density between 0.5 and 1\n      const edgeNoise = Math.random() * 2 // Noise for organic shapes\n\n      // Ensure the cluster is far from the player and within bounds\n      do {\n        clusterCenterI = playerI + Math.floor(Math.random() * 60 - 30) // Random offset\n        clusterCenterJ = playerJ + Math.floor(Math.random() * 60 - 30)\n        tries++\n        if (tries > 100) break // Safety exit\n      } while (\n        distance(clusterCenterI, clusterCenterJ, playerI, playerJ) < safeDistance ||\n        clusterCenterI < 0 ||\n        clusterCenterI >= gridWidth ||\n        clusterCenterJ < 0 ||\n        clusterCenterJ >= gridHeight || // Stay within grid bounds\n        grid[clusterCenterI][clusterCenterJ].category === 'Water' || // Avoid water cells\n        grid[clusterCenterI][clusterCenterJ].solid || // Avoid solid cells\n        grid[clusterCenterI][clusterCenterJ].inclined // Avoid inclined cells\n      )\n\n      if (tries <= 100) {\n        const treeCluster = createCircle(clusterCenterI, clusterCenterJ, clusterRadius, clusterDensity, edgeNoise)\n        treeCluster.forEach(cell => forestCells.push(cell))\n      }\n    }\n\n    // Scattered solo trees (20% of total trees)\n    const scatteredTreeCount = Math.floor(treeCount * 0.2)\n    for (let i = 0; i < scatteredTreeCount; i++) {\n      let soloI, soloJ\n      let tries = 0\n\n      do {\n        soloI = playerI + Math.floor(Math.random() * 60 - 30) // Random offset within [-30, 30]\n        soloJ = playerJ + Math.floor(Math.random() * 60 - 30)\n        tries++\n        if (tries > 50) break // Safety exit to avoid infinite loop\n      } while (\n        distance(soloI, soloJ, playerI, playerJ) < safeDistance ||\n        soloI < 0 ||\n        soloI >= gridWidth ||\n        soloJ < 0 ||\n        soloJ >= gridHeight || // Stay within grid bounds\n        grid[soloI][soloJ].category === 'Water' || // Avoid water cells\n        grid[soloI][soloJ].solid || // Avoid solid cells\n        grid[soloI][soloJ].inclined // Avoid inclined cells\n      )\n\n      if (tries <= 50) {\n        forestCells.push({ i: soloI, j: soloJ })\n      }\n    }\n\n    // Generate random clearings based on clearingProbability\n    for (let clearing = 0; clearing < clusterCount; clearing++) {\n      if (Math.random() < clearingProbability) {\n        let clearingCenterI, clearingCenterJ\n        let tries = 0\n        const clearingRadius = Math.floor(Math.random() * 8) + 5 // Random clearing radius between 5 and 13\n        const edgeNoise = Math.random() * 1.5\n\n        do {\n          clearingCenterI = playerI + Math.floor(Math.random() * 60 - 30) // Random offset\n          clearingCenterJ = playerJ + Math.floor(Math.random() * 60 - 30)\n          tries++\n          if (tries > 100) break\n        } while (\n          distance(clearingCenterI, clearingCenterJ, playerI, playerJ) < safeDistance ||\n          clearingCenterI < 0 ||\n          clearingCenterI >= gridWidth ||\n          clearingCenterJ < 0 ||\n          clearingCenterJ >= gridHeight || // Stay within grid bounds\n          grid[clearingCenterI][clearingCenterJ].category === 'Water' || // Avoid water cells\n          grid[clearingCenterI][clearingCenterJ].solid || // Avoid solid cells\n          grid[clearingCenterI][clearingCenterJ].inclined // Avoid inclined cells\n        )\n\n        if (tries <= 100) {\n          const clearingCells = createCircle(clearingCenterI, clearingCenterJ, clearingRadius, 0, edgeNoise)\n          clearingCells.forEach(clearedCell => {\n            const index = forestCells.findIndex(cell => cell.i === clearedCell.i && cell.j === clearedCell.j)\n            if (index > -1) {\n              forestCells.splice(index, 1) // Remove tree from clearing\n            }\n          })\n        }\n      }\n    }\n\n    // Generate diagonal paths\n    const pathLength = 20\n    const pathDirection = Math.random() > 0.5 ? 1 : -1 // Random path direction\n\n    for (let step = 0; step < pathLength; step++) {\n      let offsetX, offsetY\n      let tries = 0\n\n      do {\n        offsetX = step * pathDirection\n        offsetY = step\n        tries++\n        if (tries > 50) break\n      } while (\n        distance(playerI + offsetX, playerJ + offsetY, playerI, playerJ) < safeDistance ||\n        playerI + offsetX < 0 ||\n        playerI + offsetX >= gridWidth ||\n        playerJ + offsetY < 0 ||\n        playerJ + offsetY >= gridHeight\n      )\n\n      if (tries <= 50) {\n        const randOffsetX = Math.random() > 0.5 ? 1 : -1\n        const randOffsetY = Math.random() > 0.5 ? 1 : -1\n        pathCells.add(`${playerI + offsetX + randOffsetX},${playerJ + offsetY + randOffsetY}`)\n      }\n    }\n\n    // Remove path cells from forestCells\n    forestCells.forEach(cell => {\n      if (pathCells.has(`${cell.i},${cell.j}`)) {\n        forestCells.splice(forestCells.indexOf(cell), 1)\n      }\n    })\n\n    // Select and place trees in the forest cells\n    const cellsToPlace = []\n    for (let i = 0; i < treeCount; i++) {\n      if (forestCells.length === 0) break\n      const itemIndex = Math.floor(Math.random() * forestCells.length)\n      const cell = forestCells[itemIndex]\n      cellsToPlace.push(cell)\n      forestCells.splice(itemIndex, 1)\n    }\n\n    // Place the trees in the selected cells\n    for (const cell of cellsToPlace) {\n      // Ensure again that we're not placing trees on Water, Border, or Solid cells\n      if (\n        grid[cell.i][cell.j].category !== 'Water' &&\n        !grid[cell.i][cell.j].waterBorder &&\n        !grid[cell.i][cell.j].solid &&\n        !grid[cell.i][cell.j].inclined\n      ) {\n        let isFree = true\n        getPlainCellsAroundPoint(cell.i, cell.j, grid, 3, cell => {\n          if (['Berrybush', 'Gold', 'Stone'].includes(cell.has?.type)) {\n            isFree = false\n          }\n        })\n        isFree && this.resources.push(this.addChild(new Resource({ i: cell.i, j: cell.j, type: 'Tree' }, this.context)))\n      }\n    }\n  }\n\n  generateResourcesAroundPlayers(playersPos) {\n    for (let i = 0; i < playersPos.length; i++) {\n      this.placeResourceGroup(playersPos[i], 'Berrybush', 8, [7, 14])\n      this.placeResourceGroup(playersPos[i], 'Berrybush', 8, [14, 22])\n      this.placeResourceGroup(playersPos[i], 'Berrybush', 8, [22, 29])\n      this.placeResourceGroup(playersPos[i], 'Stone', 7, [7, 14])\n      this.placeResourceGroup(playersPos[i], 'Stone', 7, [14, 22])\n      this.placeResourceGroup(playersPos[i], 'Stone', 7, [22, 29])\n      this.placeResourceGroup(playersPos[i], 'Gold', 7, [7, 14])\n      this.placeResourceGroup(playersPos[i], 'Gold', 7, [14, 22])\n      this.placeResourceGroup(playersPos[i], 'Gold', 7, [22, 29])\n      this.generateForestAroundPlayer(playersPos[i], this.size * 4)\n    }\n  }\n\n  generateTerrain(gridSize = 120, mapModel = 'plain') {\n    const terrainMap = []\n\n    // Initialize the map with default grass (0)\n    for (let i = 0; i < gridSize; i++) {\n      terrainMap[i] = []\n      for (let j = 0; j < gridSize; j++) {\n        terrainMap[i][j] = 0 // Default to grass\n      }\n    }\n\n    // Helper function to generate terrain clusters around a point\n    function generateTerrainCluster(x, y, radius, type) {\n      for (let i = -radius; i <= radius; i++) {\n        for (let j = -radius; j <= radius; j++) {\n          const nx = x + i\n          const ny = y + j\n          if (nx >= 0 && nx < gridSize && ny >= 0 && ny < gridSize && i * i + j * j <= radius * radius) {\n            terrainMap[nx][ny] = type\n          }\n        }\n      }\n    }\n\n    // Generate water with a smoother, randomized approach\n    function generateWater() {\n      if (mapModel === 'continent') {\n        const edgeSize = 10 // Base edge size for water\n        const roundFactor = 0.15 // Controls the \"smoothness\" of the water edge\n\n        // Loop through the map and set water in a rounded pattern with random noise\n        for (let i = 0; i < gridSize; i++) {\n          for (let j = 0; j < gridSize; j++) {\n            const distFromCenter = Math.abs(i - gridSize / 2) + Math.abs(j - gridSize / 2) // Distance from center\n\n            // Add smooth water around the edges with randomized borders\n            const edgeDist = Math.min(i, j, gridSize - i, gridSize - j)\n            const randomOffset = Math.random() * 5 - 2.5 // Randomize water edge for more natural look\n\n            if (edgeDist < edgeSize + Math.sin(distFromCenter * roundFactor) * 5 + randomOffset) {\n              terrainMap[i][j] = 2 // Water\n            }\n          }\n        }\n      } else if (mapModel === 'lac') {\n        const centerX = Math.floor(gridSize / 2)\n        const centerY = Math.floor(gridSize / 2)\n        const baseRadius = Math.floor(gridSize / 4) // Base radius for the lake\n        const roundFactor = 0.6 // Adjust this for more/less rounding\n\n        // Create a lake with a smoother, randomized border\n        for (let i = -baseRadius; i <= baseRadius; i++) {\n          for (let j = -baseRadius; j <= baseRadius; j++) {\n            const nx = centerX + i\n            const ny = centerY + j\n            const distanceFromCenter = Math.sqrt(i * i + j * j)\n            const noise = Math.sin(distanceFromCenter * roundFactor) * 2 // Create smooth noise\n            const randomOffset = Math.random() * 3 - 1.5 // Add randomness to the lake shape\n\n            if (\n              nx >= 0 &&\n              nx < gridSize &&\n              ny >= 0 &&\n              ny < gridSize &&\n              distanceFromCenter < baseRadius + noise + randomOffset\n            ) {\n              terrainMap[nx][ny] = 2 // Water\n            }\n          }\n        }\n      }\n      // 'plain' model: no water, so do nothing\n    }\n\n    // Generate clusters of desert (1) and jungle (3)\n    function generateLandTerrain() {\n      // Generate desert areas (1)\n      generateClusters(1, 8, 5, 10)\n\n      // Generate jungle areas (3)\n      generateClusters(3, 10, 4, 8)\n    }\n\n    // Generic function to generate clustered terrain types\n    function generateClusters(type, clusterCount, clusterSizeMin, clusterSizeMax) {\n      for (let i = 0; i < clusterCount; i++) {\n        const clusterX = Math.floor(Math.random() * gridSize)\n        const clusterY = Math.floor(Math.random() * gridSize)\n        const radius = Math.floor(Math.random() * (clusterSizeMax - clusterSizeMin)) + clusterSizeMin\n\n        // Ensure we avoid water if generating jungle/desert in the 'lac' or 'continent' models\n        if (type !== 2 && terrainMap[clusterX][clusterY] === 2) {\n          continue // Skip if this area is water\n        }\n\n        generateTerrainCluster(clusterX, clusterY, radius, type)\n      }\n    }\n\n    // Generate water based on the map model\n    generateWater()\n\n    // Generate desert and jungle clusters\n    generateLandTerrain()\n\n    return terrainMap\n  }\n\n  generateCells() {\n    const z = 0\n    const terrain = this.generateTerrain(121)\n    this.size = terrain.length - 1\n\n    // Map terrain numbers to cell types\n    const terrainMap = {\n      0: 'Grass',\n      1: 'Desert',\n      2: 'Water',\n      3: 'Jungle',\n    }\n\n    for (let i = 0; i <= this.size; i++) {\n      if (!this.grid[i]) this.grid[i] = []\n      for (let j = 0; j <= this.size; j++) {\n        const type = terrainMap[terrain[i][j]]\n        const cell = new Cell({ i, j, z, type }, this.context)\n        this.addChild(cell) // ensures cell.parent is set\n        this.grid[i][j] = cell\n      }\n    }\n\n    // Post-processing\n    for (let i = 0; i <= this.size; i++) {\n      for (let j = 0; j <= this.size; j++) {\n        this.grid[i][j].fillWaterCellsAroundCell()\n      }\n    }\n\n    this.formatCellsWaterBorder()\n    this.formatCellsDesert()\n  }\n\n  generateSets() {\n    for (let i = 0; i <= this.size; i++) {\n      for (let j = 0; j <= this.size; j++) {\n        const cell = this.grid[i][j]\n        if (getCellsAroundPoint(i, j, this.grid, 1, neighbour => neighbour.solid).length > 0) {\n          continue\n        }\n        if (!cell.has && !cell.solid && !cell.border && !cell.inclined) {\n          if (cell.category !== 'Water' && Math.random() < 0.03 && i > 1 && j > 1 && i < this.size && j < this.size) {\n            const randomSpritesheet = randomRange(292, 301).toString()\n            const spritesheet = Assets.cache.get(randomSpritesheet)\n            const texture = spritesheet.textures['000_' + randomSpritesheet + '.png']\n            const floor = Sprite.from(texture)\n            floor.label = 'floor'\n            floor.roundPixels = true\n            floor.allowMove = false\n            floor.eventMode = 'none'\n            floor.allowClick = false\n            floor.updateAnchor = true\n            cell.addChild(floor)\n          }\n          if (Math.random() < this.chanceOfSets) {\n            if (cell.category !== 'Water') {\n              const type = randomItem(['tree', 'rock', 'animal'])\n              switch (type) {\n                case 'rock':\n                  const randomSpritesheet = randomRange(531, 534).toString()\n                  const spritesheet = Assets.cache.get(randomSpritesheet)\n                  const texture = spritesheet.textures['000_' + randomSpritesheet + '.png']\n                  const rock = Sprite.from(texture)\n                  rock.label = 'set'\n                  rock.roundPixels = true\n                  rock.allowMove = false\n                  rock.eventMode = 'none'\n                  rock.allowClick = false\n                  rock.updateAnchor = true\n                  cell.addChild(rock)\n                  break\n                case 'animal':\n                  const animals = Assets.cache.get('config').animals\n                  const type = randomItem(Object.keys(animals))\n                  this.gaia.createAnimal({ i, j, type })\n                  break\n              }\n            } else {\n              this.resources.push(this.addChild(new Resource({ i, j, type: 'Salmon' }, this.context)))\n            }\n          }\n        }\n      }\n    }\n  }\n\n  generateMapRelief() {\n    for (let i = 0; i <= this.size; i++) {\n      for (let j = 0; j <= this.size; j++) {\n        const cell = this.grid[i][j]\n        if (Math.random() < this.chanceOfRelief) {\n          const level = randomItem(this.reliefRange)\n          let canGenerate = true\n          if (\n            getPlainCellsAroundPoint(i, j, this.grid, level * 2, cell => {\n              if (cell.category === 'Water' || (cell.has && cell.has.family === FAMILY_TYPES.building)) {\n                canGenerate = false\n              }\n            })\n          );\n          if (canGenerate) {\n            cell.setCellLevel(level)\n          }\n        }\n      }\n    }\n    for (let i = 0; i <= this.size; i++) {\n      for (let j = 0; j <= this.size; j++) {\n        const cell = this.grid[i][j]\n        if (cell.z === 1) {\n          let toRemove = true\n          let cpt = 0\n          if (\n            getCellsAroundPoint(i, j, this.grid, 1, cell => {\n              if (cell.z > 0) {\n                cpt++\n              }\n              if (cpt >= 3) {\n                toRemove = false\n              }\n            })\n          );\n          if (toRemove) {\n            cell.setCellLevel(0)\n          }\n        }\n      }\n    }\n    // Format cell's relief\n    for (let i = 0; i <= this.size; i++) {\n      for (let j = 0; j <= this.size; j++) {\n        const cell = this.grid[i][j]\n        cell.fillReliefCellsAroundCell()\n      }\n    }\n  }\n\n  formatCellsRelief() {\n    for (let i = 0; i <= this.size; i++) {\n      for (let j = 0; j <= this.size; j++) {\n        const cell = this.grid[i][j]\n        // Side\n        if (\n          this.grid[i - 1] &&\n          this.grid[i - 1][j].z - cell.z === 1 &&\n          (!this.grid[i + 1] || this.grid[i + 1][j].z <= cell.z) &&\n          (!this.grid[i][j - 1] || this.grid[i][j - 1].z <= cell.z) &&\n          (!this.grid[i][j + 1] || this.grid[i][j + 1].z <= cell.z)\n        ) {\n          cell.setReliefBorder('014', CELL_DEPTH / 2)\n        } else if (\n          this.grid[i + 1] &&\n          this.grid[i + 1][j].z - cell.z === 1 &&\n          (!this.grid[i - 1] || this.grid[i - 1][j].z <= cell.z) &&\n          (!this.grid[i][j - 1] || this.grid[i][j - 1].z <= cell.z) &&\n          (!this.grid[i][j + 1] || this.grid[i][j + 1].z <= cell.z)\n        ) {\n          cell.setReliefBorder('015', CELL_DEPTH / 2)\n        } else if (\n          this.grid[i][j - 1] &&\n          this.grid[i][j - 1].z - cell.z === 1 &&\n          (!this.grid[i + 1] || this.grid[i + 1][j].z <= cell.z) &&\n          (!this.grid[i][j + 1] || this.grid[i][j + 1].z <= cell.z) &&\n          (!this.grid[i - 1] || this.grid[i - 1][j].z <= cell.z)\n        ) {\n          cell.setReliefBorder('016', CELL_DEPTH / 2)\n        } else if (\n          this.grid[i][j + 1] &&\n          this.grid[i][j + 1].z - cell.z === 1 &&\n          (!this.grid[i + 1] || this.grid[i + 1][j].z <= cell.z) &&\n          (!this.grid[i][j - 1] || this.grid[i][j - 1].z <= cell.z) &&\n          (!this.grid[i - 1] || this.grid[i - 1][j].z <= cell.z)\n        ) {\n          cell.setReliefBorder('013', CELL_DEPTH / 2)\n        } // Corner\n        else if (\n          this.grid[i - 1] &&\n          this.grid[i - 1][j - 1] &&\n          this.grid[i - 1][j - 1].z - cell.z === 1 &&\n          (!this.grid[i][j - 1] || this.grid[i][j - 1].z <= cell.z) &&\n          (!this.grid[i - 1] || this.grid[i - 1][j].z <= cell.z)\n        ) {\n          cell.setReliefBorder('010', CELL_DEPTH / 2)\n        } else if (\n          this.grid[i + 1] &&\n          this.grid[i + 1][j - 1] &&\n          this.grid[i + 1][j - 1].z - cell.z === 1 &&\n          (!this.grid[i][j - 1] || this.grid[i][j - 1].z <= cell.z) &&\n          (!this.grid[i + 1] || this.grid[i + 1][j].z <= cell.z)\n        ) {\n          cell.setReliefBorder('012')\n        } else if (\n          this.grid[i - 1] &&\n          this.grid[i - 1][j + 1] &&\n          this.grid[i - 1][j + 1].z - cell.z === 1 &&\n          (!this.grid[i][j + 1] || this.grid[i][j + 1].z <= cell.z) &&\n          (!this.grid[i - 1] || this.grid[i - 1][j].z <= cell.z)\n        ) {\n          cell.setReliefBorder('011')\n        } else if (\n          this.grid[i + 1] &&\n          this.grid[i + 1][j + 1] &&\n          this.grid[i + 1][j + 1].z - cell.z === 1 &&\n          (!this.grid[i][j + 1] || this.grid[i][j + 1].z <= cell.z) &&\n          (!this.grid[i + 1] || this.grid[i + 1][j].z <= cell.z)\n        ) {\n          cell.setReliefBorder('009', CELL_DEPTH / 2)\n        }\n        // Deep corner\n        else if (\n          this.grid[i][j - 1] &&\n          this.grid[i][j - 1].z - cell.z === 1 &&\n          this.grid[i - 1] &&\n          this.grid[i - 1][j].z - cell.z === 1\n        ) {\n          cell.setReliefBorder('022', CELL_DEPTH / 2)\n        } else if (\n          this.grid[i][j + 1] &&\n          this.grid[i][j + 1].z - cell.z === 1 &&\n          this.grid[i + 1] &&\n          this.grid[i + 1][j].z - cell.z === 1\n        ) {\n          cell.setReliefBorder('021', CELL_DEPTH / 2)\n        } else if (\n          this.grid[i][j - 1] &&\n          this.grid[i][j - 1].z - cell.z === 1 &&\n          this.grid[i + 1] &&\n          this.grid[i + 1][j].z - cell.z === 1\n        ) {\n          cell.setReliefBorder('023', CELL_DEPTH)\n        } else if (\n          this.grid[i][j + 1] &&\n          this.grid[i][j + 1].z - cell.z === 1 &&\n          this.grid[i - 1] &&\n          this.grid[i - 1][j].z - cell.z === 1\n        ) {\n          cell.setReliefBorder('024', CELL_DEPTH)\n        }\n      }\n    }\n  }\n\n  formatCellsWaterBorder() {\n    for (let i = 0; i <= this.size; i++) {\n      for (let j = 0; j <= this.size; j++) {\n        const cell = this.grid[i][j]\n        if (cell.type !== 'Water') {\n          // Side\n          if (\n            this.grid[i - 1] &&\n            this.grid[i - 1][j].type === 'Water' &&\n            (!this.grid[i + 1] || this.grid[i + 1][j].type !== 'Water') &&\n            (!this.grid[i][j - 1] || this.grid[i][j - 1].type !== 'Water') &&\n            (!this.grid[i][j + 1] || this.grid[i][j + 1].type !== 'Water')\n          ) {\n            cell.setWaterBorder('20000', '008')\n          } else if (\n            this.grid[i + 1] &&\n            this.grid[i + 1][j].type === 'Water' &&\n            (!this.grid[i - 1] || this.grid[i - 1][j].type !== 'Water') &&\n            (!this.grid[i][j - 1] || this.grid[i][j - 1].type !== 'Water') &&\n            (!this.grid[i][j + 1] || this.grid[i][j + 1].type !== 'Water')\n          ) {\n            cell.setWaterBorder('20000', '009')\n          } else if (\n            this.grid[i][j - 1] &&\n            this.grid[i][j - 1].type === 'Water' &&\n            (!this.grid[i + 1] || this.grid[i + 1][j].type !== 'Water') &&\n            (!this.grid[i][j + 1] || this.grid[i][j + 1].type !== 'Water') &&\n            (!this.grid[i - 1] || this.grid[i - 1][j].type !== 'Water')\n          ) {\n            cell.setWaterBorder('20000', '011')\n          } else if (\n            this.grid[i][j + 1] &&\n            this.grid[i][j + 1].type === 'Water' &&\n            (!this.grid[i + 1] || this.grid[i + 1][j].type !== 'Water') &&\n            (!this.grid[i][j - 1] || this.grid[i][j - 1].type !== 'Water') &&\n            (!this.grid[i - 1] || this.grid[i - 1][j].type !== 'Water')\n          ) {\n            cell.setWaterBorder('20000', '010')\n          } // Corner\n          else if (\n            this.grid[i - 1] &&\n            this.grid[i - 1][j - 1] &&\n            this.grid[i - 1][j - 1].type === 'Water' &&\n            (!this.grid[i][j - 1] || this.grid[i][j - 1].type !== 'Water') &&\n            (!this.grid[i - 1] || this.grid[i - 1][j].type !== 'Water')\n          ) {\n            cell.setWaterBorder('20000', '005')\n          } else if (\n            this.grid[i + 1] &&\n            this.grid[i + 1][j - 1] &&\n            this.grid[i + 1][j - 1].type === 'Water' &&\n            (!this.grid[i][j - 1] || this.grid[i][j - 1].type !== 'Water') &&\n            (!this.grid[i + 1] || this.grid[i + 1][j].type !== 'Water')\n          ) {\n            cell.setWaterBorder('20000', '007')\n          } else if (\n            this.grid[i - 1] &&\n            this.grid[i - 1][j + 1] &&\n            this.grid[i - 1][j + 1].type === 'Water' &&\n            (!this.grid[i][j + 1] || this.grid[i][j + 1].type !== 'Water') &&\n            (!this.grid[i - 1] || this.grid[i - 1][j].type !== 'Water')\n          ) {\n            cell.setWaterBorder('20000', '004')\n          } else if (\n            this.grid[i + 1] &&\n            this.grid[i + 1][j + 1] &&\n            this.grid[i + 1][j + 1].type === 'Water' &&\n            (!this.grid[i][j + 1] || this.grid[i][j + 1].type !== 'Water') &&\n            (!this.grid[i + 1] || this.grid[i + 1][j].type !== 'Water')\n          ) {\n            cell.setWaterBorder('20000', '006')\n          }\n          // Deep corner\n          else if (\n            this.grid[i][j - 1] &&\n            this.grid[i][j - 1].type === 'Water' &&\n            this.grid[i - 1] &&\n            this.grid[i - 1][j].type === 'Water'\n          ) {\n            cell.setWaterBorder('20000', '001')\n          } else if (\n            this.grid[i][j + 1] &&\n            this.grid[i][j + 1].type === 'Water' &&\n            this.grid[i + 1] &&\n            this.grid[i + 1][j].type === 'Water'\n          ) {\n            cell.setWaterBorder('20000', '002')\n          } else if (\n            this.grid[i][j - 1] &&\n            this.grid[i][j - 1].type === 'Water' &&\n            this.grid[i + 1] &&\n            this.grid[i + 1][j].type === 'Water'\n          ) {\n            cell.setWaterBorder('20000', '003')\n          } else if (\n            this.grid[i][j + 1] &&\n            this.grid[i][j + 1].type === 'Water' &&\n            this.grid[i - 1] &&\n            this.grid[i - 1][j].type === 'Water'\n          ) {\n            cell.setWaterBorder('20000', '000')\n          }\n        }\n      }\n    }\n  }\n  formatCellsDesert() {\n    for (let i = 0; i <= this.size; i++) {\n      for (let j = 0; j <= this.size; j++) {\n        const cell = this.grid[i][j]\n        const typeToFormat = ['Grass', 'Jungle']\n        if (cell.type === 'Desert') {\n          if (this.grid[i - 1] && this.grid[i - 1][j] && typeToFormat.includes(this.grid[i - 1][j].type)) {\n            this.grid[i - 1][j].setDesertBorder('est')\n          }\n          if (this.grid[i + 1] && this.grid[i + 1][j] && typeToFormat.includes(this.grid[i + 1][j].type)) {\n            this.grid[i + 1][j].setDesertBorder('west')\n          }\n          if (this.grid[i][j - 1] && typeToFormat.includes(this.grid[i][j - 1].type)) {\n            this.grid[i][j - 1].setDesertBorder('south')\n          }\n          if (this.grid[i][j + 1] && typeToFormat.includes(this.grid[i][j + 1].type)) {\n            this.grid[i][j + 1].setDesertBorder('north')\n          }\n        }\n      }\n    }\n  }\n  findPlayerPlaces() {\n    const results = []\n    const outBorder = 20\n    const inBorder = Math.floor(this.size / 4)\n    const zones = [\n      {\n        minX: outBorder,\n        minY: this.size / 2 + inBorder,\n        maxX: this.size / 2 - inBorder,\n        maxY: this.size - outBorder,\n      },\n      {\n        minX: outBorder,\n        minY: outBorder,\n        maxX: this.size / 2 - inBorder,\n        maxY: this.size / 2 - inBorder,\n      },\n      {\n        minX: this.size / 2 + inBorder,\n        minY: outBorder,\n        maxX: this.size - outBorder,\n        maxY: this.size / 2 - inBorder,\n      },\n      {\n        minX: this.size / 2 + inBorder,\n        minY: this.size / 2 + inBorder,\n        maxX: this.size - outBorder,\n        maxY: this.size - outBorder,\n      },\n    ]\n    for (let i = 0; i < zones.length; i++) {\n      const pos = getZoneInGridWithCondition(zones[i], this.grid, 5, cell => {\n        return !cell.border && !cell.solid && !cell.inclined\n      })\n      if (pos) {\n        results.push(pos)\n      }\n    }\n    return results\n  }\n\n  placeResourceGroup(player, instance, quantity, range) {\n    const { context, grid } = this\n\n    // Function to get valid cells around a center point within a specific distance\n    function getValidCells(centerI, centerJ, dist) {\n      const cells = []\n      // Check surrounding cells within the specified distance\n      for (let dx = -dist; dx <= dist; dx++) {\n        for (let dy = -dist; dy <= dist; dy++) {\n          const newI = centerI + dx\n          const newJ = centerJ + dy\n\n          // Ensure the new coordinates are within the grid bounds\n          if (grid[newI] && grid[newI][newJ]) {\n            const cell = grid[newI][newJ]\n            let isFree = true\n            getPlainCellsAroundPoint(cell.i, cell.j, grid, 3, cell => {\n              if (['Berrybush', 'Gold', 'Stone'].includes(cell.has?.type)) {\n                isFree = false\n              }\n            })\n            // Check if the cell is valid\n            if (isFree && !cell.solid && cell.category !== 'Water' && !cell.has && !cell.border && !cell.inclined) {\n              cells.push({ i: newI, j: newJ })\n            }\n          }\n        }\n      }\n      return cells\n    }\n\n    // Get a random center point around the player's position within the specified range\n    const randomDistance = randomRange(range[0], range[1])\n    const centerI = player.i + randomItem([-randomDistance, randomDistance])\n    const centerJ = player.j + randomItem([-randomDistance, randomDistance])\n\n    // Gather valid cells around the center point\n    const validCells = getValidCells(centerI, centerJ, 2) // Adjust distance to suit clustering\n\n    // Check if we have enough valid cells to place the required quantity of resources\n    if (validCells.length < quantity) {\n      console.warn('Not enough valid cells found for resource placement.')\n      return // Exit if not enough valid cells found\n    }\n\n    // Randomly select the required number of cells from the valid cells\n    const cellsToPlace = []\n    for (let i = 0; i < quantity; i++) {\n      const itemIndex = Math.floor(Math.random() * validCells.length)\n      const cell = validCells[itemIndex]\n      cellsToPlace.push(cell) // Store the selected cell for placement\n      validCells.splice(itemIndex, 1) // Remove it from valid cells to avoid duplicates\n    }\n\n    // Place resources in the selected cells\n    for (const cell of cellsToPlace) {\n      this.resources.push(this.addChild(new Resource({ i: cell.i, j: cell.j, type: instance }, context)))\n    }\n  }\n}\n","import { Assets } from 'pixi.js'\nimport {\n  getIconPath,\n  canAfford,\n  refundCost,\n  throttle,\n  canvasDrawDiamond,\n  canvasDrawRectangle,\n  canvasDrawStrokeRectangle,\n  isValidCondition,\n  getBuildingAsset,\n  Modal,\n} from '../lib'\nimport { CELL_WIDTH, CELL_HEIGHT, LONG_CLICK_DURATION, IS_MOBILE, FAMILY_TYPES } from '../constants'\nimport { sound } from '@pixi/sound'\n\nexport default class Menu {\n  constructor(context) {\n    this.context = context\n    this.topbar = document.createElement('div')\n    this.topbar.id = 'topbar'\n    this.topbar.className = 'topbar bar'\n    this.icons = {\n      wood: getIconPath('000_50732'),\n      food: getIconPath('002_50732'),\n      stone: getIconPath('001_50732'),\n      gold: getIconPath('003_50732'),\n    }\n    this.infoIcons = {\n      wood: getIconPath('000_50731'),\n      stone: getIconPath('001_50731'),\n      food: getIconPath('002_50731'),\n      gold: getIconPath('003_50731'),\n    }\n\n    this.longClick = false\n    this.mouseHoldTimeout\n\n    this.resources = document.createElement('div')\n    this.resources.className = 'topbar-resources'\n    ;['wood', 'food', 'stone', 'gold'].forEach(res => {\n      this.setResourceBox(res)\n    })\n\n    this.age = document.createElement('div')\n    this.age.className = 'topbar-age'\n    const options = document.createElement('div')\n    options.className = 'topbar-options'\n    const menu = document.createElement('div')\n    menu.className = 'topbar-options-menu'\n    menu.innerText = 'Menu'\n    menu.addEventListener('pointerdown', () => {\n      this.context.pause()\n      const content = document.createElement('div')\n      content.className = 'modal-menu'\n      const modal = new Modal(content)\n      const save = document.createElement('button')\n      save.innerText = 'Save'\n      save.addEventListener('pointerdown', () => {\n        this.context.save()\n        modal.close()\n        this.context.resume()\n      })\n      const load = document.createElement('div')\n      const input = document.createElement('input')\n      input.type = 'file'\n      input.accept = 'application/JSON'\n      input.addEventListener('change', evt => {\n        var reader = new FileReader()\n        reader.onload = ({ target: { result } }) => {\n          this.context.load(JSON.parse(result))\n          modal.close()\n          this.context.resume()\n        }\n        reader.readAsText(evt.target.files[0])\n      })\n      load.className = 'input-file'\n      load.innerText = 'Load'\n      load.appendChild(input)\n      const cancel = document.createElement('button')\n      cancel.innerText = 'Cancel'\n      cancel.addEventListener('pointerdown', () => {\n        modal.close()\n        this.context.resume()\n      })\n      content.appendChild(save)\n      content.appendChild(load)\n      content.appendChild(cancel)\n    })\n    options.appendChild(menu)\n\n    this.topbar.appendChild(this.resources)\n    this.topbar.appendChild(this.age)\n    this.topbar.appendChild(options)\n    document.body.prepend(this.topbar)\n\n    this.bottombar = document.createElement('div')\n    this.bottombar.className = 'bottombar bar'\n    this.bottombarInfo = document.createElement('div')\n    this.bottombarInfo.className = 'bottombar-info'\n    this.bottombarMenu = document.createElement('div')\n    this.bottombarMenu.className = 'bottombar-menu'\n    const bottombarMapWrap = document.createElement('div')\n    bottombarMapWrap.className = 'bottombar-map-wrap'\n    this.bottombarMap = document.createElement('div')\n    this.bottombarMap.className = 'bottombar-map'\n    this.bottombarMap.addEventListener('pointerdown', evt => {\n      const {\n        context: { controls },\n      } = this\n      this.mouseHoldTimeout = setTimeout(() => {\n        this.longClick = true\n        const minimapFactor = this.getMinimapFactor()\n        const rect = evt.target.getBoundingClientRect()\n        const x = (evt.clientX - rect.left - rect.width / 2) * minimapFactor\n        const y = (evt.clientY - rect.top - 3) * minimapFactor\n        controls.setCamera(x, y)\n      }, LONG_CLICK_DURATION)\n    })\n    this.bottombarMap.addEventListener('pointerup', evt => {\n      const {\n        context: { player, controls, map },\n      } = this\n      clearTimeout(this.mouseHoldTimeout)\n      if (controls.mouseBuilding || controls.mouseRectangle || this.longClick) {\n        this.longClick = false\n        return\n      }\n      this.longClick = false\n      const minimapFactor = this.getMinimapFactor()\n      const rect = evt.target.getBoundingClientRect()\n      const x = (evt.clientX - rect.left - rect.width / 2) * minimapFactor\n      const y = (evt.clientY - rect.top - 3) * minimapFactor\n\n      if (player?.selectedUnits?.length) {\n        const pos = isometricToCartesian(x, y)\n        const i = Math.min(Math.max(pos[0], 0), map.size)\n        const j = Math.min(Math.max(pos[1], 0), map.size)\n        if (map.grid[i] && map.grid[i][j]) {\n          const cell = map.grid[i][j]\n          controls.sendUnits(cell)\n        }\n      } else {\n        controls.setCamera(x, y)\n      }\n    })\n    bottombarMapWrap.appendChild(this.bottombarMap)\n\n    this.terrainMinimap = document.createElement('canvas')\n    this.playersMinimap = []\n    this.resourcesMinimap = document.createElement('canvas')\n    this.cameraMinimap = document.createElement('canvas')\n    this.cameraMinimap.style.zIndex = 1\n\n    this.bottombarMap.appendChild(this.terrainMinimap)\n    this.bottombarMap.appendChild(this.resourcesMinimap)\n    this.bottombarMap.appendChild(this.cameraMinimap)\n    this.bottombar.appendChild(this.bottombarInfo)\n    this.bottombar.appendChild(this.bottombarMenu)\n    this.bottombar.appendChild(bottombarMapWrap)\n    document.body.appendChild(this.bottombar)\n\n    this.toggled = false\n    this.toggle = document.createElement('div')\n    this.toggle.className = 'toggle'\n    this.toggle.innerText = 'x'\n    this.toggle.addEventListener('pointerdown', evt => {\n      evt.preventDefault()\n      if (this.toggled) {\n        this.toggle.innerText = 'x'\n        this.bottombar.style.display = 'grid'\n        this.toggled = false\n      } else {\n        this.bottombar.style.display = 'none'\n        this.toggle.innerText = 'o'\n        this.toggled = true\n      }\n      evt.stopPropagation()\n    })\n    IS_MOBILE && document.body.prepend(this.toggle)\n\n    this.updatePlayerMiniMap = throttle(this.updatePlayerMiniMapEvt, 500)\n    this.updateResourcesMiniMap = throttle(this.updateResourcesMiniMapEvt, 500)\n    this.updateCameraMiniMap = throttle(this.updateCameraMiniMapEvt, 100)\n\n    this.miniMapAlpha = 1.284\n    this.updateTopbar()\n  }\n\n  destroy() {\n    this.bottombar.remove()\n    this.topbar.remove()\n  }\n\n  init() {\n    this.initMiniMap()\n    this.updateTopbar()\n  }\n\n  getMinimapFactor() {\n    const {\n      context: { map },\n    } = this\n    const mapWidth = CELL_WIDTH / 2 + (map.size * CELL_WIDTH) / 2\n    return (mapWidth / 234) * 2\n  }\n\n  initMiniMap() {\n    const {\n      context: { map },\n    } = this\n\n    const context = this.terrainMinimap.getContext('2d')\n    const cameraContext = this.cameraMinimap.getContext('2d')\n    const resourceContext = this.resourcesMinimap.getContext('2d')\n\n    const minimapFactor = this.getMinimapFactor() / this.miniMapAlpha\n    const mapWidth = CELL_WIDTH / 2 + (map.size * CELL_WIDTH) / 2\n    const translate = mapWidth / 2 / minimapFactor\n    context.translate(translate, 0)\n    cameraContext.translate(translate, 0)\n    resourceContext.translate(translate, 0)\n\n    if (map.revealEverything || map.revealTerrain) {\n      this.revealTerrainMinimap()\n    }\n  }\n\n  revealTerrainMinimap() {\n    const {\n      context: { map },\n    } = this\n\n    const canvas = this.terrainMinimap\n    const context = canvas.getContext('2d')\n\n    const minimapFactor = this.getMinimapFactor() / this.miniMapAlpha\n    const mapWidth = CELL_WIDTH / 2 + (map.size * CELL_WIDTH) / 2\n    const translate = mapWidth / 2 / minimapFactor\n\n    context.clearRect(-translate, 0, canvas.width, canvas.height)\n\n    for (let i = 0; i <= map.size; i++) {\n      for (let j = 0; j <= map.size; j++) {\n        const cell = map.grid[i][j]\n        const x = cell.x\n        const y = cell.y\n        canvasDrawDiamond(\n          context,\n          x / minimapFactor + translate,\n          y / minimapFactor,\n          CELL_WIDTH / minimapFactor + 1,\n          CELL_HEIGHT / minimapFactor + 1,\n          cell.color\n        )\n      }\n    }\n  }\n\n  updateTerrainMiniMap(i, j) {\n    const {\n      context: { map },\n    } = this\n\n    const canvas = this.terrainMinimap\n    const context = canvas.getContext('2d')\n\n    const minimapFactor = this.getMinimapFactor() / this.miniMapAlpha\n    const mapWidth = CELL_WIDTH / 2 + (map.size * CELL_WIDTH) / 2\n    const translate = mapWidth / 2 / minimapFactor\n\n    const cell = map.grid[i][j]\n    let color = cell.color\n\n    const x = cell.x\n    const y = cell.y\n    canvasDrawDiamond(\n      context,\n      x / minimapFactor + translate,\n      y / minimapFactor,\n      CELL_WIDTH / minimapFactor + 1,\n      CELL_HEIGHT / minimapFactor + 1,\n      color\n    )\n\n    if (cell.has && cell.has.family === FAMILY_TYPES.resource) {\n      this.updateResourceMiniMap(cell.has)\n    }\n  }\n\n  updateResourceMiniMap(resource) {\n    const {\n      context: { map },\n    } = this\n\n    const canvas = this.resourcesMinimap\n    const context = canvas.getContext('2d')\n\n    const squareSize = 4\n    const minimapFactor = this.getMinimapFactor() / this.miniMapAlpha\n    const mapWidth = CELL_WIDTH / 2 + (map.size * CELL_WIDTH) / 2\n    const translate = mapWidth / 2 / minimapFactor\n\n    const finalX = resource.x / minimapFactor - squareSize / 2\n    const finalY = resource.y / minimapFactor - squareSize / 2\n    canvasDrawRectangle(context, finalX + translate, finalY, squareSize, squareSize, resource.color)\n  }\n\n  updateResourcesMiniMapEvt() {\n    const {\n      context: { map, player },\n    } = this\n\n    const canvas = this.resourcesMinimap\n    const context = canvas.getContext('2d')\n\n    const squareSize = 4\n    const minimapFactor = this.getMinimapFactor() / this.miniMapAlpha\n    const mapWidth = CELL_WIDTH / 2 + (map.size * CELL_WIDTH) / 2\n    const translate = mapWidth / 2 / minimapFactor\n\n    context.clearRect(-translate, 0, canvas.width, canvas.height)\n\n    map.resources.forEach(resource => {\n      const cell = player?.views?.[resource.i]?.[resource.j]\n      if (resource.color && (cell?.viewed || map.revealEverything)) {\n        const finalX = resource.x / minimapFactor - squareSize / 2\n        const finalY = resource.y / minimapFactor - squareSize / 2\n        canvasDrawRectangle(context, finalX + translate, finalY, squareSize, squareSize, resource.color)\n      }\n    })\n  }\n\n  updateCameraMiniMapEvt() {\n    const {\n      context: { app, map, controls },\n    } = this\n\n    const canvas = this.cameraMinimap\n    const context = canvas.getContext('2d')\n\n    const minimapFactor = this.getMinimapFactor() / this.miniMapAlpha\n    const mapWidth = CELL_WIDTH / 2 + (map.size * CELL_WIDTH) / 2\n    const translate = mapWidth / 2 / minimapFactor\n\n    context.clearRect(-translate, 0, canvas.width, canvas.height)\n\n    const x = controls.camera.x / minimapFactor\n    const y = controls.camera.y / minimapFactor\n    const w = app.screen.width / minimapFactor\n    const h = app.screen.height / minimapFactor\n    canvasDrawStrokeRectangle(context, x + translate, y, w, h, 'white')\n  }\n\n  updatePlayerMiniMapEvt(owner) {\n    if (!owner) {\n      return\n    }\n\n    const {\n      context: { map },\n    } = this\n\n    const squareSize = 4\n    const playerMinimap = this.playersMinimap.find(({ id }) => id === `minimap-${owner.label}`)\n    const color = owner.colorHex\n\n    let canvas\n    let context\n\n    const minimapFactor = this.getMinimapFactor() / this.miniMapAlpha\n    const mapWidth = CELL_WIDTH / 2 + (map.size * CELL_WIDTH) / 2\n    const translate = mapWidth / 2 / minimapFactor\n\n    if (playerMinimap) {\n      canvas = playerMinimap.canvas\n      context = playerMinimap.context\n    } else {\n      canvas = document.createElement('canvas')\n      context = canvas.getContext('2d')\n      context.translate(translate, 0)\n      this.playersMinimap.push({\n        id: `minimap-${owner.label}`,\n        canvas,\n        context,\n      })\n      this.bottombarMap.appendChild(canvas)\n    }\n\n    context.clearRect(-translate, 0, canvas.width, canvas.height)\n\n    owner.buildings.forEach(({ x, y, size, selected }) => {\n      const finalSize = squareSize + size\n      const finalX = x / minimapFactor - finalSize / 2\n      const finalY = y / minimapFactor - finalSize / 2\n      canvasDrawRectangle(context, finalX + translate, finalY, finalSize, finalSize, selected ? 'white' : color)\n    })\n\n    owner.units.forEach(({ x, y, selected }) => {\n      const finalX = x / minimapFactor - squareSize / 2\n      const finalY = y / minimapFactor - squareSize / 2\n      canvasDrawRectangle(context, finalX + translate, finalY, squareSize, squareSize, selected ? 'white' : color)\n    })\n  }\n\n  getMessage(cost) {\n    const {\n      context: { player },\n    } = this\n    const resource = Object.keys(cost).find(prop => player[prop] < cost[prop])\n    return `You need more ${resource} !`\n  }\n\n  showMessage(message) {\n    const {\n      context: { gamebox },\n    } = this\n    if (document.getElementById('msg')) {\n      document.getElementById('msg').remove()\n    }\n    const box = document.createElement('div')\n    box.id = 'msg'\n    box.className = 'message'\n    Object.assign(box.style, {\n      bottom: this.bottombar.clientHeight + 5 + 'px',\n    })\n    const msg = document.createElement('span')\n    msg.textContent = message\n    msg.className = 'message-content'\n\n    box.appendChild(msg)\n    gamebox.appendChild(box)\n    setTimeout(() => {\n      box.remove()\n    }, 3000)\n  }\n\n  setResourceBox(name) {\n    const box = document.createElement('div')\n    box.className = 'resource'\n\n    const img = document.createElement('img')\n    img.className = 'resource-content'\n    img.src = this.icons[name]\n\n    this[name] = document.createElement('div')\n    box.appendChild(img)\n    box.appendChild(this[name])\n    this.resources.appendChild(box)\n  }\n\n  updateBottombar() {\n    const {\n      context: { player },\n    } = this\n    if (player.selectedBuilding || player.selectedUnit) {\n      this.setBottombar(player.selectedBuilding || player.selectedUnit)\n    }\n  }\n\n  updateTopbar() {\n    const {\n      context: { player },\n    } = this\n    const t = {\n      0: 'Stone Age',\n      1: 'Tool Age',\n      2: 'Bronze Age',\n      3: 'Iron Age',\n    }\n    ;['wood', 'food', 'stone', 'gold', 'age'].forEach(prop => {\n      const val = Math.min((player && player[prop]) || 0, 99999)\n      this[prop].textContent = prop === 'age' ? t[val] : val\n    })\n  }\n\n  resetInfo() {\n    this.bottombarInfo.textContent = ''\n    this.bottombarInfo.style.background = 'transparent'\n  }\n\n  generateInfo(selection) {\n    this.resetInfo()\n    this.bottombarInfo.style.background = 'black'\n    if (typeof selection.interface.info === 'function') {\n      selection.interface.info(this.bottombarInfo)\n    }\n  }\n\n  updateInfo(target, action) {\n    const targetElement = this.bottombarInfo.querySelector(`[id=${target}]`)\n    if (!targetElement) {\n      return\n    }\n    return typeof action !== 'function' ? (targetElement.textContent = action) : action(targetElement)\n  }\n\n  updateButtonContent(target, action) {\n    const targetElement = this.bottombarMenu.querySelector(`[id=${target}]`)\n    if (!targetElement) {\n      return\n    }\n    const contentElement = targetElement.querySelector('[id=content]')\n    if (!contentElement) {\n      return\n    }\n    return typeof action !== 'function' ? (contentElement.textContent = action) : action(contentElement)\n  }\n\n  toggleButtonCancel(target, value) {\n    const element = this.bottombarMenu.querySelector(`[id=${target}-cancel]`)\n    if (!element) {\n      return\n    }\n    element.style.display = value ? 'block' : 'none'\n  }\n\n  setBottombar(selection = null) {\n    const {\n      context: { controls, player },\n    } = this\n\n    this.resetInfo()\n    this.bottombarMenu.textContent = ''\n    this.selection = selection\n    if (controls.mouseBuilding) {\n      controls.removeMouseBuilding()\n    }\n    if (selection && selection.interface) {\n      this.generateInfo(selection)\n      if (selection.family === FAMILY_TYPES.building) {\n        if (!selection.isBuilt) {\n          setMenuRecurs(selection, this.bottombarMenu, [])\n        } else if (selection.technology) {\n          setMenuRecurs(selection, this.bottombarMenu, [\n            {\n              icon: 'assets/interface/50721/003_50721.png',\n              id: `${type}-cancel`,\n              onClick: selection => {\n                sound.play('5036')\n                selection.cancelTechnology()\n              },\n            },\n          ])\n        } else {\n          setMenuRecurs(selection, this.bottombarMenu, selection.interface.menu || [])\n        }\n      } else {\n        setMenuRecurs(selection, this.bottombarMenu, selection.interface.menu || [])\n      }\n    }\n    function setMenuRecurs(selection, element, menu, parent) {\n      menu\n        .filter(btn => !btn.hide || !btn.hide())\n        .forEach((btn, index) => {\n          const box = document.createElement('div')\n          box.className = 'bottombar-menu-box'\n          box.id = btn.id || `btn-${index}`\n          if (typeof btn.onCreate === 'function') {\n            btn.onCreate(selection, box)\n          } else {\n            const img = document.createElement('img')\n            img.src = typeof btn.icon === 'function' ? btn.icon() : btn.icon\n            img.className = 'img'\n            box.appendChild(img)\n          }\n\n          if (btn.children) {\n            box.addEventListener('pointerup', () => {\n              sound.play('5036')\n              element.textContent = ''\n              controls.removeMouseBuilding()\n              setMenuRecurs(selection, element, btn.children, menu)\n            })\n          } else if (typeof btn.onClick === 'function') {\n            box.addEventListener('pointerup', evt => {\n              sound.play('5036')\n              btn.onClick(selection, evt)\n            })\n          }\n          element.appendChild(box)\n        })\n      if (parent || selection.selected) {\n        const back = document.createElement('div')\n        back.className = 'bottombar-menu-box'\n        const img = document.createElement('img')\n        img.className = 'img'\n        back.id = 'interfaceBackBtn'\n        img.src = 'assets/interface/50721/010_50721.png'\n        if (parent) {\n          back.addEventListener('pointerup', () => {\n            sound.play('5036')\n            element.textContent = ''\n            controls.removeMouseBuilding()\n            setMenuRecurs(selection, element, parent)\n          })\n        } else {\n          back.addEventListener('pointerup', () => {\n            sound.play('5036')\n            controls.removeMouseBuilding()\n            player.unselectAll()\n          })\n        }\n        back.appendChild(img)\n        element.appendChild(back)\n      }\n    }\n  }\n\n  getUnitButton(type) {\n    const {\n      context: { player },\n    } = this\n    const unit = player.config.units[type]\n    return {\n      id: type,\n      icon: () => getIconPath(unit.icon),\n      hide: () => (unit.conditions || []).some(condition => !isValidCondition(condition, player)),\n      onCreate: (selection, element) => {\n        const div = document.createElement('div')\n        div.className = 'bottombar-menu-column'\n        const cancel = document.createElement('img')\n        cancel.id = `${type}-cancel`\n        cancel.className = 'img'\n        cancel.src = 'assets/interface/50721/003_50721.png'\n        if (!selection.queue.filter(q => q === type).length) {\n          cancel.style.display = 'none'\n        }\n        cancel.addEventListener('pointerup', () => {\n          sound.play('5036')\n          for (let i = 0; i < selection.queue.length; i++) {\n            if (selection.queue[i] === type) {\n              refundCost(player, unit.cost)\n            }\n          }\n          this.updateTopbar()\n          selection.queue = selection.queue.filter(q => q !== type)\n          if (selection.queue[0] !== type) {\n            this.updateButtonContent(type, '')\n            this.toggleButtonCancel(type, false)\n          }\n        })\n        const img = document.createElement('img')\n        img.src = getIconPath(unit.icon)\n        img.className = 'img'\n        img.addEventListener('pointerup', () => {\n          sound.play('5036')\n          if (canAfford(player, unit.cost)) {\n            if (player.population >= player.POPULATION_MAX) {\n              this.showMessage('You need to build more houses')\n            }\n            this.toggleButtonCancel(type, true)\n            selection.buyUnit(type)\n          } else {\n            this.showMessage(this.getMessage(unit.cost))\n          }\n        })\n        const queue = selection.queue.filter(queue => queue === type).length\n        const counter = document.createElement('div')\n        counter.id = 'content'\n        counter.textContent = queue || ''\n        counter.style.padding = '1px'\n        counter.style.position = 'absolute'\n        div.appendChild(img)\n        div.appendChild(cancel)\n        element.appendChild(div)\n        element.appendChild(counter)\n      },\n    }\n  }\n\n  getBuildingButton(type) {\n    const {\n      context: { controls, player },\n    } = this\n    const config = player.config.buildings[type]\n    return {\n      id: type,\n      icon: () => {\n        const assets = getBuildingAsset(type, player, Assets)\n        return getIconPath(assets.icon)\n      },\n      hide: () => (config.conditions || []).some(condition => !isValidCondition(condition, player)),\n      onClick: () => {\n        const assets = getBuildingAsset(type, player, Assets)\n        controls.removeMouseBuilding()\n        if (canAfford(player, config.cost)) {\n          controls.setMouseBuilding({ ...config, ...assets, type })\n        } else {\n          this.showMessage(this.getMessage(config.cost))\n        }\n      },\n    }\n  }\n\n  getTechnologyButton(type) {\n    const {\n      context: { controls, player },\n    } = this\n    const config = player.techs[type]\n    return {\n      icon: getIconPath(config.icon),\n      id: type,\n      hide: () =>\n        (config.conditions || []).some(\n          condition => player.technologies.includes(type) || !isValidCondition(condition, player)\n        ),\n      onClick: selection => {\n        controls.removeMouseBuilding()\n        if (canAfford(player, config.cost)) {\n          selection.buyTechnology(type)\n        } else {\n          this.showMessage(this.getMessage(config.cost))\n        }\n      },\n    }\n  }\n}\n","import { sound } from '@pixi/sound'\nimport { Container, Graphics, AnimatedSprite, Assets, Sprite } from 'pixi.js'\nimport {\n  isometricToCartesian,\n  pointIsBetweenTwoPoint,\n  pointsDistance,\n  pointInRectangle,\n  getPlainCellsAroundPoint,\n  changeSpriteColor,\n  getTexture,\n  randomItem,\n} from '../lib'\nimport { COLOR_WHITE, COLOR_RED, CELL_WIDTH, CELL_HEIGHT, MAX_SELECT_UNITS, ACCELERATOR } from '../constants'\n\nexport default class Controls extends Container {\n  constructor(context) {\n    super()\n\n    this.context = context\n\n    const { map, gamebox } = context\n\n    this.sortableChildren = true\n\n    this.mouse = {\n      x: 0,\n      y: 0,\n      prevent: false,\n    }\n\n    this.camera = {\n      x: 0,\n      y: 0,\n    }\n\n    this.visibleCells = new Set()\n\n    this.setCamera(Math.floor(map.size / 2), Math.floor(map.size / 2))\n\n    this.mouseHoldTimeout\n    this.keysPressed = {}\n    this.keyInterval\n    this.keySpeed = 0\n    this.eventMode = 'auto'\n    this.allowMove = false\n    this.allowClick = false\n    this.mouseRectangle\n    this.mouseTouch\n    this.mouseDrag = false\n    this.moveCameraInterval\n\n    this.minimapRectangle = new Graphics()\n    this.addChild(this.minimapRectangle)\n\n    document.addEventListener('mousemove', evt => this.moveCameraWithMouse(evt))\n    document.addEventListener('mouseout', () => clearInterval(this.moveCameraInterval))\n    document.addEventListener('keydown', evt => this.onKeyDown(evt))\n    document.addEventListener('keyup', evt => this.onKeyUp(evt))\n    gamebox.addEventListener('touchstart', evt => this.onTouchStart(evt))\n    gamebox.addEventListener('touchend', evt => this.onTouchEnd(evt))\n    gamebox.addEventListener('touchmove', evt => this.onTouchMove(evt))\n    gamebox.addEventListener('mousemove', evt => this.onMouseMove(evt))\n    gamebox.addEventListener('mousedown', evt => this.onMouseDown(evt))\n    gamebox.addEventListener('mouseup', evt => this.onMouseUp(evt))\n  }\n\n  destroy() {\n    const {\n      context: { gamebox },\n    } = this\n\n    document.removeEventListener('mousemove', evt => this.moveCameraWithMouse(evt))\n    document.removeEventListener('mouseout', () => clearInterval(this.moveCameraInterval))\n    document.removeEventListener('keydown', evt => this.onKeyDown(evt))\n    document.removeEventListener('keyup', evt => this.onKeyUp(evt))\n    gamebox.removeEventListener('touchstart', evt => this.onTouchStart(evt))\n    gamebox.removeEventListener('touchend', evt => this.onTouchEnd(evt))\n    gamebox.removeEventListener('touchmove', evt => this.onTouchMove(evt))\n    gamebox.removeEventListener('mousemove', evt => this.onMouseMove(evt))\n    gamebox.removeEventListener('mousedown', evt => this.onMouseDown(evt))\n    gamebox.removeEventListener('mouseup', evt => this.onMouseUp(evt))\n  }\n\n  onKeyDown(evt) {\n    if (evt.key === 'Delete' || evt.keyCode === 8) {\n      const {\n        context: { player },\n      } = this\n      for (let i = 0; i < player.selectedUnits.length; i++) {\n        player.selectedUnits[i].die()\n      }\n      if (player.selectedBuilding) {\n        player.selectedBuilding.die()\n      }\n      return\n    }\n\n    const handleMoveCamera = () => {\n      if (!this.keyInterval) {\n        this.keyInterval = setInterval(() => {\n          let double = false\n          if (Object.values(this.keysPressed).filter(Boolean).length > 1) {\n            double = true\n          }\n          if (this.keySpeed < 4) {\n            this.keySpeed += 0.2\n          }\n          if (this.keysPressed['ArrowLeft']) {\n            this.moveCamera('left', this.keySpeed, double)\n          }\n          if (this.keysPressed['ArrowUp']) {\n            this.moveCamera('up', this.keySpeed, double)\n          }\n          if (this.keysPressed['ArrowDown']) {\n            this.moveCamera('down', this.keySpeed, double)\n          }\n          if (this.keysPressed['ArrowRight']) {\n            this.moveCamera('right', this.keySpeed, double)\n          }\n        }, 1)\n      }\n    }\n    if (!evt.repeat) {\n      this.keysPressed[evt.key] = true\n    }\n    const controlsMap = ['ArrowLeft', 'ArrowRight', 'ArrowDown', 'ArrowUp']\n    if (controlsMap.includes(evt.key)) {\n      handleMoveCamera()\n    }\n  }\n\n  onKeyUp(evt) {\n    if (!evt.repeat) {\n      delete this.keysPressed[evt.key]\n    }\n    if (!Object.values(this.keysPressed).filter(Boolean).length) {\n      clearInterval(this.keyInterval)\n      this.keyInterval = null\n      this.keySpeed = 0\n    }\n  }\n\n  onTouchStart(evt) {\n    const touch = evt.touches[0]\n    if (evt.touches.length === 2) {\n      this.mouseTouch = {\n        x: touch.pageX,\n        y: touch.pageY,\n      }\n    } else {\n      this.onMouseDown(touch)\n    }\n  }\n\n  onTouchMove(evt) {\n    const touch = evt.touches[0]\n    if (evt.touches.length === 2) {\n      this.mouse.x = touch.pageX\n      this.mouse.y = touch.pageY\n\n      if (this.mouseTouch) {\n        const speedX = Math.abs(this.mouse.x - this.mouseTouch.x) * 2\n        const speedY = Math.abs(this.mouse.y - this.mouseTouch.y) * 2\n        if (this.mouse.x > this.mouseTouch.x) {\n          this.moveCamera('left', speedX, false)\n        }\n        if (this.mouse.y > this.mouseTouch.y) {\n          this.moveCamera('up', speedY, false)\n        }\n        if (this.mouse.y < this.mouseTouch.y) {\n          this.moveCamera('down', speedY, false)\n        }\n        if (this.mouse.x < this.mouseTouch.x) {\n          this.moveCamera('right', speedX, false)\n        }\n      }\n      this.mouseTouch = {\n        x: this.mouse.x,\n        y: this.mouse.y,\n      }\n    } else {\n      this.onMouseMove(touch)\n    }\n  }\n\n  onTouchEnd(evt) {\n    const touch = evt.changedTouches[0]\n    if (evt.changedTouches.length === 1) {\n      this.onMouseUp(touch)\n    }\n  }\n\n  onMouseDown(evt) {\n    this.mouse.x = evt.pageX\n    this.mouse.y = evt.pageY\n    if (!this.isMouseInApp(evt)) {\n      return\n    }\n    this.pointerStart = {\n      x: this.mouse.x,\n      y: this.mouse.y,\n    }\n  }\n\n  onMouseMove(evt) {\n    const {\n      context: { map, player, app },\n    } = this\n\n    this.mouse.x = evt.pageX\n    this.mouse.y = evt.pageY\n\n    // Mouse building to place construction\n    if (this.mouseBuilding) {\n      const pos = isometricToCartesian(\n        this.mouse.x - map.x,\n        this.mouse.y >= app.screen.height ? app.screen.height - map.y : this.mouse.y - map.y\n      )\n      const i = Math.min(Math.max(pos[0], 0), map.size)\n      const j = Math.min(Math.max(pos[1], 0), map.size)\n      if (map.grid[i] && map.grid[i][j]) {\n        const cell = map.grid[i][j]\n        this.mouseBuilding.x = cell.x - this.camera.x\n        this.mouseBuilding.y = cell.y - this.camera.y\n        let isFree = true\n\n        const dist = this.mouseBuilding.size === 3 ? 1 : 0\n        if (this.mouseBuilding.buildOnWater) {\n          let waterBorderedCells = 0\n          let waterCells = 0\n          getPlainCellsAroundPoint(i, j, map.grid, dist, cell => {\n            if (cell.inclined || cell.solid || !cell.visible) {\n              isFree = false\n              return\n            }\n            if (cell.waterBorder) {\n              waterBorderedCells++\n            } else if (cell.category === 'Water') {\n              waterCells++\n            }\n          })\n          if (waterBorderedCells < 2 && waterCells < 4) {\n            isFree = false\n          }\n        } else {\n          getPlainCellsAroundPoint(i, j, map.grid, dist, cell => {\n            if (cell.category === 'Water' || cell.solid || cell.inclined || cell.border || !cell.visible) {\n              isFree = false\n              return\n            }\n          })\n        }\n        // Color image of mouse building depend on buildable or not\n        const sprite = this.mouseBuilding.getChildByLabel('sprite')\n        const color = this.mouseBuilding.getChildByLabel('color')\n        if (isFree) {\n          sprite.tint = COLOR_WHITE\n          if (color) {\n            color.tint = COLOR_WHITE\n          }\n        } else {\n          sprite.tint = COLOR_RED\n          if (color) {\n            color.tint = COLOR_RED\n          }\n        }\n        this.mouseBuilding.isFree = isFree\n      }\n      return\n    }\n\n    // Create and draw mouse selection\n    if (\n      !this.mouseRectangle &&\n      this.pointerStart &&\n      pointsDistance(this.mouse.x, this.mouse.y, this.pointerStart.x, this.pointerStart.y) > 5\n    ) {\n      this.mouseRectangle = {\n        x: this.pointerStart.x,\n        y: this.pointerStart.y,\n        width: 0,\n        height: 0,\n        graph: new Graphics(),\n      }\n      app.stage.addChild(this.mouseRectangle.graph)\n    }\n\n    if (this.mouseRectangle && !this.mouseBuilding) {\n      if (player.selectedUnits.length || player.selectedBuilding) {\n        player.unselectAll()\n      }\n      const graph = this.mouseRectangle.graph\n      graph.clear()\n\n      this.mouseRectangle.width = this.mouse.x - this.mouseRectangle.x\n      this.mouseRectangle.height = this.mouse.y - this.mouseRectangle.y\n\n      const x = Math.min(this.mouseRectangle.x, this.mouseRectangle.x + this.mouseRectangle.width)\n      const y = Math.min(this.mouseRectangle.y, this.mouseRectangle.y + this.mouseRectangle.height)\n      const w = Math.abs(this.mouseRectangle.width)\n      const h = Math.abs(this.mouseRectangle.height)\n\n      graph.rect(x, y, w, h).stroke(COLOR_WHITE)\n    }\n  }\n\n  onMouseUp(evt) {\n    const {\n      context: { menu, map, player },\n    } = this\n    this.pointerStart = null\n    clearTimeout(this.mouseHoldTimeout)\n    if (!this.isMouseInApp(evt) || this.mouse.prevent || this.mouseDrag) {\n      this.mouse.prevent = false\n      return\n    }\n    player?.selectedBuilding && player.unselectAll()\n    // Select units on mouse rectangle\n    if (this.mouseRectangle) {\n      let selectVillager\n      let countSelect = 0\n      player.unselectAll()\n      // Select units inside the rectangle\n      for (let i = 0; i < player.units.length; i++) {\n        const unit = player.units[i]\n        if (\n          player.selectedUnits.length < MAX_SELECT_UNITS &&\n          pointInRectangle(\n            unit.x - this.camera.x,\n            unit.y - this.camera.y,\n            this.mouseRectangle.x,\n            this.mouseRectangle.y,\n            this.mouseRectangle.width,\n            this.mouseRectangle.height,\n            true\n          )\n        ) {\n          unit.select()\n          countSelect++\n          if (unit.type === 'Villager') {\n            selectVillager = unit\n          }\n          player.selectedUnits.push(unit)\n        }\n      }\n      // Set our bottombar\n      if (countSelect) {\n        if (selectVillager) {\n          player.selectedUnit = selectVillager\n          menu.setBottombar(selectVillager)\n        } else {\n          // TODO SELECT UNITS THAT HAVE THE MOST FREQUENCY\n          player.selectedUnit = player.selectedUnits[0]\n          menu.setBottombar(player.selectedUnits[0])\n        }\n      }\n      // Reset mouse selection\n      if (this.mouseRectangle) {\n        this.mouseRectangle.graph.destroy(true)\n        this.mouseRectangle = null\n      }\n      return\n    }\n    if (this.isMouseInApp(evt)) {\n      const pos = isometricToCartesian(this.mouse.x - map.x, this.mouse.y - map.y)\n      const i = Math.min(Math.max(pos[0], 0), map.size)\n      const j = Math.min(Math.max(pos[1], 0), map.size)\n      if (map.grid[i] && map.grid[i][j]) {\n        const cell = map.grid[i][j]\n        if ((cell.solid || cell.has) && cell.visible) {\n          return\n        }\n        if (this.mouseBuilding) {\n          if (cell.inclined || cell.border) {\n            return\n          }\n          if (this.mouseBuilding.isFree) {\n            if (player.buyBuilding(i, j, this.mouseBuilding.type)) {\n              this.removeMouseBuilding()\n              if (menu.selection) {\n                menu.setBottombar(menu.selection)\n              }\n            }\n          }\n        } else if (player?.selectedUnits.length) {\n          // Pointer animation\n          const pointerSheet = Assets.cache.get('50405')\n          const pointer = new AnimatedSprite(pointerSheet.animations['animation'])\n          pointer.animationSpeed = 0.2 * ACCELERATOR\n          pointer.loop = false\n          pointer.anchor.set(0.5, 0.5)\n          pointer.x = this.mouse.x\n          pointer.y = this.mouse.y\n          pointer.allowMove = false\n          pointer.allowClick = false\n          pointer.eventMode = 'auto'\n          pointer.roundPixels = true\n          pointer.onComplete = () => {\n            pointer.destroy()\n          }\n          pointer.play()\n          this.addChild(pointer)\n          // Send units\n          this.sendUnits(cell)\n        }\n      }\n    }\n  }\n\n  sendUnits(cell) {\n    const {\n      context: { player, map },\n    } = this\n    const minX = Math.min(...player.selectedUnits.map(unit => unit.i))\n    const minY = Math.min(...player.selectedUnits.map(unit => unit.j))\n    const maxX = Math.max(...player.selectedUnits.map(unit => unit.i))\n    const maxY = Math.max(...player.selectedUnits.map(unit => unit.j))\n    const centerX = minX + Math.round((maxX - minX) / 2)\n    const centerY = minY + Math.round((maxY - minY) / 2)\n    let hasSentVillager = false\n    let hasSentSoldier = false\n    for (let u = 0; u < player.selectedUnits.length; u++) {\n      const unit = player.selectedUnits[u]\n      const distCenterX = unit.i - centerX\n      const distCenterY = unit.j - centerY\n      const finalX = cell.i + distCenterX\n      const finalY = cell.j + distCenterY\n      if (unit.type === 'Villager') {\n        hasSentVillager = true\n      } else {\n        hasSentSoldier = true\n      }\n      if (map.grid[finalX] && map.grid[finalX][finalY]) {\n        player.selectedUnits[u].sendTo(map.grid[finalX][finalY])\n      } else {\n        player.selectedUnits[u].sendTo(cell)\n      }\n    }\n    if (hasSentSoldier) {\n      const voice = randomItem(['5075', '5076', '5128', '5164'])\n      sound.play(voice)\n    } else if (hasSentVillager) {\n      sound.play('5006')\n    }\n  }\n\n  isMouseInApp(evt) {\n    return evt.target && (!evt.target.tagName || evt.target.closest('#game'))\n  }\n\n  removeMouseBuilding() {\n    if (!this.mouseBuilding) {\n      return\n    }\n    this.removeChild(this.mouseBuilding)\n    this.mouseBuilding.destroy()\n    this.mouseBuilding = null\n  }\n\n  setMouseBuilding(building) {\n    const {\n      context: { player },\n    } = this\n    this.mouseBuilding = new Container()\n    const sprite = Sprite.from(getTexture(building.images.final, Assets))\n    sprite.label = 'sprite'\n    this.mouseBuilding.addChild(sprite)\n    Object.keys(building).forEach(prop => {\n      this.mouseBuilding[prop] = building[prop]\n    })\n    this.mouseBuilding.x = this.mouse.x\n    this.mouseBuilding.y = this.mouse.y\n    this.mouseBuilding.label = 'mouseBuilding'\n    if (building.images.color) {\n      const color = Sprite.from(getTexture(building.images.color, Assets))\n      color.label = 'color'\n      changeSpriteColor(color, player.color)\n      this.mouseBuilding.addChild(color)\n    } else {\n      changeSpriteColor(sprite, player.color)\n    }\n    this.addChild(this.mouseBuilding)\n  }\n\n  moveCamera(dir, moveSpeed, isSpeedDivided) {\n    /**\n     * \t/A\\\n     * /   \\\n     *B     D\n     * \\   /\n     *  \\C/\n     */\n\n    const {\n      context: { map, app, menu },\n    } = this\n\n    const dividedSpeed = isSpeedDivided ? 1.5 : 1\n    const speed = (moveSpeed || 20) / dividedSpeed\n    const A = { x: CELL_WIDTH / 2 - this.camera.x, y: -this.camera.y }\n    const B = {\n      x: CELL_WIDTH / 2 - (map.size * CELL_WIDTH) / 2 - this.camera.x,\n      y: (map.size * CELL_HEIGHT) / 2 - this.camera.y,\n    }\n    const D = {\n      x: CELL_WIDTH / 2 + (map.size * CELL_WIDTH) / 2 - this.camera.x,\n      y: (map.size * CELL_HEIGHT) / 2 - this.camera.y,\n    }\n    const C = { x: CELL_WIDTH / 2 - this.camera.x, y: map.size * CELL_HEIGHT - this.camera.y }\n    const cameraCenter = {\n      x: this.camera.x + app.screen.width / 2 - this.camera.x,\n      y: this.camera.y + app.screen.height / 2 - this.camera.y,\n    }\n\n    if (dir === 'left') {\n      if (cameraCenter.x - 100 > B.x && pointIsBetweenTwoPoint(A, B, cameraCenter, 50)) {\n        this.camera.y += speed / (CELL_WIDTH / CELL_HEIGHT)\n        this.camera.x -= speed\n      } else if (cameraCenter.x - 100 > B.x && pointIsBetweenTwoPoint(B, C, cameraCenter, 50)) {\n        this.camera.y -= speed / (CELL_WIDTH / CELL_HEIGHT)\n        this.camera.x -= speed\n      } else if (cameraCenter.x - 100 > B.x) {\n        this.camera.x -= speed\n      }\n    } else if (dir === 'right') {\n      if (cameraCenter.x + 100 < D.x && pointIsBetweenTwoPoint(A, D, cameraCenter, 50)) {\n        this.camera.y += speed / (CELL_WIDTH / CELL_HEIGHT)\n        this.camera.x += speed\n      } else if (cameraCenter.x + 100 < D.x && pointIsBetweenTwoPoint(D, C, cameraCenter, 50)) {\n        this.camera.y -= speed / (CELL_WIDTH / CELL_HEIGHT)\n        this.camera.x += speed\n      } else if (cameraCenter.x + 100 < D.x) {\n        this.camera.x += speed\n      }\n    }\n    if (dir === 'up') {\n      if (cameraCenter.y - 50 > A.y && pointIsBetweenTwoPoint(A, B, cameraCenter, 50)) {\n        this.camera.y -= speed / (CELL_WIDTH / CELL_HEIGHT)\n        this.camera.x += speed\n      } else if (cameraCenter.y - 50 > A.y && pointIsBetweenTwoPoint(A, D, cameraCenter, 50)) {\n        this.camera.y -= speed / (CELL_WIDTH / CELL_HEIGHT)\n        this.camera.x -= speed\n      } else if (cameraCenter.y - 50 > A.y) {\n        this.camera.y -= speed\n      }\n    } else if (dir === 'down') {\n      if (cameraCenter.y + 50 < C.y && pointIsBetweenTwoPoint(D, C, cameraCenter, 50)) {\n        this.camera.y += speed / (CELL_WIDTH / CELL_HEIGHT)\n        this.camera.x -= speed\n      } else if (cameraCenter.y + 50 < C.y && pointIsBetweenTwoPoint(B, C, cameraCenter, 50)) {\n        this.camera.y += speed / (CELL_WIDTH / CELL_HEIGHT)\n        this.camera.x += speed\n      } else if (cameraCenter.y + 100 < C.y) {\n        this.camera.y += speed\n      }\n    }\n\n    menu.updateCameraMiniMap()\n    map.setCoordinate(-this.camera.x, -this.camera.y)\n    this.updateVisibleCells()\n  }\n\n  moveCameraWithMouse(evt) {\n    clearInterval(this.moveCameraInterval)\n    const dir = []\n    const mouse = {\n      x: evt.pageX,\n      y: evt.pageY,\n    }\n    const coef = 1\n    const moveDist = 10\n\n    const calcs = {\n      left: (0 + moveDist - mouse.x) * coef,\n      right: (mouse.x - (window.innerWidth - moveDist)) * coef,\n      up: (0 + moveDist - mouse.y) * coef,\n      down: (mouse.y - (window.innerHeight - moveDist)) * coef,\n    }\n    if (mouse.x >= 0 && mouse.x <= 0 + moveDist && mouse.y >= 0 && mouse.y <= window.innerHeight) {\n      dir.push('left')\n    } else if (\n      mouse.x > window.innerWidth - moveDist &&\n      mouse.x <= window.innerWidth &&\n      mouse.y >= 0 &&\n      mouse.y <= window.innerHeight\n    ) {\n      dir.push('right')\n    }\n    if (mouse.x >= 0 && mouse.x <= window.innerWidth && mouse.y >= 0 && mouse.y <= 0 + moveDist) {\n      dir.push('up')\n    } else if (\n      mouse.x >= 0 &&\n      mouse.x <= window.innerWidth &&\n      mouse.y > window.innerHeight - moveDist &&\n      mouse.y <= window.innerHeight\n    ) {\n      dir.push('down')\n    }\n    if (dir.length) {\n      this.moveCameraInterval = setInterval(() => {\n        dir.forEach(prop => {\n          this.moveCamera(prop, calcs[prop])\n        })\n      }, 20)\n    }\n  }\n\n  instanceInCamera(instance) {\n    const {\n      context: { app },\n    } = this\n    return pointInRectangle(instance.x, instance.y, this.camera.x, this.camera.y, app.screen.width, app.screen.height)\n  }\n\n  getCellOnCamera(callback) {\n    const {\n      context: { map, app },\n    } = this\n\n    const cameraFloor = {\n      x: Math.floor(this.camera.x),\n      y: Math.floor(this.camera.y),\n    }\n    const margin = CELL_WIDTH\n\n    for (let i = cameraFloor.x - margin; i <= cameraFloor.x + app.screen.width + margin; i += CELL_WIDTH / 2) {\n      for (let j = cameraFloor.y - margin; j <= cameraFloor.y + app.screen.height + margin; j += CELL_HEIGHT / 2) {\n        const [cartesianX, cartesianY] = isometricToCartesian(i, j)\n        const x = Math.min(Math.max(cartesianX, 0), map.size - 1) // Adjust for index bounds\n        const y = Math.min(Math.max(cartesianY, 0), map.size - 1)\n\n        // Ensure the coordinates are within bounds and call the callback\n        if (map.grid[x] && map.grid[x][y]) {\n          callback(map.grid[x][y])\n        }\n      }\n    }\n  }\n\n  updateVisibleCells() {\n    const { map, app } = this.context\n    const newVisible = new Set()\n    const margin = CELL_WIDTH // extra padding for offscreen cells\n\n    const startX = Math.floor(this.camera.x - margin)\n    const endX = Math.floor(this.camera.x + app.screen.width + margin)\n    const startY = Math.floor(this.camera.y - margin)\n    const endY = Math.floor(this.camera.y + app.screen.height + margin)\n\n    for (let i = startX; i <= endX; i += CELL_WIDTH / 2) {\n      for (let j = startY; j <= endY; j += CELL_HEIGHT / 2) {\n        const [cartX, cartY] = isometricToCartesian(i, j)\n        const x = Math.min(Math.max(cartX, 0), map.size - 1)\n        const y = Math.min(Math.max(cartY, 0), map.size - 1)\n\n        const cell = map.grid[x]?.[y]\n        if (cell) {\n          newVisible.add(cell)\n        }\n      }\n    }\n\n    // Hide cells that left the viewport\n    for (let cell of this.visibleCells) {\n      if (!newVisible.has(cell)) {\n        cell.visible = false\n        if (cell.has) cell.has.visible = false\n      }\n    }\n\n    // Show newly visible cells\n    for (let cell of newVisible) {\n      if (!this.visibleCells.has(cell)) {\n        cell.updateVisible()\n      }\n    }\n\n    this.visibleCells = newVisible\n  }\n\n  init() {\n    const {\n      context: { player, map },\n    } = this\n    // Set camera to player building else unit\n    if (player?.buildings?.length) {\n      this.setCamera(player.buildings[0].x, player.buildings[0].y)\n    } else if (player?.units?.length) {\n      this.setCamera(player.units[0].x, player.units[0].y)\n    } else {\n      this.setCamera(map.size / 2, map.size / 2)\n    }\n  }\n\n  setCamera(x, y, direct) {\n    const {\n      context: { map, app, menu },\n    } = this\n    this.camera = {\n      x: direct ? x : x - app.screen.width / 2,\n      y: direct ? y : y - app.screen.height / 2,\n    }\n    menu && menu.updateCameraMiniMap()\n    map.setCoordinate(-this.camera.x, -this.camera.y)\n    this.updateVisibleCells()\n  }\n}\n","import { Container } from 'pixi.js'\nimport Map from '../classes/map'\nimport Menu from '../classes/menu'\nimport Controls from '../classes/controls'\nimport { filterObject } from '../lib'\n\n/**\n * Main Display Object\n * @exports Game\n * @extends Container\n */\n\nexport default class Game extends Container {\n  constructor(app, gamebox) {\n    super()\n    this.context = {\n      app,\n      gamebox,\n      menu: null,\n      player: null,\n      players: [],\n      map: null,\n      controls: null,\n      paused: false,\n      save: () => this.save(),\n      load: evt => this.load(evt),\n      pause: () => this.togglePause(true),\n      resume: () => this.togglePause(false),\n    }\n    this.start()\n  }\n\n  start() {\n    const { context } = this\n\n    context.map = new Map(context)\n    context.controls = new Controls(context)\n    context.menu = new Menu(context)\n\n    context.map.generateMap()\n\n    context.players = context.map.generatePlayers()\n    context.player = context.players[0]\n    context.menu.init()\n    context.map.placePlayers()\n    context.map.stylishMap()\n    context.controls.init()\n\n    this.addChild(context.map)\n    this.addChild(context.controls)\n\n    window.addEventListener('keydown', evt => {\n      if (evt.key === 'p') {\n        this.context.paused ? context.resume() : context.pause()\n      }\n    })\n    window.addEventListener('resize', () => {\n      if (context.controls) {\n        context.controls.updateVisibleCells()\n      }\n      if (context.menu) {\n        context.menu.updateCameraMiniMap()\n      }\n    })\n  }\n\n  save() {\n    const cleanContext = context => {\n      const resourceData = resource => ({\n        ...filterObject(resource, [\n          'label',\n          'i',\n          'j',\n          'selected',\n          'type',\n          'isDead',\n          'quantity',\n          'isDestroyed',\n          'size',\n          'hitPoints',\n        ]),\n        textureName: (resource.textureName || '').split('.')[0],\n      })\n      const animalData = animal => ({\n        ...filterObject(animal, [\n          'label',\n          'type',\n          'i',\n          'j',\n          'x',\n          'y',\n          'z',\n          'hitPoints',\n          'path',\n          'work',\n          'realDest',\n          'path',\n          'zIndex',\n          'selected',\n          'degree',\n          'action',\n          'direction',\n          'currentSheet',\n          'size',\n          'inactif',\n          'isDead',\n          'isDestroyed',\n          'quantity',\n        ]),\n        currentFrame: animal.sprite?.currentFrame,\n        loop: animal.sprite?.loop,\n        dest: animal.dest && [animal.dest.i, animal.dest.i, animal.dest?.label],\n        previousDest: animal.previousDest && [animal.previousDest.i, animal.previousDest.i, animal.previousDest?.label],\n      })\n      const unitData = unit => ({\n        ...filterObject(unit, [\n          'label',\n          'type',\n          'i',\n          'j',\n          'x',\n          'y',\n          'z',\n          'hitPoints',\n          'path',\n          'work',\n          'realDest',\n          'path',\n          'selected',\n          'degree',\n          'action',\n          'loading',\n          'loadingType',\n          'direction',\n          'currentSheet',\n          'size',\n          'inactif',\n          'isDead',\n          'isDestroyed',\n        ]),\n        currentFrame: unit.sprite?.currentFrame,\n        loop: unit.sprite?.loop,\n        dest: unit.dest && [unit.dest.i, unit.dest.i, unit.dest?.label],\n        previousDest: unit.previousDest && [unit.previousDest.i, unit.previousDest.i, unit.previousDest?.label],\n      })\n      const buildingData = building => ({\n        ...filterObject(building, [\n          'label',\n          'i',\n          'j',\n          'type',\n          'selected',\n          'queue',\n          'technology',\n          'loading',\n          'isDead',\n          'isDestroyed',\n          'isBuilt',\n          'hitPoints',\n          'quantity',\n        ]),\n        isUsedBy: building.isUsedBy?.iname,\n      })\n      const playerData = player => ({\n        ...filterObject(player, [\n          'label',\n          'age',\n          'type',\n          'wood',\n          'food',\n          'stone',\n          'gold',\n          'civ',\n          'color',\n          'population',\n          'POPULATION_MAX',\n          'technologies',\n          'cellViewed',\n          'isPlayed',\n          'hasBuilt',\n        ]),\n        buildings: player.buildings.map(building => buildingData(building)),\n        units: player.units.map(unit => unitData(unit)),\n        corpses: player.corpses.map(corpse => unitData(corpse)),\n        views: player.views.map(view =>\n          view.map(cell => ({\n            ...filterObject(cell, ['i', 'j', 'viewed']),\n            viewBy: (cell.viewBy || []).map(unit => unit.label),\n          }))\n        ),\n      })\n      const cellData = cell => ({\n        ...filterObject(cell, [\n          'z',\n          'type',\n          'viewed',\n          'solid',\n          'visible',\n          'category',\n          'inclined',\n          'border',\n          'waterBorder',\n        ]),\n        has: cell.has?.label,\n        fogSprites: cell.fogSprites.map(({ textureSheet, colorSheet, colorName }) => ({\n          textureSheet,\n          colorSheet,\n          colorName,\n        })),\n      })\n      return {\n        camera: context.controls.camera,\n        players: context.players.map(player => playerData(player)),\n        resources: context.map.resources.map(resource => resourceData(resource)),\n        map: context.map.grid.map(line => line.map(cell => cellData(cell))),\n        animals: context.map.gaia.units.map(animal => animalData(animal)),\n      }\n    }\n\n    const json = cleanContext(this.context)\n    const dataStr = 'data:text/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(json))\n    const downloadAnchorNode = document.createElement('a')\n    downloadAnchorNode.setAttribute('href', dataStr)\n    downloadAnchorNode.setAttribute('download', `save_${new Date().toLocaleString('en-GB', { timeZone: 'UTC' })}.json`)\n    document.body.appendChild(downloadAnchorNode)\n    downloadAnchorNode.click()\n    downloadAnchorNode.remove()\n  }\n\n  load(json) {\n    this.context.controls.destroy()\n    this.context.menu.destroy()\n    this.removeChildren()\n    this.context = {\n      ...this.context,\n      player: null,\n      players: [],\n      map: null,\n      controls: null,\n      paused: false,\n    }\n    const { context } = this\n\n    context.map = new Map(context)\n    context.controls = new Controls(context)\n    context.menu = new Menu(context)\n\n    context.map.generateFromJSON(json)\n\n    this.addChild(context.map)\n    this.addChild(context.controls)\n  }\n\n  togglePause(pause) {\n    const { map, players } = this.context\n    if (pause) {\n      const div = document.createElement('div')\n      div.id = 'pause'\n      div.innerText = 'Pause'\n      document.body.appendChild(div)\n    } else {\n      document.getElementById('pause')?.remove()\n    }\n    for (let i = 0; i < map.gaia.units.length; i++) {\n      pause ? map.gaia.units[i].pause() : map.gaia.units[i].resume()\n    }\n    for (let i = 0; i < players.length; i++) {\n      const player = players[i]\n      for (let j = 0; j < player?.units?.length; j++) {\n        pause ? player.units[j].pause() : player.units[j].resume()\n      }\n      for (let j = 0; j < player?.buildings?.length; j++) {\n        pause ? player.buildings[j].pause() : player.buildings[j].resume()\n      }\n    }\n    this.context.paused = pause\n  }\n}\n","import { Assets, Container } from 'pixi.js'\n\n/**\n * Loading Screen\n *\n * @exports LoaderScreen\n */\n\nexport default class LoaderScreen extends Container {\n  constructor() {\n    super()\n    this.app\n\n    this.loadingDiv = document.createElement('div')\n    this.loadingDiv.className = 'loading'\n    document.body.prepend(this.loadingDiv)\n    this.done = () => {}\n  }\n\n  async start() {\n    return new Promise(async resolve => {\n      Assets.addBundle('config', {\n        config: 'assets/config.json',\n        greek: 'assets/greek.json',\n        technology: 'assets/technology.json',\n      })\n\n      Assets.addBundle('interface', {\n        50405: 'assets/interface/50405/texture.json',\n      })\n\n      Assets.addBundle('seeds', {\n        0: 'assets/seeds/0.txt',\n      })\n\n      Assets.addBundle('terrain', {\n        15000: 'assets/terrain/15000/texture.json',\n        15001: 'assets/terrain/15001/texture.json',\n        15002: 'assets/terrain/15002/texture.json',\n      })\n\n      Assets.addBundle('border', {\n        20000: 'assets/border/20000/texture.json',\n        20002: 'assets/border/20002/texture.json',\n      })\n\n      const graphics = [\n        '60',\n        '61',\n        '62',\n        '63',\n        '64',\n        '65',\n        '66',\n        '67',\n        '68',\n        '69',\n        '70',\n        '71',\n        '72',\n        '73',\n        '75',\n        '78',\n        '79',\n        '80',\n        '81',\n        '82',\n        '83',\n        '84',\n        '85',\n        '86',\n        '87',\n        '88',\n        '89',\n        '90',\n        '91',\n        '92',\n        '94',\n        '153',\n        '154',\n        '155',\n        '203',\n        '204',\n        '205',\n        '206',\n        '212',\n        '215',\n        '217',\n        '218',\n        '219',\n        '220',\n        '222',\n        '223',\n        '224',\n        '225',\n        '227',\n        '230',\n        '231',\n        '232',\n        '233',\n        '234',\n        '235',\n        '236',\n        '237',\n        '239',\n        '240',\n        '254',\n        '256',\n        '258',\n        '261',\n        '271',\n        '272',\n        '273',\n        '274',\n        '280',\n        '281',\n        '292',\n        '293',\n        '294',\n        '295',\n        '296',\n        '297',\n        '298',\n        '299',\n        '300',\n        '301',\n        '308',\n        '309',\n        '311',\n        '312',\n        '314',\n        '315',\n        '321',\n        '324',\n        '326',\n        '327',\n        '328',\n        '330',\n        '331',\n        '332',\n        '333',\n        '334',\n        '336',\n        '337',\n        '339',\n        '340',\n        '343',\n        '347',\n        '355',\n        '356',\n        '367',\n        '368',\n        '370',\n        '371',\n        '373',\n        '374',\n        '380',\n        '386',\n        '388',\n        '389',\n        '390',\n        '391',\n        '392',\n        '393',\n        '394',\n        '395',\n        '397',\n        '398',\n        '399',\n        '400',\n        '401',\n        '403',\n        '413',\n        '414',\n        '415',\n        '416',\n        '418',\n        '419',\n        '425',\n        '428',\n        '430',\n        '431',\n        '432',\n        '433',\n        '435',\n        '436',\n        '437',\n        '439',\n        '440',\n        '441',\n        '442',\n        '445',\n        '447',\n        '450',\n        '452',\n        '458',\n        '463',\n        '464',\n        '465',\n        '466',\n        '473',\n        '478',\n        '479',\n        '480',\n        '481',\n        '489',\n        '492',\n        '493',\n        '494',\n        '497',\n        '500',\n        '503',\n        '509',\n        '527',\n        '531',\n        '532',\n        '533',\n        '534',\n        '593',\n        '594',\n        '609',\n        '622',\n        '623',\n        '624',\n        '625',\n        '626',\n        '628',\n        '630',\n        '631',\n        '632',\n        '633',\n        '636',\n        '651',\n        '652',\n        '653',\n        '654',\n        '655',\n        '657',\n        '658',\n        '664',\n        '667',\n        '670',\n        '672',\n        '673',\n        '676',\n        '677',\n        '678',\n        '680',\n        '681',\n        '682',\n        '683',\n        '684',\n        '688',\n      ]\n\n      Assets.addBundle(\n        'graphics',\n        graphics.reduce(\n          (acc, g) => ({\n            ...acc,\n            [g]: `assets/graphics/${g}/texture.json`,\n          }),\n          {}\n        )\n      )\n\n      const sounds = [\n        '5002',\n        '5003',\n        '5005',\n        '5006',\n        '5008',\n        '5009',\n        '5010',\n        '5011',\n        '5012',\n        '5022',\n        '5027',\n        '5036',\n        '5044',\n        '5048',\n        '5054',\n        '5055',\n        '5056',\n        '5057',\n        '5058',\n        '5059',\n        '5060',\n        '5061',\n        '5062',\n        '5063',\n        '5064',\n        '5070',\n        '5075',\n        '5076',\n        '5085',\n        '5096',\n        '5107',\n        '5108',\n        '5118',\n        '5123',\n        '5125',\n        '5126',\n        '5128',\n        '5129',\n        '5132',\n        '5133',\n        '5138',\n        '5139',\n        '5140',\n        '5159',\n        '5142',\n        '5144',\n        '5164',\n        '5166',\n        '5169',\n        '5176',\n        '5178',\n        '5180',\n        '5186',\n        '5196',\n        '5201',\n        '5216',\n        '5217',\n        '5239',\n      ]\n\n      Assets.addBundle(\n        'sounds',\n        sounds.reduce(\n          (acc, g) => ({\n            ...acc,\n            [g]: `assets/sounds/${g}.wav`,\n          }),\n          {}\n        )\n      )\n\n      this.loadingDiv.innerHTML = 'Loading config..'\n      await Assets.loadBundle('config')\n      this.loadingDiv.innerHTML = 'Loading interface..'\n      await Assets.loadBundle('interface')\n      this.loadingDiv.innerHTML = 'Loading seeds..'\n      await Assets.loadBundle('seeds')\n      this.loadingDiv.innerHTML = 'Loading terrain..'\n      await Assets.loadBundle('terrain')\n      this.loadingDiv.innerHTML = 'Loading border..'\n      await Assets.loadBundle('border')\n      this.loadingDiv.innerHTML = 'Loading graphics..'\n      await Assets.loadBundle('graphics')\n      this.loadingDiv.innerHTML = 'Loading sounds..'\n      await Assets.loadBundle('sounds')\n\n      this.loadingDiv.remove()\n\n      resolve()\n    })\n  }\n}\n","import { Application } from 'pixi.js'\nimport './styles.css'\nimport Game from './screens/Game'\nimport Loader from './screens/Loader'\n;(async () => {\n  // Create a new PixiJS application\n  const app = new Application()\n\n  // Initialize the app with background color and auto-resize\n  await app.init({\n    width: window.innerWidth,\n    height: window.innerHeight,\n    background: 0x000000, // black background\n    resizeTo: window,\n    antialias: false, // faster\n    resolution: window.devicePixelRatio || 1,\n    autoDensity: true, // adjusts canvas for resolution\n    powerPreference: 'high-performance', // GPU hint\n  })\n\n  // Append the canvas to your game container\n  const gamebox = document.getElementById('game')\n  if (!gamebox) {\n    console.error('No #game container found')\n    return\n  }\n  gamebox.appendChild(app.canvas)\n\n  // Initialize loader\n  const loader = new Loader()\n  app.stage.addChild(loader)\n  await loader.start()\n\n  // Once assets are loaded, remove loader and start game\n  const game = new Game(app, gamebox)\n  app.stage.removeChild(loader)\n  app.stage.addChild(game)\n\n  // Optional: global pointermove listener\n  app.stage.on('pointermove', event => {\n    // event.data.global.x, event.data.global.y\n  })\n})()\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/.pnpm/css-loader@7.1.2_webpack@5.101.3/node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/.pnpm/css-loader@7.1.2_webpack@5.101.3/node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `:root {\n  --main-primary-color: #1d57a8;\n  --main-background-color: #12171ecf;\n  --main-border-color: transparent;\n  --main-border-radius: 2px;\n  --main-border-size: 0px;\n  --main-border-style: solid;\n  --main-shadow-color: rgba(0, 0, 0, 0.7);\n  --main-box-shadow: var(--main-shadow-color) 0px 0px 3px 0px;\n}\n\nhtml,\nbody,\ninput,\ntextarea,\nselect,\nbutton {\n  border-color: #5e5d5a;\n  color: #e5e0d8;\n  font-size: 12px;\n  text-shadow: 1px 1px black;\n  font-family: sans-serif;\n  -webkit-font-smoothing: none;\n}\n\nbody {\n  height: 100vh;\n  overflow: hidden;\n  margin: 0;\n  -webkit-user-select: none;\n  user-select: none;\n  background-color: black;\n}\n\nbutton,\n.input-file {\n  border: 1px solid var(--main-primary-color);\n  padding: 6px 15px;\n  border-radius: var(--main-border-radius);\n  position: relative;\n  cursor: pointer;\n  text-align: center;\n  background-color: transparent;\n  width: 200px;\n  transition: all 0.2s;\n}\nbutton:hover,\n.input-file:hover {\n  background-color: var(--main-primary-color);\n}\n.input-file {\n  width: calc(100% - 32px);\n}\n.input-file > input {\n  width: 200px;\n  cursor: pointer;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 99;\n  /*Opacity settings for all browsers*/\n  opacity: 0;\n  -moz-opacity: 0;\n  filter: progid:DXImageTransform.Microsoft.Alpha(opacity=0);\n}\n\n.loading {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n}\n\n#game {\n  flex: 1;\n}\n\n#pause {\n  position: absolute;\n  z-index: 1000;\n  font-size: 50px;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  margin-top: -66px;\n}\n\n.bar {\n  background: var(--main-background-color);\n  width: 100%;\n}\n\nimg {\n  -webkit-user-drag: none;\n  user-drag: none;\n}\n\n.img {\n  object-fit: none;\n  height: 45px;\n  width: 45px;\n  border: var(--main-border-size) var(--main-border-style) var(--main-border-color);\n  border-radius: var(--main-border-radius);\n  box-shadow: var(--main-box-shadow);\n}\n\n.topbar {\n  position: absolute;\n  top: 0;\n  padding: 5px 10px;\n  display: grid;\n  font-weight: bold;\n  grid-template-columns: 33% 33% 33%;\n  width: calc(100% - 20px);\n  align-items: center;\n  justify-content: center;\n}\n\n.bottombar {\n  position: absolute;\n  bottom: 0;\n  display: grid;\n  height: 122px;\n  grid-template-columns: 120px auto 242px;\n  width: calc(100% - 10px);\n  grid-gap: 5px;\n  padding: 5px;\n}\n\n.bottombar-info {\n  position: relative;\n  border: var(--main-border-size) var(--main-border-style) var(--main-border-color);\n  border-radius: var(--main-border-radius);\n  box-shadow: var(--main-box-shadow);\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  padding: 2px;\n  gap: 1px;\n}\n\n.bottombar-info #icon {\n  object-fit: none;\n  height: 45px;\n  width: 45px;\n}\n\n.bottombar-info #infos {\n  position: absolute;\n  left: 45%;\n  top: 30px;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n}\n\n.bottombar-info #info {\n  display: flex;\n  align-items: center;\n  gap: 5px;\n}\n\n.bottombar-menu {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 5px;\n  padding: 5px 0;\n  overflow: auto;\n  max-width: 500px;\n}\n\n.bottombar-menu-column {\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n}\n\n.bottombar-menu-box {\n  position: relative;\n  display: flex;\n}\n\n.bottombar-map-wrap {\n  position: relative;\n  top: 2px;\n  filter: drop-shadow(0px 0px 3px var(--main-shadow-color));\n}\n\n.bottombar-map {\n  width: 100%;\n  height: 100%;\n  background: black;\n  clip-path: polygon(50% 1%, 100% 48%, 50% 96%, 0% 48%);\n}\n\n.bottombar-map canvas {\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n}\n\n.topbar-age {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.topbar-resources {\n  display: flex;\n  gap: 10px;\n}\n\n.topbar-options {\n  display: flex;\n  align-items: center;\n  justify-content: end;\n}\n\n.topbar-options-menu {\n  width: fit-content;\n  cursor: pointer;\n}\n\n.resource {\n  display: flex;\n  gap: 2px;\n  align-items: center;\n}\n\n.resource > div {\n  width: 40px;\n}\n\n.resource-content {\n  object-fit: none;\n  height: 13px;\n  width: 20px;\n  border: var(--main-border-size) var(--main-border-style) var(--main-border-color);\n  border-radius: var(--main-border-radius);\n  box-shadow: var(--main-box-shadow);\n}\n\n.message {\n  z-index: 1000;\n  position: fixed;\n  width: 100%;\n  text-align: center;\n}\n\n.message-content {\n  color: #da2424;\n  background: rgba(0, 0, 0, 0.4);\n  padding: 3px;\n}\n\n.resource-quantity {\n  position: absolute;\n  top: 20px;\n  left: 45%;\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n  gap: 5px;\n}\n\n.unit-loading {\n  position: absolute;\n  top: 52px;\n  left: 45%;\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n  gap: 5px;\n}\n\n.building-loading,\n#population {\n  position: absolute;\n  left: 40%;\n  top: 32px;\n  display: flex;\n  align-items: center;\n}\n\n.toggle {\n  position: fixed;\n  bottom: -119px;\n  right: 0;\n  transform: rotate(64deg);\n  height: 192px;\n  width: 100px;\n  border-top-left-radius: 3px;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 10;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.modal {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 1001;\n}\n\n.modal-content {\n  background: var(--main-background-color);\n  border-radius: var(--main-border-radius);\n  box-shadow: var(--main-box-shadow);\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n.modal-menu {\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding: 10px;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./app/styles.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\":root {\\n  --main-primary-color: #1d57a8;\\n  --main-background-color: #12171ecf;\\n  --main-border-color: transparent;\\n  --main-border-radius: 2px;\\n  --main-border-size: 0px;\\n  --main-border-style: solid;\\n  --main-shadow-color: rgba(0, 0, 0, 0.7);\\n  --main-box-shadow: var(--main-shadow-color) 0px 0px 3px 0px;\\n}\\n\\nhtml,\\nbody,\\ninput,\\ntextarea,\\nselect,\\nbutton {\\n  border-color: #5e5d5a;\\n  color: #e5e0d8;\\n  font-size: 12px;\\n  text-shadow: 1px 1px black;\\n  font-family: sans-serif;\\n  -webkit-font-smoothing: none;\\n}\\n\\nbody {\\n  height: 100vh;\\n  overflow: hidden;\\n  margin: 0;\\n  -webkit-user-select: none;\\n  user-select: none;\\n  background-color: black;\\n}\\n\\nbutton,\\n.input-file {\\n  border: 1px solid var(--main-primary-color);\\n  padding: 6px 15px;\\n  border-radius: var(--main-border-radius);\\n  position: relative;\\n  cursor: pointer;\\n  text-align: center;\\n  background-color: transparent;\\n  width: 200px;\\n  transition: all 0.2s;\\n}\\nbutton:hover,\\n.input-file:hover {\\n  background-color: var(--main-primary-color);\\n}\\n.input-file {\\n  width: calc(100% - 32px);\\n}\\n.input-file > input {\\n  width: 200px;\\n  cursor: pointer;\\n  height: 100%;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  z-index: 99;\\n  /*Opacity settings for all browsers*/\\n  opacity: 0;\\n  -moz-opacity: 0;\\n  filter: progid:DXImageTransform.Microsoft.Alpha(opacity=0);\\n}\\n\\n.loading {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  height: 100%;\\n}\\n\\n#game {\\n  flex: 1;\\n}\\n\\n#pause {\\n  position: absolute;\\n  z-index: 1000;\\n  font-size: 50px;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n  margin-top: -66px;\\n}\\n\\n.bar {\\n  background: var(--main-background-color);\\n  width: 100%;\\n}\\n\\nimg {\\n  -webkit-user-drag: none;\\n  user-drag: none;\\n}\\n\\n.img {\\n  object-fit: none;\\n  height: 45px;\\n  width: 45px;\\n  border: var(--main-border-size) var(--main-border-style) var(--main-border-color);\\n  border-radius: var(--main-border-radius);\\n  box-shadow: var(--main-box-shadow);\\n}\\n\\n.topbar {\\n  position: absolute;\\n  top: 0;\\n  padding: 5px 10px;\\n  display: grid;\\n  font-weight: bold;\\n  grid-template-columns: 33% 33% 33%;\\n  width: calc(100% - 20px);\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n.bottombar {\\n  position: absolute;\\n  bottom: 0;\\n  display: grid;\\n  height: 122px;\\n  grid-template-columns: 120px auto 242px;\\n  width: calc(100% - 10px);\\n  grid-gap: 5px;\\n  padding: 5px;\\n}\\n\\n.bottombar-info {\\n  position: relative;\\n  border: var(--main-border-size) var(--main-border-style) var(--main-border-color);\\n  border-radius: var(--main-border-radius);\\n  box-shadow: var(--main-box-shadow);\\n  overflow: hidden;\\n  display: flex;\\n  flex-direction: column;\\n  padding: 2px;\\n  gap: 1px;\\n}\\n\\n.bottombar-info #icon {\\n  object-fit: none;\\n  height: 45px;\\n  width: 45px;\\n}\\n\\n.bottombar-info #infos {\\n  position: absolute;\\n  left: 45%;\\n  top: 30px;\\n  display: flex;\\n  align-items: center;\\n  flex-direction: column;\\n}\\n\\n.bottombar-info #info {\\n  display: flex;\\n  align-items: center;\\n  gap: 5px;\\n}\\n\\n.bottombar-menu {\\n  display: flex;\\n  flex-wrap: wrap;\\n  gap: 5px;\\n  padding: 5px 0;\\n  overflow: auto;\\n  max-width: 500px;\\n}\\n\\n.bottombar-menu-column {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 5px;\\n}\\n\\n.bottombar-menu-box {\\n  position: relative;\\n  display: flex;\\n}\\n\\n.bottombar-map-wrap {\\n  position: relative;\\n  top: 2px;\\n  filter: drop-shadow(0px 0px 3px var(--main-shadow-color));\\n}\\n\\n.bottombar-map {\\n  width: 100%;\\n  height: 100%;\\n  background: black;\\n  clip-path: polygon(50% 1%, 100% 48%, 50% 96%, 0% 48%);\\n}\\n\\n.bottombar-map canvas {\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.topbar-age {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n.topbar-resources {\\n  display: flex;\\n  gap: 10px;\\n}\\n\\n.topbar-options {\\n  display: flex;\\n  align-items: center;\\n  justify-content: end;\\n}\\n\\n.topbar-options-menu {\\n  width: fit-content;\\n  cursor: pointer;\\n}\\n\\n.resource {\\n  display: flex;\\n  gap: 2px;\\n  align-items: center;\\n}\\n\\n.resource > div {\\n  width: 40px;\\n}\\n\\n.resource-content {\\n  object-fit: none;\\n  height: 13px;\\n  width: 20px;\\n  border: var(--main-border-size) var(--main-border-style) var(--main-border-color);\\n  border-radius: var(--main-border-radius);\\n  box-shadow: var(--main-box-shadow);\\n}\\n\\n.message {\\n  z-index: 1000;\\n  position: fixed;\\n  width: 100%;\\n  text-align: center;\\n}\\n\\n.message-content {\\n  color: #da2424;\\n  background: rgba(0, 0, 0, 0.4);\\n  padding: 3px;\\n}\\n\\n.resource-quantity {\\n  position: absolute;\\n  top: 20px;\\n  left: 45%;\\n  display: flex;\\n  align-items: center;\\n  flex-direction: row;\\n  gap: 5px;\\n}\\n\\n.unit-loading {\\n  position: absolute;\\n  top: 52px;\\n  left: 45%;\\n  display: flex;\\n  align-items: center;\\n  flex-direction: row;\\n  gap: 5px;\\n}\\n\\n.building-loading,\\n#population {\\n  position: absolute;\\n  left: 40%;\\n  top: 32px;\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.toggle {\\n  position: fixed;\\n  bottom: -119px;\\n  right: 0;\\n  transform: rotate(64deg);\\n  height: 192px;\\n  width: 100px;\\n  border-top-left-radius: 3px;\\n  background: rgba(0, 0, 0, 0.5);\\n  z-index: 10;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n.modal {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100vw;\\n  height: 100vh;\\n  background: rgba(0, 0, 0, 0.5);\\n  z-index: 1001;\\n}\\n\\n.modal-content {\\n  background: var(--main-background-color);\\n  border-radius: var(--main-border-radius);\\n  box-shadow: var(--main-box-shadow);\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n}\\n\\n.modal-menu {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 10px;\\n  padding: 10px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["CELL_WIDTH","CELL_HEIGHT","CELL_DEPTH","ACCELERATOR","STEP_TIME","IS_MOBILE","window","innerWidth","innerHeight","LONG_CLICK_DURATION","PLAYER_TYPES","human","ai","FAMILY_TYPES","animal","building","cell","projectile","resource","unit","player","WORK_TYPES","fisher","hunter","farmer","forager","woodcutter","stoneminer","goldminer","builder","attacker","healer","ACTION_TYPES","delivery","takemeat","hunt","attack","fishing","build","farm","forageberry","minegold","minestone","chopwood","LOADING_TYPES","meat","wheat","berry","fish","stone","gold","wood","WORK_FOOD_TYPES","LOADING_FOOD_TYPES","COLOR_WHITE","COLOR_BLACK","COLOR_GREY","COLOR_RED","COLOR_ORANGE","COLOR_YELLOW","COLOR_GREEN","COLOR_BLUE","COLOR_INDIGO","COLOR_VIOLET","COLOR_BONE","COLOR_SHIP_GREY","COLOR_FOG","COLOR_FLASHY_GREEN","COLOR_ARROW","TYPE_ACTION","Stone","Gold","Berrybush","Tree","Fish","CORPSE_TIME","RUBBLE_TIME","MAX_SELECT_UNITS","POPULATION_MAX","e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","_regeneratorDefine","_invoke","enumerable","configurable","writable","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","_arrayLikeToArray","toString","slice","constructor","name","Array","from","test","next","push","isArray","Graphics","Texture","MultiColorReplaceFilter","getIconPath","id","split","index","concat","getBuildingTextureNameWithSize","size","getBuildingRubbleTextureNameWithSize","getBuildingAsset","type","owner","assets","path","cache","get","civ","toLowerCase","buildings","age","getTexture","_name$split","_name$split2","spritesheet","textures","Error","textureName","texture","hitArea","data","frames","colors","getHexColor","colorMap","blue","red","yellow","brown","orange","green","grey","cyan","changeSpriteColorDirectly","sprite","color","sourceColors","targetColors","baseTexture","canvas","document","createElement","width","height","ctx","getContext","drawImage","frame","x","imageData","getImageData","sourceColorMap","Map","map","g","b","rgb","has","targetColor","putImageData","newTexture","changeSpriteColor","source","replacements","filter","tolerance","filters","drawInstanceBlinkingSelection","instance","selection","label","zIndex","poly","stroke","addChildAt","blink","alpha","duration","setTimeout","blinkSequence","_ref","_callee","_context","removeChild","canvasDrawRectangle","context","fillStyle","fillRect","canvasDrawStrokeRectangle","strokeStyle","strokeRect","canvasDrawDiamond","save","beginPath","moveTo","lineTo","closePath","fill","restore","onSpriteLoopAtFrame","cb","onFrameChange","currentFrame","refundCost","cost","_typeof","console","error","keys","forEach","prop","warn","payCost","canAfford","uuidv4","replace","randomValue","crypto","getRandomValues","Uint8Array","hexValue","formatNumber","nbr","cartesianToIsometric","Math","floor","isometricToCartesian","round","getPercentage","getValuePercentage","val","perc","average","pointIsBetweenTwoPoint","line1","line2","pnt","lineThickness","dx","dy","L2","dist","hypot","s","abs","sqrt","randomRange","min","max","random","randomItem","array","undefined","instancesDistance","useCartesian","pointsDistance","j","getInstanceZIndex","pos","z","diff","getInstanceDegree","getPointsDegree","x1","y1","x2","y2","tX","tY","atan2","PI","degreesToRadians","degrees","pointInRectangle","left","top","allDirection","cellIsDiag","src","target","degreeToDirection","degree","exports","entries","_ref2","exported","instanceContactInstance","isDestroyed","moveTowardPoint","speed","velX","velY","getFreeCellAroundPoint","grid","condition","maxDistance","distance","cells","getCellsAroundPoint","getInstanceClosestFreeCellPath","paths","getInstancePath","reduce","shortest","current","maxZone","end","start","minX","maxX","minY","maxY","isCellReachable","solid","allowWaterCellCategory","category","cloneGrid","isFinish","openCells","closedCells","cloneEnd","cloneStart","_loop","lowestF","temp","previous","splice","indexOf","neighbour","validDiag","includes","tempG","h","pop","_toConsumableArray","getZoneInGridWithCondition","zone","_grid$i","isFree","surroundingCells","getPlainCellsAroundPoint","_iterator","_createForOfIteratorHelper","_step","surroundingCell","err","findInstancesInSight","instX","instY","sight","parent","instances","updateInstanceVisibility","cx","cy","sightSq","newVisible","Set","isDead","views","add","prevVisible","visibleCells","_iterator2","_step2","idx","viewBy","isPlayed","revealEverything","setFog","visible","_iterator3","_step3","viewed","_cell$onViewed","cellViewed","onViewed","removeFog","globalCell","detect","distSq","pow","updateAIKnowledge","quantity","foundedTrees","foundedBerrybushs","family","hitPoints","foundedEnemyBuildings","getRandomZoneInGridWithCondition","attempts","attempt","_grid$randomX","randomX","randomY","_iterator4","_step4","getPositionInGridAroundInstance","space","allowInclined","extraCondition","_space","minSpace","maxSpace","cellCondition","border","inclined","instanceIsInPlayerSight","isInSight","startX","startY","callback","result","row","_grid$startX","startCell","dyMax","getClosestInstance","closestInstance","closestDistance","Infinity","_iterator5","_step5","targetInstance","getClosestInstanceWithPath","closest","_iterator6","_step6","setUnitTexture","sheet","_instance$sheet$data$","animationSpeed","standingSheet","corpseSheet","paused","sheetToReset","currentSheet","walkingSheet","stop","anchor","set","defaultAnchor","onLoop","goto","direction","scale","animations","gotoAndPlay","play","filterObject","obj","acc","key","hasOwnProperty","Modal","content","HTMLElement","open","modal","className","modalContent","appendChild","body","close","getElementById","remove","CustomTimeout","delay","_this","timerId","remaining","pause","clearTimeout","Date","now","resume","reset","throttle","wait","immediate","timeout","initialCall","_this2","_len","args","_key","callNow","debounce","timeoutId","_this3","_len2","_key2","getWorkWithLoadingType","loadingType","workMapping","capitalizeFirstLetter","string","charAt","toUpperCase","getDamage","meleeAttack","pierceAttack","meleeArmor","pierceArmor","getHitPointsWithDamage","defaultDamage","damage","updateObject","operation","op","setToValue","join","Number","canUpdateMinimap","isValidCondition","values","expectedValue","arraysEqual","sortedA","sort","sortedB","every","getActionCondition","action","props","conditions","loading","isBuilt","buildingTypes","allowAction","_target$owner","isUsedBy","_target$owner2","totalHitPoints","_target$owner3","heal","_target$owner4","sound","Container","Sprite","Assets","Polygon","AnimatedSprite","Resource","_Container","options","_this$quantity","_this$hitPoints","_classCallCheck","_callSuper","selected","config","resources","totalQuantity","eventMode","allowClick","allowMove","info","element","setDefaultInterface","isAnimated","spritesheetJump","jump","resourceName","textureFile","updateAnchor","roundPixels","on","_this3$context","menu","selectedUnits","unselectAll","select","setBottombar","selectedOther","evt","_this4","_this4$context","controls","mouseBuilding","mouseRectangle","isMouseInApp","mouse","prevent","hasVillager","hasOther","sendToFunc","sendTo","voice","units","Villager","sounds","addChild","_inherits","_createClass","unselect","getChildByLabel","die","_this$context","players","listName","list","updateResourcesMiniMap","onTreeDie","clear","setCuttedTreeTexture","points","corpses","corpseIndex","destroy","child","typeDiv","textContent","iconImg","icon","hitPointsDiv","quantityDiv","iconToUse","infoIcons","smallIconImg","textDiv","Projectile","projectiles","destination","targetX","targetY","rect","rotation","interval","setInterval","onHit","clearInterval","updateInfo","isAttacked","Building","queue","technology","attackInterval","buyUnit","buyTechnology","instanceInCamera","spriteSheet","getUnitButton","technologies","getTechnologyButton","displayPopulation","populationDiv","populationIcon","populationSpan","population","getLoadingElement","devMode","_this2$context","hasSentVillager","hasSentOther","sendToBuilding","accept","previousDest","sendToFarm","selectedBuilding","playerUnit","sendToAttack","finalTexture","onBuilt","attackAction","startAttackInterval","range","stopAttackInterval","rateOfFire","startInterval","time","finalCb","stopInterval","_this5","_this$timeout","_this$timeout2","startTimeout","stopTimeout","updateHitPoints","updateTexture","percentage","buildSpritesheetId","buildSpritesheet","hasBuilt","increasePopulation","images","spriteColor","spritesheetFire","spriteFire","fire","generateFire","spriteId","children","newFire","poses","_this6","deco","rubbleSheet","updatePlayerMiniMapEvt","_this7","_this$context2","updateInterfaceLoading","_this$context3","placeUnit","_this$context4","spawnCell","extra","getUnitExtraOptions","createUnit","_objectSpread","_this8","alreadyPaid","force","_this$context5","success","updateButtonContent","q","updateTopbar","hasShowedMessage","still","toggleButtonCancel","shift","showMessage","trainingTime","_this9","innerHTML","loadingDiv","cancelTechnology","_this$context6","updateBottombar","upgrade","_i4","_Object$entries","_Object$entries$_i","_this0","_this$context7","techs","_this0$technology","technconfigology","updateConfig","operations","functionName","researchTime","civDiv","icons","getActionSheet","work","actionSheet","allAssets","Unit","_this$x","_this$y","_this$z","_this$loop","dest","realDest","inactif","currentCell","_i","_i2","_Object$entries2","_Object$entries2$_i","ready","showLoading","showBuildings","getBuildingButton","loop","decompose","death","loadedSheet","setTextures","sendToEvt","clicked","getCellOnCamera","doubleClicked","hasSentHealer","selectedUnit","hasSentAttacker","_this$sprite","_this$sprite2","hasPath","setDest","handleSetDest","setPath","step","handleChangeDest","_map$grid$this$i$this","isUnitAtDest","getAction","affectNewDest","goBackToPrevious","sendToTakeMeat","loadingMax","sendToDelivery","gatheringRate","constructionTime","depst","destHasMoved","oldDeg","hit","healing","handleAffectNewDestHunter","firstTargets","harvestSheet","secondTargets","_Object$entries3","_Object$entries3$_i","_i5","_Object$entries4","_Object$entries4$_i","handleSuccess","targets","notDeliveryWork","moveToPath","nextCell","playing","updatePlayerMiniMap","currentDest","sendToHunt","explore","runaway","_this1","_this10","onComplete","unselectUnit","corpsesIndex","_this11","commonSendTo","keepPrevious","workFromLoading","dyingSheet","_this12","Granary","StoragePit","_i6","_Object$entries5","_Object$entries5$_i","sendToFish","sendToTree","sendToBerrybush","sendToStone","sendToGold","infosDiv","infos","infoDiv","attackImg","attackDiv","Player","food","colorHex","_loop2","_this$views$i$j$viewB","_this$views","_this$views$i$j$viewe","_this$views2","updateTerrainMiniMap","revealTerrain","spawnBuilding","createBuilding","onAgeChange","otherPlayers","others","types","buyBuilding","styleLogInfo1","styleLogInfo2","AI","_Player","_extends","_objectDestructuringEmpty","foundedGolds","foundedStones","distSpread","nextAge","maxVillagerPerAge","villageTargetPercentageByAge","maxBuildingByAge","Barracks","Market","Farm","hasNotReachBuildingLimit","buildingType","buildingsByTypes","me","closestBuilding","log","maxVillagers","maxVillagersOnConstruction","maxClubmans","howManyVillagerBeforeBuyingABarracks","howManySoldiersBeforeAttack","filterUnitsByType","villagers","clubmans","towncenters","storagepits","houses","granarys","barracks","markets","farms","emptyFarms","notBuiltBuildings","notBuiltHouses","villagersByWork","works","inactifVillagers","villagersOnWood","villagersOnFood","villagersOnGold","villagersOnStone","builderVillagers","maxVillagersOnWood","maxVillagersOnFood","maxVillagersOnGold","maxVillagersOnStone","inactifClubmans","assault","waitingClubmans","totalCells","assignVillagersToResource","resourceList","actionCallback","villager","bush","tree","availableVillagers","clubman","buyUnits","currentCount","maxCount","buildingList","unitType","unitsNeeded","unitsBought","buyBuildingIfNeeded","positionCallback","House","position","_ret","technologyType","Animal","animals","drawDestinationRectangle","isAnimalAtDest","getReaction","strategy","fall","Gaia","createAnimal","Human","nextVillager","unselectAllUnits","Cell","waterBorder","fogSprites","addFogBuilding","updateVisible","updateChild","setDesertBorder","cellSprite","cellSpriteTextureName","cellSpriteIndex","cpt","setWaterBorder","setReliefBorder","elevation","setWater","fillWaterCellsAroundCell","aside","fillReliefCellsAroundCell","setCellLevel","level","textureSheet","colorSheet","colorName","tint","removeFogBuilding","localCell","_localCell$fogSprites","setFogChildren","init","setRemoveChildren","reliefRange","chanceOfRelief","chanceOfSets","sortableChildren","allTechnologies","noAI","startingUnits","playersPos","positionsCount","gaia","setCoordinate","generateFromJSON","camera","classMap","removeChildren","line","newCell","formatCellsRelief","formatCellsWaterBorder","formatCellsDesert","setCamera","_players$index","getDest","processUnit","Boolean","generateMap","repeat","generateCells","findPlayerPlaces","alert","generateResourcesAroundPlayers","stylishMap","generateSets","generatePlayers","randoms","_this$playersPos$pose","_this$playersPos$pose2","posI","posJ","placePlayers","towncenter","generateForestAroundPlayer","treeCount","clusterCount","minClusterRadius","maxClusterRadius","safeDistance","clearingProbability","playerI","playerJ","gridWidth","gridHeight","forestCells","pathCells","createCircle","centerI","centerJ","radius","density","edgeNoise","circleCells","distFromCenter","noise","cellI","cellJ","cluster","clusterCenterI","clusterCenterJ","tries","clusterRadius","clusterDensity","treeCluster","scatteredTreeCount","soloI","soloJ","clearing","clearingCenterI","clearingCenterJ","clearingRadius","clearingCells","clearedCell","findIndex","pathLength","pathDirection","offsetX","offsetY","randOffsetX","randOffsetY","cellsToPlace","itemIndex","_cellsToPlace","_i8","_cell$has","placeResourceGroup","generateTerrain","gridSize","mapModel","terrainMap","generateTerrainCluster","nx","ny","generateWater","edgeSize","roundFactor","edgeDist","randomOffset","sin","centerX","centerY","baseRadius","distanceFromCenter","generateLandTerrain","generateClusters","clusterSizeMin","clusterSizeMax","clusterX","clusterY","terrain","randomSpritesheet","rock","generateMapRelief","canGenerate","_loop3","toRemove","typeToFormat","results","outBorder","inBorder","zones","getValidCells","_loop4","newI","newJ","_cell$has2","randomDistance","validCells","_i14","_cellsToPlace2","default","Menu","topbar","longClick","mouseHoldTimeout","res","setResourceBox","innerText","addEventListener","load","input","reader","FileReader","onload","JSON","parse","readAsText","files","cancel","prepend","bottombar","bottombarInfo","bottombarMenu","bottombarMapWrap","bottombarMap","minimapFactor","getMinimapFactor","getBoundingClientRect","clientX","clientY","_player$selectedUnits","sendUnits","terrainMinimap","playersMinimap","resourcesMinimap","cameraMinimap","style","toggled","toggle","preventDefault","display","stopPropagation","updateResourcesMiniMapEvt","updateCameraMiniMap","updateCameraMiniMapEvt","miniMapAlpha","initMiniMap","mapWidth","cameraContext","resourceContext","translate","revealTerrainMinimap","clearRect","updateResourceMiniMap","squareSize","finalX","finalY","_player$views","app","screen","playerMinimap","find","_ref3","finalSize","_ref4","getMessage","message","gamebox","box","assign","bottom","clientHeight","msg","img","resetInfo","background","generateInfo","targetElement","querySelector","contentElement","removeMouseBuilding","setMenuRecurs","onClick","btn","hide","onCreate","back","some","div","counter","padding","setMouseBuilding","Controls","keysPressed","keyInterval","keySpeed","mouseTouch","mouseDrag","moveCameraInterval","minimapRectangle","moveCameraWithMouse","onKeyDown","onKeyUp","onTouchStart","onTouchEnd","onTouchMove","onMouseMove","onMouseDown","onMouseUp","removeEventListener","keyCode","handleMoveCamera","double","moveCamera","controlsMap","touch","touches","pageX","pageY","speedX","speedY","changedTouches","pointerStart","buildOnWater","waterBorderedCells","waterCells","graph","stage","selectVillager","countSelect","pointerSheet","pointer","hasSentSoldier","distCenterX","distCenterY","tagName","dir","moveSpeed","isSpeedDivided","dividedSpeed","A","B","D","C","cameraCenter","updateVisibleCells","coef","moveDist","calcs","right","up","down","cameraFloor","margin","_isometricToCartesian","_isometricToCartesian2","cartesianX","cartesianY","endX","endY","_map$grid$x","_isometricToCartesian3","_isometricToCartesian4","cartX","cartY","_player$buildings","_player$units","direct","_this$context8","Game","togglePause","cleanContext","resourceData","animalData","_animal$sprite","_animal$sprite2","_animal$dest","_animal$previousDest","unitData","_unit$sprite","_unit$sprite2","_unit$dest","_unit$previousDest","buildingData","_building$isUsedBy","iname","playerData","corpse","view","cellData","json","dataStr","encodeURIComponent","stringify","downloadAnchorNode","setAttribute","toLocaleString","timeZone","click","_document$getElementB","ownKeys","getOwnPropertySymbols","getOwnPropertyDescriptor","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","_defineProperties","_toPrimitive","toPrimitive","String","_getPrototypeOf","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","_assertThisInitialized","ReferenceError","valueOf","_setPrototypeOf","LoaderScreen","_start","_callee2","_context2","graphics","addBundle","greek","loadBundle","_x","Application","Loader","loader","game","resizeTo","antialias","resolution","devicePixelRatio","autoDensity","powerPreference","event"],"sourceRoot":""}