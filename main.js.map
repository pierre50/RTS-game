{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,MAAqJ;AACrJ,MAA2I;AAC3I,MAAkJ;AAClJ,MAAqK;AACrK,MAA8J;AAC9J,MAA8J;AAC9J,MAAwJ;AACxJ;AACA;;AAEA;;AAEA,4BAA4B,6BAAmB;AAC/C,wBAAwB,0CAAa;AACrC,iBAAiB,+BAAa;AAC9B,iBAAiB,uBAAM;AACvB,6BAA6B,8BAAkB;;AAE/C,aAAa,kCAAG,CAAC,qBAAO;;;;AAIkG;AAC1H,OAAO,iDAAe,qBAAO,IAAI,qBAAO,UAAU,qBAAO,mBAAmB,EAAC;;;;;ACxBtE,IAAMA,UAAU,GAAG,EAAE;AACrB,IAAMC,WAAW,GAAG,EAAE;AACtB,IAAMC,UAAU,GAAG,EAAE;AAErB,IAAMC,WAAW,GAAG,GAAG;AACvB,IAAMC,SAAS,GAAG,EAAE;AAEpB,IAAMC,SAAS,GAAGC,MAAM,CAACC,UAAU,IAAI,GAAG,IAAID,MAAM,CAACE,WAAW,IAAI,GAAG;AACvE,IAAMC,mBAAmB,GAAG,GAAG;AAE/B,IAAMC,eAAe,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,CAAC;AACjE,IAAMC,kBAAkB,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC;AAE7D,IAAMC,WAAW,GAAG,QAAQ;AAC5B,IAAMC,WAAW,GAAG,QAAQ;AAC5B,IAAMC,UAAU,GAAG,QAAQ;AAC3B,IAAMC,SAAS,GAAG,QAAQ;AAC1B,IAAMC,YAAY,GAAG,QAAQ;AAC7B,IAAMC,YAAY,GAAG,QAAQ;AAC7B,IAAMC,WAAW,GAAG,QAAQ;AAC5B,IAAMC,UAAU,GAAG,QAAQ;AAC3B,IAAMC,YAAY,GAAG,QAAQ;AAC7B,IAAMC,YAAY,GAAG,QAAQ;AAC7B,IAAMC,UAAU,GAAG,QAAQ;AAC3B,IAAMC,eAAe,GAAG,QAAQ;AAChC,IAAMC,SAAS,GAAG,QAAQ;AAC1B,IAAMC,kBAAkB,GAAG,QAAQ;AACnC,IAAMC,WAAW,GAAG,QAAQ;AAE5B,IAAMC,WAAW,GAAG;EACzBC,KAAK,EAAE,WAAW;EAClBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAE,aAAa;EACxBC,IAAI,EAAE,UAAU;EAChBC,IAAI,EAAE;AACR,CAAC;AAEM,IAAMC,WAAW,GAAG,GAAG;AACvB,IAAMC,WAAW,GAAG,GAAG;AACvB,IAAMC,gBAAgB,GAAG,EAAE;AAC3B,IAAMC,cAAc,GAAG,GAAG,C;;;;0BCvCjC,uKAAAC,CAAA,EAAAC,CAAA,EAAAC,CAAA,wBAAAC,MAAA,GAAAA,MAAA,OAAAC,CAAA,GAAAF,CAAA,CAAAG,QAAA,kBAAAC,CAAA,GAAAJ,CAAA,CAAAK,WAAA,8BAAAC,EAAAN,CAAA,EAAAE,CAAA,EAAAE,CAAA,EAAAE,CAAA,QAAAC,CAAA,GAAAL,CAAA,IAAAA,CAAA,CAAAM,SAAA,YAAAC,SAAA,GAAAP,CAAA,GAAAO,SAAA,EAAAC,CAAA,GAAAC,MAAA,CAAAC,MAAA,CAAAL,CAAA,CAAAC,SAAA,UAAAK,mBAAA,CAAAH,CAAA,uBAAAV,CAAA,EAAAE,CAAA,EAAAE,CAAA,QAAAE,CAAA,EAAAC,CAAA,EAAAG,CAAA,EAAAI,CAAA,MAAAC,CAAA,GAAAX,CAAA,QAAAY,CAAA,OAAAC,CAAA,KAAAF,CAAA,KAAAb,CAAA,KAAAgB,CAAA,EAAApB,CAAA,EAAAqB,CAAA,EAAAC,CAAA,EAAAN,CAAA,EAAAM,CAAA,CAAAC,IAAA,CAAAvB,CAAA,MAAAsB,CAAA,WAAAA,EAAArB,CAAA,EAAAC,CAAA,WAAAM,CAAA,GAAAP,CAAA,EAAAQ,CAAA,MAAAG,CAAA,GAAAZ,CAAA,EAAAmB,CAAA,CAAAf,CAAA,GAAAF,CAAA,EAAAmB,CAAA,gBAAAC,EAAApB,CAAA,EAAAE,CAAA,SAAAK,CAAA,GAAAP,CAAA,EAAAU,CAAA,GAAAR,CAAA,EAAAH,CAAA,OAAAiB,CAAA,IAAAF,CAAA,KAAAV,CAAA,IAAAL,CAAA,GAAAgB,CAAA,CAAAO,MAAA,EAAAvB,CAAA,UAAAK,CAAA,EAAAE,CAAA,GAAAS,CAAA,CAAAhB,CAAA,GAAAqB,CAAA,GAAAH,CAAA,CAAAF,CAAA,EAAAQ,CAAA,GAAAjB,CAAA,KAAAN,CAAA,QAAAI,CAAA,GAAAmB,CAAA,KAAArB,CAAA,MAAAQ,CAAA,GAAAJ,CAAA,EAAAC,CAAA,GAAAD,CAAA,YAAAC,CAAA,WAAAD,CAAA,MAAAA,CAAA,MAAAR,CAAA,IAAAQ,CAAA,OAAAc,CAAA,MAAAhB,CAAA,GAAAJ,CAAA,QAAAoB,CAAA,GAAAd,CAAA,QAAAC,CAAA,MAAAU,CAAA,CAAAC,CAAA,GAAAhB,CAAA,EAAAe,CAAA,CAAAf,CAAA,GAAAI,CAAA,OAAAc,CAAA,GAAAG,CAAA,KAAAnB,CAAA,GAAAJ,CAAA,QAAAM,CAAA,MAAAJ,CAAA,IAAAA,CAAA,GAAAqB,CAAA,MAAAjB,CAAA,MAAAN,CAAA,EAAAM,CAAA,MAAAJ,CAAA,EAAAe,CAAA,CAAAf,CAAA,GAAAqB,CAAA,EAAAhB,CAAA,cAAAH,CAAA,IAAAJ,CAAA,aAAAmB,CAAA,QAAAH,CAAA,OAAAd,CAAA,qBAAAE,CAAA,EAAAW,CAAA,EAAAQ,CAAA,QAAAT,CAAA,YAAAU,SAAA,uCAAAR,CAAA,UAAAD,CAAA,IAAAK,CAAA,CAAAL,CAAA,EAAAQ,CAAA,GAAAhB,CAAA,GAAAQ,CAAA,EAAAL,CAAA,GAAAa,CAAA,GAAAxB,CAAA,GAAAQ,CAAA,OAAAT,CAAA,GAAAY,CAAA,MAAAM,CAAA,KAAAV,CAAA,KAAAC,CAAA,GAAAA,CAAA,QAAAA,CAAA,SAAAU,CAAA,CAAAf,CAAA,QAAAkB,CAAA,CAAAb,CAAA,EAAAG,CAAA,KAAAO,CAAA,CAAAf,CAAA,GAAAQ,CAAA,GAAAO,CAAA,CAAAC,CAAA,GAAAR,CAAA,aAAAI,CAAA,MAAAR,CAAA,QAAAC,CAAA,KAAAH,CAAA,YAAAL,CAAA,GAAAO,CAAA,CAAAF,CAAA,WAAAL,CAAA,GAAAA,CAAA,CAAA0B,IAAA,CAAAnB,CAAA,EAAAI,CAAA,UAAAc,SAAA,2CAAAzB,CAAA,CAAA2B,IAAA,SAAA3B,CAAA,EAAAW,CAAA,GAAAX,CAAA,CAAA4B,KAAA,EAAApB,CAAA,SAAAA,CAAA,oBAAAA,CAAA,KAAAR,CAAA,GAAAO,CAAA,eAAAP,CAAA,CAAA0B,IAAA,CAAAnB,CAAA,GAAAC,CAAA,SAAAG,CAAA,GAAAc,SAAA,uCAAApB,CAAA,gBAAAG,CAAA,OAAAD,CAAA,GAAAR,CAAA,cAAAC,CAAA,IAAAiB,CAAA,GAAAC,CAAA,CAAAf,CAAA,QAAAQ,CAAA,GAAAV,CAAA,CAAAyB,IAAA,CAAAvB,CAAA,EAAAe,CAAA,OAAAE,CAAA,kBAAApB,CAAA,IAAAO,CAAA,GAAAR,CAAA,EAAAS,CAAA,MAAAG,CAAA,GAAAX,CAAA,cAAAe,CAAA,mBAAAa,KAAA,EAAA5B,CAAA,EAAA2B,IAAA,EAAAV,CAAA,SAAAhB,CAAA,EAAAI,CAAA,EAAAE,CAAA,QAAAI,CAAA,QAAAS,CAAA,gBAAAV,UAAA,cAAAmB,kBAAA,cAAAC,2BAAA,KAAA9B,CAAA,GAAAY,MAAA,CAAAmB,cAAA,MAAAvB,CAAA,MAAAL,CAAA,IAAAH,CAAA,CAAAA,CAAA,IAAAG,CAAA,SAAAW,mBAAA,CAAAd,CAAA,OAAAG,CAAA,iCAAAH,CAAA,GAAAW,CAAA,GAAAmB,0BAAA,CAAArB,SAAA,GAAAC,SAAA,CAAAD,SAAA,GAAAG,MAAA,CAAAC,MAAA,CAAAL,CAAA,YAAAO,EAAAhB,CAAA,WAAAa,MAAA,CAAAoB,cAAA,GAAApB,MAAA,CAAAoB,cAAA,CAAAjC,CAAA,EAAA+B,0BAAA,KAAA/B,CAAA,CAAAkC,SAAA,GAAAH,0BAAA,EAAAhB,mBAAA,CAAAf,CAAA,EAAAM,CAAA,yBAAAN,CAAA,CAAAU,SAAA,GAAAG,MAAA,CAAAC,MAAA,CAAAF,CAAA,GAAAZ,CAAA,WAAA8B,iBAAA,CAAApB,SAAA,GAAAqB,0BAAA,EAAAhB,mBAAA,CAAAH,CAAA,iBAAAmB,0BAAA,GAAAhB,mBAAA,CAAAgB,0BAAA,iBAAAD,iBAAA,GAAAA,iBAAA,CAAAK,WAAA,wBAAApB,mBAAA,CAAAgB,0BAAA,EAAAzB,CAAA,wBAAAS,mBAAA,CAAAH,CAAA,GAAAG,mBAAA,CAAAH,CAAA,EAAAN,CAAA,gBAAAS,mBAAA,CAAAH,CAAA,EAAAR,CAAA,iCAAAW,mBAAA,CAAAH,CAAA,8DAAAwB,YAAA,YAAAA,aAAA,aAAAC,CAAA,EAAA7B,CAAA,EAAA8B,CAAA,EAAAtB,CAAA;AAAA,SAAAD,oBAAAf,CAAA,EAAAE,CAAA,EAAAE,CAAA,EAAAH,CAAA,QAAAO,CAAA,GAAAK,MAAA,CAAA0B,cAAA,QAAA/B,CAAA,uBAAAR,CAAA,IAAAQ,CAAA,QAAAO,mBAAA,YAAAyB,mBAAAxC,CAAA,EAAAE,CAAA,EAAAE,CAAA,EAAAH,CAAA,aAAAK,EAAAJ,CAAA,EAAAE,CAAA,IAAAW,mBAAA,CAAAf,CAAA,EAAAE,CAAA,YAAAF,CAAA,gBAAAyC,OAAA,CAAAvC,CAAA,EAAAE,CAAA,EAAAJ,CAAA,SAAAE,CAAA,GAAAM,CAAA,GAAAA,CAAA,CAAAR,CAAA,EAAAE,CAAA,IAAA2B,KAAA,EAAAzB,CAAA,EAAAsC,UAAA,GAAAzC,CAAA,EAAA0C,YAAA,GAAA1C,CAAA,EAAA2C,QAAA,GAAA3C,CAAA,MAAAD,CAAA,CAAAE,CAAA,IAAAE,CAAA,IAAAE,CAAA,aAAAA,CAAA,cAAAA,CAAA,mBAAAS,mBAAA,CAAAf,CAAA,EAAAE,CAAA,EAAAE,CAAA,EAAAH,CAAA;AAAA,SAAA4C,mBAAAzC,CAAA,EAAAH,CAAA,EAAAD,CAAA,EAAAE,CAAA,EAAAI,CAAA,EAAAe,CAAA,EAAAZ,CAAA,cAAAD,CAAA,GAAAJ,CAAA,CAAAiB,CAAA,EAAAZ,CAAA,GAAAG,CAAA,GAAAJ,CAAA,CAAAqB,KAAA,WAAAzB,CAAA,gBAAAJ,CAAA,CAAAI,CAAA,KAAAI,CAAA,CAAAoB,IAAA,GAAA3B,CAAA,CAAAW,CAAA,IAAAkC,OAAA,CAAAC,OAAA,CAAAnC,CAAA,EAAAoC,IAAA,CAAA9C,CAAA,EAAAI,CAAA;AAAA,SAAA2C,kBAAA7C,CAAA,6BAAAH,CAAA,SAAAD,CAAA,GAAAkD,SAAA,aAAAJ,OAAA,WAAA5C,CAAA,EAAAI,CAAA,QAAAe,CAAA,GAAAjB,CAAA,CAAA+C,KAAA,CAAAlD,CAAA,EAAAD,CAAA,YAAAoD,MAAAhD,CAAA,IAAAyC,kBAAA,CAAAxB,CAAA,EAAAnB,CAAA,EAAAI,CAAA,EAAA8C,KAAA,EAAAC,MAAA,UAAAjD,CAAA,cAAAiD,OAAAjD,CAAA,IAAAyC,kBAAA,CAAAxB,CAAA,EAAAnB,CAAA,EAAAI,CAAA,EAAA8C,KAAA,EAAAC,MAAA,WAAAjD,CAAA,KAAAgD,KAAA;AAAA,SAAAE,eAAApD,CAAA,EAAAF,CAAA,WAAAuD,eAAA,CAAArD,CAAA,KAAAsD,qBAAA,CAAAtD,CAAA,EAAAF,CAAA,KAAAyD,2BAAA,CAAAvD,CAAA,EAAAF,CAAA,KAAA0D,gBAAA;AAAA,SAAAA,iBAAA,cAAAhC,SAAA;AAAA,SAAA+B,4BAAAvD,CAAA,EAAAmB,CAAA,QAAAnB,CAAA,2BAAAA,CAAA,SAAAyD,iBAAA,CAAAzD,CAAA,EAAAmB,CAAA,OAAApB,CAAA,MAAA2D,QAAA,CAAAjC,IAAA,CAAAzB,CAAA,EAAA2D,KAAA,6BAAA5D,CAAA,IAAAC,CAAA,CAAA4D,WAAA,KAAA7D,CAAA,GAAAC,CAAA,CAAA4D,WAAA,CAAAC,IAAA,aAAA9D,CAAA,cAAAA,CAAA,GAAA+D,KAAA,CAAAC,IAAA,CAAA/D,CAAA,oBAAAD,CAAA,+CAAAiE,IAAA,CAAAjE,CAAA,IAAA0D,iBAAA,CAAAzD,CAAA,EAAAmB,CAAA;AAAA,SAAAsC,kBAAAzD,CAAA,EAAAmB,CAAA,aAAAA,CAAA,IAAAA,CAAA,GAAAnB,CAAA,CAAAsB,MAAA,MAAAH,CAAA,GAAAnB,CAAA,CAAAsB,MAAA,YAAAxB,CAAA,MAAAI,CAAA,GAAA4D,KAAA,CAAA3C,CAAA,GAAArB,CAAA,GAAAqB,CAAA,EAAArB,CAAA,IAAAI,CAAA,CAAAJ,CAAA,IAAAE,CAAA,CAAAF,CAAA,UAAAI,CAAA;AAAA,SAAAoD,sBAAAtD,CAAA,EAAAuB,CAAA,QAAAxB,CAAA,WAAAC,CAAA,gCAAAC,MAAA,IAAAD,CAAA,CAAAC,MAAA,CAAAE,QAAA,KAAAH,CAAA,4BAAAD,CAAA,QAAAD,CAAA,EAAAI,CAAA,EAAAI,CAAA,EAAAI,CAAA,EAAAS,CAAA,OAAAL,CAAA,OAAAV,CAAA,iBAAAE,CAAA,IAAAP,CAAA,GAAAA,CAAA,CAAA0B,IAAA,CAAAzB,CAAA,GAAAiE,IAAA,QAAA1C,CAAA,QAAAZ,MAAA,CAAAZ,CAAA,MAAAA,CAAA,UAAAe,CAAA,uBAAAA,CAAA,IAAAhB,CAAA,GAAAQ,CAAA,CAAAmB,IAAA,CAAA1B,CAAA,GAAA2B,IAAA,MAAAP,CAAA,CAAA+C,IAAA,CAAApE,CAAA,CAAA6B,KAAA,GAAAR,CAAA,CAAAG,MAAA,KAAAC,CAAA,GAAAT,CAAA,iBAAAd,CAAA,IAAAI,CAAA,OAAAF,CAAA,GAAAF,CAAA,yBAAAc,CAAA,YAAAf,CAAA,eAAAW,CAAA,GAAAX,CAAA,cAAAY,MAAA,CAAAD,CAAA,MAAAA,CAAA,2BAAAN,CAAA,QAAAF,CAAA,aAAAiB,CAAA;AAAA,SAAAkC,gBAAArD,CAAA,QAAA8D,KAAA,CAAAK,OAAA,CAAAnE,CAAA,UAAAA,CAAA;AADkC;AACD;AACgB;AACK;AAE/C,SAASuE,WAAWA,CAACV,IAAI,EAAE;EAChC,IAAMW,EAAE,GAAGX,IAAI,CAACY,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAC7B,IAAMC,KAAK,GAAGb,IAAI,CAACY,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAChC,2BAAAE,MAAA,CAA2BH,EAAE,OAAAG,MAAA,CAAID,KAAK,OAAAC,MAAA,CAAIH,EAAE;AAC9C;AAEO,SAASI,8BAA8BA,CAACC,IAAI,EAAE;EACnD,QAAQA,IAAI;IACV,KAAK,CAAC;MACJ,OAAO,SAAS;IAClB,KAAK,CAAC;MACJ,OAAO,SAAS;IAClB,KAAK,CAAC;MACJ,OAAO,SAAS;EACpB;AACF;AAEO,SAASC,oCAAoCA,CAACD,IAAI,EAAE;EACzD,QAAQA,IAAI;IACV,KAAK,CAAC;MACJ,OAAO,SAAS;IAClB,KAAK,CAAC;MACJ,OAAO,SAAS;IAClB,KAAK,CAAC;MACJ,OAAO,SAAS;EACpB;AACF;AAEO,SAASE,gBAAgBA,CAACC,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAE;EACpD,IAAMC,IAAI,GAAGD,MAAM,CAACE,KAAK,CAACC,GAAG,CAACJ,KAAK,CAACK,GAAG,CAACC,WAAW,CAAC,CAAC,CAAC,CAACC,SAAS;EAChE,IAAIL,IAAI,CAACF,KAAK,CAACQ,GAAG,CAAC,CAACT,IAAI,CAAC,EAAE;IACzB,OAAOG,IAAI,CAACF,KAAK,CAACQ,GAAG,CAAC,CAACT,IAAI,CAAC;EAC9B,CAAC,MAAM,IAAIG,IAAI,CAACF,KAAK,CAACQ,GAAG,GAAG,CAAC,CAAC,CAACT,IAAI,CAAC,EAAE;IACpC,OAAOG,IAAI,CAACF,KAAK,CAACQ,GAAG,GAAG,CAAC,CAAC,CAACT,IAAI,CAAC;EAClC,CAAC,MAAM,IAAIG,IAAI,CAACF,KAAK,CAACQ,GAAG,GAAG,CAAC,CAAC,CAACT,IAAI,CAAC,EAAE;IACpC,OAAOG,IAAI,CAACF,KAAK,CAACQ,GAAG,GAAG,CAAC,CAAC,CAACT,IAAI,CAAC;EAClC,CAAC,MAAM,IAAIG,IAAI,CAAC,CAAC,CAAC,CAACH,IAAI,CAAC,EAAE;IACxB,OAAOG,IAAI,CAAC,CAAC,CAAC,CAACH,IAAI,CAAC;EACtB;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASU,UAAUA,CAAC7B,IAAI,EAAEqB,MAAM,EAAE;EACvC,IAAAS,WAAA,GAAoB9B,IAAI,CAACY,KAAK,CAAC,GAAG,CAAC;IAAAmB,YAAA,GAAAxC,cAAA,CAAAuC,WAAA;IAA5BjB,KAAK,GAAAkB,YAAA;IAAEpB,EAAE,GAAAoB,YAAA;EAChB,IAAMC,WAAW,GAAGX,MAAM,CAACE,KAAK,CAACC,GAAG,CAACb,EAAE,CAAC;EAExC,IAAI,CAACqB,WAAW,IAAI,CAACA,WAAW,CAACC,QAAQ,EAAE;IACzC,MAAM,IAAIC,KAAK,yBAAApB,MAAA,CAAwBH,EAAE,4BAAwB,CAAC;EACpE;EAEA,IAAMwB,WAAW,MAAArB,MAAA,CAAMD,KAAK,OAAAC,MAAA,CAAIH,EAAE,SAAM;EACxC,IAAMyB,OAAO,GAAGJ,WAAW,CAACC,QAAQ,CAACE,WAAW,CAAC;EAEjD,IAAI,CAACC,OAAO,EAAE;IACZ,MAAM,IAAIF,KAAK,cAAApB,MAAA,CAAaqB,WAAW,iCAA6B,CAAC;EACvE;;EAEA;EACAC,OAAO,CAACC,OAAO,GAAGL,WAAW,CAACM,IAAI,CAACC,MAAM,CAACJ,WAAW,CAAC,CAACE,OAAO;EAE9D,OAAOD,OAAO;AAChB;AAEO,IAAMI,MAAM,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,CAAC;;AAE3F;AACA;AACA;AACA;AACA;AACO,SAASC,WAAWA,CAACzC,IAAI,EAAE;EAChC,IAAM0C,QAAQ,GAAG;IACfC,IAAI,EAAE,SAAS;IACfC,GAAG,EAAE,SAAS;IACdC,MAAM,EAAE,SAAS;IACjBC,KAAK,EAAE,SAAS;IAChBC,MAAM,EAAE,SAAS;IACjBC,KAAK,EAAE,SAAS;IAChBC,IAAI,EAAE,SAAS;IACfC,IAAI,EAAE;EACR,CAAC;EACD,OAAOR,QAAQ,CAAC1C,IAAI,CAAC,IAAI,SAAS,EAAC;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASmD,yBAAyBA,CAACC,MAAM,EAAEC,KAAK,EAAE;EACvD,IAAIA,KAAK,KAAK,MAAM,EAAE;IACpB,OAAM,CAAC;EACT;EAEA,IAAMC,YAAY,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC;EAErG,IAAMd,MAAM,GAAG;IACbI,GAAG,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC;IACrFC,MAAM,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC;IACxFC,KAAK,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC;IACvFC,MAAM,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC;IACxFC,KAAK,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC;IACvFC,IAAI,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC;IACtFC,IAAI,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ;EACvF,CAAC;EAED,IAAMK,YAAY,GAAGf,MAAM,CAACa,KAAK,CAAC;EAElC,IAAI,CAACE,YAAY,EAAE;IACjB,MAAM,IAAIrB,KAAK,CAAC,yBAAyB,CAAC,EAAC;EAC7C;EAEA,IAAMsB,WAAW,GAAGJ,MAAM,CAAChB,OAAO,CAACoB,WAAW,CAACC,QAAQ;EAEvD,IAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;EAC/CF,MAAM,CAACG,KAAK,GAAGT,MAAM,CAAChB,OAAO,CAACyB,KAAK;EACnCH,MAAM,CAACI,MAAM,GAAGV,MAAM,CAAChB,OAAO,CAAC0B,MAAM;EAErC,IAAMC,GAAG,GAAGL,MAAM,CAACM,UAAU,CAAC,IAAI,CAAC;EACnCD,GAAG,CAACE,SAAS,CACXT,WAAW,EACXJ,MAAM,CAAChB,OAAO,CAAC8B,KAAK,CAACC,CAAC,EACtBf,MAAM,CAAChB,OAAO,CAAC8B,KAAK,CAAC/G,CAAC,EACtBiG,MAAM,CAAChB,OAAO,CAAC8B,KAAK,CAACL,KAAK,EAC1BT,MAAM,CAAChB,OAAO,CAAC8B,KAAK,CAACJ,MAAM,EAC3B,CAAC,EACD,CAAC,EACDV,MAAM,CAAChB,OAAO,CAAC8B,KAAK,CAACL,KAAK,EAC1BT,MAAM,CAAChB,OAAO,CAAC8B,KAAK,CAACJ,MACvB,CAAC;EAED,IAAMM,SAAS,GAAGL,GAAG,CAACM,YAAY,CAAC,CAAC,EAAE,CAAC,EAAEX,MAAM,CAACG,KAAK,EAAEH,MAAM,CAACI,MAAM,CAAC;EACrE,IAAMxB,IAAI,GAAG8B,SAAS,CAAC9B,IAAI;EAE3B,IAAMgC,cAAc,GAAG,IAAIC,GAAG,CAACjB,YAAY,CAACkB,GAAG,CAAC,UAACnB,KAAK,EAAExC,KAAK;IAAA,OAAK,CAACwC,KAAK,EAAEE,YAAY,CAAC1C,KAAK,CAAC,CAAC;EAAA,EAAC,CAAC;EAEhG,KAAK,IAAIpE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6F,IAAI,CAAC7E,MAAM,EAAEhB,CAAC,IAAI,CAAC,EAAE;IACvC,IAAMN,CAAC,GAAGmG,IAAI,CAAC7F,CAAC,CAAC;IACjB,IAAMgI,CAAC,GAAGnC,IAAI,CAAC7F,CAAC,GAAG,CAAC,CAAC;IACrB,IAAMiI,CAAC,GAAGpC,IAAI,CAAC7F,CAAC,GAAG,CAAC,CAAC;IACrB,IAAMkI,GAAG,GAAIxI,CAAC,IAAI,EAAE,GAAKsI,CAAC,IAAI,CAAE,GAAGC,CAAC;IAEpC,IAAIJ,cAAc,CAACM,GAAG,CAACD,GAAG,CAAC,EAAE;MAC3B,IAAME,WAAW,GAAGP,cAAc,CAAC9C,GAAG,CAACmD,GAAG,CAAC;MAC3CrC,IAAI,CAAC7F,CAAC,CAAC,GAAIoI,WAAW,IAAI,EAAE,GAAI,IAAI,EAAC;MACrCvC,IAAI,CAAC7F,CAAC,GAAG,CAAC,CAAC,GAAIoI,WAAW,IAAI,CAAC,GAAI,IAAI,EAAC;MACxCvC,IAAI,CAAC7F,CAAC,GAAG,CAAC,CAAC,GAAGoI,WAAW,GAAG,IAAI,EAAC;IACnC;EACF;EAEAd,GAAG,CAACe,YAAY,CAACV,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC;EAEjC,IAAMW,UAAU,GAAGvE,oBAAO,CAACN,IAAI,CAACwD,MAAM,CAAC;EACvCN,MAAM,CAAChB,OAAO,GAAG2C,UAAU;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,iBAAiBA,CAAC5B,MAAM,EAAEC,KAAK,EAAE;EAC/C;EACA,IAAIA,KAAK,KAAK,MAAM,EAAE;IACpB;EACF;;EAEA;EACA,IAAM4B,MAAM,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC;;EAE/F;EACA,IAAMzC,MAAM,GAAG;IACbI,GAAG,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC;IACrFC,MAAM,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC;IACxFC,KAAK,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC;IACvFC,MAAM,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC;IACxFC,KAAK,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC;IACvFC,IAAI,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC;IACtFC,IAAI,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ;EACvF,CAAC;;EAED;EACA,IAAI,CAACV,MAAM,CAACa,KAAK,CAAC,EAAE;IAClB;EACF;;EAEA;EACA,IAAM6B,YAAY,GAAG,EAAE;EACvB,KAAK,IAAIzI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwI,MAAM,CAACxH,MAAM,EAAEhB,CAAC,EAAE,EAAE;IACtCyI,YAAY,CAAC7E,IAAI,CAAC,CAAC4E,MAAM,CAACxI,CAAC,CAAC,EAAE+F,MAAM,CAACa,KAAK,CAAC,CAAC5G,CAAC,CAAC,CAAC,CAAC;EAClD;EAEA,IAAM0I,MAAM,GAAG,IAAI1E,sDAAuB,CAAC;IAAEyE,YAAY,EAAZA,YAAY;IAAEE,SAAS,EAAE;EAAI,CAAC,CAAC;EAE5EhC,MAAM,CAACiC,OAAO,GAAG,CAACF,MAAM,CAAC;AAC3B;;AAEA;AACA;AACA;AACA;AACO,SAASG,6BAA6BA,CAACC,QAAQ,EAAE;EACtD,IAAMC,SAAS,GAAG,IAAIjF,qBAAQ,CAAC,CAAC;EAChCiF,SAAS,CAACC,KAAK,GAAG,WAAW;EAC7BD,SAAS,CAACE,MAAM,GAAG,CAAC;;EAEpB;EACA,IAAMpE,IAAI,GAAG,CAAC,CAAC,EAAE,GAAGiE,QAAQ,CAACvE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAGuE,QAAQ,CAACvE,IAAI,EAAE,EAAE,GAAGuE,QAAQ,CAACvE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,GAAGuE,QAAQ,CAACvE,IAAI,CAAC;EAC3GwE,SAAS,CAACG,IAAI,CAACrE,IAAI,CAAC;EACpBkE,SAAS,CAACI,MAAM,CAACvK,kBAAkB,CAAC;EACpCkK,QAAQ,CAACM,UAAU,CAACL,SAAS,EAAE,CAAC,CAAC;;EAEjC;EACA,IAAMM,KAAK,GAAG,SAARA,KAAKA,CAAIC,KAAK,EAAEC,QAAQ,EAAK;IACjC,OAAO,IAAIjH,OAAO,CAAC,UAAAC,OAAO,EAAI;MAC5BwG,SAAS,CAACO,KAAK,GAAGA,KAAK;MACvBE,UAAU,CAACjH,OAAO,EAAEgH,QAAQ,CAAC;IAC/B,CAAC,CAAC;EACJ,CAAC;EAED,IAAME,aAAa;IAAA,IAAAC,IAAA,GAAAjH,iBAAA,cAAAb,YAAA,GAAAE,CAAA,CAAG,SAAA6H,QAAA;MAAA,OAAA/H,YAAA,GAAAC,CAAA,WAAA+H,QAAA;QAAA,kBAAAA,QAAA,CAAAhK,CAAA;UAAA;YAAAgK,QAAA,CAAAhK,CAAA;YAAA,OACdyJ,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC;UAAA;YAAAO,QAAA,CAAAhK,CAAA;YAAA,OACbyJ,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC;UAAA;YAAAO,QAAA,CAAAhK,CAAA;YAAA,OACbyJ,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC;UAAA;YAAAO,QAAA,CAAAhK,CAAA;YAAA,OACbyJ,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC;UAAA;YAAAO,QAAA,CAAAhK,CAAA;YAAA,OACbyJ,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC;UAAA;YAAC;YACpBP,QAAQ,CAACe,WAAW,CAACd,SAAS,CAAC,EAAC;UAAA;YAAA,OAAAa,QAAA,CAAA/I,CAAA;QAAA;MAAA,GAAA8I,OAAA;IAAA,CACjC;IAAA,gBAPKF,aAAaA,CAAA;MAAA,OAAAC,IAAA,CAAA/G,KAAA,OAAAD,SAAA;IAAA;EAAA,GAOlB;EAED+G,aAAa,CAAC,CAAC;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASK,mBAAmBA,CAACC,OAAO,EAAErC,CAAC,EAAEhH,CAAC,EAAE0G,KAAK,EAAEC,MAAM,EAAET,KAAK,EAAE;EACvEmD,OAAO,CAACC,SAAS,GAAGpD,KAAK;EACzBmD,OAAO,CAACE,QAAQ,CAACvC,CAAC,EAAEhH,CAAC,EAAE0G,KAAK,EAAEC,MAAM,CAAC;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS6C,yBAAyBA,CAACH,OAAO,EAAErC,CAAC,EAAEhH,CAAC,EAAE0G,KAAK,EAAEC,MAAM,EAAET,KAAK,EAAE;EAC7EmD,OAAO,CAACI,WAAW,GAAGvD,KAAK;EAC3BmD,OAAO,CAACK,UAAU,CAAC1C,CAAC,EAAEhH,CAAC,EAAE0G,KAAK,EAAEC,MAAM,CAAC;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASgD,iBAAiBA,CAACN,OAAO,EAAErC,CAAC,EAAEhH,CAAC,EAAE0G,KAAK,EAAEC,MAAM,EAAET,KAAK,EAAE;EACrEmD,OAAO,CAACO,IAAI,CAAC,CAAC;EACdP,OAAO,CAACQ,SAAS,CAAC,CAAC;EACnBR,OAAO,CAACS,MAAM,CAAC9C,CAAC,EAAEhH,CAAC,CAAC;EACpBqJ,OAAO,CAACU,MAAM,CAAC/C,CAAC,GAAGN,KAAK,GAAG,CAAC,EAAE1G,CAAC,GAAG2G,MAAM,GAAG,CAAC,CAAC;EAC7C0C,OAAO,CAACU,MAAM,CAAC/C,CAAC,EAAEhH,CAAC,GAAG2G,MAAM,CAAC;EAC7B0C,OAAO,CAACU,MAAM,CAAC/C,CAAC,GAAGN,KAAK,GAAG,CAAC,EAAE1G,CAAC,GAAG2G,MAAM,GAAG,CAAC,CAAC;EAC7C0C,OAAO,CAACW,SAAS,CAAC,CAAC;EAEnBX,OAAO,CAACC,SAAS,GAAGpD,KAAK;EACzBmD,OAAO,CAACY,IAAI,CAAC,CAAC;EACdZ,OAAO,CAACa,OAAO,CAAC,CAAC,EAAC;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,mBAAmBA,CAAClE,MAAM,EAAEc,KAAK,EAAEqD,EAAE,EAAE;EACrDnE,MAAM,CAACoE,aAAa,GAAG,UAAAC,YAAY,EAAI;IACrC,IAAIA,YAAY,KAAKvD,KAAK,EAAE;MAC1BqD,EAAE,CAAC,CAAC;IACN;EACF,CAAC;AACH,C;;;ACpTA;AACA;AACA;AACA;AACA;AACO,SAASG,UAAUA,CAACC,MAAM,EAAEC,IAAI,EAAE;EACvC,IAAI,CAACD,MAAM,IAAIE,OAAA,CAAOF,MAAM,MAAK,QAAQ,IAAI,CAACC,IAAI,IAAIC,OAAA,CAAOD,IAAI,MAAK,QAAQ,EAAE;IAC9EE,OAAO,CAACC,KAAK,CAAC,2CAA2C,CAAC;IAC1D;EACF;EAEAjL,MAAM,CAACkL,IAAI,CAACJ,IAAI,CAAC,CAACK,OAAO,CAAC,UAAAC,IAAI,EAAI;IAChC,IAAI,OAAON,IAAI,CAACM,IAAI,CAAC,KAAK,QAAQ,EAAE;MAClCP,MAAM,CAACO,IAAI,CAAC,IAAIN,IAAI,CAACM,IAAI,CAAC;IAC5B,CAAC,MAAM;MACLJ,OAAO,CAACK,IAAI,aAAArH,MAAA,CAAaoH,IAAI,wBAAqBN,IAAI,CAACM,IAAI,CAAC,CAAC;IAC/D;EACF,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASE,OAAOA,CAACT,MAAM,EAAEC,IAAI,EAAE;EACpC,IAAI,CAACD,MAAM,IAAIE,OAAA,CAAOF,MAAM,MAAK,QAAQ,IAAI,CAACC,IAAI,IAAIC,OAAA,CAAOD,IAAI,MAAK,QAAQ,EAAE;IAC9EE,OAAO,CAACC,KAAK,CAAC,wCAAwC,CAAC;IACvD;EACF;EAEAjL,MAAM,CAACkL,IAAI,CAACJ,IAAI,CAAC,CAACK,OAAO,CAAC,UAAAC,IAAI,EAAI;IAChC,IAAI,OAAON,IAAI,CAACM,IAAI,CAAC,KAAK,QAAQ,EAAE;MAClCP,MAAM,CAACO,IAAI,CAAC,IAAIN,IAAI,CAACM,IAAI,CAAC;IAC5B,CAAC,MAAM;MACLJ,OAAO,CAACK,IAAI,aAAArH,MAAA,CAAaoH,IAAI,wBAAqBN,IAAI,CAACM,IAAI,CAAC,CAAC;IAC/D;EACF,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASG,SAASA,CAACV,MAAM,EAAEC,IAAI,EAAE;EACtC;EACA,IAAI,CAACD,MAAM,IAAIE,OAAA,CAAOF,MAAM,MAAK,QAAQ,IAAI,CAACC,IAAI,IAAIC,OAAA,CAAOD,IAAI,MAAK,QAAQ,EAAE;IAC9EE,OAAO,CAACC,KAAK,CAAC,0CAA0C,CAAC;IACzD,OAAO,KAAK;EACd;;EAEA;EACA,KAAK,IAAMG,IAAI,IAAIN,IAAI,EAAE;IACvB;IACA,IAAI,OAAOA,IAAI,CAACM,IAAI,CAAC,KAAK,QAAQ,EAAE;MAClC;MACA,IAAIP,MAAM,CAACO,IAAI,CAAC,GAAGN,IAAI,CAACM,IAAI,CAAC,EAAE;QAC7B,OAAO,KAAK;MACd;IACF;EACF;;EAEA;EACA,OAAO,IAAI;AACb,C;;AClEkE;;AAElE;AACA;AACA;AACA;AACO,SAASI,MAAMA,CAAA,EAAG;EACvB,OAAO,sCAAsC,CAACC,OAAO,CAAC,OAAO,EAAE,UAAA7L,CAAC,EAAI;IAClE,IAAM8L,WAAW,GAAGC,MAAM,CAACC,eAAe,CAAC,IAAIC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,EAAC;IACtE,IAAMC,QAAQ,GAAG,CAAClM,CAAC,KAAK,GAAG,GAAG8L,WAAW,GAAIA,WAAW,GAAG,GAAG,GAAI,GAAG,EAAE3I,QAAQ,CAAC,EAAE,CAAC,EAAC;IACpF,OAAO+I,QAAQ;EACjB,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACO,SAASC,YAAYA,CAACC,GAAG,EAAE;EAChC,OAAO,CAAC,IAAI,GAAGA,GAAG,EAAEhJ,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASiJ,oBAAoBA,CAAC5E,CAAC,EAAEhH,CAAC,EAAE;EACzC,OAAO,CAAC6L,IAAI,CAACC,KAAK,CAAE,CAAC9E,CAAC,GAAGhH,CAAC,IAAIvD,UAAU,GAAI,CAAC,CAAC,EAAEoP,IAAI,CAACC,KAAK,CAAE,CAAC9E,CAAC,GAAGhH,CAAC,IAAItD,WAAW,GAAI,CAAC,CAAC,CAAC;AAC1F;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASqP,0BAAoBA,CAAC/E,CAAC,EAAEhH,CAAC,EAAE;EACzC,OAAO,CACL6L,IAAI,CAACG,KAAK,CAAC,CAAChF,CAAC,IAAIvK,UAAU,GAAG,CAAC,CAAC,GAAGuD,CAAC,IAAItD,WAAW,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAC9DmP,IAAI,CAACG,KAAK,CAAC,CAAChM,CAAC,IAAItD,WAAW,GAAG,CAAC,CAAC,GAAGsK,CAAC,IAAIvK,UAAU,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAC/D;AACH;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASwP,mBAAaA,CAAC9L,CAAC,EAAEoH,CAAC,EAAE;EAClC,OAAOsE,IAAI,CAACC,KAAK,CAAE3L,CAAC,GAAGoH,CAAC,GAAI,GAAG,CAAC;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACO,SAAS2E,kBAAkBA,CAACC,GAAG,EAAEC,IAAI,EAAE;EAC5C,OAAOP,IAAI,CAACC,KAAK,CAAEM,IAAI,GAAGD,GAAG,GAAI,GAAG,CAAC;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASE,OAAOA,CAAClM,CAAC,EAAEoH,CAAC,EAAE;EAC5B,OAAO,CAACpH,CAAC,GAAGoH,CAAC,IAAI,CAAC;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS+E,sBAAsBA,CAACC,KAAK,EAAEC,KAAK,EAAEC,GAAG,EAAEC,aAAa,EAAE;EACvE,IAAMC,EAAE,GAAGH,KAAK,CAACxF,CAAC,GAAGuF,KAAK,CAACvF,CAAC;EAC5B,IAAM4F,EAAE,GAAGJ,KAAK,CAACxM,CAAC,GAAGuM,KAAK,CAACvM,CAAC;EAC5B,IAAM6M,EAAE,GAAGF,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE;EAC5B,IAAIC,EAAE,KAAK,CAAC,EAAE;IACZ;IACA,IAAMC,IAAI,GAAGjB,IAAI,CAACkB,KAAK,CAACR,KAAK,CAACvF,CAAC,GAAGyF,GAAG,CAACzF,CAAC,EAAEuF,KAAK,CAACvM,CAAC,GAAGyM,GAAG,CAACzM,CAAC,CAAC;IACzD,OAAO8M,IAAI,IAAIJ,aAAa;EAC9B;;EAEA;EACA,IAAM1N,CAAC,GAAG,CAAC,CAACyN,GAAG,CAACzF,CAAC,GAAGuF,KAAK,CAACvF,CAAC,IAAI2F,EAAE,GAAG,CAACF,GAAG,CAACzM,CAAC,GAAGuM,KAAK,CAACvM,CAAC,IAAI4M,EAAE,IAAIC,EAAE;EAEhE,IAAI7N,CAAC,GAAG,CAAC,EAAE;IACT,OAAO6M,IAAI,CAACkB,KAAK,CAACR,KAAK,CAACvF,CAAC,GAAGyF,GAAG,CAACzF,CAAC,EAAEuF,KAAK,CAACvM,CAAC,GAAGyM,GAAG,CAACzM,CAAC,CAAC,IAAI0M,aAAa;EACtE,CAAC,MAAM,IAAI1N,CAAC,GAAG,CAAC,EAAE;IAChB,OAAO6M,IAAI,CAACkB,KAAK,CAACP,KAAK,CAACxF,CAAC,GAAGyF,GAAG,CAACzF,CAAC,EAAEwF,KAAK,CAACxM,CAAC,GAAGyM,GAAG,CAACzM,CAAC,CAAC,IAAI0M,aAAa;EACtE,CAAC,MAAM;IACL;IACA,IAAMM,CAAC,GAAG,CAAC,CAACT,KAAK,CAACvM,CAAC,GAAGyM,GAAG,CAACzM,CAAC,IAAI2M,EAAE,GAAG,CAACJ,KAAK,CAACvF,CAAC,GAAGyF,GAAG,CAACzF,CAAC,IAAI4F,EAAE,IAAIC,EAAE;IAChE,OAAOhB,IAAI,CAACoB,GAAG,CAACD,CAAC,CAAC,GAAGnB,IAAI,CAACqB,IAAI,CAACL,EAAE,CAAC,IAAIH,aAAa;EACrD;AACF;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASS,iBAAWA,CAACC,GAAG,EAAEC,GAAG,EAAE;EACpC,OAAOxB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACyB,MAAM,CAAC,CAAC,IAAID,GAAG,GAAGD,GAAG,GAAG,CAAC,CAAC,GAAGA,GAAG,CAAC;AAC1D;;AAEA;AACA;AACA;AACA;AACO,SAASG,gBAAUA,CAAA,EAAa;EAAA,IAAZC,KAAK,GAAAxL,SAAA,CAAA1B,MAAA,QAAA0B,SAAA,QAAAyL,SAAA,GAAAzL,SAAA,MAAG,EAAE;EACnC,OAAOwL,KAAK,CAAC3B,IAAI,CAACG,KAAK,CAACH,IAAI,CAACyB,MAAM,CAAC,CAAC,IAAIE,KAAK,CAAClN,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;AAC9D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASoN,uBAAiBA,CAACvN,CAAC,EAAEoH,CAAC,EAAuB;EAAA,IAArBoG,YAAY,GAAA3L,SAAA,CAAA1B,MAAA,QAAA0B,SAAA,QAAAyL,SAAA,GAAAzL,SAAA,MAAG,IAAI;EACzD,OAAO2L,YAAY,GAAGC,oBAAc,CAACzN,CAAC,CAACb,CAAC,EAAEa,CAAC,CAAC0N,CAAC,EAAEtG,CAAC,CAACjI,CAAC,EAAEiI,CAAC,CAACsG,CAAC,CAAC,GAAGD,oBAAc,CAACzN,CAAC,CAAC6G,CAAC,EAAE7G,CAAC,CAACH,CAAC,EAAEuH,CAAC,CAACP,CAAC,EAAEO,CAAC,CAACvH,CAAC,CAAC;AAC/F;;AAEA;AACA;AACA;AACA;AACO,SAAS8N,iBAAiBA,CAAC1F,QAAQ,EAAE;EAC1C,IAAM2F,GAAG,GAAGhC,0BAAoB,CAAC3D,QAAQ,CAACpB,CAAC,EAAEoB,QAAQ,CAACpI,CAAC,GAAGoI,QAAQ,CAAC4F,CAAC,GAAGrR,UAAU,CAAC;EAClF,OAAOoR,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASE,IAAIA,CAAC9N,CAAC,EAAEoH,CAAC,EAAE;EACzB,OAAOsE,IAAI,CAACoB,GAAG,CAAC9M,CAAC,GAAGoH,CAAC,CAAC;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS2G,uBAAiBA,CAAC9F,QAAQ,EAAEpB,CAAC,EAAEhH,CAAC,EAAE;EAChD,OAAOmO,qBAAe,CAAC/F,QAAQ,CAACpB,CAAC,EAAEoB,QAAQ,CAACpI,CAAC,EAAEgH,CAAC,EAAEhH,CAAC,CAAC;AACtD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASmO,qBAAeA,CAACC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAE;EAC9C,IAAMC,EAAE,GAAGF,EAAE,GAAGF,EAAE;EAClB,IAAMK,EAAE,GAAGF,EAAE,GAAGF,EAAE;EAClB,OAAOxC,IAAI,CAACG,KAAK,CAAEH,IAAI,CAAC6C,KAAK,CAACD,EAAE,EAAED,EAAE,CAAC,GAAG,GAAG,GAAI3C,IAAI,CAAC8C,EAAE,GAAG,GAAG,CAAC;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASC,gBAAgBA,CAACC,OAAO,EAAE;EACxC,OAAOA,OAAO,IAAIhD,IAAI,CAAC8C,EAAE,GAAG,GAAG,CAAC;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASf,oBAAcA,CAACQ,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAE;EAC7C,IAAIpO,CAAC,GAAGiO,EAAE,GAAGE,EAAE;EACf,IAAI/G,CAAC,GAAG8G,EAAE,GAAGE,EAAE;EACf,OAAO1C,IAAI,CAACC,KAAK,CAACD,IAAI,CAACqB,IAAI,CAAC/M,CAAC,GAAGA,CAAC,GAAGoH,CAAC,GAAGA,CAAC,CAAC,CAAC;AAC7C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASuH,gBAAgBA,CAAC9H,CAAC,EAAEhH,CAAC,EAAE+O,IAAI,EAAEC,GAAG,EAAEtI,KAAK,EAAEC,MAAM,EAAwB;EAAA,IAAtBsI,YAAY,GAAAjN,SAAA,CAAA1B,MAAA,QAAA0B,SAAA,QAAAyL,SAAA,GAAAzL,SAAA,MAAG,KAAK;EACnF,OAAOiN,YAAY,GACdjI,CAAC,GAAG+H,IAAI,IAAI/H,CAAC,GAAG+H,IAAI,GAAGrI,KAAK,IAAI1G,CAAC,GAAGgP,GAAG,IAAIhP,CAAC,GAAGgP,GAAG,GAAGrI,MAAM,IACzDK,CAAC,GAAG+H,IAAI,IAAI/H,CAAC,GAAG+H,IAAI,GAAGrI,KAAK,IAAI1G,CAAC,GAAGgP,GAAG,IAAIhP,CAAC,GAAGgP,GAAG,GAAGrI,MAAO,IAC5DK,CAAC,GAAG+H,IAAI,IAAI/H,CAAC,GAAG+H,IAAI,GAAGrI,KAAK,IAAI1G,CAAC,GAAGgP,GAAG,IAAIhP,CAAC,GAAGgP,GAAG,GAAGrI,MAAO,IAC5DK,CAAC,GAAG+H,IAAI,IAAI/H,CAAC,GAAG+H,IAAI,GAAGrI,KAAK,IAAI1G,CAAC,GAAGgP,GAAG,IAAIhP,CAAC,GAAGgP,GAAG,GAAGrI,MAAO,GAC/DK,CAAC,GAAG+H,IAAI,IAAI/H,CAAC,GAAG+H,IAAI,GAAGrI,KAAK,IAAI1G,CAAC,GAAGgP,GAAG,IAAIhP,CAAC,GAAGgP,GAAG,GAAGrI,MAAM;AACjE;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASuI,gBAAUA,CAACC,GAAG,EAAEC,MAAM,EAAE;EACtC,OAAOvD,IAAI,CAACoB,GAAG,CAACmC,MAAM,CAAC9P,CAAC,GAAG6P,GAAG,CAAC7P,CAAC,CAAC,KAAKuM,IAAI,CAACoB,GAAG,CAACmC,MAAM,CAACvB,CAAC,GAAGsB,GAAG,CAACtB,CAAC,CAAC;AAClE;AAEO,SAASwB,uBAAiBA,CAACC,MAAM,EAAE;EACxC,IAAIA,MAAM,GAAG,IAAI,IAAIA,MAAM,GAAG,KAAK,EAAE;IACnC,OAAO,OAAO;EAChB,CAAC,MAAM,IAAIA,MAAM,GAAG,KAAK,IAAIA,MAAM,GAAG,KAAK,EAAE;IAC3C,OAAO,OAAO;EAChB,CAAC,MAAM,IAAIA,MAAM,GAAG,KAAK,IAAIA,MAAM,GAAG,IAAI,EAAE;IAC1C,OAAO,MAAM;EACf,CAAC,MAAM,IAAIA,MAAM,IAAI,IAAI,IAAIA,MAAM,IAAI,IAAI,EAAE;IAC3C,OAAO,WAAW;EACpB,CAAC,MAAM,IAAIA,MAAM,IAAI,KAAK,IAAIA,MAAM,IAAI,KAAK,EAAE;IAC7C,OAAO,WAAW;EACpB,CAAC,MAAM,IAAIA,MAAM,GAAG,KAAK,IAAIA,MAAM,GAAG,KAAK,EAAE;IAC3C,OAAO,KAAK;EACd,CAAC,MAAM,IAAIA,MAAM,GAAG,KAAK,IAAIA,MAAM,GAAG,KAAK,EAAE;IAC3C,OAAO,UAAU;EACnB,CAAC,MAAM,IAAIA,MAAM,GAAG,KAAK,IAAIA,MAAM,GAAG,KAAK,EAAE;IAC3C,OAAO,UAAU;EACnB;AACF,C;;;;;;;;;;;;;ACrP0C;AACR;AAClC3P,MAAM,CAAC6P,OAAO,CAACD,qBAAO,CAAC,CAACzE,OAAO,CAAC,UAAA9B,IAAA;EAAA,IAAAyG,KAAA,GAAArN,kBAAA,CAAA4G,IAAA;IAAEnG,IAAI,GAAA4M,KAAA;IAAEC,QAAQ,GAAAD,KAAA;EAAA,OAAO1S,MAAM,CAAC8F,IAAI,CAAC,GAAG6M,QAAQ;AAAA,CAAC,CAAC;;AAEhF;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,uBAAuBA,CAACxP,CAAC,EAAEoH,CAAC,EAAE;EAC5C;EACA,OAAOsE,IAAI,CAACC,KAAK,CAAC4B,iBAAiB,CAACvN,CAAC,EAAEoH,CAAC,CAAC,CAAC,KAAKA,CAAC,CAAC1D,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC0D,CAAC,CAACqI,WAAW;AACnF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,eAAeA,CAACzH,QAAQ,EAAEpB,CAAC,EAAEhH,CAAC,EAAE8P,KAAK,EAAE;EACrD,IAAMhD,IAAI,GAAGc,cAAc,CAAC5G,CAAC,EAAEhH,CAAC,EAAEoI,QAAQ,CAACpB,CAAC,EAAEoB,QAAQ,CAACpI,CAAC,CAAC;EAEzD,IAAI8M,IAAI,KAAK,CAAC,EAAE,OAAM,CAAC;;EAEvB;EACA,IAAM0B,EAAE,GAAGxH,CAAC,GAAGoB,QAAQ,CAACpB,CAAC;EACzB,IAAMyH,EAAE,GAAGzO,CAAC,GAAGoI,QAAQ,CAACpI,CAAC;;EAEzB;EACA,IAAM+P,IAAI,GAAIvB,EAAE,GAAG1B,IAAI,IAAKgD,KAAK,GAAGlT,WAAW,CAAC;EAChD,IAAMoT,IAAI,GAAIvB,EAAE,GAAG3B,IAAI,IAAKgD,KAAK,GAAGlT,WAAW,CAAC;;EAEhD;EACAwL,QAAQ,CAACkH,MAAM,GAAGpB,iBAAiB,CAAC9F,QAAQ,EAAEpB,CAAC,EAAEhH,CAAC,CAAC;;EAEnD;EACAoI,QAAQ,CAACpB,CAAC,IAAI+I,IAAI;EAClB3H,QAAQ,CAACpI,CAAC,IAAIgQ,IAAI;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,sBAAsBA,CAACjJ,CAAC,EAAEhH,CAAC,EAAE6D,IAAI,EAAEqM,IAAI,EAAEC,SAAS,EAAE;EAClE,IAAMC,WAAW,GAAG,EAAE;EAEtB,KAAK,IAAIC,QAAQ,GAAGxM,IAAI,EAAEwM,QAAQ,GAAGD,WAAW,EAAEC,QAAQ,EAAE,EAAE;IAC5D,IAAMC,KAAK,GAAGC,mBAAmB,CAACvJ,CAAC,EAAEhH,CAAC,EAAEkQ,IAAI,EAAEG,QAAQ,EAAEF,SAAS,CAAC;IAClE,IAAIG,KAAK,CAAChQ,MAAM,GAAG,CAAC,EAAE;MACpB,OAAOiN,UAAU,CAAC+C,KAAK,CAAC;IAC1B;EACF;EAEA,OAAO,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASE,8BAA8BA,CAACpI,QAAQ,EAAEgH,MAAM,EAAE/H,GAAG,EAAE;EACpE,IAAMxD,IAAI,GAAGuL,MAAM,CAACvL,IAAI,IAAKuL,MAAM,CAAC3H,GAAG,IAAI2H,MAAM,CAAC3H,GAAG,CAAC5D,IAAK,IAAI,CAAC;EAChE,IAAM4M,KAAK,GAAG,EAAE;;EAEhB;EACA,IAAMJ,QAAQ,GAAGxM,IAAI,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC;EACnC0M,mBAAmB,CAACnB,MAAM,CAAC9P,CAAC,EAAE8P,MAAM,CAACvB,CAAC,EAAExG,GAAG,CAAC6I,IAAI,EAAEG,QAAQ,EAAE,UAAAK,IAAI,EAAI;IAClE,IAAMvM,IAAI,GAAGwM,eAAe,CAACvI,QAAQ,EAAEsI,IAAI,CAACpR,CAAC,EAAEoR,IAAI,CAAC7C,CAAC,EAAExG,GAAG,CAAC;IAC3D,IAAIlD,IAAI,CAAC7D,MAAM,EAAE;MACfmQ,KAAK,CAACvN,IAAI,CAACiB,IAAI,CAAC;IAClB;EACF,CAAC,CAAC;;EAEF;EACA,OAAOsM,KAAK,CAACnQ,MAAM,GACfmQ,KAAK,CAACG,MAAM,CAAC,UAACC,QAAQ,EAAEC,OAAO;IAAA,OAAMA,OAAO,CAACxQ,MAAM,GAAGuQ,QAAQ,CAACvQ,MAAM,GAAGwQ,OAAO,GAAGD,QAAQ;EAAA,CAAC,CAAC,GAC5F,EAAE;AACR;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASF,eAAeA,CAACvI,QAAQ,EAAEpB,CAAC,EAAEhH,CAAC,EAAEqH,GAAG,EAAE;EACnD,IAAM0J,OAAO,GAAG,EAAE;EAClB,IAAMC,GAAG,GAAG3J,GAAG,CAAC6I,IAAI,CAAClJ,CAAC,CAAC,CAAChH,CAAC,CAAC;EAC1B,IAAMiR,KAAK,GAAG5J,GAAG,CAAC6I,IAAI,CAAC9H,QAAQ,CAAC9I,CAAC,CAAC,CAAC8I,QAAQ,CAACyF,CAAC,CAAC;EAC9C,IAAIqD,IAAI,GAAGrF,IAAI,CAACwB,GAAG,CAACxB,IAAI,CAACuB,GAAG,CAAC6D,KAAK,CAAC3R,CAAC,EAAE0R,GAAG,CAAC1R,CAAC,CAAC,GAAGyR,OAAO,EAAE,CAAC,CAAC;EAC1D,IAAII,IAAI,GAAGtF,IAAI,CAACuB,GAAG,CAACvB,IAAI,CAACwB,GAAG,CAAC4D,KAAK,CAAC3R,CAAC,EAAE0R,GAAG,CAAC1R,CAAC,CAAC,GAAGyR,OAAO,EAAE1J,GAAG,CAACxD,IAAI,CAAC;EACjE,IAAIuN,IAAI,GAAGvF,IAAI,CAACwB,GAAG,CAACxB,IAAI,CAACuB,GAAG,CAAC6D,KAAK,CAACpD,CAAC,EAAEmD,GAAG,CAACnD,CAAC,CAAC,GAAGkD,OAAO,EAAE,CAAC,CAAC;EAC1D,IAAIM,IAAI,GAAGxF,IAAI,CAACuB,GAAG,CAACvB,IAAI,CAACwB,GAAG,CAAC4D,KAAK,CAACpD,CAAC,EAAEmD,GAAG,CAACnD,CAAC,CAAC,GAAGkD,OAAO,EAAE1J,GAAG,CAACxD,IAAI,CAAC;EAEjE,SAASyN,eAAeA,CAACZ,IAAI,EAAE;IAC7B,IAAIA,IAAI,CAACa,KAAK,EAAE;MACd,OAAO,KAAK;IACd;IACA,IAAMC,sBAAsB,GAAGpJ,QAAQ,CAACqJ,QAAQ,KAAK,MAAM;IAC3D,OAAOD,sBAAsB,GAAGd,IAAI,CAACe,QAAQ,KAAK,OAAO,GAAGf,IAAI,CAACe,QAAQ,KAAK,OAAO;EACvF;EAEA,IAAIC,SAAS,GAAG,EAAE;EAClB,KAAK,IAAIpS,CAAC,GAAG4R,IAAI,EAAE5R,CAAC,IAAI6R,IAAI,EAAE7R,CAAC,EAAE,EAAE;IACjC,KAAK,IAAIuO,CAAC,GAAGuD,IAAI,EAAEvD,CAAC,IAAIwD,IAAI,EAAExD,CAAC,EAAE,EAAE;MACjC,IAAI6D,SAAS,CAACpS,CAAC,CAAC,IAAI,IAAI,EAAE;QACxBoS,SAAS,CAACpS,CAAC,CAAC,GAAG,EAAE;MACnB;MACAoS,SAAS,CAACpS,CAAC,CAAC,CAACuO,CAAC,CAAC,GAAG;QAChBvO,CAAC,EAADA,CAAC;QACDuO,CAAC,EAADA,CAAC;QACD7G,CAAC,EAAEK,GAAG,CAAC6I,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,CAAC,CAAC7G,CAAC;QACnBhH,CAAC,EAAEqH,GAAG,CAAC6I,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,CAAC,CAAC7N,CAAC;QACnBgO,CAAC,EAAE3G,GAAG,CAAC6I,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,CAAC,CAACG,CAAC;QACnBuD,KAAK,EAAElK,GAAG,CAAC6I,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,CAAC,CAAC0D,KAAK;QAC3BE,QAAQ,EAAEpK,GAAG,CAAC6I,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,CAAC,CAAC4D;MAC3B,CAAC;IACH;EACF;EACA,IAAIE,QAAQ,GAAG,KAAK;EACpB,IAAIxN,IAAI,GAAG,EAAE;EACb,IAAIyN,SAAS,GAAG,EAAE;EAClB,IAAIC,WAAW,GAAG,EAAE;EACpB,IAAMC,QAAQ,GAAGJ,SAAS,CAACV,GAAG,CAAC1R,CAAC,CAAC,CAAC0R,GAAG,CAACnD,CAAC,CAAC;EACxC,IAAMkE,UAAU,GAAGL,SAAS,CAACT,KAAK,CAAC3R,CAAC,CAAC,CAAC2R,KAAK,CAACpD,CAAC,CAAC;EAC9C+D,SAAS,CAAC1O,IAAI,CAAC6O,UAAU,CAAC;EAAA,IAAAC,KAAA,YAAAA,MAAA,EACR;IAChB,IAAIJ,SAAS,CAACtR,MAAM,GAAG,CAAC,EAAE;MACxB;MACA,IAAI2R,OAAO,GAAG,CAAC;MACf,KAAK,IAAI3S,EAAC,GAAG,CAAC,EAAEA,EAAC,GAAGsS,SAAS,CAACtR,MAAM,EAAEhB,EAAC,EAAE,EAAE;QACzC,IAAIsS,SAAS,CAACtS,EAAC,CAAC,CAACQ,CAAC,GAAG8R,SAAS,CAACK,OAAO,CAAC,CAACnS,CAAC,EAAE;UACzCmS,OAAO,GAAG3S,EAAC;QACb;QAEA,IAAIsS,SAAS,CAACtS,EAAC,CAAC,CAACQ,CAAC,IAAI8R,SAAS,CAACK,OAAO,CAAC,CAACnS,CAAC,EAAE;UAC1C,IAAI8R,SAAS,CAACtS,EAAC,CAAC,CAACgI,CAAC,GAAGsK,SAAS,CAACK,OAAO,CAAC,CAAC3K,CAAC,EAAE;YACzC2K,OAAO,GAAG3S,EAAC;UACb;QACF;MACF;MACA,IAAIwR,OAAO,GAAGc,SAAS,CAACK,OAAO,CAAC;MAChC,IAAInB,OAAO,KAAKgB,QAAQ,EAAE;QACxB;QACAH,QAAQ,GAAG,IAAI;MACjB;MACA;MACAxN,IAAI,GAAG,CAAC2N,QAAQ,CAAC;MACjB,IAAII,IAAI,GAAGpB,OAAO;MAElB,OAAOoB,IAAI,CAACC,QAAQ,EAAE;QACpBhO,IAAI,CAACjB,IAAI,CAACgP,IAAI,CAACC,QAAQ,CAAC;QACxBD,IAAI,GAAGA,IAAI,CAACC,QAAQ;MACtB;MACAP,SAAS,CAACQ,MAAM,CAACR,SAAS,CAACS,OAAO,CAACvB,OAAO,CAAC,EAAE,CAAC,CAAC;MAC/Ce,WAAW,CAAC3O,IAAI,CAAC4N,OAAO,CAAC;MACzB;MACAP,mBAAmB,CAACO,OAAO,CAACxR,CAAC,EAAEwR,OAAO,CAACjD,CAAC,EAAE6D,SAAS,EAAE,CAAC,EAAE,UAAAY,SAAS,EAAI;QACnE,IAAMC,SAAS,GACb,CAACrD,UAAU,CAAC4B,OAAO,EAAEwB,SAAS,CAAC,IAC9BhB,eAAe,CAACI,SAAS,CAACZ,OAAO,CAACxR,CAAC,CAAC,CAACgT,SAAS,CAACzE,CAAC,CAAC,CAAC,IAAIyD,eAAe,CAACI,SAAS,CAACY,SAAS,CAAChT,CAAC,CAAC,CAACwR,OAAO,CAACjD,CAAC,CAAC,CAAE;QAC5G,IAAI,CAACgE,WAAW,CAACW,QAAQ,CAACF,SAAS,CAAC,IAAIhB,eAAe,CAACgB,SAAS,CAAC,IAAIC,SAAS,EAAE;UAC/E,IAAIE,KAAK,GAAG3B,OAAO,CAACxJ,CAAC,GAAGoG,iBAAiB,CAAC4E,SAAS,EAAExB,OAAO,CAAC;UAC7D,IAAI,CAACc,SAAS,CAACY,QAAQ,CAACF,SAAS,CAAC,EAAE;YAClCV,SAAS,CAAC1O,IAAI,CAACoP,SAAS,CAAC;YACzBA,SAAS,CAAChL,CAAC,GAAGmL,KAAK;YACnBH,SAAS,CAACI,CAAC,GAAGhF,iBAAiB,CAAC4E,SAAS,EAAER,QAAQ,CAAC;YACpDQ,SAAS,CAACxS,CAAC,GAAGwS,SAAS,CAAChL,CAAC,GAAGgL,SAAS,CAACI,CAAC;YACvCJ,SAAS,CAACH,QAAQ,GAAGrB,OAAO;UAC9B;QACF;MACF,CAAC,CAAC;IACJ,CAAC,MAAM;MACL;MACA3M,IAAI,GAAG,EAAE;MACTwN,QAAQ,GAAG,IAAI;IACjB;EACF,CAAC;EAnDD,OAAO,CAACA,QAAQ;IAAAK,KAAA;EAAA;EAoDhB7N,IAAI,CAACwO,GAAG,CAAC,CAAC;EACV,OAAAC,kBAAA,CAAWzO,IAAI;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS0O,0BAA0BA,CAACC,IAAI,EAAE5C,IAAI,EAAErM,IAAI,EAAEsM,SAAS,EAAE;EACtE;EACA,KAAK,IAAI7Q,CAAC,GAAGwT,IAAI,CAAC5B,IAAI,EAAE5R,CAAC,IAAIwT,IAAI,CAAC3B,IAAI,EAAE7R,CAAC,EAAE,EAAE;IAC3C,IAAI,CAAC4Q,IAAI,CAAC5Q,CAAC,CAAC,EAAE,SAAQ,CAAC;;IAEvB,KAAK,IAAIuO,CAAC,GAAGiF,IAAI,CAAC1B,IAAI,EAAEvD,CAAC,IAAIiF,IAAI,CAACzB,IAAI,EAAExD,CAAC,EAAE,EAAE;MAAA,IAAAkF,OAAA;MAC3C,IAAMrC,IAAI,IAAAqC,OAAA,GAAG7C,IAAI,CAAC5Q,CAAC,CAAC,cAAAyT,OAAA,uBAAPA,OAAA,CAAUlF,CAAC,CAAC;MACzB,IAAI,CAAC6C,IAAI,EAAE,SAAQ,CAAC;;MAEpB;MACA,IAAIsC,MAAM,GAAG,IAAI;;MAEjB;MACA,IAAMC,gBAAgB,GAAGC,wBAAwB,CAAC5T,CAAC,EAAEuO,CAAC,EAAEqC,IAAI,EAAErM,IAAI,CAAC;MAAA,IAAAsP,SAAA,GAAAC,0BAAA,CACrCH,gBAAgB;QAAAI,KAAA;MAAA;QAA9C,KAAAF,SAAA,CAAAnG,CAAA,MAAAqG,KAAA,GAAAF,SAAA,CAAAjU,CAAA,IAAAwB,IAAA,GAAgD;UAAA,IAArC4S,eAAe,GAAAD,KAAA,CAAA1S,KAAA;UACxB,IAAI,CAACwP,SAAS,CAACmD,eAAe,CAAC,EAAE;YAC/BN,MAAM,GAAG,KAAK;YACd,MAAK,CAAC;UACR;QACF;;QAEA;MAAA,SAAAO,GAAA;QAAAJ,SAAA,CAAArU,CAAA,CAAAyU,GAAA;MAAA;QAAAJ,SAAA,CAAArT,CAAA;MAAA;MACA,IAAIkT,MAAM,EAAE;QACV,OAAO;UAAE1T,CAAC,EAADA,CAAC;UAAEuO,CAAC,EAADA;QAAE,CAAC;MACjB;IACF;EACF;;EAEA;EACA,OAAO,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS2F,oBAAoBA,CAACpL,QAAQ,EAAE+H,SAAS,EAAE;EACxD,IACKsD,KAAK,GAINrL,QAAQ,CAJV9I,CAAC;IACEoU,KAAK,GAGNtL,QAAQ,CAHVyF,CAAC;IACD8F,KAAK,GAEHvL,QAAQ,CAFVuL,KAAK;IACKzD,IAAI,GACZ9H,QAAQ,CADVwL,MAAM,CAAI1D,IAAI;EAEhB,IAAI2D,SAAS,GAAG,EAAE;EAElB,KAAK,IAAI7M,CAAC,GAAG6E,IAAI,CAACwB,GAAG,CAACoG,KAAK,GAAGE,KAAK,EAAE,CAAC,CAAC,EAAE3M,CAAC,IAAI6E,IAAI,CAACuB,GAAG,CAACqG,KAAK,GAAGE,KAAK,EAAEzD,IAAI,CAAC5P,MAAM,GAAG,CAAC,CAAC,EAAE0G,CAAC,EAAE,EAAE;IAC3F,KAAK,IAAIhH,CAAC,GAAG6L,IAAI,CAACwB,GAAG,CAACqG,KAAK,GAAGC,KAAK,EAAE,CAAC,CAAC,EAAE3T,CAAC,IAAI6L,IAAI,CAACuB,GAAG,CAACsG,KAAK,GAAGC,KAAK,EAAEzD,IAAI,CAAClJ,CAAC,CAAC,CAAC1G,MAAM,GAAG,CAAC,CAAC,EAAEN,CAAC,EAAE,EAAE;MAC9F;MACA,IAAI4N,cAAc,CAAC6F,KAAK,EAAEC,KAAK,EAAE1M,CAAC,EAAEhH,CAAC,CAAC,IAAI2T,KAAK,EAAE;QAC/C,IAAMjD,IAAI,GAAGR,IAAI,CAAClJ,CAAC,CAAC,CAAChH,CAAC,CAAC;;QAEvB;QACA,IAAI0Q,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEjJ,GAAG,IAAI,OAAO0I,SAAS,KAAK,UAAU,IAAIA,SAAS,CAACO,IAAI,CAACjJ,GAAG,CAAC,EAAE;UACvEoM,SAAS,CAAC3Q,IAAI,CAACwN,IAAI,CAACjJ,GAAG,CAAC;QAC1B;MACF;IACF;EACF;EAEA,OAAOoM,SAAS;AAClB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,yBAAyBA,CAAC1L,QAAQ,EAAE;EAClD,IAAA2L,iBAAA,GAAkC3L,QAAQ,CAACiB,OAAO;IAA1CmB,MAAM,GAAAuJ,iBAAA,CAANvJ,MAAM;IAAEwJ,QAAQ,GAAAD,iBAAA,CAARC,QAAQ;IAAE3M,GAAG,GAAA0M,iBAAA,CAAH1M,GAAG;EAC7B,IAAQpD,KAAK,GAAYmE,QAAQ,CAAzBnE,KAAK;IAAE0P,KAAK,GAAKvL,QAAQ,CAAlBuL,KAAK;;EAEpB;EACA,IACEnJ,MAAM,KACL,CAACnD,GAAG,CAAC4M,gBAAgB,GAAG,CAACC,uBAAuB,CAAC9L,QAAQ,EAAEoC,MAAM,CAAC,GAAG,CAACwJ,QAAQ,CAACG,gBAAgB,CAAC/L,QAAQ,CAAC,CAAC,IAC3G,CAACnE,KAAK,CAACmQ,QAAQ,EACf;IACAhM,QAAQ,CAACiM,OAAO,GAAG,KAAK;EAC1B,CAAC,MAAM;IACLjM,QAAQ,CAACiM,OAAO,GAAG,IAAI;EACzB;;EAEA;EACAnB,wBAAwB,CAAC9K,QAAQ,CAAC9I,CAAC,EAAE8I,QAAQ,CAACyF,CAAC,EAAE5J,KAAK,CAACqQ,KAAK,EAAEX,KAAK,EAAE,UAAAjD,IAAI,EAAI;IAC3E,IAAM6D,aAAa,GAAG3G,cAAc,CAACxF,QAAQ,CAAC9I,CAAC,EAAE8I,QAAQ,CAACyF,CAAC,EAAE6C,IAAI,CAACpR,CAAC,EAAEoR,IAAI,CAAC7C,CAAC,CAAC;IAC5E,IAAM2G,UAAU,GAAGnN,GAAG,CAAC6I,IAAI,CAACQ,IAAI,CAACpR,CAAC,CAAC,CAACoR,IAAI,CAAC7C,CAAC,CAAC;IAE3C,IAAI0G,aAAa,IAAIZ,KAAK,EAAE;MAC1B;MACA,IACEa,UAAU,CAAC/M,GAAG,IACd+M,UAAU,CAAC/M,GAAG,CAACkM,KAAK,IACpBjG,iBAAiB,CAACtF,QAAQ,EAAEoM,UAAU,CAAC/M,GAAG,CAAC,IAAI+M,UAAU,CAAC/M,GAAG,CAACkM,KAAK,IACnE,OAAOa,UAAU,CAAC/M,GAAG,CAACgN,MAAM,KAAK,UAAU,EAC3C;QACAD,UAAU,CAAC/M,GAAG,CAACgN,MAAM,CAACrM,QAAQ,CAAC;MACjC;;MAEA;MACA,IAAI,CAACsI,IAAI,CAACgE,MAAM,CAAClC,QAAQ,CAACpK,QAAQ,CAAC,EAAE;QACnCsI,IAAI,CAACgE,MAAM,CAACxR,IAAI,CAACkF,QAAQ,CAAC;MAC5B;;MAEA;MACA,IAAI,CAACsI,IAAI,CAACiE,MAAM,EAAE;QAChB1Q,KAAK,CAAC2Q,UAAU,EAAE;QAClBlE,IAAI,CAACmE,QAAQ,CAAC,CAAC;QACfnE,IAAI,CAACiE,MAAM,GAAG,IAAI;MACpB;;MAEA;MACA,IAAI1Q,KAAK,CAACmQ,QAAQ,IAAI,CAAC/M,GAAG,CAAC4M,gBAAgB,EAAE;QAC3CO,UAAU,CAACM,SAAS,CAAC,CAAC;MACxB,CAAC,MAAM,IAAI7Q,KAAK,CAACD,IAAI,KAAK,IAAI,EAAE;QAC9B;QACA+Q,iBAAiB,CAACP,UAAU,EAAE9D,IAAI,EAAEtI,QAAQ,CAAC;MAC/C;IACF;EACF,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS2M,iBAAiBA,CAACP,UAAU,EAAE9D,IAAI,EAAEtI,QAAQ,EAAE;EACrD,IAAQnE,KAAK,GAAKmE,QAAQ,CAAlBnE,KAAK;;EAEb;EACA,IAAIuQ,UAAU,CAAC/M,GAAG,KAAK,CAACiJ,IAAI,CAACjJ,GAAG,IAAIiJ,IAAI,CAACjJ,GAAG,CAACa,KAAK,KAAKkM,UAAU,CAAC/M,GAAG,CAACa,KAAK,CAAC,EAAE;IAC5EoI,IAAI,CAACjJ,GAAG,GAAG+M,UAAU,CAAC/M,GAAG;;IAEzB;IACA,IAAI+M,UAAU,CAAC/M,GAAG,CAACzD,IAAI,KAAK,MAAM,IAAIwQ,UAAU,CAAC/M,GAAG,CAACuN,QAAQ,GAAG,CAAC,IAAI,CAAC/Q,KAAK,CAACgR,YAAY,CAACzC,QAAQ,CAACgC,UAAU,CAAC/M,GAAG,CAAC,EAAE;MACjHxD,KAAK,CAACgR,YAAY,CAAC/R,IAAI,CAACsR,UAAU,CAAC/M,GAAG,CAAC;IACzC;;IAEA;IACA,IACE+M,UAAU,CAAC/M,GAAG,CAACzD,IAAI,KAAK,WAAW,IACnCwQ,UAAU,CAAC/M,GAAG,CAACuN,QAAQ,GAAG,CAAC,IAC3B,CAAC/Q,KAAK,CAACiR,iBAAiB,CAAC1C,QAAQ,CAACgC,UAAU,CAAC/M,GAAG,CAAC,EACjD;MACAxD,KAAK,CAACiR,iBAAiB,CAAChS,IAAI,CAACsR,UAAU,CAAC/M,GAAG,CAAC;IAC9C;;IAEA;IACA,IACE+M,UAAU,CAAC/M,GAAG,CAAC0N,MAAM,KAAK,UAAU,IACpCX,UAAU,CAAC/M,GAAG,CAAC2N,SAAS,GAAG,CAAC,IAC5BZ,UAAU,CAAC/M,GAAG,CAACxD,KAAK,CAACqE,KAAK,KAAKrE,KAAK,CAACqE,KAAK,IAC1C,CAACrE,KAAK,CAACoR,qBAAqB,CAAC7C,QAAQ,CAACgC,UAAU,CAAC/M,GAAG,CAAC,EACrD;MACAxD,KAAK,CAACoR,qBAAqB,CAACnS,IAAI,CAACsR,UAAU,CAAC/M,GAAG,CAAC;IAClD;EACF;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS6N,wBAAwBA,CAAClN,QAAQ,EAAE;EACjD;EACA,IAAIA,QAAQ,CAACwL,MAAM,CAACK,gBAAgB,EAAE;EAEtC,IAAWR,KAAK,GAAqCrL,QAAQ,CAArD9I,CAAC;IAAYoU,KAAK,GAA2BtL,QAAQ,CAA3CyF,CAAC;IAAS8F,KAAK,GAAoBvL,QAAQ,CAAjCuL,KAAK;IAAE1P,KAAK,GAAamE,QAAQ,CAA1BnE,KAAK;IAAE2P,MAAM,GAAKxL,QAAQ,CAAnBwL,MAAM;EAChD,IAAMU,KAAK,GAAGrQ,KAAK,CAACqQ,KAAK;;EAEzB;EACApB,wBAAwB,CAACO,KAAK,EAAEC,KAAK,EAAEY,KAAK,EAAEX,KAAK,EAAE,UAAAjD,IAAI,EAAI;IAC3D;IACA,IAAI9C,cAAc,CAAC6F,KAAK,EAAEC,KAAK,EAAEhD,IAAI,CAACpR,CAAC,EAAEoR,IAAI,CAAC7C,CAAC,CAAC,IAAI8F,KAAK,EAAE;MACzD,IAAM4B,GAAG,GAAG7E,IAAI,CAACgE,MAAM,CAACrC,OAAO,CAACjK,QAAQ,CAAC;;MAEzC;MACA,IAAImN,GAAG,KAAK,CAAC,CAAC,EAAE;QACd7E,IAAI,CAACgE,MAAM,CAACtC,MAAM,CAACmD,GAAG,EAAE,CAAC,CAAC;;QAE1B;QACA,IAAI,CAAC7E,IAAI,CAACgE,MAAM,CAACpU,MAAM,IAAI2D,KAAK,CAACmQ,QAAQ,IAAI,CAACR,MAAM,CAACK,gBAAgB,EAAE;UACrEnL,UAAU,CAAC,YAAM;YACf,IAAI8K,MAAM,IAAI,CAAClD,IAAI,CAACgE,MAAM,CAACpU,MAAM,EAAE;cACjCsT,MAAM,CAAC1D,IAAI,CAACQ,IAAI,CAACpR,CAAC,CAAC,CAACoR,IAAI,CAAC7C,CAAC,CAAC,CAAC2H,MAAM,CAAC,CAAC;YACtC;UACF,CAAC,EAAE,EAAE,CAAC;QACR;MACF;IACF;EACF,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,gCAAgCA,CAAC3C,IAAI,EAAE5C,IAAI,EAAErM,IAAI,EAAEsM,SAAS,EAAkB;EAAA,IAAhBuF,QAAQ,GAAA1T,SAAA,CAAA1B,MAAA,QAAA0B,SAAA,QAAAyL,SAAA,GAAAzL,SAAA,MAAG,GAAG;EAC1F,KAAK,IAAI2T,OAAO,GAAG,CAAC,EAAEA,OAAO,GAAGD,QAAQ,EAAEC,OAAO,EAAE,EAAE;IAAA,IAAAC,aAAA;IACnD;IACA,IAAMC,OAAO,GAAGhK,IAAI,CAACC,KAAK,CAACD,IAAI,CAACyB,MAAM,CAAC,CAAC,IAAIwF,IAAI,CAAC3B,IAAI,GAAG2B,IAAI,CAAC5B,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG4B,IAAI,CAAC5B,IAAI;IACnF,IAAM4E,OAAO,GAAGjK,IAAI,CAACC,KAAK,CAACD,IAAI,CAACyB,MAAM,CAAC,CAAC,IAAIwF,IAAI,CAACzB,IAAI,GAAGyB,IAAI,CAAC1B,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG0B,IAAI,CAAC1B,IAAI;IAEnF,IAAMV,IAAI,IAAAkF,aAAA,GAAG1F,IAAI,CAAC2F,OAAO,CAAC,cAAAD,aAAA,uBAAbA,aAAA,CAAgBE,OAAO,CAAC;IACrC,IAAI,CAACpF,IAAI,EAAE,SAAQ,CAAC;;IAEpB;IACA,IAAIsC,MAAM,GAAG,IAAI;;IAEjB;IACA,IAAMC,gBAAgB,GAAGC,wBAAwB,CAAC2C,OAAO,EAAEC,OAAO,EAAE5F,IAAI,EAAErM,IAAI,CAAC;IAAA,IAAAkS,UAAA,GAAA3C,0BAAA,CACjDH,gBAAgB;MAAA+C,MAAA;IAAA;MAA9C,KAAAD,UAAA,CAAA/I,CAAA,MAAAgJ,MAAA,GAAAD,UAAA,CAAA7W,CAAA,IAAAwB,IAAA,GAAgD;QAAA,IAArC4S,eAAe,GAAA0C,MAAA,CAAArV,KAAA;QACxB,IAAI,CAACwP,SAAS,CAACmD,eAAe,CAAC,EAAE;UAC/BN,MAAM,GAAG,KAAK;UACd,MAAK,CAAC;QACR;MACF;;MAEA;IAAA,SAAAO,GAAA;MAAAwC,UAAA,CAAAjX,CAAA,CAAAyU,GAAA;IAAA;MAAAwC,UAAA,CAAAjW,CAAA;IAAA;IACA,IAAIkT,MAAM,EAAE;MACV,OAAO;QAAE1T,CAAC,EAAEuW,OAAO;QAAEhI,CAAC,EAAEiI;MAAQ,CAAC;IACnC;EACF;;EAEA;EACA,OAAO,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASG,+BAA+BA,CAC7C7N,QAAQ,EACR8H,IAAI,EACJgG,KAAK,EACLrS,IAAI,EAIJ;EAAA,IAHAsS,aAAa,GAAAnU,SAAA,CAAA1B,MAAA,QAAA0B,SAAA,QAAAyL,SAAA,GAAAzL,SAAA,MAAG,KAAK;EAAA,IACrBoU,cAAc,GAAApU,SAAA,CAAA1B,MAAA,OAAA0B,SAAA,MAAAyL,SAAA;EAAA,IACdH,MAAM,GAAAtL,SAAA,CAAA1B,MAAA,QAAA0B,SAAA,QAAAyL,SAAA,GAAAzL,SAAA,MAAG,IAAI;EAEb,IAAAqU,MAAA,GAAAjU,kBAAA,CAA6B8T,KAAK;IAA3BI,QAAQ,GAAAD,MAAA;IAAEE,QAAQ,GAAAF,MAAA;;EAEzB;EACA,IAAMvD,IAAI,GAAG;IACX5B,IAAI,EAAErF,IAAI,CAACwB,GAAG,CAACjF,QAAQ,CAAC9I,CAAC,GAAGiX,QAAQ,EAAE,CAAC,CAAC;IACxCnF,IAAI,EAAEvF,IAAI,CAACwB,GAAG,CAACjF,QAAQ,CAACyF,CAAC,GAAG0I,QAAQ,EAAE,CAAC,CAAC;IACxCpF,IAAI,EAAEtF,IAAI,CAACuB,GAAG,CAAChF,QAAQ,CAAC9I,CAAC,GAAGiX,QAAQ,EAAEnO,QAAQ,CAACwL,MAAM,CAAC/P,IAAI,GAAG,CAAC,CAAC;IAC/DwN,IAAI,EAAExF,IAAI,CAACuB,GAAG,CAAChF,QAAQ,CAACyF,CAAC,GAAG0I,QAAQ,EAAEnO,QAAQ,CAACwL,MAAM,CAAC/P,IAAI,GAAG,CAAC;EAChE,CAAC;;EAED;EACA,IAAM2S,aAAa,GAAG,SAAhBA,aAAaA,CAAG9F,IAAI,EAAI;IAC5B,IAAML,QAAQ,GAAG3C,iBAAiB,CAACtF,QAAQ,EAAEsI,IAAI,EAAE,IAAI,CAAC;IACxD,OACEL,QAAQ,IAAIiG,QAAQ;IAAI;IACxBjG,QAAQ,IAAIkG,QAAQ;IAAI;IACxB,CAAC7F,IAAI,CAACa,KAAK;IAAI;IACf,CAACb,IAAI,CAAC+F,MAAM;IAAI;IACfN,aAAa,IAAI,CAACzF,IAAI,CAACgG,QAAQ,CAAC;IAAI;IACpC,CAACN,cAAc,IAAIA,cAAc,CAAC1F,IAAI,CAAC,CAAC,CAAC;IAAA;EAE9C,CAAC;;EAED;EACA,IAAI3C,GAAG;EACP,IAAIT,MAAM,EAAE;IACVS,GAAG,GAAG0H,gCAAgC,CAAC3C,IAAI,EAAE5C,IAAI,EAAErM,IAAI,EAAE2S,aAAa,CAAC;EACzE,CAAC,MAAM;IACLzI,GAAG,GAAG8E,0BAA0B,CAACC,IAAI,EAAE5C,IAAI,EAAErM,IAAI,EAAE2S,aAAa,CAAC;EACnE;;EAEA;EACA,OAAOzI,GAAG,IAAI,IAAI;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASmG,uBAAuBA,CAAC9L,QAAQ,EAAEoC,MAAM,EAAE;EACxD,IAAMsC,IAAI,GAAG1E,QAAQ,CAACvE,IAAI,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC;EACxC,IAAI8S,SAAS,GAAG,KAAK,EAAC;;EAEtB,CAAAnM,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAE8J,KAAK,KACXpB,wBAAwB,CAAC9K,QAAQ,CAAC9I,CAAC,EAAE8I,QAAQ,CAACyF,CAAC,EAAErD,MAAM,CAAC8J,KAAK,EAAExH,IAAI,EAAE,UAAA4D,IAAI,EAAI;IAC3E,IAAIA,IAAI,CAACgE,MAAM,CAACpU,MAAM,GAAG,CAAC,EAAE;MAC1BqW,SAAS,GAAG,IAAI,EAAC;IACnB;EACF,CAAC,CAAC;EAEJ,OAAOA,SAAS,EAAC;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASzD,wBAAwBA,CAAC0D,MAAM,EAAEC,MAAM,EAAE3G,IAAI,EAAsB;EAAA,IAApBpD,IAAI,GAAA9K,SAAA,CAAA1B,MAAA,QAAA0B,SAAA,QAAAyL,SAAA,GAAAzL,SAAA,MAAG,CAAC;EAAA,IAAE8U,QAAQ,GAAA9U,SAAA,CAAA1B,MAAA,OAAA0B,SAAA,MAAAyL,SAAA;EAC/E,IAAMsJ,MAAM,GAAG,EAAE;;EAEjB;EACA,IAAIjK,IAAI,KAAK,CAAC,EAAE;IACd,IAAMkK,GAAG,GAAG9G,IAAI,CAAC0G,MAAM,CAAC;IACxB,IAAII,GAAG,EAAE;MACP,IAAMtG,IAAI,GAAGsG,GAAG,CAACH,MAAM,CAAC;MACxB,IAAInG,IAAI,KAAK,CAACoG,QAAQ,IAAIA,QAAQ,CAACpG,IAAI,CAAC,CAAC,EAAEqG,MAAM,CAAC7T,IAAI,CAACwN,IAAI,CAAC;IAC9D;IACA,OAAOqG,MAAM;EACf;EAEA,IAAM7F,IAAI,GAAGrF,IAAI,CAACwB,GAAG,CAACuJ,MAAM,GAAG9J,IAAI,EAAE,CAAC,CAAC;EACvC,IAAMqE,IAAI,GAAGtF,IAAI,CAACuB,GAAG,CAACwJ,MAAM,GAAG9J,IAAI,EAAEoD,IAAI,CAAC5P,MAAM,GAAG,CAAC,CAAC;EAErD,KAAK,IAAIhB,CAAC,GAAG4R,IAAI,EAAE5R,CAAC,IAAI6R,IAAI,EAAE7R,CAAC,EAAE,EAAE;IACjC,IAAM0X,IAAG,GAAG9G,IAAI,CAAC5Q,CAAC,CAAC;IACnB,IAAI,CAAC0X,IAAG,EAAE;IACV,IAAM5F,IAAI,GAAGvF,IAAI,CAACwB,GAAG,CAACwJ,MAAM,GAAG/J,IAAI,EAAE,CAAC,CAAC;IACvC,IAAMuE,IAAI,GAAGxF,IAAI,CAACuB,GAAG,CAACyJ,MAAM,GAAG/J,IAAI,EAAEkK,IAAG,CAAC1W,MAAM,GAAG,CAAC,CAAC;IAEpD,KAAK,IAAIuN,CAAC,GAAGuD,IAAI,EAAEvD,CAAC,IAAIwD,IAAI,EAAExD,CAAC,EAAE,EAAE;MACjC,IAAM6C,KAAI,GAAGsG,IAAG,CAACnJ,CAAC,CAAC;MACnB,IAAI6C,KAAI,KAAK,CAACoG,QAAQ,IAAIA,QAAQ,CAACpG,KAAI,CAAC,CAAC,EAAEqG,MAAM,CAAC7T,IAAI,CAACwN,KAAI,CAAC;IAC9D;EACF;EAEA,OAAOqG,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASxG,mBAAmBA,CAACqG,MAAM,EAAEC,MAAM,EAAE3G,IAAI,EAAEpD,IAAI,EAAEgK,QAAQ,EAAE;EAAA,IAAAG,YAAA;EACxE,IAAMF,MAAM,GAAG,EAAE;;EAEjB;EACA,IAAMG,SAAS,IAAAD,YAAA,GAAG/G,IAAI,CAAC0G,MAAM,CAAC,cAAAK,YAAA,uBAAZA,YAAA,CAAeJ,MAAM,CAAC;EACxC,IAAI/J,IAAI,KAAK,CAAC,EAAE;IACd,IAAIoK,SAAS,KAAK,CAACJ,QAAQ,IAAIA,QAAQ,CAACI,SAAS,CAAC,CAAC,EAAEH,MAAM,CAAC7T,IAAI,CAACgU,SAAS,CAAC;IAC3E,OAAOH,MAAM;EACf;;EAEA;EACA,KAAK,IAAIpK,EAAE,GAAG,CAACG,IAAI,EAAEH,EAAE,IAAIG,IAAI,EAAEH,EAAE,EAAE,EAAE;IACrC,IAAM3F,CAAC,GAAG4P,MAAM,GAAGjK,EAAE;IACrB,IAAI,CAACuD,IAAI,CAAClJ,CAAC,CAAC,EAAE,SAAQ,CAAC;;IAEvB,IAAMmQ,KAAK,GAAGrK,IAAI,GAAGjB,IAAI,CAACoB,GAAG,CAACN,EAAE,CAAC;IACjC,KAAK,IAAIC,EAAE,GAAG,CAACuK,KAAK,EAAEvK,EAAE,IAAIuK,KAAK,EAAEvK,EAAE,EAAE,EAAE;MACvC,IAAM5M,CAAC,GAAG6W,MAAM,GAAGjK,EAAE;MACrB,IAAMoK,GAAG,GAAG9G,IAAI,CAAClJ,CAAC,CAAC;MACnB,IAAI,CAACgQ,GAAG,IAAI,CAACA,GAAG,CAAChX,CAAC,CAAC,EAAE,SAAQ,CAAC;;MAE9B,IAAM0Q,IAAI,GAAGsG,GAAG,CAAChX,CAAC,CAAC;MACnB,IAAI,CAAC8W,QAAQ,IAAIA,QAAQ,CAACpG,IAAI,CAAC,EAAEqG,MAAM,CAAC7T,IAAI,CAACwN,IAAI,CAAC;IACpD;EACF;EAEA,OAAOqG,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASK,kBAAkBA,CAAChP,QAAQ,EAAEyL,SAAS,EAAE;EACtD,IAAIwD,eAAe,GAAG,IAAI;EAC1B,IAAIC,eAAe,GAAGC,QAAQ;;EAE9B;EAAA,IAAAC,UAAA,GAAApE,0BAAA,CAC6BS,SAAS;IAAA4D,MAAA;EAAA;IAAtC,KAAAD,UAAA,CAAAxK,CAAA,MAAAyK,MAAA,GAAAD,UAAA,CAAAtY,CAAA,IAAAwB,IAAA,GAAwC;MAAA,IAA7BgX,cAAc,GAAAD,MAAA,CAAA9W,KAAA;MACvB,IAAM0P,QAAQ,GAAG3C,iBAAiB,CAACtF,QAAQ,EAAEsP,cAAc,CAAC;MAE5D,IAAIrH,QAAQ,GAAGiH,eAAe,EAAE;QAC9BA,eAAe,GAAGjH,QAAQ;QAC1BgH,eAAe,GAAGK,cAAc;MAClC;IACF;;IAEA;EAAA,SAAAnE,GAAA;IAAAiE,UAAA,CAAA1Y,CAAA,CAAAyU,GAAA;EAAA;IAAAiE,UAAA,CAAA1X,CAAA;EAAA;EACA,OAAOuX,eAAe,IAAI,KAAK;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASM,0BAA0BA,CAACvP,QAAQ,EAAEyL,SAAS,EAAE;EAC9D,IAAI+D,OAAO,GAAG,IAAI;EAAA,IAAAC,UAAA,GAAAzE,0BAAA,CAEGS,SAAS;IAAAiE,MAAA;EAAA;IAA9B,KAAAD,UAAA,CAAA7K,CAAA,MAAA8K,MAAA,GAAAD,UAAA,CAAA3Y,CAAA,IAAAwB,IAAA,GAAgC;MAAA,IAArB0O,MAAM,GAAA0I,MAAA,CAAAnX,KAAA;MACf,IAAMwD,IAAI,GAAGqM,8BAA8B,CAACpI,QAAQ,EAAEgH,MAAM,EAAEhH,QAAQ,CAACwL,MAAM,CAAC;;MAE9E;MACA,IAAIzP,IAAI,CAAC7D,MAAM,KAAK,CAACsX,OAAO,IAAIzT,IAAI,CAAC7D,MAAM,GAAGsX,OAAO,CAACzT,IAAI,CAAC7D,MAAM,CAAC,EAAE;QAClEsX,OAAO,GAAG;UACRxP,QAAQ,EAAEgH,MAAM;UAChBjL,IAAI,EAAJA;QACF,CAAC;MACH;IACF;EAAC,SAAAoP,GAAA;IAAAsE,UAAA,CAAA/Y,CAAA,CAAAyU,GAAA;EAAA;IAAAsE,UAAA,CAAA/X,CAAA;EAAA;EAED,OAAO8X,OAAO;AAChB,C;;;;;;ACnqBgD;AACG;AAE5C,SAASG,cAAcA,CAACC,KAAK,EAAE5P,QAAQ,EAAExL,WAAW,EAAE;EAAA,IAAAoM,IAAA,EAAAiP,qBAAA;EAC3D,IAAMC,cAAc,GAAG;IACrBC,aAAa,EAAE,IAAI;IACnBC,WAAW,EAAE;EACf,CAAC;EACD,IAAQC,MAAM,GAAKjQ,QAAQ,CAACiB,OAAO,CAA3BgP,MAAM;EACd,IAAIA,MAAM,EAAE;IACV;EACF;EACA,IAAMC,YAAY,GAAG,CAAC,aAAa,EAAE,YAAY,EAAE,aAAa,CAAC;EACjE;EACA,IAAI,CAAClQ,QAAQ,CAAC4P,KAAK,CAAC,EAAE;IACpB,IAAI5P,QAAQ,CAACmQ,YAAY,KAAK,cAAc,IAAInQ,QAAQ,CAACoQ,YAAY,EAAE;MACrEpQ,QAAQ,CAACnC,MAAM,CAACnB,QAAQ,GAAG,CAACsD,QAAQ,CAACoQ,YAAY,CAAC1T,QAAQ,CAACnF,MAAM,CAACkL,IAAI,CAACzC,QAAQ,CAACoQ,YAAY,CAAC1T,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7G,CAAC,MAAM;MACLsD,QAAQ,CAACnC,MAAM,CAACnB,QAAQ,GAAG,CAACsD,QAAQ,CAACnC,MAAM,CAACnB,QAAQ,CAACsD,QAAQ,CAACnC,MAAM,CAACqE,YAAY,CAAC,CAAC;IACrF;IACAlC,QAAQ,CAACmQ,YAAY,GAAG,cAAc;IACtCnQ,QAAQ,CAACnC,MAAM,CAACwS,IAAI,CAAC,CAAC;IACtBrQ,QAAQ,CAACnC,MAAM,CAACyS,MAAM,CAACC,GAAG,CACxBvQ,QAAQ,CAACnC,MAAM,CAACnB,QAAQ,CAACsD,QAAQ,CAACnC,MAAM,CAACqE,YAAY,CAAC,CAACsO,aAAa,CAAC5R,CAAC,EACtEoB,QAAQ,CAACnC,MAAM,CAACnB,QAAQ,CAACsD,QAAQ,CAACnC,MAAM,CAACqE,YAAY,CAAC,CAACsO,aAAa,CAAC5Y,CACvE,CAAC;IACD;EACF;EACA;EACA,IAAI,CAACsY,YAAY,CAAC9F,QAAQ,CAACwF,KAAK,CAAC,EAAE;IACjC5P,QAAQ,CAACnC,MAAM,CAAC4S,MAAM,GAAG,IAAI;IAC7BzQ,QAAQ,CAACnC,MAAM,CAACoE,aAAa,GAAG,IAAI;EACtC;EACA,IAAMyO,KAAI,GAAG1Q,QAAQ,CAACmQ,YAAY,KAAKP,KAAK,IAAI5P,QAAQ,CAACnC,MAAM,CAACqE,YAAY;EAC5ElC,QAAQ,CAACmQ,YAAY,GAAGP,KAAK;EAC7B,IAAMe,SAAS,GAAG1J,uBAAiB,CAACjH,QAAQ,CAACkH,MAAM,CAAC;EACpD,QAAQyJ,SAAS;IACf,KAAK,UAAU;MACb3Q,QAAQ,CAACnC,MAAM,CAAC+S,KAAK,CAAChS,CAAC,GAAG,CAAC,CAAC;MAC5BoB,QAAQ,CAACnC,MAAM,CAACnB,QAAQ,GAAGsD,QAAQ,CAAC4P,KAAK,CAAC,CAACiB,UAAU,CAAC,WAAW,CAAC;MAClE;IACF,KAAK,UAAU;MACb7Q,QAAQ,CAACnC,MAAM,CAAC+S,KAAK,CAAChS,CAAC,GAAG,CAAC,CAAC;MAC5BoB,QAAQ,CAACnC,MAAM,CAACnB,QAAQ,GAAGsD,QAAQ,CAAC4P,KAAK,CAAC,CAACiB,UAAU,CAAC,WAAW,CAAC;MAClE;IACF,KAAK,KAAK;MACR7Q,QAAQ,CAACnC,MAAM,CAAC+S,KAAK,CAAChS,CAAC,GAAG,CAAC,CAAC;MAC5BoB,QAAQ,CAACnC,MAAM,CAACnB,QAAQ,GAAGsD,QAAQ,CAAC4P,KAAK,CAAC,CAACiB,UAAU,CAAC,MAAM,CAAC;MAC7D;IACF;MACE7Q,QAAQ,CAACnC,MAAM,CAAC+S,KAAK,CAAChS,CAAC,GAAG,CAAC;MAC3BoB,QAAQ,CAACnC,MAAM,CAACnB,QAAQ,GAAGsD,QAAQ,CAAC4P,KAAK,CAAC,CAACiB,UAAU,CAACF,SAAS,CAAC;EACpE;EACA3Q,QAAQ,CAACnC,MAAM,CAACiS,cAAc,GAAG,EAAAlP,IAAA,IAAAiP,qBAAA,GAAC7P,QAAQ,CAAC4P,KAAK,CAAC,CAAC7S,IAAI,CAAC+S,cAAc,cAAAD,qBAAA,cAAAA,qBAAA,GAAIC,cAAc,CAACF,KAAK,CAAC,cAAAhP,IAAA,cAAAA,IAAA,GAAI,GAAG,IAAIpM,WAAW;EACpHkc,KAAI,IAAIA,KAAI,GAAG1Q,QAAQ,CAACnC,MAAM,CAACnB,QAAQ,CAACxE,MAAM,GAAG8H,QAAQ,CAACnC,MAAM,CAACiT,WAAW,CAACJ,KAAI,CAAC,GAAG1Q,QAAQ,CAACnC,MAAM,CAACkT,IAAI,CAAC,CAAC;AAC7G;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,YAAYA,CAACC,GAAG,EAAExO,IAAI,EAAE;EACtC,IAAIH,YAAA,CAAO2O,GAAG,MAAK,QAAQ,IAAIA,GAAG,KAAK,IAAI,EAAE;IAC3C,MAAM,IAAItU,KAAK,CAAC,+BAA+B,CAAC;EAClD;EACA,OAAO8F,IAAI,CAAC+F,MAAM,CAAC,UAAC0I,GAAG,EAAEC,GAAG,EAAK;IAC/B,IAAIF,GAAG,CAACG,cAAc,CAACD,GAAG,CAAC,EAAE;MAC3BD,GAAG,CAACC,GAAG,CAAC,GAAGF,GAAG,CAACE,GAAG,CAAC;IACrB;IACA,OAAOD,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;AACR;;AAEA;AACA;AACA;AACA;AACO,IAAIG,KAAK,GAAG,SAARA,KAAKA,CAAaC,OAAO,EAAE;EACpC,IAAI,EAAEA,OAAO,YAAYC,WAAW,CAAC,EAAE;IACrC,MAAM,IAAI5U,KAAK,CAAC,kCAAkC,CAAC;EACrD;EAEA,IAAMvB,EAAE,GAAG2H,MAAM,CAAC,CAAC;EAEnB,IAAI,CAACyO,IAAI,GAAG,YAAM;IAChB,IAAMC,KAAK,GAAGrT,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IAC3CoT,KAAK,CAACrW,EAAE,GAAGA,EAAE;IACbqW,KAAK,CAACC,SAAS,GAAG,OAAO;IAEzB,IAAMC,YAAY,GAAGvT,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IAClDsT,YAAY,CAACD,SAAS,GAAG,eAAe;IACxCC,YAAY,CAACC,WAAW,CAACN,OAAO,CAAC;IAEjCG,KAAK,CAACG,WAAW,CAACD,YAAY,CAAC;IAC/BvT,QAAQ,CAACyT,IAAI,CAACD,WAAW,CAACH,KAAK,CAAC;IAChC,OAAOA,KAAK;EACd,CAAC;EAED,IAAI,CAACK,KAAK,GAAG,YAAM;IACjB,IAAML,KAAK,GAAGrT,QAAQ,CAAC2T,cAAc,CAAC3W,EAAE,CAAC;IACzC,IAAIqW,KAAK,EAAE;MACTA,KAAK,CAACO,MAAM,CAAC,CAAC;IAChB;EACF,CAAC;EAED,IAAI,CAACR,IAAI,CAAC,CAAC;AACb,CAAC;;AAED;AACA;AACA;AACA;AACA;AACO,IAAIS,aAAa,GAAG,SAAhBA,aAAaA,CAAavD,QAAQ,EAAEwD,KAAK,EAAE;EAAA,IAAAC,KAAA;EACpD,IAAI,OAAOzD,QAAQ,KAAK,UAAU,IAAI,OAAOwD,KAAK,KAAK,QAAQ,EAAE;IAC/D,MAAM,IAAIvV,KAAK,CAAC,sCAAsC,CAAC;EACzD;EAEA,IAAIyV,OAAO;IACTvJ,KAAK;IACLwJ,SAAS,GAAGH,KAAK;EAEnB,IAAI,CAACI,KAAK,GAAG,YAAM;IACjB3d,MAAM,CAAC4d,YAAY,CAACH,OAAO,CAAC;IAC5BA,OAAO,GAAG,IAAI;IACdC,SAAS,IAAIG,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG5J,KAAK;IAC/B,OAAOwJ,SAAS;EAClB,CAAC;EAED,IAAI,CAACK,MAAM,GAAG,YAAM;IAClB,IAAIN,OAAO,EAAE;MACX,OAAM,CAAC;IACT;IAEAvJ,KAAK,GAAG2J,IAAI,CAACC,GAAG,CAAC,CAAC;IAClBL,OAAO,GAAGzd,MAAM,CAAC+L,UAAU,CAACgO,QAAQ,EAAE2D,SAAS,CAAC;EAClD,CAAC;EAED,IAAI,CAACM,KAAK,GAAG,YAAM;IACjBR,KAAI,CAACG,KAAK,CAAC,CAAC;IACZD,SAAS,GAAGH,KAAK;IACjBC,KAAI,CAACO,MAAM,CAAC,CAAC;EACf,CAAC;EAED,IAAI,CAACA,MAAM,CAAC,CAAC,EAAC;AAChB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASE,QAAQA,CAAClE,QAAQ,EAAEmE,IAAI,EAAqB;EAAA,IAAnBC,SAAS,GAAAlZ,SAAA,CAAA1B,MAAA,QAAA0B,SAAA,QAAAyL,SAAA,GAAAzL,SAAA,MAAG,KAAK;EACxD,IAAI,OAAO8U,QAAQ,KAAK,UAAU,IAAI,OAAOmE,IAAI,KAAK,QAAQ,EAAE;IAC9D,MAAM,IAAIlW,KAAK,CAAC,2EAA2E,CAAC;EAC9F;EAEA,IAAIoW,OAAO,GAAG,IAAI;EAClB,IAAIC,WAAW,GAAG,IAAI;EAEtB,OAAO,YAAmB;IAAA,IAAAC,MAAA;IAAA,SAAAC,IAAA,GAAAtZ,SAAA,CAAA1B,MAAA,EAANib,IAAI,OAAAzY,KAAA,CAAAwY,IAAA,GAAAE,IAAA,MAAAA,IAAA,GAAAF,IAAA,EAAAE,IAAA;MAAJD,IAAI,CAAAC,IAAA,IAAAxZ,SAAA,CAAAwZ,IAAA;IAAA;IACtB,IAAMC,OAAO,GAAGP,SAAS,IAAIE,WAAW;IAExC,IAAMnY,IAAI,GAAG,SAAPA,IAAIA,CAAA,EAAS;MACjB6T,QAAQ,CAAC7U,KAAK,CAACoZ,MAAI,EAAEE,IAAI,CAAC;MAC1BJ,OAAO,GAAG,IAAI;IAChB,CAAC;IAED,IAAIM,OAAO,EAAE;MACXL,WAAW,GAAG,KAAK;MACnBnY,IAAI,CAAC,CAAC;IACR;IAEA,IAAI,CAACkY,OAAO,EAAE;MACZA,OAAO,GAAGrS,UAAU,CAAC7F,IAAI,EAAEgY,IAAI,CAAC;IAClC;EACF,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMS,QAAQ,GAAG,SAAXA,QAAQA,CAAI5E,QAAQ,EAAEmE,IAAI,EAAK;EAC1C,IAAI,OAAOnE,QAAQ,KAAK,UAAU,IAAI,OAAOmE,IAAI,KAAK,QAAQ,EAAE;IAC9D,MAAM,IAAIlW,KAAK,CAAC,2EAA2E,CAAC;EAC9F;EAEA,IAAI4W,SAAS,GAAG,IAAI;EACpB,OAAO,YAAmB;IAAA,IAAAC,MAAA;IAAA,SAAAC,KAAA,GAAA7Z,SAAA,CAAA1B,MAAA,EAANib,IAAI,OAAAzY,KAAA,CAAA+Y,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;MAAJP,IAAI,CAAAO,KAAA,IAAA9Z,SAAA,CAAA8Z,KAAA;IAAA;IACtB/e,MAAM,CAAC4d,YAAY,CAACgB,SAAS,CAAC;IAC9BA,SAAS,GAAG5e,MAAM,CAAC+L,UAAU,CAAC,YAAM;MAClCgO,QAAQ,CAAC7U,KAAK,CAAC2Z,MAAI,EAAEL,IAAI,CAAC;IAC5B,CAAC,EAAEN,IAAI,CAAC;EACV,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACO,SAASc,sBAAsBA,CAACC,WAAW,EAAE;EAClD,IAAMC,WAAW,GAAG;IAClBC,KAAK,EAAE,QAAQ;IACfC,IAAI,EAAE,YAAY;IAClBC,KAAK,EAAE,SAAS;IAChBC,KAAK,EAAE,YAAY;IACnBC,IAAI,EAAE,WAAW;IACjBC,IAAI,EAAE,QAAQ;IACdC,IAAI,EAAE;EACR,CAAC;EAED,OAAOP,WAAW,CAACD,WAAW,CAAC,IAAI,SAAS,EAAC;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASS,qBAAqBA,CAACC,MAAM,EAAE;EAC5C,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;IAC9B,MAAM,IAAIlc,SAAS,CAAC,mBAAmB,CAAC;EAC1C;EAEA,OAAOkc,MAAM,CAACpc,MAAM,GAAG,CAAC,GAAGoc,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGF,MAAM,CAAC/Z,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE;AAClF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASka,SAASA,CAAC/U,MAAM,EAAEsH,MAAM,EAAE;EACxC,IAAM0N,WAAW,GAAGhV,MAAM,CAACgV,WAAW,IAAI,CAAC;EAC3C,IAAMC,YAAY,GAAGjV,MAAM,CAACiV,YAAY,IAAI,CAAC;EAC7C,IAAMC,UAAU,GAAG5N,MAAM,CAAC4N,UAAU,IAAI,CAAC;EACzC,IAAMC,WAAW,GAAG7N,MAAM,CAAC6N,WAAW,IAAI,CAAC;;EAE3C;EACA,OAAOpR,IAAI,CAACwB,GAAG,CAAC,CAAC,EAAExB,IAAI,CAACwB,GAAG,CAAC,CAAC,EAAEyP,WAAW,GAAGE,UAAU,CAAC,GAAGnR,IAAI,CAACwB,GAAG,CAAC,CAAC,EAAE0P,YAAY,GAAGE,WAAW,CAAC,CAAC;AACrG;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,sBAAsBA,CAACpV,MAAM,EAAEsH,MAAM,EAAE+N,aAAa,EAAE;EACpE,IAAMC,MAAM,GAAGD,aAAa,IAAIN,SAAS,CAAC/U,MAAM,EAAEsH,MAAM,CAAC;EACzD,OAAOvD,IAAI,CAACwB,GAAG,CAAC,CAAC,EAAE+B,MAAM,CAACgG,SAAS,GAAGgI,MAAM,CAAC;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAIjO,MAAM,EAAEkO,SAAS,EAAK;EACjD,IAAI5S,YAAA,CAAO0E,MAAM,MAAK,QAAQ,IAAIA,MAAM,KAAK,IAAI,EAAE;IACjD,MAAM,IAAIrK,KAAK,CAAC,mCAAmC,CAAC;EACtD;EAEA,IAAI,CAACuY,SAAS,IAAI,CAACA,SAAS,CAAC/D,GAAG,IAAI,CAAC+D,SAAS,CAACC,EAAE,IAAI,OAAOD,SAAS,CAAC3c,KAAK,KAAK,QAAQ,EAAE;IACxF,MAAM,IAAIoE,KAAK,CAAC,qDAAqD,CAAC;EACxE;EAEA,SAASyY,UAAUA,CAACnE,GAAG,EAAE1Y,KAAK,EAAEwD,IAAI,EAAE;IACpC,IAAM0G,IAAI,GAAG1G,IAAI,CAACV,KAAK,CAAC,GAAG,CAAC;IAC5B,KAAK,IAAInE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuL,IAAI,CAACvK,MAAM,GAAG,CAAC,EAAEhB,CAAC,EAAE,EAAE;MACxC,IAAI,CAAC+Z,GAAG,CAACxO,IAAI,CAACvL,CAAC,CAAC,CAAC,EAAE;QACjB,MAAM,IAAIyF,KAAK,oBAAApB,MAAA,CAAoBkH,IAAI,CAAClI,KAAK,CAAC,CAAC,EAAErD,CAAC,GAAG,CAAC,CAAC,CAACme,IAAI,CAAC,GAAG,CAAC,CAAE,CAAC;MACtE;MACApE,GAAG,GAAGA,GAAG,CAACxO,IAAI,CAACvL,CAAC,CAAC,CAAC;IACpB;IACA+Z,GAAG,CAACxO,IAAI,CAACA,IAAI,CAACvK,MAAM,GAAG,CAAC,CAAC,CAAC,GAAGK,KAAK;EACpC;EAEA,IAAMkK,IAAI,GAAGyS,SAAS,CAAC/D,GAAG,CAAC9V,KAAK,CAAC,GAAG,CAAC;EACrC,IAAIsT,MAAM,GAAG3H,MAAM;;EAEnB;EAAA,IAAA+D,SAAA,GAAAC,+BAAA,CACkBvI,IAAI;IAAAwI,KAAA;EAAA;IAAtB,KAAAF,SAAA,CAAAnG,CAAA,MAAAqG,KAAA,GAAAF,SAAA,CAAAjU,CAAA,IAAAwB,IAAA,GAAwB;MAAA,IAAb6Y,GAAG,GAAAlG,KAAA,CAAA1S,KAAA;MACZ,IAAIoW,MAAM,CAACwC,GAAG,CAAC,KAAK9L,SAAS,EAAE;QAC7B,MAAM,IAAI1I,KAAK,mBAAApB,MAAA,CAAmB2Z,SAAS,CAAC/D,GAAG,CAAE,CAAC;MACpD;MACAxC,MAAM,GAAGA,MAAM,CAACwC,GAAG,CAAC;IACtB;EAAC,SAAAhG,GAAA;IAAAJ,SAAA,CAAArU,CAAA,CAAAyU,GAAA;EAAA;IAAAJ,SAAA,CAAArT,CAAA;EAAA;EAED,QAAQwd,SAAS,CAACC,EAAE;IAClB,KAAK,GAAG;MACNC,UAAU,CAACpO,MAAM,EAAE2H,MAAM,GAAG2G,MAAM,CAACJ,SAAS,CAAC3c,KAAK,CAAC,EAAE2c,SAAS,CAAC/D,GAAG,CAAC;MACnE;IACF,KAAK,GAAG;MACNiE,UAAU,CAACpO,MAAM,EAAE2H,MAAM,GAAG2G,MAAM,CAACJ,SAAS,CAAC3c,KAAK,CAAC,EAAE2c,SAAS,CAAC/D,GAAG,CAAC;MACnE;IACF;MACE,MAAM,IAAIxU,KAAK,uBAAApB,MAAA,CAAuB2Z,SAAS,CAACC,EAAE,CAAE,CAAC;EACzD;AACF,CAAC;AAEM,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIvV,QAAQ,EAAEoC,MAAM,EAAK;EACpD,OAAOpC,QAAQ,CAACnE,KAAK,CAACmQ,QAAQ,IAAK5J,MAAM,CAAClC,KAAK,KAAKF,QAAQ,CAACnE,KAAK,CAACqE,KAAK,IAAI4L,uBAAuB,CAAC9L,QAAQ,EAAEoC,MAAM,CAAE;AACxH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACO,IAAMoT,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIzN,SAAS,EAAE0N,MAAM,EAAK;EACrD,IAAI,CAAC1N,SAAS,EAAE;IACd,OAAO,IAAI,EAAC;EACd;EAEA,IAAQoN,EAAE,GAAiBpN,SAAS,CAA5BoN,EAAE;IAAEhE,GAAG,GAAYpJ,SAAS,CAAxBoJ,GAAG;IAAE5Y,KAAK,GAAKwP,SAAS,CAAnBxP,KAAK;EACtB,IAAMmd,aAAa,GAAGD,MAAM,CAACtE,GAAG,CAAC;EAEjC,IAAIuE,aAAa,KAAKrQ,SAAS,EAAE;IAC/B,MAAM,IAAI1I,KAAK,6BAAApB,MAAA,CAA6B4V,GAAG,CAAE,CAAC;EACpD;EAEA,QAAQgE,EAAE;IACR,KAAK,GAAG;IACR,KAAK,IAAI;MAAE;QACT,IAAMxG,MAAM,GAAGjU,KAAK,CAACK,OAAO,CAACxC,KAAK,CAAC,GAAGod,WAAW,CAACpd,KAAK,EAAEmd,aAAa,CAAC,GAAGnd,KAAK,KAAKmd,aAAa;QAEjG,OAAOP,EAAE,KAAK,IAAI,GAAG,CAACxG,MAAM,GAAGA,MAAM;MACvC;IACA,KAAK,GAAG;MACN,OAAO+G,aAAa,GAAGnd,KAAK;IAC9B,KAAK,IAAI;MACP,OAAOmd,aAAa,IAAInd,KAAK;IAC/B,KAAK,IAAI;MACP,OAAOmd,aAAa,IAAInd,KAAK;IAC/B,KAAK,GAAG;MACN,OAAOmd,aAAa,GAAGnd,KAAK;IAC9B,KAAK,UAAU;MACb,OAAOmd,aAAa,CAACtL,QAAQ,CAAC7R,KAAK,CAAC;IACtC,KAAK,aAAa;MAChB,OAAO,CAACmd,aAAa,CAACtL,QAAQ,CAAC7R,KAAK,CAAC;IACvC;MACE,MAAM,IAAIoE,KAAK,0CAAApB,MAAA,CAA0C4Z,EAAE,CAAE,CAAC;EAClE;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,IAAMQ,WAAW,GAAG,SAAdA,WAAWA,CAAI5d,CAAC,EAAEoH,CAAC,EAAK;EAC5B,IAAI,CAACzE,KAAK,CAACK,OAAO,CAAChD,CAAC,CAAC,IAAI,CAAC2C,KAAK,CAACK,OAAO,CAACoE,CAAC,CAAC,EAAE,OAAO,KAAK;EACxD,IAAIpH,CAAC,CAACG,MAAM,KAAKiH,CAAC,CAACjH,MAAM,EAAE,OAAO,KAAK;EAEvC,IAAM0d,OAAO,GAAG7d,CAAC,CAACwC,KAAK,CAAC,CAAC,CAACsb,IAAI,CAAC,CAAC;EAChC,IAAMC,OAAO,GAAG3W,CAAC,CAAC5E,KAAK,CAAC,CAAC,CAACsb,IAAI,CAAC,CAAC;EAEhC,OAAOD,OAAO,CAACG,KAAK,CAAC,UAAChS,GAAG,EAAEzI,KAAK;IAAA,OAAKyI,GAAG,KAAK+R,OAAO,CAACxa,KAAK,CAAC;EAAA,EAAC;AAC9D,CAAC;AAEM,IAAM0a,wBAAkB,GAAG,SAArBA,kBAAkBA,CAAItW,MAAM,EAAEsH,MAAM,EAAEiP,MAAM,EAAEC,KAAK,EAAK;EACnE,IAAI,CAACD,MAAM,EAAE;IACX,OAAO,KAAK;EACd;EACA,IAAME,UAAU,GAAG;IACjBC,QAAQ,EAAE,SAAVA,QAAQA,CAAEF,KAAK;MAAA,OACbxW,MAAM,CAAC2W,OAAO,GAAG,CAAC,IAClBrP,MAAM,CAACgG,SAAS,GAAG,CAAC,IACpBhG,MAAM,CAACsP,OAAO,KACb,CAACJ,KAAK,IAAIA,KAAK,CAACK,aAAa,CAACnM,QAAQ,CAACpD,MAAM,CAACpL,IAAI,CAAC,CAAC;IAAA;IACvD4a,QAAQ,EAAE,SAAVA,QAAQA,CAAA;MAAA,OACN9W,MAAM,CAAC9D,IAAI,KAAK,UAAU,IAC1BoL,MAAM,CAAC+F,MAAM,KAAK,QAAQ,IAC1B/F,MAAM,CAAC4F,QAAQ,GAAG,CAAC,IACnB5F,MAAM,CAACyP,MAAM,IACb,CAACzP,MAAM,CAACQ,WAAW;IAAA;IACrBkP,OAAO,EAAE,SAATA,OAAOA,CAAA;MAAA,OACL1P,MAAM,CAACqC,QAAQ,KAAK,MAAM,IAC1BrC,MAAM,CAAC2P,WAAW,CAACvM,QAAQ,CAAC1K,MAAM,CAAC9D,IAAI,CAAC,IACxCoL,MAAM,CAAC4F,QAAQ,GAAG,CAAC,IACnB,CAAC5F,MAAM,CAACQ,WAAW;IAAA;IACrBoP,IAAI,EAAE,SAANA,IAAIA,CAAA;MAAA,OACFlX,MAAM,CAAC9D,IAAI,KAAK,UAAU,IAC1BoL,MAAM,CAAC+F,MAAM,KAAK,QAAQ,IAC1B/F,MAAM,CAAC4F,QAAQ,GAAG,CAAC,IACnB5F,MAAM,CAACgG,SAAS,GAAG,CAAC,IACpB,CAAChG,MAAM,CAACyP,MAAM;IAAA;IAChBI,QAAQ,EAAE,SAAVA,QAAQA,CAAA;MAAA,OAAQnX,MAAM,CAAC9D,IAAI,KAAK,UAAU,IAAIoL,MAAM,CAACpL,IAAI,KAAK,MAAM,IAAIoL,MAAM,CAAC4F,QAAQ,GAAG,CAAC,IAAI,CAAC5F,MAAM,CAACyP,MAAM;IAAA;IAC7GK,IAAI,EAAE,SAANA,IAAIA,CAAA;MAAA,IAAAC,aAAA;MAAA,OACFrX,MAAM,CAAC9D,IAAI,KAAK,UAAU,IAC1BoL,MAAM,CAACpL,IAAI,KAAK,MAAM,IACtBoL,MAAM,CAACgG,SAAS,GAAG,CAAC,IACpB,EAAA+J,aAAA,GAAA/P,MAAM,CAACnL,KAAK,cAAAkb,aAAA,uBAAZA,aAAA,CAAc7W,KAAK,MAAKR,MAAM,CAAC7D,KAAK,CAACqE,KAAK,IAC1C8G,MAAM,CAAC4F,QAAQ,GAAG,CAAC,KAClB,CAAC5F,MAAM,CAACgQ,QAAQ,IAAIhQ,MAAM,CAACgQ,QAAQ,KAAKtX,MAAM,CAAC,IAChD,CAACsH,MAAM,CAACyP,MAAM;IAAA;IAChBQ,WAAW,EAAE,SAAbA,WAAWA,CAAA;MAAA,OACTvX,MAAM,CAAC9D,IAAI,KAAK,UAAU,IAAIoL,MAAM,CAACpL,IAAI,KAAK,WAAW,IAAIoL,MAAM,CAAC4F,QAAQ,GAAG,CAAC,IAAI,CAAC5F,MAAM,CAACyP,MAAM;IAAA;IACpGS,SAAS,EAAE,SAAXA,SAASA,CAAA;MAAA,OAAQxX,MAAM,CAAC9D,IAAI,KAAK,UAAU,IAAIoL,MAAM,CAACpL,IAAI,KAAK,OAAO,IAAIoL,MAAM,CAAC4F,QAAQ,GAAG,CAAC,IAAI,CAAC5F,MAAM,CAACyP,MAAM;IAAA;IAC/GU,QAAQ,EAAE,SAAVA,QAAQA,CAAA;MAAA,OAAQzX,MAAM,CAAC9D,IAAI,KAAK,UAAU,IAAIoL,MAAM,CAACpL,IAAI,KAAK,MAAM,IAAIoL,MAAM,CAAC4F,QAAQ,GAAG,CAAC,IAAI,CAAC5F,MAAM,CAACyP,MAAM;IAAA;IAC7GW,KAAK,EAAE,SAAPA,KAAKA,CAAA;MAAA,IAAAC,cAAA;MAAA,OACH3X,MAAM,CAAC9D,IAAI,KAAK,UAAU,IAC1B,EAAAyb,cAAA,GAAArQ,MAAM,CAACnL,KAAK,cAAAwb,cAAA,uBAAZA,cAAA,CAAcnX,KAAK,MAAKR,MAAM,CAAC7D,KAAK,CAACqE,KAAK,IAC1C8G,MAAM,CAAC+F,MAAM,KAAK,UAAU,IAC5B/F,MAAM,CAACgG,SAAS,GAAG,CAAC,KACnB,CAAChG,MAAM,CAACsP,OAAO,IAAItP,MAAM,CAACgG,SAAS,GAAGhG,MAAM,CAACsQ,cAAc,CAAC,IAC7D,CAACtQ,MAAM,CAACyP,MAAM;IAAA;IAChBc,MAAM,EAAE,SAARA,MAAMA,CAAA;MAAA,IAAAC,cAAA;MAAA,OACJxQ,MAAM,IACN,EAAAwQ,cAAA,GAAAxQ,MAAM,CAACnL,KAAK,cAAA2b,cAAA,uBAAZA,cAAA,CAActX,KAAK,MAAKR,MAAM,CAAC7D,KAAK,CAACqE,KAAK,IAC1C,CAAC,UAAU,EAAE,MAAM,EAAE,QAAQ,CAAC,CAACkK,QAAQ,CAACpD,MAAM,CAAC+F,MAAM,CAAC,IACtD/F,MAAM,CAACgG,SAAS,GAAG,CAAC,IACpB,CAAChG,MAAM,CAACyP,MAAM;IAAA;IAChBgB,IAAI,EAAE,SAANA,IAAIA,CAAA;MAAA,IAAAC,cAAA;MAAA,OACF1Q,MAAM,IACN,EAAA0Q,cAAA,GAAA1Q,MAAM,CAACnL,KAAK,cAAA6b,cAAA,uBAAZA,cAAA,CAAcxX,KAAK,MAAKR,MAAM,CAAC7D,KAAK,CAACqE,KAAK,IAC1C8G,MAAM,CAAC+F,MAAM,KAAK,MAAM,IACxB/F,MAAM,CAACgG,SAAS,GAAG,CAAC,IACpBhG,MAAM,CAACgG,SAAS,GAAGhG,MAAM,CAACsQ,cAAc,IACxC,CAACtQ,MAAM,CAACyP,MAAM;IAAA;EAClB,CAAC;EACD,OAAOzP,MAAM,IAAIA,MAAM,KAAKtH,MAAM,IAAIA,MAAM,CAACsN,SAAS,GAAG,CAAC,IAAI,CAACtN,MAAM,CAAC+W,MAAM,IAAIN,UAAU,CAACF,MAAM,CAAC,CAACC,KAAK,CAAC;AAC3G,CAAC,C;;ACtbyB;AACE;AACL;AACA;;;;;;;;;;;;;;;;ACHY;AACmD;AASvE;AACiE;AAEzE,IAAM+B,QAAQ,0BAAAC,UAAA;EACnB,SAAAD,SAAYE,OAAO,EAAElX,OAAO,EAAE;IAAA,IAAAmX,cAAA,EAAAC,eAAA;IAAA,IAAAlG,KAAA;IAAAmG,eAAA,OAAAL,QAAA;IAC5B9F,KAAA,GAAAoG,UAAA,OAAAN,QAAA;IAEA9F,KAAA,CAAKlR,OAAO,GAAGA,OAAO;IAEtB,IAAAgS,MAAA,GAAAd,KAAA;MACalT,GAAG,GAAAgU,MAAA,CAAdhS,OAAO,CAAIhC,GAAG;IAGhBkT,KAAA,CAAKjS,KAAK,GAAG6C,MAAM,CAAC,CAAC;IACrBoP,KAAA,CAAKpF,MAAM,GAAG,UAAU;IAExBoF,KAAA,CAAKqG,QAAQ,GAAG,KAAK;IACrBrG,KAAA,CAAKsE,MAAM,GAAG,KAAK;IACnBtE,KAAA,CAAK3K,WAAW,GAAG,KAAK;IACxB2K,KAAA,CAAK1W,IAAI,GAAG,CAAC;IAEblE,MAAM,CAACkL,IAAI,CAAC0V,OAAO,CAAC,CAACzV,OAAO,CAAC,UAAAC,IAAI,EAAI;MACnCwP,KAAA,CAAKxP,IAAI,CAAC,GAAGwV,OAAO,CAACxV,IAAI,CAAC;IAC5B,CAAC,CAAC;IACF,IAAM8V,MAAM,GAAGX,kBAAM,CAAC9b,KAAK,CAACC,GAAG,CAAC,QAAQ,CAAC;IACzC1E,MAAM,CAACkL,IAAI,CAACgW,MAAM,CAACC,SAAS,CAACvG,KAAA,CAAKvW,IAAI,CAAC,CAAC,CAAC8G,OAAO,CAAC,UAAAC,IAAI,EAAI;MACvDwP,KAAA,CAAKxP,IAAI,CAAC,GAAG8V,MAAM,CAACC,SAAS,CAACvG,KAAA,CAAKvW,IAAI,CAAC,CAAC+G,IAAI,CAAC;IAChD,CAAC,CAAC;IAEFwP,KAAA,CAAKvF,QAAQ,IAAAwL,cAAA,GAAGjG,KAAA,CAAKvF,QAAQ,cAAAwL,cAAA,cAAAA,cAAA,GAAIjG,KAAA,CAAKwG,aAAa;IACnDxG,KAAA,CAAKnF,SAAS,IAAAqL,eAAA,GAAGlG,KAAA,CAAKnF,SAAS,cAAAqL,eAAA,cAAAA,eAAA,GAAIlG,KAAA,CAAKmF,cAAc;IACtDnF,KAAA,CAAKvT,CAAC,GAAGK,GAAG,CAAC6I,IAAI,CAACqK,KAAA,CAAKjb,CAAC,CAAC,CAACib,KAAA,CAAK1M,CAAC,CAAC,CAAC7G,CAAC;IACnCuT,KAAA,CAAKva,CAAC,GAAGqH,GAAG,CAAC6I,IAAI,CAACqK,KAAA,CAAKjb,CAAC,CAAC,CAACib,KAAA,CAAK1M,CAAC,CAAC,CAAC7N,CAAC;IACnCua,KAAA,CAAKvM,CAAC,GAAG3G,GAAG,CAAC6I,IAAI,CAACqK,KAAA,CAAKjb,CAAC,CAAC,CAACib,KAAA,CAAK1M,CAAC,CAAC,CAACG,CAAC;IACnCuM,KAAA,CAAKhS,MAAM,GAAGuF,iBAAiB,CAAAyM,KAAK,CAAC;IACrCA,KAAA,CAAKlG,OAAO,GAAG,KAAK;;IAEpB;IACA,IAAM3D,IAAI,GAAGrJ,GAAG,CAAC6I,IAAI,CAACqK,KAAA,CAAKjb,CAAC,CAAC,CAACib,KAAA,CAAK1M,CAAC,CAAC;IACrC6C,IAAI,CAACa,KAAK,GAAG,IAAI;IACjBb,IAAI,CAACjJ,GAAG,GAAA8S,KAAO;IAEfA,KAAA,CAAKyG,SAAS,GAAG,MAAM;IACvBzG,KAAA,CAAK0G,UAAU,GAAG,KAAK;IACvB1G,KAAA,CAAK2G,SAAS,GAAG,KAAK;IAEtB3G,KAAA,aAAc,GAAG;MACf4G,IAAI,EAAE,SAANA,IAAIA,CAAEC,OAAO,EAAI;QACf,IAAMjc,IAAI,GAAG0b,MAAM,CAACC,SAAS,CAACvG,KAAA,CAAKvW,IAAI,CAAC;QACxCuW,KAAA,CAAK8G,mBAAmB,CAACD,OAAO,EAAEjc,IAAI,CAAC;MACzC;IACF,CAAC;IACD,IAAIoV,KAAA,CAAK+G,UAAU,EAAE;MACnB,IAAMC,eAAe,GAAGrB,kBAAM,CAAC9b,KAAK,CAACC,GAAG,CAACkW,KAAA,CAAKrW,MAAM,CAAC;MACrDqW,KAAA,CAAKtU,MAAM,GAAG,IAAIma,2BAAc,CAACmB,eAAe,CAACtI,UAAU,CAACuI,IAAI,CAAC;MACjEjH,KAAA,CAAKtU,MAAM,CAACkT,IAAI,CAAC,CAAC;MAClBoB,KAAA,CAAKtU,MAAM,CAACiS,cAAc,GAAG,GAAG;IAClC,CAAC,MAAM;MACLqC,KAAA,CAAKvV,WAAW,GACduV,KAAA,CAAKvV,WAAW,IAAIuI,gBAAU,CAACzK,KAAK,CAACK,OAAO,CAACoX,KAAA,CAAKrW,MAAM,CAAC,GAAGqW,KAAA,CAAKrW,MAAM,GAAGqW,KAAA,CAAKrW,MAAM,CAACwM,IAAI,CAAC1M,IAAI,CAAC,CAAC;MACnG,IAAMyd,YAAY,GAAGlH,KAAA,CAAKvV,WAAW,CAACvB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACnD,IAAMie,WAAW,GAAGnH,KAAA,CAAKvV,WAAW,GAAG,MAAM;MAC7C,IAAMH,WAAW,GAAGqb,kBAAM,CAAC9b,KAAK,CAACC,GAAG,CAACod,YAAY,CAAC;MAClD,IAAMxc,OAAO,GAAGJ,WAAW,CAACC,QAAQ,CAAC4c,WAAW,CAAC;MACjDnH,KAAA,CAAKtU,MAAM,GAAGga,mBAAM,CAACld,IAAI,CAACkC,OAAO,CAAC;MAClCsV,KAAA,CAAKtU,MAAM,CAACf,OAAO,GACjBL,WAAW,CAACM,IAAI,CAACC,MAAM,CAACsc,WAAW,CAAC,CAACxc,OAAO,IAAI,IAAIib,mBAAO,CAACtb,WAAW,CAACM,IAAI,CAACC,MAAM,CAACsc,WAAW,CAAC,CAACxc,OAAO,CAAC;IAC7G;IAEAqV,KAAA,CAAKtU,MAAM,CAAC0b,YAAY,GAAG,IAAI;IAC/BpH,KAAA,CAAKtU,MAAM,CAACqC,KAAK,GAAG,QAAQ;IAC5B,IAAIiS,KAAA,CAAKtU,MAAM,EAAE;MACfsU,KAAA,CAAKtU,MAAM,CAACib,SAAS,GAAG,KAAK;MAC7B3G,KAAA,CAAKtU,MAAM,CAAC+a,SAAS,GAAG,QAAQ;MAChCzG,KAAA,CAAKtU,MAAM,CAAC2b,WAAW,GAAG,IAAI;MAE9BrH,KAAA,CAAKtU,MAAM,CAAC4b,EAAE,CAAC,YAAY,EAAE,YAAM;QACjC,IAAAjG,MAAA,GAAArB,KAAA;UAAAuH,cAAA,GAAAlG,MAAA,CACEvS,OAAO;UAAImB,MAAM,GAAAsX,cAAA,CAANtX,MAAM;UAAEuX,IAAI,GAAAD,cAAA,CAAJC,IAAI;QAEzB,IAAI,CAACvX,MAAM,CAACwX,aAAa,CAAC1hB,MAAM,KAAK4T,uBAAuB,CAAAqG,KAAA,EAAO/P,MAAM,CAAC,IAAInD,GAAG,CAAC4M,gBAAgB,CAAC,EAAE;UACnGzJ,MAAM,CAACyX,WAAW,CAAC,CAAC;UACpB1H,KAAA,CAAK2H,MAAM,CAAC,CAAC;UACbH,IAAI,CAACI,YAAY,CAAA5H,KAAK,CAAC;UACvB/P,MAAM,CAAC4X,aAAa,GAAA7H,KAAO;QAC7B;MACF,CAAC,CAAC;MACFA,KAAA,CAAKtU,MAAM,CAAC4b,EAAE,CAAC,WAAW,EAAE,UAAAQ,GAAG,EAAI;QACjC,IAAAC,MAAA,GAAA/H,KAAA;UAAAgI,cAAA,GAAAD,MAAA,CACEjZ,OAAO;UAAImB,MAAM,GAAA+X,cAAA,CAAN/X,MAAM;UAAEwJ,QAAQ,GAAAuO,cAAA,CAARvO,QAAQ;QAE7B,IAAMqK,MAAM,GAAGjgB,WAAW,CAACmc,KAAA,CAAK9I,QAAQ,IAAI8I,KAAA,CAAKvW,IAAI,CAAC;QACtD,IAAIgQ,QAAQ,CAACwO,aAAa,IAAIxO,QAAQ,CAACyO,cAAc,IAAI,CAACzO,QAAQ,CAAC0O,YAAY,CAACL,GAAG,CAAC,EAAE;UACpF;QACF;QACArO,QAAQ,CAAC2O,KAAK,CAACC,OAAO,GAAG,IAAI;QAC7B;QACA,IAAIC,WAAW,GAAG,KAAK;QACvB,IAAIC,QAAQ,GAAG,KAAK;QACpB,KAAK,IAAIxjB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkL,MAAM,CAACwX,aAAa,CAAC1hB,MAAM,EAAEhB,CAAC,EAAE,EAAE;UACpD,IAAMyjB,IAAI,GAAGvY,MAAM,CAACwX,aAAa,CAAC1iB,CAAC,CAAC;UACpC,IAAI8e,wBAAkB,CAAC2E,IAAI,EAAAxI,KAAA,EAAQ8D,MAAM,CAAC,EAAE;YAC1CwE,WAAW,GAAG,IAAI;YAClB,IAAMG,UAAU,YAAArf,MAAA,CAAY4W,KAAA,CAAK9I,QAAQ,IAAI8I,KAAA,CAAKvW,IAAI,CAAE;YACxD,OAAO+e,IAAI,CAACC,UAAU,CAAC,KAAK,UAAU,GAAGD,IAAI,CAACC,UAAU,CAAC,CAAAzI,KAAK,CAAC,GAAGwI,IAAI,CAACE,MAAM,CAAA1I,KAAK,CAAC;UACrF,CAAC,MAAM;YACLuI,QAAQ,GAAG,IAAI;YACfC,IAAI,CAACE,MAAM,CAAA1I,KAAK,CAAC;UACnB;QACF;QACA,IAAIsI,WAAW,EAAE;UACf1a,6BAA6B,CAAAoS,KAAK,CAAC;QACrC;QACA,IAAIuI,QAAQ,EAAE;UACZ,IAAMI,KAAK,GAAG3V,gBAAU,CAAC,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;UAC1D2V,KAAK,IAAInD,uBAAK,CAAC5G,IAAI,CAAC+J,KAAK,CAAC;QAC5B,CAAC,MAAM,IAAIL,WAAW,EAAE;UACtB,IAAMK,MAAK,GAAGhD,kBAAM,CAAC9b,KAAK,CAACC,GAAG,CAAC,QAAQ,CAAC,CAAC8e,KAAK,CAACC,QAAQ,CAACC,MAAM,CAAChF,MAAM,CAAC;UACtE6E,MAAK,IAAInD,uBAAK,CAAC5G,IAAI,CAAC+J,MAAK,CAAC;QAC5B;MACF,CAAC,CAAC;MAEF3I,KAAA,CAAK+I,QAAQ,CAAC/I,KAAA,CAAKtU,MAAM,CAAC;IAC5B;IAAC,OAAAsU,KAAA;EACH;EAACgJ,SAAA,CAAAlD,QAAA,EAAAC,UAAA;EAAA,OAAAkD,YAAA,CAAAnD,QAAA;IAAA9G,GAAA;IAAA5Y,KAAA,EAED,SAAAuhB,MAAMA,CAAA,EAAG;MACP,IAAI,IAAI,CAACtB,QAAQ,EAAE;QACjB;MACF;MACA,IAAI,CAACA,QAAQ,GAAG,IAAI;MACpB,IAAMvY,SAAS,GAAG,IAAIjF,qBAAQ,CAAC,CAAC;MAChCiF,SAAS,CAACC,KAAK,GAAG,WAAW;MAC7BD,SAAS,CAACE,MAAM,GAAG,CAAC;MACpB,IAAMpE,IAAI,GAAG,CAAC,CAAC,EAAE,GAAG,IAAI,CAACN,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAACA,IAAI,EAAE,EAAE,GAAG,IAAI,CAACA,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,IAAI,CAACA,IAAI,CAAC;MAC3FwE,SAAS,CAACG,IAAI,CAACrE,IAAI,CAAC;MACpBkE,SAAS,CAACI,MAAM,CAACpL,WAAW,CAAC;MAC7B,IAAI,CAACqL,UAAU,CAACL,SAAS,EAAE,CAAC,CAAC;IAC/B;EAAC;IAAAkR,GAAA;IAAA5Y,KAAA,EAED,SAAA8iB,QAAQA,CAAA,EAAG;MACT,IAAI,CAAC,IAAI,CAAC7C,QAAQ,EAAE;QAClB;MACF;MACA,IAAI,CAACA,QAAQ,GAAG,KAAK;MACrB,IAAMvY,SAAS,GAAG,IAAI,CAACqb,eAAe,CAAC,WAAW,CAAC;MACnD,IAAIrb,SAAS,EAAE;QACb,IAAI,CAACc,WAAW,CAACd,SAAS,CAAC;MAC7B;IACF;EAAC;IAAAkR,GAAA;IAAA5Y,KAAA,EAED,SAAAgjB,GAAGA,CAACzI,SAAS,EAAE;MACb,IAAI,IAAI,CAAC2D,MAAM,EAAE;QACf;MACF;MACA,IAAA+E,aAAA,GAEI,IAAI,CADNva,OAAO;QAAImB,MAAM,GAAAoZ,aAAA,CAANpZ,MAAM;QAAEqZ,OAAO,GAAAD,aAAA,CAAPC,OAAO;QAAExc,GAAG,GAAAuc,aAAA,CAAHvc,GAAG;QAAE0a,IAAI,GAAA6B,aAAA,CAAJ7B,IAAI;MAEvC,IAAI,IAAI,CAACnB,QAAQ,IAAIpW,MAAM,CAAC4X,aAAa,KAAK,IAAI,EAAE;QAClD5X,MAAM,CAACyX,WAAW,CAAC,CAAC;MACtB;MACA,IAAM6B,QAAQ,GAAG,SAAS,GAAG,IAAI,CAAC9f,IAAI,GAAG,GAAG;MAC5C,KAAK,IAAI1E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGukB,OAAO,CAACvjB,MAAM,EAAEhB,CAAC,EAAE,EAAE;QACvC,IAAIukB,OAAO,CAACvkB,CAAC,CAAC,CAAC0E,IAAI,KAAK,IAAI,EAAE;UAC5B,IAAM+f,IAAI,GAAGF,OAAO,CAACvkB,CAAC,CAAC,CAACwkB,QAAQ,CAAC;UACjC,IAAIC,IAAI,EAAE;YACR,IAAMrgB,MAAK,GAAGqgB,IAAI,CAAC1R,OAAO,CAAC,IAAI,CAAC;YAChC0R,IAAI,CAAC3R,MAAM,CAAC1O,MAAK,EAAE,CAAC,CAAC;UACvB;QACF;MACF;MACA;MACA,IAAIA,KAAK,GAAG2D,GAAG,CAACyZ,SAAS,CAACzO,OAAO,CAAC,IAAI,CAAC;MACvC,IAAI3O,KAAK,IAAI,CAAC,EAAE;QACd2D,GAAG,CAACyZ,SAAS,CAAC1O,MAAM,CAAC1O,KAAK,EAAE,CAAC,CAAC;MAChC;MACAqe,IAAI,CAACiC,sBAAsB,CAAC,CAAC;MAC7B,IAAI,CAACnF,MAAM,GAAG,IAAI;MAClB,IAAI,IAAI,CAAC7a,IAAI,KAAK,MAAM,IAAI,CAACkX,SAAS,EAAE;QACtC,IAAI,CAAC+I,SAAS,CAAC,CAAC;MAClB,CAAC,MAAM;QACL,IAAI,CAACC,KAAK,CAAC,CAAC;MACd;IACF;EAAC;IAAA3K,GAAA;IAAA5Y,KAAA,EAED,SAAAwjB,oBAAoBA,CAAA,EAAG;MACrB,IAAQle,MAAM,GAAK,IAAI,CAAfA,MAAM;MACd,IAAMpB,WAAW,GAAGqb,kBAAM,CAAC9b,KAAK,CAACC,GAAG,CAAC,KAAK,CAAC;MAC3C,IAAI,CAACW,WAAW,QAAArB,MAAA,CAAQwJ,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,aAAU;MACnD,IAAMlI,OAAO,GAAGJ,WAAW,CAACC,QAAQ,CAAC,IAAI,CAACE,WAAW,CAAC;MACtDiB,MAAM,CAAChB,OAAO,GAAGA,OAAO;MACxB,IAAMmf,MAAM,GAAG,CAAC,CAAC3nB,UAAU,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAACC,WAAW,GAAG,CAAC,EAAED,UAAU,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEC,WAAW,GAAG,CAAC,CAAC;MAC/FuJ,MAAM,CAACf,OAAO,GAAG,IAAIib,mBAAO,CAACiE,MAAM,CAAC;MACpCne,MAAM,CAACyS,MAAM,CAACC,GAAG,CAAC1T,OAAO,CAAC2T,aAAa,CAAC5R,CAAC,EAAE/B,OAAO,CAAC2T,aAAa,CAAC5Y,CAAC,CAAC;IACrE;EAAC;IAAAuZ,GAAA;IAAA5Y,KAAA,EAED,SAAAsjB,SAASA,CAAA,EAAG;MACV,IACa5c,GAAG,GACZ,IAAI,CADNgC,OAAO,CAAIhC,GAAG;MAEhB,IAAMxC,WAAW,GAAGqb,kBAAM,CAAC9b,KAAK,CAACC,GAAG,CAAC,KAAK,CAAC;MAC3C,IAAI,CAACW,WAAW,QAAArB,MAAA,CAAQwJ,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,aAAU;MACnD,IAAMlI,OAAO,GAAGJ,WAAW,CAACC,QAAQ,CAAC,IAAI,CAACE,WAAW,CAAC;MACtD,IAAQiB,MAAM,GAAK,IAAI,CAAfA,MAAM;MACdA,MAAM,CAAChB,OAAO,GAAGA,OAAO;MACxBgB,MAAM,CAAC+a,SAAS,GAAG,MAAM;MACzB,IAAI,CAACzY,MAAM,EAAE;MACb,IAAIlB,GAAG,CAAC6I,IAAI,CAAC,IAAI,CAAC5Q,CAAC,CAAC,CAAC,IAAI,CAACuO,CAAC,CAAC,CAACpG,GAAG,KAAK,IAAI,EAAE;QACzCJ,GAAG,CAAC6I,IAAI,CAAC,IAAI,CAAC5Q,CAAC,CAAC,CAAC,IAAI,CAACuO,CAAC,CAAC,CAACpG,GAAG,GAAG,IAAI;QACnCJ,GAAG,CAAC6I,IAAI,CAAC,IAAI,CAAC5Q,CAAC,CAAC,CAAC,IAAI,CAACuO,CAAC,CAAC,CAACwW,OAAO,CAACnhB,IAAI,CAAC,IAAI,CAAC;QAC3CmE,GAAG,CAAC6I,IAAI,CAAC,IAAI,CAAC5Q,CAAC,CAAC,CAAC,IAAI,CAACuO,CAAC,CAAC,CAAC0D,KAAK,GAAG,KAAK;MACxC;IACF;EAAC;IAAAgI,GAAA;IAAA5Y,KAAA,EAED,SAAAujB,KAAKA,CAAA,EAAG;MACN,IAAI,IAAI,CAACtU,WAAW,EAAE;QACpB;MACF;MACA,IACavI,GAAG,GACZ,IAAI,CADNgC,OAAO,CAAIhC,GAAG;MAEhB,IAAI,CAACuI,WAAW,GAAG,IAAI;MACvB,IAAIvI,GAAG,CAAC6I,IAAI,CAAC,IAAI,CAAC5Q,CAAC,CAAC,CAAC,IAAI,CAACuO,CAAC,CAAC,CAACpG,GAAG,KAAK,IAAI,EAAE;QACzCJ,GAAG,CAAC6I,IAAI,CAAC,IAAI,CAAC5Q,CAAC,CAAC,CAAC,IAAI,CAACuO,CAAC,CAAC,CAACpG,GAAG,GAAG,IAAI;QACnCJ,GAAG,CAAC6I,IAAI,CAAC,IAAI,CAAC5Q,CAAC,CAAC,CAAC,IAAI,CAACuO,CAAC,CAAC,CAAC0D,KAAK,GAAG,KAAK;MACxC;MACA,IAAM+S,WAAW,GAAGjd,GAAG,CAAC6I,IAAI,CAAC,IAAI,CAAC5Q,CAAC,CAAC,CAAC,IAAI,CAACuO,CAAC,CAAC,CAACwW,OAAO,CAAChS,OAAO,CAAC,IAAI,CAAC;MAClEiS,WAAW,IAAI,CAAC,IAAIjd,GAAG,CAAC6I,IAAI,CAAC,IAAI,CAAC5Q,CAAC,CAAC,CAAC,IAAI,CAACuO,CAAC,CAAC,CAACwW,OAAO,CAACjS,MAAM,CAACkS,WAAW,EAAE,CAAC,CAAC;MAC3Ejd,GAAG,CAAC8B,WAAW,CAAC,IAAI,CAAC;MACrB,IAAI,CAACob,OAAO,CAAC;QAAEC,KAAK,EAAE,IAAI;QAAEvf,OAAO,EAAE;MAAK,CAAC,CAAC;IAC9C;EAAC;IAAAsU,GAAA;IAAA5Y,KAAA,EAED,SAAA0gB,mBAAmBA,CAACD,OAAO,EAAEjc,IAAI,EAAE;MACjC,IACa4c,IAAI,GACb,IAAI,CADN1Y,OAAO,CAAI0Y,IAAI;MAEjB,IAAM0C,OAAO,GAAGje,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MAC7Cge,OAAO,CAACjhB,EAAE,GAAG,MAAM;MACnBihB,OAAO,CAACC,WAAW,GAAG,IAAI,CAAC1gB,IAAI;MAC/Bod,OAAO,CAACpH,WAAW,CAACyK,OAAO,CAAC;MAE5B,IAAME,OAAO,GAAGne,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MAC7Cke,OAAO,CAACnhB,EAAE,GAAG,MAAM;MACnBmhB,OAAO,CAACxV,GAAG,GAAG5L,WAAW,CAAC4B,IAAI,CAACyf,IAAI,CAAC;MACpCxD,OAAO,CAACpH,WAAW,CAAC2K,OAAO,CAAC;MAE5B,IAAI,IAAI,CAACvP,SAAS,EAAE;QAClB,IAAMyP,YAAY,GAAGre,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;QAClDoe,YAAY,CAACrhB,EAAE,GAAG,WAAW;QAC7BqhB,YAAY,CAACH,WAAW,GAAG,IAAI,CAACtP,SAAS,GAAG,GAAG,GAAG,IAAI,CAACsK,cAAc;QACrE0B,OAAO,CAACpH,WAAW,CAAC6K,YAAY,CAAC;MACnC;MACA,IAAI,IAAI,CAAC7P,QAAQ,EAAE;QACjB,IAAM8P,WAAW,GAAGte,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;QAEjDqe,WAAW,CAACthB,EAAE,GAAG,UAAU;QAC3BshB,WAAW,CAAChL,SAAS,GAAG,mBAAmB;QAE3C,IAAIiL,SAAS;QACb,QAAQ,IAAI,CAAC/gB,IAAI;UACf,KAAK,MAAM;YACT+gB,SAAS,GAAGhD,IAAI,CAACiD,SAAS,CAAC,MAAM,CAAC;YAClC;UACF,KAAK,QAAQ;UACb,KAAK,WAAW;YACdD,SAAS,GAAGhD,IAAI,CAACiD,SAAS,CAAC,MAAM,CAAC;YAClC;UACF,KAAK,OAAO;YACVD,SAAS,GAAGhD,IAAI,CAACiD,SAAS,CAAC,OAAO,CAAC;YACnC;UACF,KAAK,MAAM;YACTD,SAAS,GAAGhD,IAAI,CAACiD,SAAS,CAAC,MAAM,CAAC;YAClC;QACJ;QACA,IAAMC,YAAY,GAAGze,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;QAClDwe,YAAY,CAAC9V,GAAG,GAAG4V,SAAS;QAC5BE,YAAY,CAACnL,SAAS,GAAG,wBAAwB;QACjD,IAAMoL,OAAO,GAAG1e,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;QAC7Cye,OAAO,CAAC1hB,EAAE,GAAG,eAAe;QAC5B0hB,OAAO,CAACR,WAAW,GAAG,IAAI,CAAC1P,QAAQ;QACnC8P,WAAW,CAAC9K,WAAW,CAACiL,YAAY,CAAC;QACrCH,WAAW,CAAC9K,WAAW,CAACkL,OAAO,CAAC;QAChC9D,OAAO,CAACpH,WAAW,CAAC8K,WAAW,CAAC;MAClC;IACF;EAAC;AAAA,EAzR2B9E,sBAAS,E;;;;;;;;;;;;;;;ACbM;AAU9B;AACsC;AAClB;AAE5B,IAAMmF,UAAU,0BAAA7E,UAAA;EACrB,SAAA6E,WAAY5E,OAAO,EAAElX,OAAO,EAAE;IAAA,IAAAkR,KAAA;IAAAmG,yBAAA,OAAAyE,UAAA;IAC5B5K,KAAA,GAAAoG,oBAAA,OAAAwE,UAAA;IAEA5K,KAAA,CAAKlR,OAAO,GAAGA,OAAO;IACtBkR,KAAA,CAAKjS,KAAK,GAAG6C,MAAM,CAAC,CAAC;IACrBoP,KAAA,CAAKpF,MAAM,GAAG,YAAY;IAE1BxV,MAAM,CAACkL,IAAI,CAAC0V,OAAO,CAAC,CAACzV,OAAO,CAAC,UAAAC,IAAI,EAAI;MACnCwP,KAAA,CAAKxP,IAAI,CAAC,GAAGwV,OAAO,CAACxV,IAAI,CAAC;IAC5B,CAAC,CAAC;IACFpL,MAAM,CAACkL,IAAI,CAAC0P,KAAA,CAAKtW,KAAK,CAACA,KAAK,CAAC4c,MAAM,CAACuE,WAAW,CAAC7K,KAAA,CAAKvW,IAAI,CAAC,CAAC,CAAC8G,OAAO,CAAC,UAAAC,IAAI,EAAI;MAC1EwP,KAAA,CAAKxP,IAAI,CAAC,GAAGwP,KAAA,CAAKtW,KAAK,CAACA,KAAK,CAAC4c,MAAM,CAACuE,WAAW,CAAC7K,KAAA,CAAKvW,IAAI,CAAC,CAAC+G,IAAI,CAAC;IACnE,CAAC,CAAC;IAEFwP,KAAA,CAAKvT,CAAC,GAAGuT,KAAA,CAAKtW,KAAK,CAAC+C,CAAC;IACrBuT,KAAA,CAAKva,CAAC,GAAGua,KAAA,CAAKtW,KAAK,CAACjE,CAAC,GAAGua,KAAA,CAAKtW,KAAK,CAACgC,MAAM,CAACU,MAAM,GAAG,CAAC;IACpD,IAAAqC,IAAA,GAAmCuR,KAAA,CAAK8K,WAAW,IAAI9K,KAAA,CAAKnL,MAAM;MAAvDkW,OAAO,GAAAtc,IAAA,CAAVhC,CAAC;MAAcue,OAAO,GAAAvc,IAAA,CAAVhJ,CAAC;IAErBua,KAAA,CAAKtW,KAAK,CAACoQ,OAAO,IAChBkG,KAAA,CAAK8I,MAAM,CAACpS,KAAK,IACjB8O,uBAAK,CAAC5G,IAAI,CAACrW,KAAK,CAACK,OAAO,CAACoX,KAAA,CAAK8I,MAAM,CAACpS,KAAK,CAAC,GAAG1D,gBAAU,CAACgN,KAAA,CAAK8I,MAAM,CAACpS,KAAK,CAAC,GAAGsJ,KAAA,CAAK8I,MAAM,CAACpS,KAAK,CAAC;IAElGsJ,KAAA,CAAKlK,QAAQ,GAAG3C,uBAAiB,CAAA6M,KAAA,EAAOA,KAAA,CAAKnL,MAAM,EAAE,KAAK,CAAC;IAC3D,IAAME,MAAM,GAAGiL,KAAA,CAAKjL,MAAM,IAAInB,eAAe,CAACoM,KAAA,CAAKvT,CAAC,EAAEuT,KAAA,CAAKva,CAAC,EAAEslB,OAAO,EAAEC,OAAO,CAAC;IAC/E,IAAMtf,MAAM,GAAG,IAAI7C,qBAAQ,CAAC,CAAC;IAC7B6C,MAAM,CAACuf,IAAI,CAAC,CAAC,EAAE,CAAC,EAAEjL,KAAA,CAAK1W,IAAI,EAAE,CAAC,CAAC;IAC/BoC,MAAM,CAACgE,IAAI,CAAC9L,WAAW,CAAC;IACxB8H,MAAM,CAACwf,QAAQ,GAAG7W,gBAAgB,CAACU,MAAM,CAAC;IAC1CrJ,MAAM,CAACqC,KAAK,GAAG,QAAQ;IACvBrC,MAAM,CAACib,SAAS,GAAG,KAAK;IACxBjb,MAAM,CAAC+a,SAAS,GAAG,MAAM;IACzB/a,MAAM,CAACgb,UAAU,GAAG,KAAK;IACzBhb,MAAM,CAAC2b,WAAW,GAAG,IAAI;IACzBrH,KAAA,CAAK+I,QAAQ,CAACrd,MAAM,CAAC;IAErB,IAAMyf,QAAQ,GAAGC,WAAW,CAAC,YAAM;MACjC,IAAI/X,oBAAc,CAAC2M,KAAA,CAAKvT,CAAC,EAAEuT,KAAA,CAAKva,CAAC,EAAEslB,OAAO,EAAEC,OAAO,CAAC,IAAI1Z,IAAI,CAACwB,GAAG,CAACkN,KAAA,CAAKzK,KAAK,EAAEyK,KAAA,CAAK1W,IAAI,CAAC,EAAE;QACvF,IACE+J,oBAAc,CAAC0X,OAAO,EAAEC,OAAO,EAAEhL,KAAA,CAAKnL,MAAM,CAACpI,CAAC,EAAEuT,KAAA,CAAKnL,MAAM,CAACpP,CAAC,CAAC,IAC9DqM,OAAO,CAACkO,KAAA,CAAKnL,MAAM,CAAC1I,KAAK,EAAE6T,KAAA,CAAKnL,MAAM,CAACzI,MAAM,CAAC,EAC9C;UACA4T,KAAA,CAAKqL,KAAK,CAACrL,KAAA,CAAKnL,MAAM,CAAC;QACzB;QACAyW,aAAa,CAACH,QAAQ,CAAC;QACvBnL,KAAA,CAAKoJ,GAAG,CAAC,CAAC;QACV;MACF;MACA9T,eAAe,CAAA0K,KAAA,EAAO+K,OAAO,EAAEC,OAAO,EAAEhL,KAAA,CAAKzK,KAAK,CAAC;IACrD,CAAC,EAAEjT,SAAS,CAAC;IAAA,OAAA0d,KAAA;EACf;EAACgJ,mBAAA,CAAA4B,UAAA,EAAA7E,UAAA;EAAA,OAAAkD,sBAAA,CAAA2B,UAAA;IAAA5L,GAAA;IAAA5Y,KAAA,EAED,SAAAilB,KAAKA,CAACxd,QAAQ,EAAE;MACd,IAAAwb,aAAA,GAEI,IAAI,CADNva,OAAO;QAAI0Y,IAAI,GAAA6B,aAAA,CAAJ7B,IAAI;QAAEvX,MAAM,GAAAoZ,aAAA,CAANpZ,MAAM;MAEzBpC,QAAQ,CAACgN,SAAS,GAAG8H,sBAAsB,CAAC,IAAI,CAACjZ,KAAK,EAAEmE,QAAQ,EAAE,IAAI,CAACgV,MAAM,CAAC;MAC9E,IAAIhV,QAAQ,CAACwY,QAAQ,IAAIpW,MAAM,CAAC4X,aAAa,KAAKha,QAAQ,EAAE;QAC1D2Z,IAAI,CAAC+D,UAAU,CAAC,WAAW,EAAE1d,QAAQ,CAACgN,SAAS,GAAG,GAAG,GAAGhN,QAAQ,CAACsX,cAAc,CAAC;MAClF;MACA,IAAItX,QAAQ,CAACgN,SAAS,IAAI,CAAC,EAAE;QAC3BhN,QAAQ,CAACub,GAAG,CAAC,CAAC;MAChB,CAAC,MAAM;QACL,OAAOvb,QAAQ,CAAC2d,UAAU,KAAK,UAAU,IAAI3d,QAAQ,CAAC2d,UAAU,CAAC,IAAI,CAAC9hB,KAAK,CAAC;MAC9E;IACF;EAAC;IAAAsV,GAAA;IAAA5Y,KAAA,EAED,SAAAgjB,GAAGA,CAAA,EAAG;MACJ,IAAI,CAAC9E,MAAM,GAAG,IAAI;MAClB,IAAI,CAAC0F,OAAO,CAAC;QAAEC,KAAK,EAAE,IAAI;QAAEvf,OAAO,EAAE;MAAK,CAAC,CAAC;IAC9C;EAAC;AAAA,EAtE6B+a,sBAAS,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdN;AAC0C;AACO;AAyBrE;AAC0B;AACR;AAE1B,IAAMgG,QAAQ,0BAAA1F,UAAA;EACnB,SAAA0F,SAAYzF,OAAO,EAAElX,OAAO,EAAE;IAAA,IAAAmX,cAAA,EAAAC,eAAA;IAAA,IAAAlG,KAAA;IAAAmG,uBAAA,OAAAsF,QAAA;IAC5BzL,KAAA,GAAAoG,kBAAA,OAAAqF,QAAA;IAEAzL,KAAA,CAAKlR,OAAO,GAAGA,OAAO;IAEtB,IAAQhC,GAAG,GAAegC,OAAO,CAAzBhC,GAAG;MAAE2M,QAAQ,GAAK3K,OAAO,CAApB2K,QAAQ;IAErBuG,KAAA,CAAKjS,KAAK,GAAG6C,MAAM,CAAC,CAAC;IACrBoP,KAAA,CAAKpF,MAAM,GAAG,UAAU;IACxBoF,KAAA,CAAKqG,QAAQ,GAAG,KAAK;IACrBrG,KAAA,CAAK0L,KAAK,GAAG,EAAE;IACf1L,KAAA,CAAK2L,UAAU,GAAG,IAAI;IACtB3L,KAAA,CAAKkE,OAAO,GAAG,IAAI;IACnBlE,KAAA,CAAKsE,MAAM,GAAG,KAAK;IACnBtE,KAAA,CAAK3K,WAAW,GAAG,KAAK;IACxB2K,KAAA,CAAKY,OAAO;IACZZ,KAAA,CAAK6E,QAAQ,GAAG,IAAI;IAEpBzf,MAAM,CAACkL,IAAI,CAAC0V,OAAO,CAAC,CAACzV,OAAO,CAAC,UAAAC,IAAI,EAAI;MACnCwP,KAAA,CAAKxP,IAAI,CAAC,GAAGwV,OAAO,CAACxV,IAAI,CAAC;IAC5B,CAAC,CAAC;IACFpL,MAAM,CAACkL,IAAI,CAAC0P,KAAA,CAAKtW,KAAK,CAAC4c,MAAM,CAACrc,SAAS,CAAC+V,KAAA,CAAKvW,IAAI,CAAC,CAAC,CAAC8G,OAAO,CAAC,UAAAC,IAAI,EAAI;MAClEwP,KAAA,CAAKxP,IAAI,CAAC,GAAGwP,KAAA,CAAKtW,KAAK,CAAC4c,MAAM,CAACrc,SAAS,CAAC+V,KAAA,CAAKvW,IAAI,CAAC,CAAC+G,IAAI,CAAC;IAC3D,CAAC,CAAC;IAEFwP,KAAA,CAAKmL,QAAQ;IACbnL,KAAA,CAAK4L,cAAc;IAEnB,IAAI5L,KAAA,CAAK0L,KAAK,CAAC3lB,MAAM,EAAE;MACrBia,KAAA,CAAK6L,OAAO,CAAC7L,KAAA,CAAK0L,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;IACzC,CAAC,MAAM,IAAI1L,KAAA,CAAK2L,UAAU,EAAE;MAC1B3L,KAAA,CAAK8L,aAAa,CAAC9L,KAAA,CAAK2L,UAAU,CAACliB,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IACtD;IAEAuW,KAAA,CAAKvF,QAAQ,IAAAwL,cAAA,GAAGjG,KAAA,CAAKvF,QAAQ,cAAAwL,cAAA,cAAAA,cAAA,GAAIjG,KAAA,CAAKwG,aAAa;IACnDxG,KAAA,CAAKnF,SAAS,IAAAqL,eAAA,GAAGlG,KAAA,CAAKnF,SAAS,cAAAqL,eAAA,cAAAA,eAAA,GAAKlG,KAAA,CAAKmE,OAAO,GAAGnE,KAAA,CAAKmF,cAAc,GAAG,CAAE;IAE3EnF,KAAA,CAAKvT,CAAC,GAAGK,GAAG,CAAC6I,IAAI,CAACqK,KAAA,CAAKjb,CAAC,CAAC,CAACib,KAAA,CAAK1M,CAAC,CAAC,CAAC7G,CAAC;IACnCuT,KAAA,CAAKva,CAAC,GAAGqH,GAAG,CAAC6I,IAAI,CAACqK,KAAA,CAAKjb,CAAC,CAAC,CAACib,KAAA,CAAK1M,CAAC,CAAC,CAAC7N,CAAC;IACnCua,KAAA,CAAKvM,CAAC,GAAG3G,GAAG,CAAC6I,IAAI,CAACqK,KAAA,CAAKjb,CAAC,CAAC,CAACib,KAAA,CAAK1M,CAAC,CAAC,CAACG,CAAC;IACnCuM,KAAA,CAAKhS,MAAM,GAAGuF,iBAAiB,CAAAyM,KAAK,CAAC;IACrCA,KAAA,CAAKlG,OAAO,GAAGhN,GAAG,CAAC4M,gBAAgB,IAAID,QAAQ,CAACG,gBAAgB,CAAAoG,KAAK,CAAC,GAAG,IAAI,GAAG,KAAK;IACrF,IAAI+L,WAAW,GAAG1iB,8BAA8B,CAAC2W,KAAA,CAAK1W,IAAI,CAAC;IAC3D,IAAI0W,KAAA,CAAKvW,IAAI,KAAK,OAAO,IAAIuW,KAAA,CAAKtW,KAAK,CAACQ,GAAG,KAAK,CAAC,EAAE;MACjD6hB,WAAW,GAAG,SAAS;IACzB,CAAC,MAAM,IAAI/L,KAAA,CAAKvW,IAAI,KAAK,MAAM,EAAE;MAC/BsiB,WAAW,GAAG,SAAS;IACzB;IACA,IAAMrhB,OAAO,GAAGP,UAAU,CAAC4hB,WAAW,EAAEpG,kBAAM,CAAC;IAC/C3F,KAAA,CAAKtU,MAAM,GAAGga,mBAAM,CAACld,IAAI,CAACkC,OAAO,CAAC;IAClCsV,KAAA,CAAKtU,MAAM,CAAC0b,YAAY,GAAG,IAAI;IAC/BpH,KAAA,CAAKtU,MAAM,CAACqC,KAAK,GAAG,QAAQ;IAC5BiS,KAAA,CAAKtU,MAAM,CAACf,OAAO,GAAGD,OAAO,CAACC,OAAO,GACjC,IAAIib,mBAAO,CAAClb,OAAO,CAACC,OAAO,CAAC,GAC5B,IAAIib,mBAAO,CAAC,CAAC,CAAC,EAAE,GAAG5F,KAAA,CAAK1W,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG0W,KAAA,CAAK1W,IAAI,EAAE,EAAE,GAAG0W,KAAA,CAAK1W,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG0W,KAAA,CAAK1W,IAAI,CAAC,CAAC;IAC/F,IAAMsf,KAAK,GAAG,CAAC5I,KAAA,CAAK4I,KAAK,IAAI,EAAE,EAAE9b,GAAG,CAAC,UAAAkS,GAAG;MAAA,OAAIlQ,OAAO,CAAC0Y,IAAI,CAACwE,aAAa,CAAChN,GAAG,CAAC;IAAA,EAAC;IAC5E,IAAMiN,YAAY,GAAG,CAACjM,KAAA,CAAKiM,YAAY,IAAI,EAAE,EAAEnf,GAAG,CAAC,UAAAkS,GAAG;MAAA,OAAIlQ,OAAO,CAAC0Y,IAAI,CAAC0E,mBAAmB,CAAClN,GAAG,CAAC;IAAA,EAAC;IAChGgB,KAAA,aAAc,GAAG;MACf4G,IAAI,EAAE,SAANA,IAAIA,CAAEC,OAAO,EAAI;QACf,IAAMld,MAAM,GAAGH,gBAAgB,CAACwW,KAAA,CAAKvW,IAAI,EAAEuW,KAAA,CAAKtW,KAAK,EAAEic,kBAAM,CAAC;QAC9D3F,KAAA,CAAK8G,mBAAmB,CAACD,OAAO,EAAEld,MAAM,CAAC;QACzC,IAAIqW,KAAA,CAAKmM,iBAAiB,IAAInM,KAAA,CAAKtW,KAAK,CAACmQ,QAAQ,IAAImG,KAAA,CAAKmE,OAAO,EAAE;UACjE,IAAMiI,aAAa,GAAGngB,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;UACnDkgB,aAAa,CAACnjB,EAAE,GAAG,YAAY;UAE/B,IAAMojB,cAAc,GAAGpgB,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;UACpD,IAAMogB,cAAc,GAAGrgB,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;UACrDogB,cAAc,CAACrjB,EAAE,GAAG,iBAAiB;UACrCqjB,cAAc,CAACnC,WAAW,GAAGnK,KAAA,CAAKtW,KAAK,CAAC6iB,UAAU,GAAG,GAAG,GAAGjb,IAAI,CAACuB,GAAG,CAACvO,cAAc,EAAE0b,KAAA,CAAKtW,KAAK,CAACpF,cAAc,CAAC;UAE9G+nB,cAAc,CAACzX,GAAG,GAAG5L,WAAW,CAAC,WAAW,CAAC;UAC7CojB,aAAa,CAAC3M,WAAW,CAAC4M,cAAc,CAAC;UACzCD,aAAa,CAAC3M,WAAW,CAAC6M,cAAc,CAAC;UACzCzF,OAAO,CAACpH,WAAW,CAAC2M,aAAa,CAAC;QACpC;QACAvF,OAAO,CAACpH,WAAW,CAACO,KAAA,CAAKwM,iBAAiB,CAAC,CAAC,CAAC;MAC/C,CAAC;MACDhF,IAAI,EAAExH,KAAA,CAAKtW,KAAK,CAACmQ,QAAQ,IAAI/M,GAAG,CAAC2f,OAAO,MAAArjB,MAAA,CAAAiP,0BAAA,CAAOuQ,KAAK,GAAAvQ,0BAAA,CAAK4T,YAAY,KAAI;IAC3E,CAAC;;IAED;IACA,IAAM1Z,IAAI,GAAGyN,KAAA,CAAK1W,IAAI,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC;IACpCqP,wBAAwB,CAACqH,KAAA,CAAKjb,CAAC,EAAEib,KAAA,CAAK1M,CAAC,EAAExG,GAAG,CAAC6I,IAAI,EAAEpD,IAAI,EAAE,UAAA4D,IAAI,EAAI;MAC/D,IAAMiI,GAAG,GAAGjI,IAAI,CAACgT,eAAe,CAAC,KAAK,CAAC;MACvC,IAAI/K,GAAG,EAAE;QACPjI,IAAI,CAACvH,WAAW,CAACwP,GAAG,CAAC;MACvB;MACA,KAAK,IAAIrZ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGoR,IAAI,CAAC2T,OAAO,CAAC/jB,MAAM,EAAEhB,CAAC,EAAE,EAAE;QAC5C,OAAOoR,IAAI,CAAC2T,OAAO,CAAC/kB,CAAC,CAAC,CAAC4kB,KAAK,KAAK,UAAU,IAAIxT,IAAI,CAAC2T,OAAO,CAAC/kB,CAAC,CAAC,CAAC4kB,KAAK,CAAC,CAAC;MACxE;MACAxT,IAAI,CAACjJ,GAAG,GAAA8S,KAAO;MACf7J,IAAI,CAACa,KAAK,GAAG,IAAI;MACjBgJ,KAAA,CAAKtW,KAAK,CAACqQ,KAAK,CAAC5D,IAAI,CAACpR,CAAC,CAAC,CAACoR,IAAI,CAAC7C,CAAC,CAAC,CAAC6G,MAAM,CAACxR,IAAI,CAAAqX,KAAK,CAAC;MAClD,IAAIA,KAAA,CAAKtW,KAAK,CAACmQ,QAAQ,IAAI,CAAC/M,GAAG,CAAC4M,gBAAgB,EAAE;QAChDvD,IAAI,CAACoE,SAAS,CAAC,CAAC;MAClB;IACF,CAAC,CAAC;IAEFyF,KAAA,CAAK2G,SAAS,GAAG,KAAK;IACtB,IAAI3G,KAAA,CAAKtU,MAAM,EAAE;MACfsU,KAAA,CAAKtU,MAAM,CAACib,SAAS,GAAG,KAAK;MAC7B3G,KAAA,CAAKtU,MAAM,CAAC+a,SAAS,GAAG,QAAQ;MAChCzG,KAAA,CAAKtU,MAAM,CAAC2b,WAAW,GAAG,IAAI;MAE9BrH,KAAA,CAAKtU,MAAM,CAAC4b,EAAE,CAAC,YAAY,EAAE,UAAAQ,GAAG,EAAI;QAClC,IAAAhH,MAAA,GAAAd,KAAA;UAAA0M,cAAA,GAAA5L,MAAA,CACEhS,OAAO;UAAI2K,QAAQ,GAAAiT,cAAA,CAARjT,QAAQ;UAAExJ,MAAM,GAAAyc,cAAA,CAANzc,MAAM;UAAEuX,IAAI,GAAAkF,cAAA,CAAJlF,IAAI;QAEnC,IAAI/N,QAAQ,CAACwO,aAAa,IAAIxO,QAAQ,CAACyO,cAAc,IAAI,CAACzO,QAAQ,CAAC0O,YAAY,CAACL,GAAG,CAAC,EAAE;UACpF;QACF;QACA,IAAI6E,eAAe,GAAG,KAAK;QAC3B,IAAIC,YAAY,GAAG,KAAK;QACxBnT,QAAQ,CAAC2O,KAAK,CAACC,OAAO,GAAG,IAAI;QAC7B,IAAIrI,KAAA,CAAKtW,KAAK,CAACmQ,QAAQ,EAAE;UACvB;UACA,IAAI,CAACmG,KAAA,CAAKmE,OAAO,EAAE;YACjB,KAAK,IAAIpf,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkL,MAAM,CAACwX,aAAa,CAAC1hB,MAAM,EAAEhB,CAAC,EAAE,EAAE;cACpD,IAAMyjB,IAAI,GAAGvY,MAAM,CAACwX,aAAa,CAAC1iB,CAAC,CAAC;cACpC,IAAIyjB,IAAI,CAAC/e,IAAI,KAAK,UAAU,EAAE;gBAC5B,IAAIoa,wBAAkB,CAAC2E,IAAI,EAAAxI,KAAA,EAAQ,OAAO,CAAC,EAAE;kBAC3C2M,eAAe,GAAG,IAAI;kBACtBnE,IAAI,CAACqE,cAAc,CAAA7M,KAAK,CAAC;gBAC3B;cACF,CAAC,MAAM;gBACLwI,IAAI,CAACE,MAAM,CAAA1I,KAAK,CAAC;gBACjB4M,YAAY,GAAG,IAAI;cACrB;YACF;YACA,IAAID,eAAe,EAAE;cACnB/e,6BAA6B,CAAAoS,KAAK,CAAC;YACrC;YACA,IAAI4M,YAAY,EAAE;cAChB,IAAMjE,KAAK,GAAG3V,UAAU,CAAC,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;cAC1DwS,uBAAK,CAAC5G,IAAI,CAAC+J,KAAK,CAAC;cACjB;YACF,CAAC,MAAM,IAAIgE,eAAe,EAAE;cAC1B,IAAMhE,MAAK,GAAGhD,kBAAM,CAAC9b,KAAK,CAACC,GAAG,CAAC,QAAQ,CAAC,CAAC8e,KAAK,CAACC,QAAQ,CAACC,MAAM,CAAC7D,KAAK;cACpEO,uBAAK,CAAC5G,IAAI,CAAC+J,MAAK,CAAC;cACjB;YACF;UACF,CAAC,MAAM,IAAI1Y,MAAM,CAACwX,aAAa,EAAE;YAC/B;YACA,KAAK,IAAI1iB,EAAC,GAAG,CAAC,EAAEA,EAAC,GAAGkL,MAAM,CAACwX,aAAa,CAAC1hB,MAAM,EAAEhB,EAAC,EAAE,EAAE;cACpD,IAAMyjB,KAAI,GAAGvY,MAAM,CAACwX,aAAa,CAAC1iB,EAAC,CAAC;cACpC,IAAM+nB,MAAM,GACVtE,KAAI,CAACtR,QAAQ,KAAK,MAAM,GACpB8I,KAAA,CAAKvW,IAAI,KAAK,MAAM,GACpBuW,KAAA,CAAKvW,IAAI,KAAK,YAAY,IAAKuW,KAAA,CAAK8M,MAAM,IAAI9M,KAAA,CAAK8M,MAAM,CAAC7U,QAAQ,CAACuQ,KAAI,CAAC/G,WAAW,CAAE;cAC3F,IAAI+G,KAAI,CAAC/e,IAAI,KAAK,UAAU,IAAIoa,wBAAkB,CAAC2E,KAAI,EAAAxI,KAAA,EAAQ,OAAO,CAAC,EAAE;gBACvE2M,eAAe,GAAG,IAAI;gBACtBnE,KAAI,CAACuE,YAAY,GAAG,IAAI;gBACxBvE,KAAI,CAACqE,cAAc,CAAA7M,KAAK,CAAC;cAC3B,CAAC,MAAM,IAAIwI,KAAI,CAAC/e,IAAI,KAAK,UAAU,IAAIoa,wBAAkB,CAAC2E,KAAI,EAAAxI,KAAA,EAAQ,MAAM,CAAC,EAAE;gBAC7E2M,eAAe,GAAG,IAAI;gBACtBnE,KAAI,CAACwE,UAAU,CAAAhN,KAAK,CAAC;cACvB,CAAC,MAAM,IAAI8M,MAAM,IAAIjJ,wBAAkB,CAAC2E,KAAI,EAAAxI,KAAA,EAAQ,UAAU,EAAE;gBAAEoE,aAAa,EAAE,CAACpE,KAAA,CAAKvW,IAAI;cAAE,CAAC,CAAC,EAAE;gBAC/FkjB,eAAe,GAAG,IAAI;gBACtBnE,KAAI,CAACuE,YAAY,GAAG,IAAI;gBACxBvE,KAAI,CAACE,MAAM,CAAA1I,KAAA,EAAO,UAAU,CAAC;cAC/B;YACF;YACA,IAAI2M,eAAe,EAAE;cACnB/e,6BAA6B,CAAAoS,KAAK,CAAC;YACrC;YACA,IAAI2M,eAAe,EAAE;cACnB,IAAMhE,OAAK,GAAGhD,kBAAM,CAAC9b,KAAK,CAACC,GAAG,CAAC,QAAQ,CAAC,CAAC8e,KAAK,CAACC,QAAQ,CAACC,MAAM,CAAC7D,KAAK;cACpEO,uBAAK,CAAC5G,IAAI,CAAC+J,OAAK,CAAC;cACjB;YACF;UACF;UACA,IAAI3I,KAAA,CAAKtW,KAAK,CAACujB,gBAAgB,KAAAjN,KAAS,EAAE;YACxCA,KAAA,CAAKtW,KAAK,CAACge,WAAW,CAAC,CAAC;YACxB1H,KAAA,CAAK2H,MAAM,CAAC,CAAC;YACbH,IAAI,CAACI,YAAY,CAAA5H,KAAK,CAAC;YACvBA,KAAA,CAAKtW,KAAK,CAACujB,gBAAgB,GAAAjN,KAAO;UACpC;QACF,CAAC,MAAM,IAAI/P,MAAM,CAACwX,aAAa,CAAC1hB,MAAM,EAAE;UACtC6H,6BAA6B,CAAAoS,KAAK,CAAC;UACnC,KAAK,IAAIjb,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAGkL,MAAM,CAACwX,aAAa,CAAC1hB,MAAM,EAAEhB,GAAC,EAAE,EAAE;YACpD,IAAMmoB,UAAU,GAAGjd,MAAM,CAACwX,aAAa,CAAC1iB,GAAC,CAAC;YAC1C,IAAImoB,UAAU,CAACzjB,IAAI,KAAK,UAAU,EAAE;cAClCyjB,UAAU,CAACC,YAAY,CAAAnN,KAAK,CAAC;YAC/B,CAAC,MAAM;cACLkN,UAAU,CAACxE,MAAM,CAAA1I,KAAA,EAAO,QAAQ,CAAC;YACnC;UACF;QACF,CAAC,MAAM,IAAIrG,uBAAuB,CAAAqG,KAAA,EAAO/P,MAAM,CAAC,IAAInD,GAAG,CAAC4M,gBAAgB,EAAE;UACxEzJ,MAAM,CAACyX,WAAW,CAAC,CAAC;UACpB1H,KAAA,CAAK2H,MAAM,CAAC,CAAC;UACbH,IAAI,CAACI,YAAY,CAAA5H,KAAK,CAAC;UACvB/P,MAAM,CAAC4X,aAAa,GAAA7H,KAAO;QAC7B;MACF,CAAC,CAAC;MAEFA,KAAA,CAAK+I,QAAQ,CAAC/I,KAAA,CAAKtU,MAAM,CAAC;IAC5B;IAEA,IAAIsU,KAAA,CAAKmE,OAAO,EAAE;MAChB5K,yBAAyB,CAAAyG,KAAK,CAAC;MAC/BA,KAAA,CAAKoN,YAAY,CAAC,CAAC;MACnBpN,KAAA,CAAKqN,OAAO,CAAC,CAAC;IAChB;IAAC,OAAArN,KAAA;EACH;EAACgJ,iBAAA,CAAAyC,QAAA,EAAA1F,UAAA;EAAA,OAAAkD,oBAAA,CAAAwC,QAAA;IAAAzM,GAAA;IAAA5Y,KAAA,EAED,SAAAknB,YAAYA,CAACzY,MAAM,EAAE;MAAA,IAAAwM,MAAA;MACnB,IACavU,GAAG,GACZ,IAAI,CADNgC,OAAO,CAAIhC,GAAG;MAGhB,IAAI,CAACygB,mBAAmB,CAAC,YAAM;QAC7B,IAAI1J,wBAAkB,CAACxC,MAAI,EAAExM,MAAM,EAAE,QAAQ,CAAC,IAAI1B,uBAAiB,CAACkO,MAAI,EAAExM,MAAM,CAAC,IAAIwM,MAAI,CAACmM,KAAK,EAAE;UAC/F,IAAI3Y,MAAM,CAACgG,SAAS,IAAI,CAAC,EAAE;YACzBhG,MAAM,CAACuU,GAAG,CAAC,CAAC;UACd,CAAC,MAAM;YACL,IAAMqE,UAAU,GAAG,IAAI7C,UAAU,CAC/B;cACElhB,KAAK,EAAE2X,MAAI;cACX5X,IAAI,EAAE4X,MAAI,CAACoM,UAAU;cACrB5Y,MAAM,EAANA;YACF,CAAC,EACDwM,MAAI,CAACvS,OACP,CAAC;YACDhC,GAAG,CAACic,QAAQ,CAAC0E,UAAU,CAAC;UAC1B;QACF,CAAC,MAAM;UACLpM,MAAI,CAACqM,kBAAkB,CAAC,CAAC;QAC3B;MACF,CAAC,EAAE,IAAI,CAACC,UAAU,CAAC;IACrB;EAAC;IAAA3O,GAAA;IAAA5Y,KAAA,EAED,SAAAwnB,aAAaA,CAACrR,QAAQ,EAAEsR,IAAI,EAAE;MAAA,IAAA9F,MAAA;MAC5B,IAAM+F,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;QACpB,IAAQhQ,MAAM,GAAKiK,MAAI,CAACjZ,OAAO,CAAvBgP,MAAM;QACd,IAAIA,MAAM,EAAE;UACV;QACF;QACAvB,QAAQ,CAAC,CAAC;MACZ,CAAC;MACD,IAAI,CAACwR,YAAY,CAAC,CAAC;MACnB,IAAI,CAAC5C,QAAQ,GAAGC,WAAW,CAAC0C,OAAO,EAAGD,IAAI,GAAG,IAAI,GAAI,GAAG,GAAGxrB,WAAW,CAAC;IACzE;EAAC;IAAA2c,GAAA;IAAA5Y,KAAA,EAED,SAAA2nB,YAAYA,CAAA,EAAG;MACb,IAAI,IAAI,CAAC5C,QAAQ,EAAE;QACjBG,aAAa,CAAC,IAAI,CAACH,QAAQ,CAAC;QAC5B,IAAI,CAACA,QAAQ,GAAG,IAAI;MACtB;IACF;EAAC;IAAAnM,GAAA;IAAA5Y,KAAA,EAED,SAAAmnB,mBAAmBA,CAAChR,QAAQ,EAAEsR,IAAI,EAAE;MAAA,IAAAG,MAAA;MAClC,IAAMF,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;QACpB,IAAQhQ,MAAM,GAAKkQ,MAAI,CAAClf,OAAO,CAAvBgP,MAAM;QACd,IAAIA,MAAM,EAAE;UACV;QACF;QACAvB,QAAQ,CAAC,CAAC;MACZ,CAAC;MACD,IAAI,CAACmR,kBAAkB,CAAC,CAAC;MACzBI,OAAO,CAAC,CAAC;MACT,IAAI,CAAClC,cAAc,GAAGR,WAAW,CAAC0C,OAAO,EAAED,IAAI,GAAG,IAAI,CAAC;IACzD;EAAC;IAAA7O,GAAA;IAAA5Y,KAAA,EAED,SAAAsnB,kBAAkBA,CAAA,EAAG;MACnB,IAAI,IAAI,CAAC9B,cAAc,EAAE;QACvBN,aAAa,CAAC,IAAI,CAACM,cAAc,CAAC;QAClC,IAAI,CAACA,cAAc,GAAG,IAAI;MAC5B;IACF;EAAC;IAAA5M,GAAA;IAAA5Y,KAAA,EAED,SAAA+Z,KAAKA,CAAA,EAAG;MAAA,IAAA8N,aAAA;MACN,CAAAA,aAAA,OAAI,CAACrN,OAAO,cAAAqN,aAAA,eAAZA,aAAA,CAAc9N,KAAK,CAAC,CAAC;IACvB;EAAC;IAAAnB,GAAA;IAAA5Y,KAAA,EAED,SAAAma,MAAMA,CAAA,EAAG;MAAA,IAAA2N,cAAA;MACP,CAAAA,cAAA,OAAI,CAACtN,OAAO,cAAAsN,cAAA,eAAZA,cAAA,CAAc3N,MAAM,CAAC,CAAC;IACxB;EAAC;IAAAvB,GAAA;IAAA5Y,KAAA,EAED,SAAA+nB,YAAYA,CAACte,EAAE,EAAEge,IAAI,EAAE;MACrB,IAAI,CAACO,WAAW,CAAC,CAAC;MAClB,IAAI,CAACxN,OAAO,GAAG,IAAId,aAAa,CAAC;QAAA,OAAMjQ,EAAE,CAAC,CAAC;MAAA,GAAGge,IAAI,GAAG,IAAI,GAAIxrB,WAAW,CAAC;IAC3E;EAAC;IAAA2c,GAAA;IAAA5Y,KAAA,EAED,SAAAgoB,WAAWA,CAAA,EAAG;MACZ,IAAI,IAAI,CAACxN,OAAO,EAAE;QAChB0K,aAAa,CAAC,IAAI,CAAC1K,OAAO,CAAC;QAC3B,IAAI,CAACA,OAAO,GAAG,IAAI;MACrB;IACF;EAAC;IAAA5B,GAAA;IAAA5Y,KAAA,EAED,SAAAolB,UAAUA,CAAC3d,QAAQ,EAAE;MACnB,IAAI,IAAI,CAACyW,MAAM,EAAE;QACf;MACF;MACA,IAAI,IAAI,CAACkJ,KAAK,IAAI3J,wBAAkB,CAAC,IAAI,EAAEhW,QAAQ,EAAE,QAAQ,CAAC,IAAIsF,uBAAiB,CAAC,IAAI,EAAEtF,QAAQ,CAAC,IAAI,IAAI,CAAC2f,KAAK,EAAE;QACjH,IAAI,CAACF,YAAY,CAACzf,QAAQ,CAAC;MAC7B;MACA,IAAI,CAACwgB,eAAe,CAAC,QAAQ,CAAC;IAChC;EAAC;IAAArP,GAAA;IAAA5Y,KAAA,EAED,SAAAkoB,aAAaA,CAAA,EAAG;MACd,IACa9G,IAAI,GACb,IAAI,CADN1Y,OAAO,CAAI0Y,IAAI;MAEjB,IAAM+G,UAAU,GAAG7c,mBAAa,CAAC,IAAI,CAACmJ,SAAS,EAAE,IAAI,CAACsK,cAAc,CAAC;MACrE,IAAMqJ,kBAAkB,GAAG,IAAI,CAAC9iB,MAAM,CAAChB,OAAO,CAACqD,KAAK,CAAC7E,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACA,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAChF,IAAMulB,gBAAgB,GAAG9I,kBAAM,CAAC9b,KAAK,CAACC,GAAG,CAAC0kB,kBAAkB,CAAC;MAE7D,IAAID,UAAU,IAAI,EAAE,IAAIA,UAAU,GAAG,EAAE,EAAE;QACvC,IAAM9jB,WAAW,UAAArB,MAAA,CAAUolB,kBAAkB,SAAM;QACnD,IAAI,CAAC9iB,MAAM,CAAChB,OAAO,GAAG+jB,gBAAgB,CAAClkB,QAAQ,CAACE,WAAW,CAAC;MAC9D,CAAC,MAAM,IAAI8jB,UAAU,IAAI,EAAE,IAAIA,UAAU,GAAG,EAAE,EAAE;QAC9C,IAAM9jB,YAAW,UAAArB,MAAA,CAAUolB,kBAAkB,SAAM;QACnD,IAAI,CAAC9iB,MAAM,CAAChB,OAAO,GAAG+jB,gBAAgB,CAAClkB,QAAQ,CAACE,YAAW,CAAC;MAC9D,CAAC,MAAM,IAAI8jB,UAAU,IAAI,EAAE,IAAIA,UAAU,GAAG,EAAE,EAAE;QAC9C,IAAM9jB,aAAW,UAAArB,MAAA,CAAUolB,kBAAkB,SAAM;QACnD,IAAI,CAAC9iB,MAAM,CAAChB,OAAO,GAAG+jB,gBAAgB,CAAClkB,QAAQ,CAACE,aAAW,CAAC;MAC9D,CAAC,MAAM,IAAI8jB,UAAU,IAAI,GAAG,EAAE;QAC5B,IAAI,CAACnB,YAAY,CAAC,CAAC;QACnB,IAAI,CAAC,IAAI,CAACjJ,OAAO,EAAE;UACjB,IAAI,IAAI,CAACza,KAAK,CAACmQ,QAAQ,IAAI,IAAI,CAACiP,MAAM,IAAI,IAAI,CAACA,MAAM,CAACzjB,MAAM,EAAE;YAC5DmgB,uBAAK,CAAC5G,IAAI,CAAC,IAAI,CAACkK,MAAM,CAACzjB,MAAM,CAAC;UAChC;UACA,IAAI,CAACgoB,OAAO,CAAC,CAAC;QAChB;QACA,IAAI,CAAClJ,OAAO,GAAG,IAAI;QACnB,IAAI,CAAC,IAAI,CAACza,KAAK,CAACglB,QAAQ,CAACzW,QAAQ,CAAC,IAAI,CAACxO,IAAI,CAAC,EAAE;UAC5C,IAAI,CAACC,KAAK,CAACglB,QAAQ,CAAC/lB,IAAI,CAAC,IAAI,CAACc,IAAI,CAAC;QACrC;QACA,IAAI,IAAI,CAACC,KAAK,CAACmQ,QAAQ,IAAI,IAAI,CAACwM,QAAQ,EAAE;UACxCmB,IAAI,CAACI,YAAY,CAAC,IAAI,CAAC;QACzB;QACArO,yBAAyB,CAAC,IAAI,CAAC;MACjC;IACF;EAAC;IAAAyF,GAAA;IAAA5Y,KAAA,EAED,SAAAinB,OAAOA,CAAA,EAAG;MACR,IACa7F,IAAI,GACb,IAAI,CADN1Y,OAAO,CAAI0Y,IAAI;MAEjB,IAAI,IAAI,CAACmH,kBAAkB,EAAE;QAC3B;QACA,IAAI,CAACjlB,KAAK,CAACpF,cAAc,IAAI,IAAI,CAACqqB,kBAAkB;QACpD;QACA,IAAI,IAAI,CAACjlB,KAAK,CAACmQ,QAAQ,IAAI,IAAI,CAACnQ,KAAK,CAACujB,gBAAgB,IAAI,IAAI,CAACvjB,KAAK,CAACujB,gBAAgB,CAACd,iBAAiB,EAAE;UACvG3E,IAAI,CAAC+D,UAAU,CACb,iBAAiB,EACjB,IAAI,CAAC7hB,KAAK,CAAC6iB,UAAU,GAAG,GAAG,GAAGjb,IAAI,CAACuB,GAAG,CAACvO,cAAc,EAAE,IAAI,CAACoF,KAAK,CAACpF,cAAc,CAClF,CAAC;QACH;MACF;MACA,IAAI,IAAI,CAACoF,KAAK,CAACmQ,QAAQ,IAAI,IAAI,CAACwM,QAAQ,EAAE;QACxCmB,IAAI,CAACI,YAAY,CAAC,IAAI,CAAC;MACzB;IACF;EAAC;IAAA5I,GAAA;IAAA5Y,KAAA,EAED,SAAAgnB,YAAYA,CAAA,EAAG;MACb,IAAMzjB,MAAM,GAAGH,gBAAgB,CAAC,IAAI,CAACC,IAAI,EAAE,IAAI,CAACC,KAAK,EAAEic,kBAAM,CAAC;MAE9D,IAAMjb,OAAO,GAAGP,UAAU,CAACR,MAAM,CAACilB,MAAM,SAAM,EAAEjJ,kBAAM,CAAC;MACvD,IAAI,CAACja,MAAM,CAAChB,OAAO,GAAGA,OAAO;MAC7B,IAAI,CAACgB,MAAM,CAACf,OAAO,GAAGD,OAAO,CAACC,OAAO,GACjC,IAAIib,mBAAO,CAAClb,OAAO,CAACC,OAAO,CAAC,GAC5B,IAAIib,mBAAO,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,CAACtc,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAACA,IAAI,EAAE,EAAE,GAAG,IAAI,CAACA,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,IAAI,CAACA,IAAI,CAAC,CAAC;MAC/F,IAAI,CAACoC,MAAM,CAACyS,MAAM,CAACC,GAAG,CAAC1T,OAAO,CAAC2T,aAAa,CAAC5R,CAAC,EAAE/B,OAAO,CAAC2T,aAAa,CAAC5Y,CAAC,CAAC;MAExE,IAAMkG,KAAK,GAAG,IAAI,CAACwd,eAAe,CAAC,OAAO,CAAC;MAC3C,IAAIxd,KAAK,EAAE;QACTA,KAAK,CAACqe,OAAO,CAAC,CAAC;MACjB;MAEA,IAAIrgB,MAAM,CAACilB,MAAM,CAACjjB,KAAK,EAAE;QACvB,IAAMkjB,WAAW,GAAGnJ,mBAAM,CAACld,IAAI,CAAC2B,UAAU,CAACR,MAAM,CAACilB,MAAM,CAACjjB,KAAK,EAAEga,kBAAM,CAAC,CAAC;QACxEkJ,WAAW,CAAC9gB,KAAK,GAAG,OAAO;QAC3BtC,yBAAyB,CAACojB,WAAW,EAAE,IAAI,CAACnlB,KAAK,CAACiC,KAAK,CAAC;QACxD,IAAI,CAACod,QAAQ,CAAC8F,WAAW,CAAC;MAC5B,CAAC,MAAM;QACLpjB,yBAAyB,CAAC,IAAI,CAACC,MAAM,EAAE,IAAI,CAAChC,KAAK,CAACiC,KAAK,CAAC;MAC1D;MAEA,IAAI,IAAI,CAAClC,IAAI,KAAK,OAAO,EAAE;QACzB,IAAI,IAAI,CAACC,KAAK,CAACQ,GAAG,KAAK,CAAC,EAAE;UACxB,IAAM4kB,eAAe,GAAGnJ,kBAAM,CAAC9b,KAAK,CAACC,GAAG,CAAC,KAAK,CAAC;UAC/C,IAAMilB,UAAU,GAAG,IAAIlJ,2BAAc,CAACiJ,eAAe,CAACpQ,UAAU,CAAC,MAAM,CAAC,CAAC;UACzEqQ,UAAU,CAAChhB,KAAK,GAAG,MAAM;UACzBghB,UAAU,CAACpI,SAAS,GAAG,KAAK;UAC5BoI,UAAU,CAACrI,UAAU,GAAG,KAAK;UAC7BqI,UAAU,CAACtI,SAAS,GAAG,MAAM;UAC7BsI,UAAU,CAAC1H,WAAW,GAAG,IAAI;UAC7B0H,UAAU,CAACtiB,CAAC,GAAG,EAAE;UACjBsiB,UAAU,CAACtpB,CAAC,GAAG,CAAC;UAChBspB,UAAU,CAACnQ,IAAI,CAAC,CAAC;UACjBmQ,UAAU,CAACpR,cAAc,GAAG,GAAG,GAAGtb,WAAW;UAC7C,IAAI,CAAC0mB,QAAQ,CAACgG,UAAU,CAAC;QAC3B,CAAC,MAAM;UACL,IAAMC,IAAI,GAAG,IAAI,CAAC7F,eAAe,CAAC,MAAM,CAAC;UACzC,IAAI6F,IAAI,EAAE;YACRA,IAAI,CAAChF,OAAO,CAAC,CAAC;UAChB;QACF;MACF;IACF;EAAC;IAAAhL,GAAA;IAAA5Y,KAAA,EAED,SAAA8T,MAAMA,CAACrM,QAAQ,EAAE;MACf,IACE,IAAI,CAAC2f,KAAK,IACV3f,QAAQ,CAACE,KAAK,KAAK,QAAQ,IAC3B,CAAC,IAAI,CAAC6d,cAAc,IACpB/H,wBAAkB,CAAC,IAAI,EAAEhW,QAAQ,EAAE,QAAQ,CAAC,IAC5CsF,uBAAiB,CAAC,IAAI,EAAEtF,QAAQ,CAAC,IAAI,IAAI,CAAC2f,KAAK,EAC/C;QACA,IAAI,CAACF,YAAY,CAACzf,QAAQ,CAAC;MAC7B;IACF;EAAC;IAAAmR,GAAA;IAAA5Y,KAAA,EAED,SAAAioB,eAAeA,CAACvK,MAAM,EAAE;MACtB,IAAI,IAAI,CAACjJ,SAAS,GAAG,IAAI,CAACsK,cAAc,EAAE;QACxC,IAAI,CAACtK,SAAS,GAAG,IAAI,CAACsK,cAAc;MACtC;MACA,IAAMoJ,UAAU,GAAG7c,mBAAa,CAAC,IAAI,CAACmJ,SAAS,EAAE,IAAI,CAACsK,cAAc,CAAC;MAErE,IAAI,IAAI,CAACtK,SAAS,IAAI,CAAC,EAAE;QACvB,IAAI,CAACuO,GAAG,CAAC,CAAC;MACZ;MACA,IAAItF,MAAM,KAAK,OAAO,IAAI,CAAC,IAAI,CAACK,OAAO,EAAE;QACvC,IAAI,CAACmK,aAAa,CAAC,CAAC;MACtB,CAAC,MAAM,IAAKxK,MAAM,KAAK,QAAQ,IAAI,IAAI,CAACK,OAAO,IAAML,MAAM,KAAK,OAAO,IAAI,IAAI,CAACK,OAAQ,EAAE;QACxF,IAAIoK,UAAU,GAAG,CAAC,IAAIA,UAAU,GAAG,EAAE,EAAE;UACrCU,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC;QAC3B;QACA,IAAIV,UAAU,IAAI,EAAE,IAAIA,UAAU,GAAG,EAAE,EAAE;UACvCU,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC;QAC3B;QACA,IAAIV,UAAU,IAAI,EAAE,IAAIA,UAAU,GAAG,EAAE,EAAE;UACvCU,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC;QAC3B;QACA,IAAIV,UAAU,IAAI,EAAE,EAAE;UACpB,IAAMS,IAAI,GAAG,IAAI,CAAC7F,eAAe,CAAC,MAAM,CAAC;UACzC,IAAI6F,IAAI,EAAE;YACR,IAAI,CAACpgB,WAAW,CAACogB,IAAI,CAAC;UACxB;QACF;MACF;MACA,SAASC,YAAYA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;QACxC,IAAMH,IAAI,GAAGE,QAAQ,CAAC/F,eAAe,CAAC,MAAM,CAAC;QAC7C,IAAM2F,eAAe,GAAGnJ,kBAAM,CAAC9b,KAAK,CAACC,GAAG,CAACqlB,QAAQ,CAAC;QAClD,IAAIH,IAAI,EAAE;UACR,KAAK,IAAIjqB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiqB,IAAI,CAACI,QAAQ,CAACrpB,MAAM,EAAEhB,CAAC,EAAE,EAAE;YAC7CiqB,IAAI,CAACI,QAAQ,CAACrqB,CAAC,CAAC,CAACwF,QAAQ,GAAGukB,eAAe,CAACpQ,UAAU,CAAC,MAAM,CAAC;YAC9DsQ,IAAI,CAACI,QAAQ,CAACrqB,CAAC,CAAC,CAAC6Z,IAAI,CAAC,CAAC;UACzB;QACF,CAAC,MAAM;UACL,IAAMyQ,OAAO,GAAG,IAAI5J,sBAAS,CAAC,CAAC;UAC/B4J,OAAO,CAACthB,KAAK,GAAG,MAAM;UACtBshB,OAAO,CAAC1I,SAAS,GAAG,KAAK;UACzB0I,OAAO,CAAC3I,UAAU,GAAG,KAAK;UAC1B2I,OAAO,CAAC5I,SAAS,GAAG,MAAM;UAC1B,IAAI6I,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;UACpB,IAAIJ,QAAQ,CAAC5lB,IAAI,KAAK,CAAC,EAAE;YACvBgmB,KAAK,GAAG,CACN,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EACR,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EACR,CAAC,CAAC,EAAE,EAAE,CAAC,EACP,CAAC,EAAE,EAAE,CAAC,CAAC,CACR;UACH;UACA,KAAK,IAAIvqB,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAGuqB,KAAK,CAACvpB,MAAM,EAAEhB,GAAC,EAAE,EAAE;YACrC,IAAMgqB,UAAU,GAAG,IAAIlJ,2BAAc,CAACiJ,eAAe,CAACpQ,UAAU,CAAC,MAAM,CAAC,CAAC;YACzEqQ,UAAU,CAACpI,SAAS,GAAG,KAAK;YAC5BoI,UAAU,CAACrI,UAAU,GAAG,KAAK;YAC7BqI,UAAU,CAACtI,SAAS,GAAG,MAAM;YAC7BsI,UAAU,CAAC1H,WAAW,GAAG,IAAI;YAC7B0H,UAAU,CAACtiB,CAAC,GAAG6iB,KAAK,CAACvqB,GAAC,CAAC,CAAC,CAAC,CAAC;YAC1BgqB,UAAU,CAACtpB,CAAC,GAAG6pB,KAAK,CAACvqB,GAAC,CAAC,CAAC,CAAC,CAAC;YAC1BgqB,UAAU,CAACnQ,IAAI,CAAC,CAAC;YACjBmQ,UAAU,CAACpR,cAAc,GAAG,GAAG,GAAGtb,WAAW;YAC7CgtB,OAAO,CAACtG,QAAQ,CAACgG,UAAU,CAAC;UAC9B;UACAG,QAAQ,CAACnG,QAAQ,CAACsG,OAAO,CAAC;QAC5B;MACF;IACF;EAAC;IAAArQ,GAAA;IAAA5Y,KAAA,EAED,SAAAgjB,GAAGA,CAAA,EAAG;MAAA,IAAAmG,MAAA;MACJ,IAAI,IAAI,CAACjL,MAAM,EAAE;QACf;MACF;MACA,IAAA+E,aAAA,GAEI,IAAI,CADNva,OAAO;QAAIhC,GAAG,GAAAuc,aAAA,CAAHvc,GAAG;QAAEmD,MAAM,GAAAoZ,aAAA,CAANpZ,MAAM;QAAEqZ,OAAO,GAAAD,aAAA,CAAPC,OAAO;QAAE9B,IAAI,GAAA6B,aAAA,CAAJ7B,IAAI;MAEvC,IAAI,CAACuG,YAAY,CAAC,CAAC;MACnB,IAAI,CAACzJ,MAAM,GAAG,IAAI;MAClB,IAAI,IAAI,CAAC+B,QAAQ,IAAIpW,MAAM,EAAE;QAC3BA,MAAM,CAACyX,WAAW,CAAC,CAAC;MACtB;;MAEA;MACA,IAAMve,KAAK,GAAG,IAAI,CAACO,KAAK,CAACO,SAAS,CAAC6N,OAAO,CAAC,IAAI,CAAC;MAChD,IAAI3O,KAAK,IAAI,CAAC,EAAE;QACd,IAAI,CAACO,KAAK,CAACO,SAAS,CAAC4N,MAAM,CAAC1O,KAAK,EAAE,CAAC,CAAC;MACvC;MACA;MACA,KAAK,IAAIpE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGukB,OAAO,CAACvjB,MAAM,EAAEhB,CAAC,EAAE,EAAE;QACvC,IAAIukB,OAAO,CAACvkB,CAAC,CAAC,CAAC0E,IAAI,KAAK,IAAI,EAAE;UAC5B,IAAM+f,IAAI,GAAGF,OAAO,CAACvkB,CAAC,CAAC,CAAC+V,qBAAqB;UAC7C0O,IAAI,CAAC3R,MAAM,CAAC2R,IAAI,CAAC1R,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACpC;MACF;MACA,IAAMnM,KAAK,GAAG,IAAI,CAACwd,eAAe,CAAC,OAAO,CAAC;MAC3Cxd,KAAK,IAAIA,KAAK,CAACqe,OAAO,CAAC,CAAC;MACxB,IAAMwF,IAAI,GAAG,IAAI,CAACrG,eAAe,CAAC,MAAM,CAAC;MACzCqG,IAAI,IAAIA,IAAI,CAACxF,OAAO,CAAC,CAAC;MACtB,IAAMgF,IAAI,GAAG,IAAI,CAAC7F,eAAe,CAAC,MAAM,CAAC;MACzC6F,IAAI,IAAIA,IAAI,CAAChF,OAAO,CAAC,CAAC;MAEtB,IAAIyF,WAAW,GAAGlmB,oCAAoC,CAAC,IAAI,CAACD,IAAI,EAAEqc,kBAAM,CAAC;MACzE,IAAI,IAAI,CAAClc,IAAI,KAAK,MAAM,EAAE;QACxBgmB,WAAW,GAAG,SAAS;MACzB;MACA,IAAI,CAAC/jB,MAAM,CAAChB,OAAO,GAAGP,UAAU,CAACslB,WAAW,EAAE9J,kBAAM,CAAC;MACrD,IAAI,CAACja,MAAM,CAACib,SAAS,GAAG,KAAK;MAC7B,IAAI,CAACjb,MAAM,CAAC+a,SAAS,GAAG,MAAM;MAC9B,IAAI,CAAC/a,MAAM,CAACgb,UAAU,GAAG,KAAK;MAC9B,IAAI,CAAC1Y,MAAM,EAAE;MACb,IAAI,IAAI,CAACvE,IAAI,KAAK,MAAM,EAAE;QACxBgC,yBAAyB,CAAC,IAAI,CAACC,MAAM,EAAE,IAAI,CAAChC,KAAK,CAACiC,KAAK,CAAC;MAC1D;MACA;MACAoP,wBAAwB,CAAC,IAAI,CAAC;MAC9B,IAAMxI,IAAI,GAAG,IAAI,CAACjJ,IAAI,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC;MACpCqP,wBAAwB,CAAC,IAAI,CAAC5T,CAAC,EAAE,IAAI,CAACuO,CAAC,EAAExG,GAAG,CAAC6I,IAAI,EAAEpD,IAAI,EAAE,UAAA4D,IAAI,EAAI;QAC/D,IAAIA,IAAI,CAACjJ,GAAG,KAAKqiB,MAAI,EAAE;UACrBpZ,IAAI,CAACjJ,GAAG,GAAG,IAAI;UACfiJ,IAAI,CAACa,KAAK,GAAG,KAAK;UAClBb,IAAI,CAAC2T,OAAO,CAACnhB,IAAI,CAAC4mB,MAAI,CAAC;QACzB;MACF,CAAC,CAAC;MACF,IAAI,CAACpB,YAAY,CAAC;QAAA,OAAMoB,MAAI,CAAC5F,KAAK,CAAC,CAAC;MAAA,GAAEvlB,WAAW,CAAC;MAClDgf,gBAAgB,CAAC,IAAI,EAAEnT,MAAM,CAAC,IAAIuX,IAAI,CAACkI,sBAAsB,CAAC,IAAI,CAAChmB,KAAK,CAAC;IAC3E;EAAC;IAAAsV,GAAA;IAAA5Y,KAAA,EAED,SAAAujB,KAAKA,CAAA,EAAG;MAAA,IAAAgG,MAAA;MACN,IAAI,IAAI,CAACta,WAAW,EAAE;QACpB;MACF;MACA,IACavI,GAAG,GACZ,IAAI,CADNgC,OAAO,CAAIhC,GAAG;MAEhB,IAAMyF,IAAI,GAAG,IAAI,CAACjJ,IAAI,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC;MACpCqP,wBAAwB,CAAC,IAAI,CAAC5T,CAAC,EAAE,IAAI,CAACuO,CAAC,EAAExG,GAAG,CAAC6I,IAAI,EAAEpD,IAAI,EAAE,UAAA4D,IAAI,EAAI;QAC/D,IAAMhN,KAAK,GAAGgN,IAAI,CAAC2T,OAAO,CAAChS,OAAO,CAAC6X,MAAI,CAAC;QACxC,IAAIxmB,KAAK,IAAI,CAAC,EAAE;UACdgN,IAAI,CAAC2T,OAAO,CAACjS,MAAM,CAAC1O,KAAK,EAAE,CAAC,CAAC;QAC/B;MACF,CAAC,CAAC;MACF,IAAI,CAACkM,WAAW,GAAG,IAAI;MACvB,IAAI,CAAC2U,OAAO,CAAC;QAAEC,KAAK,EAAE,IAAI;QAAEvf,OAAO,EAAE;MAAK,CAAC,CAAC;IAC9C;EAAC;IAAAsU,GAAA;IAAA5Y,KAAA,EAED,SAAAuhB,MAAMA,CAAA,EAAG;MACP,IAAI,IAAI,CAACtB,QAAQ,EAAE;QACjB;MACF;MACA,IAAAuJ,cAAA,GAEI,IAAI,CADN9gB,OAAO;QAAI0Y,IAAI,GAAAoI,cAAA,CAAJpI,IAAI;QAAEvX,MAAM,GAAA2f,cAAA,CAAN3f,MAAM;MAGzB,IAAI,IAAI,CAACvG,KAAK,CAACmQ,QAAQ,IAAI,IAAI,CAACiP,MAAM,IAAI,IAAI,CAACA,MAAM,CAACzjB,MAAM,EAAE;QAC5DmgB,uBAAK,CAAC5G,IAAI,CAAC,IAAI,CAACkK,MAAM,CAACzjB,MAAM,CAAC;MAChC;MAEA,IAAI,CAACghB,QAAQ,GAAG,IAAI;MACpB,IAAMvY,SAAS,GAAG,IAAIjF,qBAAQ,CAAC,CAAC;MAChCiF,SAAS,CAACC,KAAK,GAAG,WAAW;MAC7BD,SAAS,CAACE,MAAM,GAAG,CAAC;MACpB,IAAMpE,IAAI,GAAG,CAAC,CAAC,EAAE,GAAG,IAAI,CAACN,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAACA,IAAI,EAAE,EAAE,GAAG,IAAI,CAACA,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,IAAI,CAACA,IAAI,CAAC;MAC3FwE,SAAS,CAACG,IAAI,CAACrE,IAAI,CAAC;MACpBkE,SAAS,CAACI,MAAM,CAACpL,WAAW,CAAC;MAC7B,IAAI,IAAI,CAACohB,OAAO,IAAI,IAAI,CAACxa,KAAK,CAACmQ,QAAQ,EAAE;QACvC,IAAI,CAACgW,sBAAsB,CAAC,CAAC;MAC/B;MACA,IAAI,CAAC1hB,UAAU,CAACL,SAAS,EAAE,CAAC,CAAC;MAC7BsV,gBAAgB,CAAC,IAAI,EAAEnT,MAAM,CAAC,IAAIuX,IAAI,CAACkI,sBAAsB,CAAC,IAAI,CAAChmB,KAAK,CAAC;IAC3E;EAAC;IAAAsV,GAAA;IAAA5Y,KAAA,EAED,SAAA8iB,QAAQA,CAAA,EAAG;MACT,IAAI,CAAC,IAAI,CAAC7C,QAAQ,EAAE;QAClB;MACF;MACA,IAAAyJ,cAAA,GAEI,IAAI,CADNhhB,OAAO;QAAI0Y,IAAI,GAAAsI,cAAA,CAAJtI,IAAI;QAAEvX,MAAM,GAAA6f,cAAA,CAAN7f,MAAM;MAGzB,IAAI,CAACoW,QAAQ,GAAG,KAAK;MACrB,IAAMvY,SAAS,GAAG,IAAI,CAACqb,eAAe,CAAC,WAAW,CAAC;MACnD,IAAIrb,SAAS,EAAE;QACb,IAAI,CAACc,WAAW,CAACd,SAAS,CAAC;MAC7B;MACAsV,gBAAgB,CAAC,IAAI,EAAEnT,MAAM,CAAC,IAAIuX,IAAI,CAACkI,sBAAsB,CAAC,IAAI,CAAChmB,KAAK,CAAC;IAC3E;EAAC;IAAAsV,GAAA;IAAA5Y,KAAA,EAED,SAAA2pB,SAASA,CAACtmB,IAAI,EAAE;MACd,IAAAumB,cAAA,GAEI,IAAI,CADNlhB,OAAO;QAAIhC,GAAG,GAAAkjB,cAAA,CAAHljB,GAAG;QAAE0a,IAAI,GAAAwI,cAAA,CAAJxI,IAAI;MAEtB,IAAIyI,SAAS;MACb,IAAM3J,MAAM,GAAG,IAAI,CAAC5c,KAAK,CAAC4c,MAAM,CAACsC,KAAK,CAACnf,IAAI,CAAC;MAC5C,IAAI6c,MAAM,CAACpP,QAAQ,KAAK,MAAM,EAAE;QAC9B+Y,SAAS,GAAGva,sBAAsB,CAChC,IAAI,CAAC3Q,CAAC,EACN,IAAI,CAACuO,CAAC,EACN,IAAI,CAAChK,IAAI,EACTwD,GAAG,CAAC6I,IAAI,EACR,UAAAQ,IAAI;UAAA,OAAIA,IAAI,CAACe,QAAQ,KAAK,OAAO,IAAI,CAACf,IAAI,CAACa,KAAK;QAAA,CAClD,CAAC;MACH,CAAC,MAAM;QACLiZ,SAAS,GAAGva,sBAAsB,CAChC,IAAI,CAAC3Q,CAAC,EACN,IAAI,CAACuO,CAAC,EACN,IAAI,CAAChK,IAAI,EACTwD,GAAG,CAAC6I,IAAI,EACR,UAAAQ,IAAI;UAAA,OAAIA,IAAI,CAACe,QAAQ,KAAK,OAAO,IAAI,CAACf,IAAI,CAACa,KAAK;QAAA,CAClD,CAAC;MACH;MACA,IAAI,CAACiZ,SAAS,EAAE;QACd;MACF;MACA,IAAI,CAACvmB,KAAK,CAAC6iB,UAAU,EAAE;MAEvB,IAAM2D,KAAK,GAAI,IAAI,CAACxmB,KAAK,CAACymB,mBAAmB,IAAI,IAAI,CAACzmB,KAAK,CAACymB,mBAAmB,CAAC1mB,IAAI,CAAC,IAAK,CAAC,CAAC;MAC5F,IAAI,CAACC,KAAK,CAAC0mB,UAAU,CAAAC,aAAA;QAAGtrB,CAAC,EAAEkrB,SAAS,CAAClrB,CAAC;QAAEuO,CAAC,EAAE2c,SAAS,CAAC3c,CAAC;QAAE7J,IAAI,EAAJA;MAAI,GAAKymB,KAAK,CAAE,CAAC;MAEzE,IAAI,IAAI,CAACxmB,KAAK,CAACmQ,QAAQ,IAAI,IAAI,CAACnQ,KAAK,CAACujB,gBAAgB,IAAI,IAAI,CAACvjB,KAAK,CAACujB,gBAAgB,CAACd,iBAAiB,EAAE;QACvG3E,IAAI,CAAC+D,UAAU,CACb,iBAAiB,EACjB,IAAI,CAAC7hB,KAAK,CAAC6iB,UAAU,GAAG,GAAG,GAAGjb,IAAI,CAACuB,GAAG,CAACvO,cAAc,EAAE,IAAI,CAACoF,KAAK,CAACpF,cAAc,CAClF,CAAC;MACH;IACF;EAAC;IAAA0a,GAAA;IAAA5Y,KAAA,EAED,SAAAylB,OAAOA,CAACpiB,IAAI,EAA6C;MAAA,IAAA6mB,MAAA;MAAA,IAA3CC,WAAW,GAAA9oB,SAAA,CAAA1B,MAAA,QAAA0B,SAAA,QAAAyL,SAAA,GAAAzL,SAAA,MAAG,KAAK;MAAA,IAAE+oB,KAAK,GAAA/oB,SAAA,CAAA1B,MAAA,QAAA0B,SAAA,QAAAyL,SAAA,GAAAzL,SAAA,MAAG,KAAK;MAAA,IAAEyoB,KAAK,GAAAzoB,SAAA,CAAA1B,MAAA,OAAA0B,SAAA,MAAAyL,SAAA;MACrD,IAAAud,cAAA,GAEI,IAAI,CADN3hB,OAAO;QAAI0Y,IAAI,GAAAiJ,cAAA,CAAJjJ,IAAI;QAAE1a,GAAG,GAAA2jB,cAAA,CAAH3jB,GAAG;MAEtB,IAAI4jB,OAAO,GAAG,KAAK;MACnB,IAAMlI,IAAI,GAAG,IAAI,CAAC9e,KAAK,CAAC4c,MAAM,CAACsC,KAAK,CAACnf,IAAI,CAAC;MAC1C,IAAI,IAAI,CAAC0a,OAAO,IAAI,CAAC,IAAI,CAACG,MAAM,KAAK3T,SAAS,CAAC,IAAI,CAACjH,KAAK,EAAE8e,IAAI,CAACtY,IAAI,CAAC,IAAIqgB,WAAW,CAAC,EAAE;QACrF,IAAI,CAACA,WAAW,EAAE;UAChB,IAAI,IAAI,CAAC7mB,KAAK,CAACD,IAAI,KAAK,IAAI,EAAE;YAC5B,IAAI,CAAC,IAAI,CAACiiB,KAAK,CAAC3lB,MAAM,IAAI,IAAI,CAACme,OAAO,KAAK,IAAI,EAAE;cAC/CxT,OAAO,CAAC,IAAI,CAAChH,KAAK,EAAE8e,IAAI,CAACtY,IAAI,CAAC;cAC9B,IAAI,CAACwb,KAAK,CAAC/iB,IAAI,CAACc,IAAI,CAAC;cACrBinB,OAAO,GAAG,IAAI;YAChB;UACF,CAAC,MAAM;YACLhgB,OAAO,CAAC,IAAI,CAAChH,KAAK,EAAE8e,IAAI,CAACtY,IAAI,CAAC;YAC9B,IAAI,CAACwb,KAAK,CAAC/iB,IAAI,CAACc,IAAI,CAAC;YACrB,IAAI,IAAI,CAAC4c,QAAQ,IAAI,IAAI,CAAC3c,KAAK,CAACmQ,QAAQ,EAAE;cACxC2N,IAAI,CAACmJ,mBAAmB,CAAClnB,IAAI,EAAE,IAAI,CAACiiB,KAAK,CAACje,MAAM,CAAC,UAAAmjB,CAAC;gBAAA,OAAIA,CAAC,KAAKnnB,IAAI;cAAA,EAAC,CAAC1D,MAAM,CAAC;YAC3E;YACA,IAAI,CAAC2D,KAAK,CAACmQ,QAAQ,IAAI2N,IAAI,CAACqJ,YAAY,CAAC,CAAC;YAC1CH,OAAO,GAAG,IAAI;UAChB;QACF;QACA,IAAK,IAAI,CAACxM,OAAO,KAAK,IAAI,IAAI,IAAI,CAACwH,KAAK,CAAC,CAAC,CAAC,IAAK8E,KAAK,EAAE;UACrD,IAAIM,gBAAgB,GAAG,KAAK;UAC5B,IAAI,CAAC5M,OAAO,GAAGsM,KAAK,GAAG,IAAI,CAACtM,OAAO,GAAG,CAAC;UACvC,IAAI,IAAI,CAACmC,QAAQ,IAAI,IAAI,CAAC3c,KAAK,CAACmQ,QAAQ,EAAE;YACxC,IAAI,CAACgW,sBAAsB,CAAC,CAAC;UAC/B;UACA,IAAI,CAACjC,aAAa,CAAC,YAAM;YACvB,IAAI0C,MAAI,CAAC5E,KAAK,CAAC,CAAC,CAAC,KAAKjiB,IAAI,EAAE;cAC1B6mB,MAAI,CAACvC,YAAY,CAAC,CAAC;cACnBuC,MAAI,CAACpM,OAAO,GAAG,IAAI;cACnB,IAAIoM,MAAI,CAAC5E,KAAK,CAAC3lB,MAAM,EAAE;gBACrBuqB,MAAI,CAACzE,OAAO,CAACyE,MAAI,CAAC5E,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC;cACnC;cACAoF,gBAAgB,GAAG,KAAK;cACxB,IAAIR,MAAI,CAACjK,QAAQ,IAAIiK,MAAI,CAAC5mB,KAAK,CAACmQ,QAAQ,EAAE;gBACxC,IAAMkX,KAAK,GAAGT,MAAI,CAAC5E,KAAK,CAACje,MAAM,CAAC,UAAAmjB,CAAC;kBAAA,OAAIA,CAAC,KAAKnnB,IAAI;gBAAA,EAAC,CAAC1D,MAAM;gBACvDyhB,IAAI,CAACmJ,mBAAmB,CAAClnB,IAAI,EAAEsnB,KAAK,IAAI,EAAE,CAAC;gBAC3C,IAAIA,KAAK,KAAK,CAAC,EAAE;kBACfvJ,IAAI,CAACwJ,kBAAkB,CAACvnB,IAAI,EAAE,KAAK,CAAC;gBACtC;gBACA6mB,MAAI,CAACT,sBAAsB,CAAC,CAAC;cAC/B;YACF,CAAC,MAAM,IAAIS,MAAI,CAACpM,OAAO,IAAI,GAAG,IAAIpX,GAAG,CAAC2f,OAAO,EAAE;cAC7C6D,MAAI,CAACvC,YAAY,CAAC,CAAC;cACnBuC,MAAI,CAACP,SAAS,CAACtmB,IAAI,EAAEymB,KAAK,CAAC;cAC3BI,MAAI,CAACpM,OAAO,GAAG,IAAI;cACnBoM,MAAI,CAAC5E,KAAK,CAACuF,KAAK,CAAC,CAAC;cAClB,IAAIX,MAAI,CAAC5E,KAAK,CAAC3lB,MAAM,EAAE;gBACrBuqB,MAAI,CAACzE,OAAO,CAACyE,MAAI,CAAC5E,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC;cACnC;cACAoF,gBAAgB,GAAG,KAAK;cACxB,IAAIR,MAAI,CAACjK,QAAQ,IAAIiK,MAAI,CAAC5mB,KAAK,CAACmQ,QAAQ,EAAE;gBACxC,IAAMkX,MAAK,GAAGT,MAAI,CAAC5E,KAAK,CAACje,MAAM,CAAC,UAAAmjB,CAAC;kBAAA,OAAIA,CAAC,KAAKnnB,IAAI;gBAAA,EAAC,CAAC1D,MAAM;gBACvDyhB,IAAI,CAACmJ,mBAAmB,CAAClnB,IAAI,EAAEsnB,MAAK,IAAI,EAAE,CAAC;gBAC3C,IAAIA,MAAK,KAAK,CAAC,EAAE;kBACfvJ,IAAI,CAACwJ,kBAAkB,CAACvnB,IAAI,EAAE,KAAK,CAAC;gBACtC;gBACA6mB,MAAI,CAACT,sBAAsB,CAAC,CAAC;cAC/B;YACF,CAAC,MAAM,IAAIS,MAAI,CAACpM,OAAO,GAAG,GAAG,EAAE;cAC7B,IAAIoM,MAAI,CAAC5mB,KAAK,CAAC6iB,UAAU,GAAGjb,IAAI,CAACuB,GAAG,CAACvO,cAAc,EAAEgsB,MAAI,CAAC5mB,KAAK,CAACpF,cAAc,CAAC,EAAE;gBAC/EgsB,MAAI,CAACpM,OAAO,IAAI,CAAC;cACnB,CAAC,MAAM,IAAIoM,MAAI,CAAC5mB,KAAK,CAACmQ,QAAQ,IAAI,CAACiX,gBAAgB,EAAE;gBACnDtJ,IAAI,CAAC0J,WAAW,CAAC,+BAA+B,CAAC;gBACjDJ,gBAAgB,GAAG,IAAI;cACzB;cACA,IAAIR,MAAI,CAACjK,QAAQ,IAAIiK,MAAI,CAAC5mB,KAAK,CAACmQ,QAAQ,EAAE;gBACxCyW,MAAI,CAACT,sBAAsB,CAAC,CAAC;cAC/B;YACF;UACF,CAAC,EAAErH,IAAI,CAAC2I,YAAY,CAAC;QACvB;QACA,OAAOT,OAAO;MAChB;IACF;EAAC;IAAA1R,GAAA;IAAA5Y,KAAA,EAED,SAAAypB,sBAAsBA,CAAA,EAAG;MAAA,IAAAuB,MAAA;MACvB,IACa5J,IAAI,GACb,IAAI,CADN1Y,OAAO,CAAI0Y,IAAI;MAEjB,IAAI,IAAI,CAAC9d,KAAK,CAACmQ,QAAQ,IAAI,IAAI,CAACnQ,KAAK,CAACujB,gBAAgB,KAAK,IAAI,EAAE;QAC/D,IAAI,IAAI,CAAC/I,OAAO,KAAK,CAAC,EAAE;UACtBsD,IAAI,CAAC+D,UAAU,CAAC,SAAS,EAAE,UAAA1E,OAAO;YAAA,OAAKA,OAAO,CAACwK,SAAS,GAAGD,MAAI,CAAC5E,iBAAiB,CAAC,CAAC,CAAC6E,SAAS;UAAA,CAAC,CAAC;QACjG,CAAC,MAAM,IAAI,IAAI,CAACnN,OAAO,GAAG,CAAC,EAAE;UAC3BsD,IAAI,CAAC+D,UAAU,CAAC,cAAc,EAAE,IAAI,CAACrH,OAAO,GAAG,GAAG,CAAC;QACrD,CAAC,MAAM;UACLsD,IAAI,CAAC+D,UAAU,CAAC,SAAS,EAAE,UAAA1E,OAAO;YAAA,OAAKA,OAAO,CAACwK,SAAS,GAAG,EAAE;UAAA,CAAC,CAAC;QACjE;MACF;IACF;EAAC;IAAArS,GAAA;IAAA5Y,KAAA,EAED,SAAAomB,iBAAiBA,CAAA,EAAG;MAClB,IAAM8E,UAAU,GAAGrlB,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MAChDolB,UAAU,CAAC/R,SAAS,GAAG,kBAAkB;MACzC+R,UAAU,CAACroB,EAAE,GAAG,SAAS;MAEzB,IAAI,IAAI,CAACib,OAAO,IAAI,IAAI,CAACxa,KAAK,CAACmQ,QAAQ,EAAE;QACvC,IAAMuQ,OAAO,GAAGne,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;QAC7Cke,OAAO,CAAC7K,SAAS,GAAG,uBAAuB;QAC3C6K,OAAO,CAACxV,GAAG,GAAG5L,WAAW,CAAC,WAAW,CAAC;QACtC,IAAM2hB,OAAO,GAAG1e,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;QAC7Cye,OAAO,CAAC1hB,EAAE,GAAG,cAAc;QAC3B0hB,OAAO,CAACR,WAAW,GAAG,IAAI,CAACjG,OAAO,GAAG,GAAG;QACxCoN,UAAU,CAAC7R,WAAW,CAAC2K,OAAO,CAAC;QAC/BkH,UAAU,CAAC7R,WAAW,CAACkL,OAAO,CAAC;MACjC;MACA,OAAO2G,UAAU;IACnB;EAAC;IAAAtS,GAAA;IAAA5Y,KAAA,EAED,SAAAmrB,gBAAgBA,CAAA,EAAG;MACjB,IAAAC,cAAA,GAEI,IAAI,CADN1iB,OAAO;QAAImB,MAAM,GAAAuhB,cAAA,CAANvhB,MAAM;QAAEuX,IAAI,GAAAgK,cAAA,CAAJhK,IAAI;MAEzB,IAAI,CAACuG,YAAY,CAAC,CAAC;MACnB/d,UAAU,CAACC,MAAM,EAAE,IAAI,CAAC0b,UAAU,CAACzb,IAAI,CAAC;MACxC,IAAI,CAACyb,UAAU,GAAG,IAAI;MACtB,IAAI,CAACzH,OAAO,GAAG,IAAI;MACnB,IAAI,IAAI,CAACxa,KAAK,CAACmQ,QAAQ,EAAE;QACvB2N,IAAI,CAACiK,eAAe,CAAC,CAAC;QACtBjK,IAAI,CAACqJ,YAAY,CAAC,CAAC;MACrB;IACF;EAAC;IAAA7R,GAAA;IAAA5Y,KAAA,EAED,SAAAsrB,OAAOA,CAACjoB,IAAI,EAAE;MACZ,IAAMmB,IAAI,GAAG,IAAI,CAAClB,KAAK,CAAC4c,MAAM,CAACrc,SAAS,CAACR,IAAI,CAAC;MAC9C,IAAI,CAACA,IAAI,GAAGA,IAAI;MAChB,IAAI,CAACoR,SAAS,GAAGjQ,IAAI,CAACua,cAAc,IAAI,IAAI,CAACA,cAAc,GAAG,IAAI,CAACtK,SAAS,CAAC;MAC7E,SAAA8W,GAAA,MAAAC,eAAA,GAA2BxsB,MAAM,CAAC6P,OAAO,CAACrK,IAAI,CAAC,EAAA+mB,GAAA,GAAAC,eAAA,CAAA7rB,MAAA,EAAA4rB,GAAA,IAAE;QAA5C,IAAAE,kBAAA,GAAAhqB,sBAAA,CAAA+pB,eAAA,CAAAD,GAAA;UAAO3S,GAAG,GAAA6S,kBAAA;UAAEzrB,KAAK,GAAAyrB,kBAAA;QACpB,IAAI,CAAC7S,GAAG,CAAC,GAAG5Y,KAAK;MACnB;MACA,IAAMuD,MAAM,GAAGH,gBAAgB,CAAC,IAAI,CAACC,IAAI,EAAE,IAAI,CAACC,KAAK,EAAEic,kBAAM,CAAC;MAC9D,IAAI,CAACja,MAAM,CAAChB,OAAO,GAAGP,UAAU,CAACR,MAAM,CAACilB,MAAM,SAAM,EAAEjJ,kBAAM,CAAC;MAC7D,IAAI,CAACja,MAAM,CAACyS,MAAM,CAACC,GAAG,CAAC,IAAI,CAAC1S,MAAM,CAAChB,OAAO,CAAC2T,aAAa,CAAC5R,CAAC,EAAE,IAAI,CAACf,MAAM,CAAChB,OAAO,CAAC2T,aAAa,CAAC5Y,CAAC,CAAC;MAChG,IAAMkG,KAAK,GAAG,IAAI,CAACwd,eAAe,CAAC,OAAO,CAAC;MAC3Cxd,KAAK,aAALA,KAAK,eAALA,KAAK,CAAEqe,OAAO,CAAC,CAAC;MAChB,IAAIrgB,MAAM,CAACilB,MAAM,CAACjjB,KAAK,EAAE;QACvB,IAAMkjB,WAAW,GAAGnJ,mBAAM,CAACld,IAAI,CAAC2B,UAAU,CAACR,MAAM,CAACilB,MAAM,CAACjjB,KAAK,EAAEga,kBAAM,CAAC,CAAC;QACxEkJ,WAAW,CAAC9gB,KAAK,GAAG,OAAO;QAC3BtC,yBAAyB,CAACojB,WAAW,EAAE,IAAI,CAACnlB,KAAK,CAACiC,KAAK,CAAC;QACxD,IAAI,CAACod,QAAQ,CAAC8F,WAAW,CAAC;MAC5B,CAAC,MAAM;QACLpjB,yBAAyB,CAAC,IAAI,CAACC,MAAM,EAAE,IAAI,CAAChC,KAAK,CAACiC,KAAK,CAAC;MAC1D;IACF;EAAC;IAAAqT,GAAA;IAAA5Y,KAAA,EAED,SAAA0lB,aAAaA,CAACriB,IAAI,EAAE8mB,WAAW,EAAEC,KAAK,EAAE;MAAA,IAAAsB,MAAA;MACtC,IAAAC,cAAA,GAEI,IAAI,CADNjjB,OAAO;QAAI0Y,IAAI,GAAAuK,cAAA,CAAJvK,IAAI;QAAE1a,GAAG,GAAAilB,cAAA,CAAHjlB,GAAG;MAEtB,IAAI4jB,OAAO,GAAG,KAAK;MACnB,IAAMpK,MAAM,GAAG,IAAI,CAAC5c,KAAK,CAACsoB,KAAK,CAACvoB,IAAI,CAAC;MACrC,IACE,CAAC,IAAI,CAACiiB,KAAK,CAAC3lB,MAAM,IAClB,IAAI,CAACoe,OAAO,KACXqM,KAAK,IAAI,IAAI,CAACtM,OAAO,KAAK,IAAI,CAAC,IAChC,CAAC,IAAI,CAACI,MAAM,KACXiM,WAAW,IAAI5f,SAAS,CAAC,IAAI,CAACjH,KAAK,EAAE4c,MAAM,CAACpW,IAAI,CAAC,CAAC,EACnD;QACA,CAACqgB,WAAW,IAAI7f,OAAO,CAAC,IAAI,CAAChH,KAAK,EAAE4c,MAAM,CAACpW,IAAI,CAAC;QAChDwgB,OAAO,GAAG,IAAI;QACd,IAAI,IAAI,CAAChnB,KAAK,CAACmQ,QAAQ,EAAE;UACvB2N,IAAI,CAACqJ,YAAY,CAAC,CAAC;QACrB;QACA,IAAI,CAAC3M,OAAO,GAAGsM,KAAK,GAAG,IAAI,CAACtM,OAAO,GAAG,CAAC;QAEvC,IAAI,CAACyH,UAAU,GAAG;UAAErF,MAAM,EAANA,MAAM;UAAE7c,IAAI,EAAJA;QAAK,CAAC;QAClC,IAAI,IAAI,CAAC4c,QAAQ,IAAI,IAAI,CAAC3c,KAAK,CAACujB,gBAAgB,KAAK,IAAI,EAAE;UACzDzF,IAAI,CAACI,YAAY,CAAC,IAAI,CAAC;QACzB;QACA,IAAI,CAACgG,aAAa,CAAC,YAAM;UACvB,IAAAqE,iBAAA,GAAyBH,MAAI,CAACnG,UAAU;YAAhCrF,MAAM,GAAA2L,iBAAA,CAAN3L,MAAM;YAAE7c,IAAI,GAAAwoB,iBAAA,CAAJxoB,IAAI;UACpB,IAAIqoB,MAAI,CAAC5N,OAAO,IAAI,GAAG,IAAIpX,GAAG,CAAC2f,OAAO,EAAE;YACtCqF,MAAI,CAAC/D,YAAY,CAAC,CAAC;YACnB+D,MAAI,CAAC5N,OAAO,GAAG,IAAI;YACnB4N,MAAI,CAACnG,UAAU,GAAG,IAAI;YACtB,IAAIpjB,KAAK,CAACK,OAAO,CAACkpB,MAAI,CAACpoB,KAAK,CAAC4c,MAAM,CAACtH,GAAG,CAAC,CAAC,EAAE;cACzC8S,MAAI,CAACpoB,KAAK,CAAC4c,MAAM,CAACtH,GAAG,CAAC,CAACrW,IAAI,CAAC2d,MAAM,CAAClgB,KAAK,IAAIqD,IAAI,CAAC;YACnD,CAAC,MAAM;cACLqoB,MAAI,CAACpoB,KAAK,CAAC4c,MAAM,CAACtH,GAAG,CAAC,GAAGsH,MAAM,CAAClgB,KAAK,IAAIqD,IAAI;YAC/C;YACA,IAAI6c,MAAM,CAACxC,MAAM,EAAE;cACjB,QAAQwC,MAAM,CAACxC,MAAM,CAACra,IAAI;gBACxB,KAAK,aAAa;kBAChB,KAAK,IAAI1E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+sB,MAAI,CAACpoB,KAAK,CAACkf,KAAK,CAAC7iB,MAAM,EAAEhB,CAAC,EAAE,EAAE;oBAChD,IAAMyjB,IAAI,GAAGsJ,MAAI,CAACpoB,KAAK,CAACkf,KAAK,CAAC7jB,CAAC,CAAC;oBAChC,IAAIyjB,IAAI,CAAC/e,IAAI,KAAK6c,MAAM,CAACxC,MAAM,CAACvW,MAAM,EAAE;sBACtCib,IAAI,CAACkJ,OAAO,CAACpL,MAAM,CAACxC,MAAM,CAACjP,MAAM,CAAC;oBACpC;kBACF;kBACA;gBACF,KAAK,iBAAiB;kBACpB,KAAK,IAAI9P,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG+sB,MAAI,CAACpoB,KAAK,CAACO,SAAS,CAAClE,MAAM,EAAEhB,GAAC,EAAE,EAAE;oBACpD,IAAMmqB,QAAQ,GAAG4C,MAAI,CAACpoB,KAAK,CAACO,SAAS,CAAClF,GAAC,CAAC;oBACxC,IAAImqB,QAAQ,CAACzlB,IAAI,KAAK6c,MAAM,CAACxC,MAAM,CAACvW,MAAM,EAAE;sBAC1C2hB,QAAQ,CAACwC,OAAO,CAACQ,gBAAgB,CAACpO,MAAM,CAACjP,MAAM,CAAC;oBAClD;kBACF;kBACA;gBACF,KAAK,SAAS;kBACZid,MAAI,CAACpoB,KAAK,CAACyoB,YAAY,CAAC7L,MAAM,CAACxC,MAAM,CAACsO,UAAU,CAAC;kBACjD;cACJ;YACF;YACA,IAAMC,YAAY,QAAAjpB,MAAA,CAAQ8Y,qBAAqB,CAACoE,MAAM,CAACtH,GAAG,CAAC,WAAQ;YACnE,OAAO8S,MAAI,CAACpoB,KAAK,CAAC2oB,YAAY,CAAC,KAAK,UAAU,IAAIP,MAAI,CAACpoB,KAAK,CAAC2oB,YAAY,CAAC,CAAC/L,MAAM,CAAClgB,KAAK,CAAC;YACxF,IAAI0rB,MAAI,CAACpoB,KAAK,CAACmQ,QAAQ,EAAE;cACvB2N,IAAI,CAACiK,eAAe,CAAC,CAAC;cACtBjK,IAAI,CAACqJ,YAAY,CAAC,CAAC;YACrB;UACF,CAAC,MAAM,IAAIiB,MAAI,CAAC5N,OAAO,GAAG,GAAG,EAAE;YAC7B4N,MAAI,CAAC5N,OAAO,IAAI,CAAC;YACjB,IAAI4N,MAAI,CAACpoB,KAAK,CAACmQ,QAAQ,IAAIiY,MAAI,CAACpoB,KAAK,CAACujB,gBAAgB,KAAK6E,MAAI,EAAE;cAC/DA,MAAI,CAACjC,sBAAsB,CAAC,CAAC;YAC/B;UACF;QACF,CAAC,EAAEvJ,MAAM,CAACgM,YAAY,CAAC;MACzB;MACA,OAAO5B,OAAO;IAChB;EAAC;IAAA1R,GAAA;IAAA5Y,KAAA,EAED,SAAA0gB,mBAAmBA,CAACD,OAAO,EAAEjc,IAAI,EAAE;MACjC,IACa4c,IAAI,GACb,IAAI,CADN1Y,OAAO,CAAI0Y,IAAI;MAGjB,IAAM+K,MAAM,GAAGtmB,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MAC5CqmB,MAAM,CAACtpB,EAAE,GAAG,KAAK;MACjBspB,MAAM,CAACpI,WAAW,GAAG,IAAI,CAACzgB,KAAK,CAACK,GAAG;MACnC8c,OAAO,CAACpH,WAAW,CAAC8S,MAAM,CAAC;MAE3B,IAAMrI,OAAO,GAAGje,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MAC7Cge,OAAO,CAACjhB,EAAE,GAAG,MAAM;MACnBihB,OAAO,CAACC,WAAW,GAAG,IAAI,CAAC1gB,IAAI;MAC/Bod,OAAO,CAACpH,WAAW,CAACyK,OAAO,CAAC;MAE5B,IAAME,OAAO,GAAGne,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MAC7Cke,OAAO,CAACnhB,EAAE,GAAG,MAAM;MACnBmhB,OAAO,CAACxV,GAAG,GAAG5L,WAAW,CAAC4B,IAAI,CAACyf,IAAI,CAAC;MACpCxD,OAAO,CAACpH,WAAW,CAAC2K,OAAO,CAAC;MAE5B,IAAI,IAAI,CAAC1gB,KAAK,IAAI,IAAI,CAACA,KAAK,CAACmQ,QAAQ,EAAE;QACrC,IAAMyQ,YAAY,GAAGre,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;QAClDoe,YAAY,CAACrhB,EAAE,GAAG,WAAW;QAC7BqhB,YAAY,CAACH,WAAW,GAAG,IAAI,CAACtP,SAAS,GAAG,GAAG,GAAG,IAAI,CAACsK,cAAc;QACrE0B,OAAO,CAACpH,WAAW,CAAC6K,YAAY,CAAC;QAEjC,IAAI,IAAI,CAACnG,OAAO,IAAI,IAAI,CAAC1J,QAAQ,EAAE;UACjC,IAAM8P,WAAW,GAAGte,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;UACjDqe,WAAW,CAACthB,EAAE,GAAG,UAAU;UAC3BshB,WAAW,CAAChL,SAAS,GAAG,mBAAmB;UAC3C,IAAMmL,YAAY,GAAGze,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;UAClDwe,YAAY,CAAC9V,GAAG,GAAG4S,IAAI,CAACgL,KAAK,CAAC,MAAM,CAAC;UACrC9H,YAAY,CAACnL,SAAS,GAAG,wBAAwB;UACjD,IAAMoL,OAAO,GAAG1e,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;UAC7Cye,OAAO,CAAC1hB,EAAE,GAAG,eAAe;UAC5B0hB,OAAO,CAACR,WAAW,GAAG,IAAI,CAAC1P,QAAQ;UACnC8P,WAAW,CAAC9K,WAAW,CAACiL,YAAY,CAAC;UACrCH,WAAW,CAAC9K,WAAW,CAACkL,OAAO,CAAC;UAChC9D,OAAO,CAACpH,WAAW,CAAC8K,WAAW,CAAC;QAClC;MACF;IACF;EAAC;AAAA,EA14B2B9E,sBAAS,E;;;;;;;;;;;;;;;;;;;;;AC/BJ;AACkC;AAWhD;AA+BN;AAC0B;AAEzC,SAASgN,cAAcA,CAACC,IAAI,EAAE5O,MAAM,EAAE6B,MAAM,EAAE6C,IAAI,EAAE;EAClD,IAAI,CAACkK,IAAI,EAAE;IACT;EACF;EACA,IAAMC,WAAW,GAAG7O,MAAM,KAAK,UAAU,GAAG,cAAc,GAAG,aAAa;EAC1E,OAAO6B,MAAM,CAAC9b,KAAK,CAACC,GAAG,CAAC0e,IAAI,CAACoK,SAAS,CAACF,IAAI,CAAC,CAACC,WAAW,CAAC,CAAC;AAC5D;AAEO,IAAME,IAAI,0BAAA9M,UAAA;EACf,SAAA8M,KAAY7M,OAAO,EAAElX,OAAO,EAAE;IAAA,IAAAgkB,OAAA,EAAAC,OAAA,EAAAC,OAAA,EAAA/M,cAAA,EAAAC,eAAA,EAAA+M,UAAA;IAAA,IAAAjT,KAAA;IAAAmG,mBAAA,OAAA0M,IAAA;IAC5B7S,KAAA,GAAAoG,cAAA,OAAAyM,IAAA;IAEA7S,KAAA,CAAKlR,OAAO,GAAGA,OAAO;IAEtB,IAAAgS,MAAA,GAAAd,KAAA;MAAA0M,cAAA,GAAA5L,MAAA,CACEhS,OAAO;MAAIhC,GAAG,GAAA4f,cAAA,CAAH5f,GAAG;MAAE0a,IAAI,GAAAkF,cAAA,CAAJlF,IAAI;IAEtBxH,KAAA,CAAKjS,KAAK,GAAG6C,MAAM,CAAC,CAAC;IACrBoP,KAAA,CAAKpF,MAAM,GAAG,MAAM;IAEpBoF,KAAA,CAAKkT,IAAI,GAAG,IAAI;IAChBlT,KAAA,CAAKmT,QAAQ,GAAG,IAAI;IACpBnT,KAAA,CAAK+M,YAAY,GAAG,IAAI;IACxB/M,KAAA,CAAKpW,IAAI,GAAG,EAAE;IACdoW,KAAA,CAAKqG,QAAQ,GAAG,KAAK;IACrBrG,KAAA,CAAKjL,MAAM,GAAGnC,iBAAW,CAAC,CAAC,EAAE,GAAG,CAAC;IACjCoN,KAAA,CAAKjQ,YAAY,GAAG6C,iBAAW,CAAC,CAAC,EAAE,CAAC,CAAC;IACrCoN,KAAA,CAAK8D,MAAM,GAAG,IAAI;IAClB9D,KAAA,CAAKkE,OAAO,GAAG,CAAC;IAChBlE,KAAA,CAAKyB,WAAW,GAAG,IAAI;IACvBzB,KAAA,CAAKhC,YAAY,GAAG,eAAe;IACnCgC,KAAA,CAAKoT,OAAO,GAAG,IAAI;IACnBpT,KAAA,CAAKsE,MAAM,GAAG,KAAK;IACnBtE,KAAA,CAAK3K,WAAW,GAAG,KAAK;IACxB2K,KAAA,CAAKvT,CAAC,GAAG,IAAI;IACbuT,KAAA,CAAKva,CAAC,GAAG,IAAI;IACbua,KAAA,CAAKvM,CAAC,GAAG,IAAI;IAEbrO,MAAM,CAACkL,IAAI,CAAC0V,OAAO,CAAC,CAACzV,OAAO,CAAC,UAAAC,IAAI,EAAI;MACnCwP,KAAA,CAAKxP,IAAI,CAAC,GAAGwV,OAAO,CAACxV,IAAI,CAAC;IAC5B,CAAC,CAAC;IACFpL,MAAM,CAACkL,IAAI,CAAC0P,KAAA,CAAKtW,KAAK,CAAC4c,MAAM,CAACsC,KAAK,CAAC5I,KAAA,CAAKvW,IAAI,CAAC,CAAC,CAAC8G,OAAO,CAAC,UAAAC,IAAI,EAAI;MAC9DwP,KAAA,CAAKxP,IAAI,CAAC,GAAGwP,KAAA,CAAKtW,KAAK,CAAC4c,MAAM,CAACsC,KAAK,CAAC5I,KAAA,CAAKvW,IAAI,CAAC,CAAC+G,IAAI,CAAC;IACvD,CAAC,CAAC;IACFwP,KAAA,CAAK1W,IAAI,GAAG,CAAC;IACb0W,KAAA,CAAKlG,OAAO,GAAG,KAAK;IACpBkG,KAAA,CAAKvT,CAAC,IAAAqmB,OAAA,GAAG9S,KAAA,CAAKvT,CAAC,cAAAqmB,OAAA,cAAAA,OAAA,GAAIhmB,GAAG,CAAC6I,IAAI,CAACqK,KAAA,CAAKjb,CAAC,CAAC,CAACib,KAAA,CAAK1M,CAAC,CAAC,CAAC7G,CAAC;IAC7CuT,KAAA,CAAKva,CAAC,IAAAstB,OAAA,GAAG/S,KAAA,CAAKva,CAAC,cAAAstB,OAAA,cAAAA,OAAA,GAAIjmB,GAAG,CAAC6I,IAAI,CAACqK,KAAA,CAAKjb,CAAC,CAAC,CAACib,KAAA,CAAK1M,CAAC,CAAC,CAAC7N,CAAC;IAC7Cua,KAAA,CAAKvM,CAAC,IAAAuf,OAAA,GAAGhT,KAAA,CAAKvM,CAAC,cAAAuf,OAAA,cAAAA,OAAA,GAAIlmB,GAAG,CAAC6I,IAAI,CAACqK,KAAA,CAAKjb,CAAC,CAAC,CAACib,KAAA,CAAK1M,CAAC,CAAC,CAACG,CAAC;IAC7CuM,KAAA,CAAKhS,MAAM,GAAGuF,iBAAiB,CAAAyM,KAAK,CAAC;IACrCA,KAAA,CAAKvF,QAAQ,IAAAwL,cAAA,GAAGjG,KAAA,CAAKvF,QAAQ,cAAAwL,cAAA,cAAAA,cAAA,GAAIjG,KAAA,CAAKwG,aAAa;IACnDxG,KAAA,CAAKnF,SAAS,IAAAqL,eAAA,GAAGlG,KAAA,CAAKnF,SAAS,cAAAqL,eAAA,cAAAA,eAAA,GAAIlG,KAAA,CAAKmF,cAAc;IAEtDnF,KAAA,CAAKqT,WAAW,GAAGvmB,GAAG,CAAC6I,IAAI,CAACqK,KAAA,CAAKjb,CAAC,CAAC,CAACib,KAAA,CAAK1M,CAAC,CAAC;IAC3C,IAAI0M,KAAA,CAAKhC,YAAY,KAAK,aAAa,EAAE;MACvCgC,KAAA,CAAKtW,KAAK,CAACogB,OAAO,CAACnhB,IAAI,CAAAqX,KAAK,CAAC;MAC7BlT,GAAG,CAAC6I,IAAI,CAACqK,KAAA,CAAKjb,CAAC,CAAC,CAACib,KAAA,CAAK1M,CAAC,CAAC,CAACwW,OAAO,CAACnhB,IAAI,CAAAqX,KAAK,CAAC;IAC7C,CAAC,MAAM,IAAI,CAACA,KAAA,CAAKsE,MAAM,EAAE;MACvBtE,KAAA,CAAKqT,WAAW,CAACnmB,GAAG,GAAA8S,KAAO;MAC3BA,KAAA,CAAKqT,WAAW,CAACrc,KAAK,GAAG,IAAI;MAC7BgJ,KAAA,CAAKtW,KAAK,CAACkf,KAAK,CAACjgB,IAAI,CAAAqX,KAAK,CAAC;IAC7B;IACA,QAAQA,KAAA,CAAKvW,IAAI;MACf,KAAK,UAAU;QACbuW,KAAA,CAAK0S,IAAI,GAAG1S,KAAA,CAAK0S,IAAI,IAAI,IAAI;QAC7B;MACF,KAAK,QAAQ;QACX1S,KAAA,CAAK0S,IAAI,GAAG,QAAQ;QACpB;MACF;QACE1S,KAAA,CAAK0S,IAAI,GAAG,UAAU;IAC1B;IAEA,IAAI1S,KAAA,CAAKrW,MAAM,EAAE;MACf,SAAA2pB,EAAA,MAAA1B,eAAA,GAA2BxsB,MAAM,CAAC6P,OAAO,CAAC+K,KAAA,CAAKrW,MAAM,CAAC,EAAA2pB,EAAA,GAAA1B,eAAA,CAAA7rB,MAAA,EAAAutB,EAAA,IAAE;QAAnD,IAAAzB,kBAAA,GAAAhqB,kBAAA,CAAA+pB,eAAA,CAAA0B,EAAA;UAAOtU,GAAG,GAAA6S,kBAAA;UAAEzrB,KAAK,GAAAyrB,kBAAA;QACpB7R,KAAA,CAAKhB,GAAG,CAAC,GAAG2G,kBAAM,CAAC9b,KAAK,CAACC,GAAG,CAAC1D,KAAK,CAAC;MACrC;IACF,CAAC,MAAM,IAAI4Z,KAAA,CAAK4S,SAAS,EAAE;MACzB,SAAAW,GAAA,MAAAC,gBAAA,GAA2BpuB,MAAM,CAAC6P,OAAO,CAAC+K,KAAA,CAAK4S,SAAS,WAAQ,CAAC,EAAAW,GAAA,GAAAC,gBAAA,CAAAztB,MAAA,EAAAwtB,GAAA,IAAE;QAA9D,IAAAE,mBAAA,GAAA5rB,kBAAA,CAAA2rB,gBAAA,CAAAD,GAAA;UAAOvU,IAAG,GAAAyU,mBAAA;UAAErtB,MAAK,GAAAqtB,mBAAA;QACpBzT,KAAA,CAAKhB,IAAG,CAAC,GAAG2G,kBAAM,CAAC9b,KAAK,CAACC,GAAG,CAAC1D,MAAK,CAAC;MACrC;IACF;IAEA,IAAI4Z,KAAA,CAAKtW,KAAK,CAACmQ,QAAQ,IAAI/M,GAAG,CAAC4mB,KAAK,EAAE;MACpClO,uBAAK,CAAC5G,IAAI,CAAEoB,KAAA,CAAK8I,MAAM,IAAI9I,KAAA,CAAK8I,MAAM,CAACzjB,MAAM,IAAK,IAAI,CAAC;IACzD;IAEA2a,KAAA,aAAc,GAAG;MACf4G,IAAI,EAAE,SAANA,IAAIA,CAAEC,OAAO,EAAI;QACf,IAAMjc,IAAI,GAAGoV,KAAA,CAAKtW,KAAK,CAAC4c,MAAM,CAACsC,KAAK,CAAC5I,KAAA,CAAKvW,IAAI,CAAC;QAC/CuW,KAAA,CAAK8G,mBAAmB,CAACD,OAAO,EAAEjc,IAAI,CAAC;QACvC,IAAIoV,KAAA,CAAK2T,WAAW,IAAI3T,KAAA,CAAKtW,KAAK,CAACmQ,QAAQ,EAAE;UAC3CgN,OAAO,CAACpH,WAAW,CAACO,KAAA,CAAKwM,iBAAiB,CAAC,CAAC,CAAC;QAC/C;MACF,CAAC;MACDhF,IAAI,EACFxH,KAAA,CAAK4T,aAAa,IAAI5T,KAAA,CAAKtW,KAAK,CAACmQ,QAAQ,GACrC,CACE;QACEwQ,IAAI,EAAE,sCAAsC;QAC5C+E,QAAQ,EAAEhqB,MAAM,CAACkL,IAAI,CAAC0P,KAAA,CAAKtW,KAAK,CAAC4c,MAAM,CAACrc,SAAS,CAAC,CAAC6C,GAAG,CAAC,UAAAkS,GAAG;UAAA,OAAIwI,IAAI,CAACqM,iBAAiB,CAAC7U,GAAG,CAAC;QAAA;MAC3F,CAAC,CACF,GACD;IACR,CAAC;IAEDgB,KAAA,CAAK2G,SAAS,GAAG,KAAK;IACtB3G,KAAA,CAAKyG,SAAS,GAAG,QAAQ;IACzBzG,KAAA,CAAK2S,WAAW,GAAG3S,KAAA,CAAK2S,WAAW,IAAIF,cAAc,CAACzS,KAAA,CAAK0S,IAAI,EAAE1S,KAAA,CAAK8D,MAAM,EAAE6B,kBAAM,EAAA3F,KAAM,CAAC;IAC3FA,KAAA,CAAKtU,MAAM,GAAG,IAAIma,2BAAc,CAAC7F,KAAA,CAAK,eAAe,CAAC,CAACtB,UAAU,CAAC,OAAO,CAAC,CAAC;IAC3EsB,KAAA,CAAKtU,MAAM,CAACqC,KAAK,GAAG,QAAQ;IAC5BiS,KAAA,CAAKtU,MAAM,CAACib,SAAS,GAAG,KAAK;IAC7B3G,KAAA,CAAKtU,MAAM,CAAC+a,SAAS,GAAG,MAAM;IAC9BzG,KAAA,CAAKtU,MAAM,CAACgb,UAAU,GAAG,KAAK;IAC9B1G,KAAA,CAAKtU,MAAM,CAAC2b,WAAW,GAAG,IAAI;IAC9BrH,KAAA,CAAKtU,MAAM,CAACooB,IAAI,IAAAb,UAAA,GAAGjT,KAAA,CAAK8T,IAAI,cAAAb,UAAA,cAAAA,UAAA,GAAI,IAAI;IACpC,IAAIjT,KAAA,CAAKsE,MAAM,EAAE;MACftE,KAAA,CAAKhC,YAAY,KAAK,aAAa,GAAGgC,KAAA,CAAK+T,SAAS,CAAC,CAAC,GAAG/T,KAAA,CAAKgU,KAAK,CAAC,CAAC;IACvE,CAAC,MAAM,IAAIhU,KAAA,CAAKkE,OAAO,GAAG,CAAC,EAAE;MAC3BlE,KAAA,CAAK/B,YAAY,GAAG0H,kBAAM,CAAC9b,KAAK,CAACC,GAAG,CAACkW,KAAA,CAAK4S,SAAS,CAACpR,sBAAsB,CAACxB,KAAA,CAAKyB,WAAW,CAAC,CAAC,CAACwS,WAAW,CAAC;MAC1GjU,KAAA,CAAKpC,aAAa,GAAG+H,kBAAM,CAAC9b,KAAK,CAACC,GAAG,CAACkW,KAAA,CAAK4S,SAAS,CAACpR,sBAAsB,CAACxB,KAAA,CAAKyB,WAAW,CAAC,CAAC,CAAC7D,aAAa,CAAC;IAC/G;IACAoC,KAAA,CAAKkU,WAAW,CAAClU,KAAA,CAAKhC,YAAY,CAAC;IAEnCgC,KAAA,CAAKtU,MAAM,CAACqE,YAAY,GAAGuB,IAAI,CAACuB,GAAG,CAACmN,KAAA,CAAKjQ,YAAY,EAAEiQ,KAAA,CAAKtU,MAAM,CAACnB,QAAQ,CAACxE,MAAM,GAAG,CAAC,CAAC;IACvFia,KAAA,CAAKtU,MAAM,CAAC0b,YAAY,GAAG,IAAI;IAC/BpH,KAAA,CAAK+I,QAAQ,CAAC/I,KAAA,CAAKtU,MAAM,CAAC;IAE1BsU,KAAA,CAAK0I,MAAM,GAAG1I,KAAA,CAAKtW,KAAK,CAACmQ,QAAQ,GAAG4G,QAAQ,CAACT,KAAA,CAAKmU,SAAS,EAAE,GAAG,EAAE,IAAI,CAAC,GAAGnU,KAAA,CAAKmU,SAAS;IAExFnU,KAAA,CAAKsH,EAAE,CAAC,aAAa,EAAE,UAAAQ,GAAG,EAAI;MAC5B,IAAAzG,MAAA,GAAArB,KAAA;QAAAuH,cAAA,GAAAlG,MAAA,CACEvS,OAAO;QAAI2K,QAAQ,GAAA8N,cAAA,CAAR9N,QAAQ;QAAExJ,MAAM,GAAAsX,cAAA,CAANtX,MAAM;MAE7B,IAAIwJ,QAAQ,CAACwO,aAAa,IAAIxO,QAAQ,CAACyO,cAAc,IAAI,CAACzO,QAAQ,CAAC0O,YAAY,CAACL,GAAG,CAAC,EAAE;QACpF;MACF;MACA,IAAIrO,QAAQ,CAAC2a,OAAO,EAAE;QACpB,IAAIpU,KAAA,CAAKtW,KAAK,CAACmQ,QAAQ,EAAE;UACvBJ,QAAQ,CAAC4a,eAAe,CAAC,UAAAle,IAAI,EAAI;YAC/B,IACElG,MAAM,CAACwX,aAAa,CAAC1hB,MAAM,GAAG1B,gBAAgB,IAC9C8R,IAAI,CAACjJ,GAAG,IACRiJ,IAAI,CAACjJ,GAAG,CAACxD,KAAK,IACdyM,IAAI,CAACjJ,GAAG,CAACxD,KAAK,CAACqE,KAAK,KAAKiS,KAAA,CAAKtW,KAAK,CAACqE,KAAK,IACzCoI,IAAI,CAACjJ,GAAG,CAACzD,IAAI,KAAKuW,KAAA,CAAKvW,IAAI,EAC3B;cACA0M,IAAI,CAACjJ,GAAG,CAACya,MAAM,CAAC,CAAC;cACjB1X,MAAM,CAACwX,aAAa,CAAC9e,IAAI,CAACwN,IAAI,CAACjJ,GAAG,CAAC;YACrC;UACF,CAAC,CAAC;QACJ;QACAuM,QAAQ,CAAC6a,aAAa,GAAG,IAAI;MAC/B;MACA7a,QAAQ,CAAC2a,OAAO,GAAG,KAAK;IAC1B,CAAC,CAAC;IACFpU,KAAA,CAAKsH,EAAE,CAAC,WAAW,EAAE,UAAAQ,GAAG,EAAI;MAC1B,IAAAC,MAAA,GAAA/H,KAAA;QAAAgI,cAAA,GAAAD,MAAA,CACEjZ,OAAO;QAAI2K,QAAQ,GAAAuO,cAAA,CAARvO,QAAQ;QAAExJ,MAAM,GAAA+X,cAAA,CAAN/X,MAAM;QAAEuX,IAAI,GAAAQ,cAAA,CAAJR,IAAI;MAEnC,IAAI/N,QAAQ,CAAC6a,aAAa,IAAI7a,QAAQ,CAACwO,aAAa,IAAIxO,QAAQ,CAACyO,cAAc,IAAI,CAACzO,QAAQ,CAAC0O,YAAY,CAACL,GAAG,CAAC,EAAE;QAC9G;MACF;MAEArO,QAAQ,CAAC2O,KAAK,CAACC,OAAO,GAAG,IAAI;MAC7B5O,QAAQ,CAAC2a,OAAO,GAAG,IAAI;MACvB3a,QAAQ,UAAO,GAAGlL,UAAU,CAAC,YAAM;QACjCkL,QAAQ,CAAC2a,OAAO,GAAG,KAAK;QACxB3a,QAAQ,CAAC6a,aAAa,GAAG,KAAK;MAChC,CAAC,EAAE,GAAG,CAAC;MAEP,IAAItU,KAAA,CAAKtW,KAAK,CAACmQ,QAAQ,EAAE;QACvB,IAAI0a,aAAa,GAAG,KAAK;QACzB,IAAItkB,MAAM,CAACwX,aAAa,CAAC1hB,MAAM,EAAE;UAC/B,KAAK,IAAIhB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkL,MAAM,CAACwX,aAAa,CAAC1hB,MAAM,EAAEhB,CAAC,EAAE,EAAE;YACpD,IAAMmoB,UAAU,GAAGjd,MAAM,CAACwX,aAAa,CAAC1iB,CAAC,CAAC;YAC1C,IAAImoB,UAAU,CAACwF,IAAI,KAAK,QAAQ,IAAI1S,KAAA,CAAK6D,kBAAkB,CAACqJ,UAAU,EAAE,MAAM,CAAC,EAAE;cAC/EqH,aAAa,GAAG,IAAI;cACpBrH,UAAU,CAACxE,MAAM,CAAA1I,KAAA,EAAO,MAAM,CAAC;YACjC;UACF;QACF;QACA,IAAIuU,aAAa,EAAE;UACjB3mB,6BAA6B,CAAAoS,KAAK,CAAC;QACrC,CAAC,MAAM,IAAI/P,MAAM,CAACukB,YAAY,KAAAxU,KAAS,EAAE;UACvCA,KAAA,CAAKtW,KAAK,CAACge,WAAW,CAAC,CAAC;UACxB1H,KAAA,CAAK2H,MAAM,CAAC,CAAC;UACbH,IAAI,CAACI,YAAY,CAAA5H,KAAK,CAAC;UACvB/P,MAAM,CAACukB,YAAY,GAAAxU,KAAO;UAC1B/P,MAAM,CAACwX,aAAa,GAAG,CAAAzH,KAAA,CAAM;QAC/B;MACF,CAAC,MAAM;QACL,IAAIyU,eAAe,GAAG,KAAK;QAC3B,IAAIxkB,MAAM,CAACwX,aAAa,CAAC1hB,MAAM,EAAE;UAC/B,KAAK,IAAIhB,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAGkL,MAAM,CAACwX,aAAa,CAAC1hB,MAAM,EAAEhB,GAAC,EAAE,EAAE;YACpD,IAAMmoB,WAAU,GAAGjd,MAAM,CAACwX,aAAa,CAAC1iB,GAAC,CAAC;YAC1C,IAAIib,KAAA,CAAK6D,kBAAkB,CAACqJ,WAAU,EAAE,QAAQ,CAAC,EAC/C,IAAIA,WAAU,CAACzjB,IAAI,KAAK,UAAU,EAAE;cAClCgrB,eAAe,GAAG,IAAI;cACtBvH,WAAU,CAACC,YAAY,CAAAnN,KAAK,CAAC;YAC/B,CAAC,MAAM,IAAIkN,WAAU,CAACwF,IAAI,KAAK,UAAU,EAAE;cACzC+B,eAAe,GAAG,IAAI;cACtBvH,WAAU,CAACxE,MAAM,CAAA1I,KAAA,EAAO,QAAQ,CAAC;YACnC;UACJ;QACF;QACA,IAAIyU,eAAe,EAAE;UACnB7mB,6BAA6B,CAAAoS,KAAK,CAAC;QACrC,CAAC,MAAM,IAAK/P,MAAM,CAAC4X,aAAa,KAAA7H,KAAS,IAAIrG,uBAAuB,CAAAqG,KAAA,EAAO/P,MAAM,CAAC,IAAKnD,GAAG,CAAC4M,gBAAgB,EAAE;UAC3GzJ,MAAM,CAACyX,WAAW,CAAC,CAAC;UACpB1H,KAAA,CAAK2H,MAAM,CAAC,CAAC;UACbH,IAAI,CAACI,YAAY,CAAA5H,KAAK,CAAC;UACvB/P,MAAM,CAAC4X,aAAa,GAAA7H,KAAO;QAC7B;MACF;IACF,CAAC,CAAC;IAEF1S,iBAAiB,CAAC0S,KAAA,CAAKtU,MAAM,EAAEsU,KAAA,CAAKtW,KAAK,CAACiC,KAAK,CAAC;IAEhDqU,KAAA,CAAKmL,QAAQ,GAAG,IAAI;IAEpB5R,yBAAyB,CAAAyG,KAAK,CAAC;IAAA,OAAAA,KAAA;EACjC;EAACgJ,aAAA,CAAA6J,IAAA,EAAA9M,UAAA;EAAA,OAAAkD,gBAAA,CAAA4J,IAAA;IAAA7T,GAAA;IAAA5Y,KAAA,EAED,SAAA+Z,KAAKA,CAAA,EAAG;MAAA,IAAAuU,YAAA;MACN,CAAAA,YAAA,OAAI,CAAChpB,MAAM,cAAAgpB,YAAA,eAAXA,YAAA,CAAaxW,IAAI,CAAC,CAAC;IACrB;EAAC;IAAAc,GAAA;IAAA5Y,KAAA,EAED,SAAAma,MAAMA,CAAA,EAAG;MAAA,IAAAoU,aAAA;MACP,CAAAA,aAAA,OAAI,CAACjpB,MAAM,cAAAipB,aAAA,eAAXA,aAAA,CAAa/V,IAAI,CAAC,CAAC;IACrB;EAAC;IAAAI,GAAA;IAAA5Y,KAAA,EAED,SAAAuhB,MAAMA,CAAA,EAAG;MACP,IAAI,IAAI,CAACtB,QAAQ,EAAE;MAEnB,IAAAgD,aAAA,GAEI,IAAI,CADNva,OAAO;QAAI0Y,IAAI,GAAA6B,aAAA,CAAJ7B,IAAI;QAAEvX,MAAM,GAAAoZ,aAAA,CAANpZ,MAAM;MAGzB,IAAI,CAACoW,QAAQ,GAAG,IAAI;MAEpB,IAAMvY,SAAS,GAAG,IAAIjF,qBAAQ,CAAC,CAAC;MAChCiF,SAAS,CAACC,KAAK,GAAG,WAAW;MAC7BD,SAAS,CAACE,MAAM,GAAG,CAAC;;MAEpB;MACA,IAAMpE,IAAI,GAAG,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,GAAG,CAAC;MACnEkE,SAAS,CAACG,IAAI,CAACrE,IAAI,CAAC;MACpBkE,SAAS,CAACI,MAAM,CAACpL,WAAW,CAAC;MAE7B,IAAI,CAACqL,UAAU,CAACL,SAAS,EAAE,CAAC,CAAC;MAE7B,IAAIsV,gBAAgB,CAAC,IAAI,EAAEnT,MAAM,CAAC,EAAE;QAClCuX,IAAI,CAACkI,sBAAsB,CAAC,IAAI,CAAChmB,KAAK,CAAC;MACzC;IACF;EAAC;IAAAsV,GAAA;IAAA5Y,KAAA,EAED,SAAA8iB,QAAQA,CAAA,EAAG;MACT,IAAI,CAAC,IAAI,CAAC7C,QAAQ,EAAE;QAClB;MACF;MACA,IAAAuJ,cAAA,GAEI,IAAI,CADN9gB,OAAO;QAAI0Y,IAAI,GAAAoI,cAAA,CAAJpI,IAAI;QAAEvX,MAAM,GAAA2f,cAAA,CAAN3f,MAAM;MAGzB,IAAI,CAACoW,QAAQ,GAAG,KAAK;MACrB,IAAMvY,SAAS,GAAG,IAAI,CAACqb,eAAe,CAAC,WAAW,CAAC;MACnD,IAAIrb,SAAS,EAAE;QACb,IAAI,CAACc,WAAW,CAACd,SAAS,CAAC;MAC7B;MACAsV,gBAAgB,CAAC,IAAI,EAAEnT,MAAM,CAAC,IAAIuX,IAAI,CAACkI,sBAAsB,CAAC,IAAI,CAAChmB,KAAK,CAAC;IAC3E;EAAC;IAAAsV,GAAA;IAAA5Y,KAAA,EAED,SAAAwuB,OAAOA,CAAA,EAAG;MACR,OAAO,IAAI,CAAChrB,IAAI,CAAC7D,MAAM,GAAG,CAAC;IAC7B;EAAC;IAAAiZ,GAAA;IAAA5Y,KAAA,EAED,SAAAyuB,OAAOA,CAAC3B,IAAI,EAAE;MACZ,IAAI,CAACA,IAAI,EAAE;QACT,IAAI,CAAChV,IAAI,CAAC,CAAC;QACX;MACF;MACA,IAAI,CAAC4W,aAAa,IAAI,IAAI,CAACA,aAAa,CAAC5B,IAAI,EAAE,IAAI,CAAC;MACpD,IAAI,CAACA,IAAI,GAAGA,IAAI;MAChB,IAAI,CAACC,QAAQ,GAAG;QACdpuB,CAAC,EAAEmuB,IAAI,CAACnuB,CAAC;QACTuO,CAAC,EAAE4f,IAAI,CAAC5f,CAAC;QACT7G,CAAC,EAAEymB,IAAI,CAACzmB,CAAC;QACThH,CAAC,EAAEytB,IAAI,CAACztB,CAAC;QACTsI,KAAK,EAAEmlB,IAAI,CAACnlB;MACd,CAAC;IACH;EAAC;IAAAiR,GAAA;IAAA5Y,KAAA,EAED,SAAA2uB,OAAOA,CAACnrB,IAAI,EAAE;MAAA,IAAAokB,MAAA;MACZ,IAAI,CAACpkB,IAAI,CAAC7D,MAAM,EAAE;QAChB,IAAI,CAACmY,IAAI,CAAC,CAAC;QACX;MACF;MACA,IAAI,CAACgW,WAAW,CAAC,cAAc,CAAC;MAChC,IAAI,CAACd,OAAO,GAAG,KAAK;MACpB,IAAI,CAACxpB,IAAI,GAAGA,IAAI;MAChB,IAAI,CAACgkB,aAAa,CAAC;QAAA,OAAMI,MAAI,CAACgH,IAAI,CAAC,CAAC;MAAA,GAAE1yB,SAAS,CAAC;IAClD;EAAC;IAAA0c,GAAA;IAAA5Y,KAAA,EAED,SAAA6uB,gBAAgBA,CAAA,EAAG;MACjB,IAAI,IAAI,CAAC/B,IAAI,IAAI,IAAI,CAACA,IAAI,CAACrO,QAAQ,KAAK,IAAI,EAAE;QAC5C,IAAI,CAACqO,IAAI,CAACrO,QAAQ,GAAG,IAAI;MAC3B;IACF;EAAC;IAAA7F,GAAA;IAAA5Y,KAAA,EAED,SAAA+tB,SAASA,CAACjB,IAAI,EAAEpP,MAAM,EAAE;MAAA,IAAAoR,qBAAA;MACtB,IACapoB,GAAG,GACZ,IAAI,CADNgC,OAAO,CAAIhC,GAAG;MAEhB,IAAI,CAACmoB,gBAAgB,CAAC,CAAC;MACvB,IAAI,CAAClH,YAAY,CAAC,CAAC;MACnB,IAAInkB,IAAI,GAAG,EAAE;MACb;MACA,IAAI,CAACspB,IAAI,IAAI,IAAI,CAAC5O,MAAM,EAAE;QACxB;MACF;MACA;MACA,IACE,IAAI,CAAC6Q,YAAY,CAACrR,MAAM,EAAEoP,IAAI,CAAC,KAC9B,CAACpmB,GAAG,CAAC6I,IAAI,CAAC,IAAI,CAAC5Q,CAAC,CAAC,CAAC,IAAI,CAACuO,CAAC,CAAC,CAAC0D,KAAK,IAC7BlK,GAAG,CAAC6I,IAAI,CAAC,IAAI,CAAC5Q,CAAC,CAAC,CAAC,IAAI,CAACuO,CAAC,CAAC,CAAC0D,KAAK,IAAI,EAAAke,qBAAA,GAAApoB,GAAG,CAAC6I,IAAI,CAAC,IAAI,CAAC5Q,CAAC,CAAC,CAAC,IAAI,CAACuO,CAAC,CAAC,CAACpG,GAAG,cAAAgoB,qBAAA,uBAA5BA,qBAAA,CAA8BnnB,KAAK,MAAK,IAAI,CAACA,KAAM,CAAC,EACzF;QACA,IAAI,CAAC8mB,OAAO,CAAC3B,IAAI,CAAC;QAClB,IAAI,CAACpP,MAAM,GAAGA,MAAM;QACpB,IAAI,CAAC/O,MAAM,GAAGpB,uBAAiB,CAAC,IAAI,EAAEuf,IAAI,CAACzmB,CAAC,EAAEymB,IAAI,CAACztB,CAAC,CAAC;QACrD,IAAI,CAAC2vB,SAAS,CAACtR,MAAM,CAAC;QACtB;MACF;MACA;MACA,IAAIhX,GAAG,CAAC6I,IAAI,CAACud,IAAI,CAACnuB,CAAC,CAAC,IAAI+H,GAAG,CAAC6I,IAAI,CAACud,IAAI,CAACnuB,CAAC,CAAC,CAACmuB,IAAI,CAAC5f,CAAC,CAAC,EAAE;QAChD,IAAM2D,sBAAsB,GAAG,IAAI,CAACC,QAAQ,KAAK,MAAM;QACvD,IAAIpK,GAAG,CAAC6I,IAAI,CAACud,IAAI,CAACnuB,CAAC,CAAC,CAACmuB,IAAI,CAAC5f,CAAC,CAAC,CAAC0D,KAAK,EAAE;UAClCpN,IAAI,GAAGqM,8BAA8B,CAAC,IAAI,EAAEid,IAAI,EAAEpmB,GAAG,CAAC;UACtD,IAAI,CAAClD,IAAI,CAAC7D,MAAM,IAAI,IAAI,CAAC2sB,IAAI,EAAE;YAC7B,IAAI,CAAC5O,MAAM,GAAGA,MAAM;YACpB,IAAI,CAACuR,aAAa,CAAC,CAAC;YACpB;UACF;QACF,CAAC,MAAM,IAAI,CAACpe,sBAAsB,IAAIic,IAAI,CAAChc,QAAQ,KAAK,OAAO,EAAE;UAC/D,IAAMf,IAAI,GAAGT,sBAAsB,CACjCwd,IAAI,CAACnuB,CAAC,EACNmuB,IAAI,CAAC5f,CAAC,EACN,CAAC,EACDxG,GAAG,CAAC6I,IAAI,EACR,UAAAQ,IAAI;YAAA,OAAIA,IAAI,CAACe,QAAQ,KAAK,OAAO,IAAI,CAACf,IAAI,CAACa,KAAK;UAAA,CAClD,CAAC;UACD,IAAI,CAACmd,SAAS,CAAChe,IAAI,CAAC;UACpB;QACF;MACF;MACA,IAAI,CAACvM,IAAI,CAAC7D,MAAM,EAAE;QAChB6D,IAAI,GAAGwM,eAAe,CAAC,IAAI,EAAE8c,IAAI,CAACnuB,CAAC,EAAEmuB,IAAI,CAAC5f,CAAC,EAAExG,GAAG,CAAC;MACnD;MACA;MACA,IAAIlD,IAAI,CAAC7D,MAAM,EAAE;QACf,IAAI,CAAC8uB,OAAO,CAAC3B,IAAI,CAAC;QAClB,IAAI,CAACpP,MAAM,GAAGA,MAAM;QACpB,IAAI,CAACiR,OAAO,CAACnrB,IAAI,CAAC;MACpB,CAAC,MAAM;QACL,IAAI,CAACsU,IAAI,CAAC,CAAC;MACb;IACF;EAAC;IAAAc,GAAA;IAAA5Y,KAAA,EAED,SAAAyd,kBAAkBA,CAAChP,MAAM,EAA+B;MAAA,IAA7BiP,MAAM,GAAArc,SAAA,CAAA1B,MAAA,QAAA0B,SAAA,QAAAyL,SAAA,GAAAzL,SAAA,MAAG,IAAI,CAACqc,MAAM;MAAA,IAAEC,KAAK,GAAAtc,SAAA,CAAA1B,MAAA,OAAA0B,SAAA,MAAAyL,SAAA;MACpD,OAAO2Q,wBAAkB,CAAC,IAAI,EAAEhP,MAAM,EAAEiP,MAAM,EAAEC,KAAK,CAAC;IACxD;EAAC;IAAA/E,GAAA;IAAA5Y,KAAA,EAED,SAAAkvB,gBAAgBA,CAAA,EAAG;MACjB,IACaxoB,GAAG,GACZ,IAAI,CADNgC,OAAO,CAAIhC,GAAG;MAGhB,IAAI,CAAC,IAAI,CAACigB,YAAY,EAAE;QACtB,IAAI,CAAC7O,IAAI,CAAC,CAAC;QACX;MACF;MACA,IAAMgV,IAAI,GAAG,IAAI,CAACnG,YAAY;MAC9B,IAAMtjB,IAAI,GAAGypB,IAAI,CAAChc,QAAQ,IAAIgc,IAAI,CAACzpB,IAAI;MACvC,IAAI,CAACsjB,YAAY,GAAG,IAAI;MACxB,IAAImG,IAAI,CAACtY,MAAM,KAAK,QAAQ,EAAE;QAC5B,IAAI,IAAI,CAACiJ,kBAAkB,CAACqP,IAAI,EAAE,UAAU,CAAC,EAAE;UAC7C,IAAI,CAACqC,cAAc,CAACrC,IAAI,CAAC;QAC3B,CAAC,MAAM;UACL,IAAI,CAACxK,MAAM,CAAC5b,GAAG,CAAC6I,IAAI,CAACud,IAAI,CAACnuB,CAAC,CAAC,CAACmuB,IAAI,CAAC5f,CAAC,CAAC,EAAE,MAAM,CAAC;QAC/C;MACF,CAAC,MAAM,IAAI4f,IAAI,CAACtY,MAAM,KAAK,UAAU,EAAE;QACrC,IAAI,IAAI,CAACiJ,kBAAkB,CAACqP,IAAI,EAAE,OAAO,CAAC,EAAE;UAC1C,IAAI,CAACrG,cAAc,CAACqG,IAAI,CAAC;QAC3B,CAAC,MAAM,IAAI,IAAI,CAACrP,kBAAkB,CAACqP,IAAI,EAAE,MAAM,CAAC,EAAE;UAChD,IAAI,CAAClG,UAAU,CAACkG,IAAI,CAAC;QACvB,CAAC,MAAM;UACL,IAAI,CAACxK,MAAM,CAAC5b,GAAG,CAAC6I,IAAI,CAACud,IAAI,CAACnuB,CAAC,CAAC,CAACmuB,IAAI,CAAC5f,CAAC,CAAC,EAAE,OAAO,CAAC;QAChD;MACF,CAAC,MAAM,IAAIzP,WAAW,CAAC4F,IAAI,CAAC,EAAE;QAC5B,IAAI,IAAI,CAACoa,kBAAkB,CAACqP,IAAI,EAAErvB,WAAW,CAAC4F,IAAI,CAAC,CAAC,EAAE;UACpD,IAAMgf,UAAU,YAAArf,MAAA,CAAYK,IAAI,CAAE;UAClC,OAAO,IAAI,CAACgf,UAAU,CAAC,KAAK,UAAU,GAAG,IAAI,CAACA,UAAU,CAAC,CAACyK,IAAI,CAAC,GAAG,IAAI,CAAChV,IAAI,CAAC,CAAC;QAC/E,CAAC,MAAM;UACL,IAAI,CAACwK,MAAM,CAAC5b,GAAG,CAAC6I,IAAI,CAACud,IAAI,CAACnuB,CAAC,CAAC,CAACmuB,IAAI,CAAC5f,CAAC,CAAC,EAAEzP,WAAW,CAAC4F,IAAI,CAAC,CAAC;QAC1D;MACF,CAAC,MAAM;QACL,IAAI,CAACif,MAAM,CAAC5b,GAAG,CAAC6I,IAAI,CAACud,IAAI,CAACnuB,CAAC,CAAC,CAACmuB,IAAI,CAAC5f,CAAC,CAAC,CAAC;MACvC;IACF;EAAC;IAAA0L,GAAA;IAAA5Y,KAAA,EAED,SAAAgvB,SAASA,CAAC9sB,IAAI,EAAE;MAAA,IAAAinB,MAAA;MACd,IAAAO,cAAA,GAEI,IAAI,CADNhhB,OAAO;QAAI0Y,IAAI,GAAAsI,cAAA,CAAJtI,IAAI;QAAEvX,MAAM,GAAA6f,cAAA,CAAN7f,MAAM;QAAEnD,GAAG,GAAAgjB,cAAA,CAAHhjB,GAAG;MAE9B,IAAI,CAACpB,MAAM,CAAC4S,MAAM,GAAG,IAAI;MACzB,IAAI,CAAC5S,MAAM,CAACoE,aAAa,GAAG,IAAI;MAChC,QAAQxH,IAAI;QACV,KAAK,UAAU;UACb,IAAI,CAAC,IAAI,CAACub,kBAAkB,CAAC,IAAI,CAACqP,IAAI,EAAE,IAAI,CAACpP,MAAM,CAAC,EAAE;YACpD,IAAI,CAAC5F,IAAI,CAAC,CAAC;YACX;UACF;UACA,IAAI,CAACxU,KAAK,CAAC7G,kBAAkB,CAACoV,QAAQ,CAAC,IAAI,CAACwJ,WAAW,CAAC,GAAG,MAAM,GAAG,IAAI,CAACA,WAAW,CAAC,IAAI,IAAI,CAACyC,OAAO;UACrG,IAAI,CAACxa,KAAK,CAACmQ,QAAQ,IAAI2N,IAAI,CAACqJ,YAAY,CAAC,CAAC;UAC1C,IAAI,CAAC3M,OAAO,GAAG,CAAC;UAChB,IAAI,CAAC2L,sBAAsB,CAAC,CAAC;UAC7B,IAAI,IAAI,CAAC+C,SAAS,IAAI,IAAI,CAACA,SAAS,CAAC,IAAI,CAACF,IAAI,CAAC,EAAE;YAC/C,IAAI,CAAC9U,aAAa,GAAG+H,kBAAM,CAAC9b,KAAK,CAACC,GAAG,CAAC,IAAI,CAAC8oB,SAAS,CAAC,IAAI,CAACF,IAAI,CAAC,CAAC9U,aAAa,CAAC;YAC9E,IAAI,CAACK,YAAY,GAAG0H,kBAAM,CAAC9b,KAAK,CAACC,GAAG,CAAC,IAAI,CAAC8oB,SAAS,CAAC,IAAI,CAACF,IAAI,CAAC,CAACzU,YAAY,CAAC;UAC9E;UAEA,IAAI,IAAI,CAAC8O,YAAY,EAAE;YACrB,IAAI,CAACuI,gBAAgB,CAAC,CAAC;UACzB,CAAC,MAAM;YACL,IAAI,CAACpX,IAAI,CAAC,CAAC;UACb;UACA;QACF,KAAK,MAAM;UACT,IAAI,CAAC,IAAI,CAAC2F,kBAAkB,CAAC,IAAI,CAACqP,IAAI,CAAC,EAAE;YACvC,IAAI,CAACmC,aAAa,CAAC,CAAC;YACpB;UACF;UACA,IAAI,CAACnC,IAAI,CAACrO,QAAQ,GAAG,IAAI;UACzB,IAAI,CAACqP,WAAW,CAAC,aAAa,CAAC;UAC/B,IAAI,CAACtG,aAAa,CAChB,YAAM;YACJ,IAAI,CAAC2B,MAAI,CAAC1L,kBAAkB,CAAC0L,MAAI,CAAC2D,IAAI,CAAC,EAAE;cACvC,IAAI3D,MAAI,CAAC2D,IAAI,CAACzY,QAAQ,IAAI,CAAC,EAAE;gBAC3B8U,MAAI,CAAC2D,IAAI,CAAC9J,GAAG,CAAC,CAAC;cACjB;cACAmG,MAAI,CAAC8F,aAAa,CAAC,CAAC;cACpB;YACF;YACA9F,MAAI,CAAC2D,IAAI,CAACrO,QAAQ,GAAG0K,MAAI;YACzB;YACA,IAAIA,MAAI,CAACrL,OAAO,KAAKqL,MAAI,CAACiG,UAAU,CAACjG,MAAI,CAAC9N,WAAW,CAAC,IAAI,CAAC8N,MAAI,CAAC2D,IAAI,EAAE;cACpE3D,MAAI,CAACkG,cAAc,CAAC,CAAC;cACrBlG,MAAI,CAAC2D,IAAI,CAACrO,QAAQ,GAAG,IAAI;cACzB;YACF;YACA;YACA0K,MAAI,CAACrL,OAAO,EAAE;YACdqL,MAAI,CAAC9N,WAAW,GAAG,OAAO;YAC1B8N,MAAI,CAACM,sBAAsB,CAAC,CAAC;YAE7BN,MAAI,CAACzV,OAAO,IAAI0L,uBAAK,CAAC5G,IAAI,CAAC,MAAM,CAAC;YAClC2Q,MAAI,CAAC2D,IAAI,CAACzY,QAAQ,GAAGnJ,IAAI,CAACwB,GAAG,CAACyc,MAAI,CAAC2D,IAAI,CAACzY,QAAQ,GAAG,CAAC,EAAE,CAAC,CAAC;YACxD,IAAI8U,MAAI,CAAC2D,IAAI,CAAC7M,QAAQ,EAAE;cACtBmB,IAAI,CAAC+D,UAAU,CAAC,eAAe,EAAEgE,MAAI,CAAC2D,IAAI,CAACzY,QAAQ,CAAC;YACtD;YACA;YACA,IAAI8U,MAAI,CAAC2D,IAAI,CAACzY,QAAQ,IAAI,CAAC,EAAE;cAC3B8U,MAAI,CAAC2D,IAAI,CAAC9J,GAAG,CAAC,CAAC;cACfmG,MAAI,CAAC8F,aAAa,CAAC,CAAC;YACtB;YACA;YACA,IAAI9F,MAAI,CAACrL,OAAO,GAAG,CAAC,EAAE;cACpB,IAAIqL,MAAI,CAACqD,SAAS,CAACrD,MAAI,CAACmD,IAAI,CAAC,EAAE;gBAC7BnD,MAAI,CAACtR,YAAY,GAAG0H,kBAAM,CAAC9b,KAAK,CAACC,GAAG,CAACylB,MAAI,CAACqD,SAAS,CAACrD,MAAI,CAACmD,IAAI,CAAC,CAACuB,WAAW,CAAC;cAC7E;cACA1E,MAAI,CAAC3R,aAAa,GAAG,IAAI;YAC3B;UACF,CAAC,EACA,CAAC,GAAG,IAAI,CAAC8X,aAAa,CAAC,IAAI,CAAChD,IAAI,CAAC,GAAI,IAAI,EAC1C,KACF,CAAC;UACD;QACF,KAAK,UAAU;UACb,IAAI,CAAC,IAAI,CAAC7O,kBAAkB,CAAC,IAAI,CAACqP,IAAI,CAAC,EAAE;YACvC,IAAI,CAACmC,aAAa,CAAC,CAAC;YACpB;UACF;UACA,IAAI,CAACnB,WAAW,CAAC,aAAa,CAAC;UAC/B,IAAI,CAACtG,aAAa,CAChB,YAAM;YACJ,IAAI,CAAC2B,MAAI,CAAC1L,kBAAkB,CAAC0L,MAAI,CAAC2D,IAAI,CAAC,EAAE;cACvC,IAAI3D,MAAI,CAAC2D,IAAI,CAACzY,QAAQ,IAAI,CAAC,EAAE;gBAC3B8U,MAAI,CAAC2D,IAAI,CAAC9J,GAAG,CAAC,CAAC;cACjB;cACAmG,MAAI,CAAC8F,aAAa,CAAC,CAAC;cACpB;YACF;YACA;YACA,IAAI9F,MAAI,CAACrL,OAAO,KAAKqL,MAAI,CAACiG,UAAU,CAACjG,MAAI,CAAC9N,WAAW,CAAC,IAAI,CAAC8N,MAAI,CAAC2D,IAAI,EAAE;cACpE3D,MAAI,CAACkG,cAAc,CAAC,CAAC;cACrB;YACF;YAEAlG,MAAI,CAACzV,OAAO,IAAI0L,uBAAK,CAAC5G,IAAI,CAAC,MAAM,CAAC;;YAElC;YACA,IAAI2Q,MAAI,CAAC2D,IAAI,CAACrY,SAAS,GAAG,CAAC,EAAE;cAC3B0U,MAAI,CAAC2D,IAAI,CAACrY,SAAS,GAAGvJ,IAAI,CAACwB,GAAG,CAACyc,MAAI,CAAC2D,IAAI,CAACrY,SAAS,GAAG,CAAC,EAAE,CAAC,CAAC;cAE1D,IAAI0U,MAAI,CAAC2D,IAAI,CAAC7M,QAAQ,EAAE;gBACtBmB,IAAI,CAAC+D,UAAU,CACb,WAAW,EACXgE,MAAI,CAAC2D,IAAI,CAACrY,SAAS,GAAG,CAAC,GAAG0U,MAAI,CAAC2D,IAAI,CAACrY,SAAS,GAAG,GAAG,GAAG0U,MAAI,CAAC2D,IAAI,CAAC/N,cAAc,GAAG,EACnF,CAAC;cACH;cACA,IAAIoK,MAAI,CAAC2D,IAAI,CAACrY,SAAS,IAAI,CAAC,EAAE;gBAC5B;gBACA0U,MAAI,CAAC2D,IAAI,CAACrY,SAAS,GAAG,CAAC;gBACvB0U,MAAI,CAAC2D,IAAI,CAACtJ,oBAAoB,CAAC,CAAC;cAClC;YACF,CAAC,MAAM;cACL;cACA2F,MAAI,CAACrL,OAAO,EAAE;cACdqL,MAAI,CAAC9N,WAAW,GAAG,MAAM;cACzB8N,MAAI,CAACM,sBAAsB,CAAC,CAAC;cAE7BN,MAAI,CAAC2D,IAAI,CAACzY,QAAQ,GAAGnJ,IAAI,CAACwB,GAAG,CAACyc,MAAI,CAAC2D,IAAI,CAACzY,QAAQ,GAAG,CAAC,EAAE,CAAC,CAAC;cACxD,IAAI8U,MAAI,CAAC2D,IAAI,CAAC7M,QAAQ,EAAE;gBACtBmB,IAAI,CAAC+D,UAAU,CAAC,eAAe,EAAEgE,MAAI,CAAC2D,IAAI,CAACzY,QAAQ,CAAC;cACtD;cACA;cACA,IAAI8U,MAAI,CAAC2D,IAAI,CAACzY,QAAQ,IAAI,CAAC,EAAE;gBAC3B8U,MAAI,CAAC2D,IAAI,CAAC9J,GAAG,CAAC,CAAC;gBACfmG,MAAI,CAAC8F,aAAa,CAAC,CAAC;cACtB;cACA;cACA,IAAI9F,MAAI,CAACrL,OAAO,GAAG,CAAC,EAAE;gBACpB,IAAIqL,MAAI,CAACqD,SAAS,CAACrD,MAAI,CAACmD,IAAI,CAAC,EAAE;kBAC7BnD,MAAI,CAACtR,YAAY,GAAG0H,kBAAM,CAAC9b,KAAK,CAACC,GAAG,CAACylB,MAAI,CAACqD,SAAS,CAACrD,MAAI,CAACmD,IAAI,CAAC,CAACuB,WAAW,CAAC;gBAC7E;gBACA1E,MAAI,CAAC3R,aAAa,GAAG,IAAI;cAC3B;YACF;UACF,CAAC,EACA,CAAC,GAAG,IAAI,CAAC8X,aAAa,CAAC,IAAI,CAAChD,IAAI,CAAC,GAAI,IAAI,EAC1C,KACF,CAAC;UACD;QACF,KAAK,aAAa;UAChB,IAAI,CAAC,IAAI,CAAC7O,kBAAkB,CAAC,IAAI,CAACqP,IAAI,CAAC,EAAE;YACvC,IAAI,CAACmC,aAAa,CAAC,CAAC;YACpB;UACF;UACA,IAAI,CAACnB,WAAW,CAAC,aAAa,CAAC;UAC/B,IAAI,CAACtG,aAAa,CAChB,YAAM;YACJ,IAAI,CAAC2B,MAAI,CAAC1L,kBAAkB,CAAC0L,MAAI,CAAC2D,IAAI,CAAC,EAAE;cACvC,IAAI3D,MAAI,CAAC2D,IAAI,CAACzY,QAAQ,IAAI,CAAC,EAAE;gBAC3B8U,MAAI,CAAC2D,IAAI,CAAC9J,GAAG,CAAC,CAAC;cACjB;cACAmG,MAAI,CAAC8F,aAAa,CAAC,CAAC;cACpB;YACF;YACA;YACA,IAAI9F,MAAI,CAACrL,OAAO,KAAKqL,MAAI,CAACiG,UAAU,CAACjG,MAAI,CAAC9N,WAAW,CAAC,IAAI,CAAC8N,MAAI,CAAC2D,IAAI,EAAE;cACpE3D,MAAI,CAACkG,cAAc,CAAC,CAAC;cACrB;YACF;YACA;YACAlG,MAAI,CAACrL,OAAO,EAAE;YACdqL,MAAI,CAAC9N,WAAW,GAAG,OAAO;YAC1B8N,MAAI,CAACM,sBAAsB,CAAC,CAAC;YAE7BN,MAAI,CAACzV,OAAO,IAAI0L,uBAAK,CAAC5G,IAAI,CAAC,MAAM,CAAC;YAElC2Q,MAAI,CAAC2D,IAAI,CAACzY,QAAQ,GAAGnJ,IAAI,CAACwB,GAAG,CAACyc,MAAI,CAAC2D,IAAI,CAACzY,QAAQ,GAAG,CAAC,EAAE,CAAC,CAAC;YACxD,IAAI8U,MAAI,CAAC2D,IAAI,CAAC7M,QAAQ,EAAE;cACtBmB,IAAI,CAAC+D,UAAU,CAAC,eAAe,EAAEgE,MAAI,CAAC2D,IAAI,CAACzY,QAAQ,CAAC;YACtD;YACA;YACA,IAAI8U,MAAI,CAAC2D,IAAI,CAACzY,QAAQ,IAAI,CAAC,EAAE;cAC3B8U,MAAI,CAAC2D,IAAI,CAAC9J,GAAG,CAAC,CAAC;cACfmG,MAAI,CAAC8F,aAAa,CAAC,CAAC;YACtB;YACA;YACA,IAAI9F,MAAI,CAACrL,OAAO,GAAG,CAAC,EAAE;cACpB,IAAIqL,MAAI,CAACqD,SAAS,CAACrD,MAAI,CAACmD,IAAI,CAAC,EAAE;gBAC7BnD,MAAI,CAACtR,YAAY,GAAG0H,kBAAM,CAAC9b,KAAK,CAACC,GAAG,CAACylB,MAAI,CAACqD,SAAS,CAACrD,MAAI,CAACmD,IAAI,CAAC,CAACuB,WAAW,CAAC;cAC7E;cACA1E,MAAI,CAAC3R,aAAa,GAAG,IAAI;YAC3B;UACF,CAAC,EACA,CAAC,GAAG,IAAI,CAAC8X,aAAa,CAAC,IAAI,CAAChD,IAAI,CAAC,GAAI,IAAI,EAC1C,KACF,CAAC;UACD;QACF,KAAK,WAAW;UACd,IAAI,CAAC,IAAI,CAAC7O,kBAAkB,CAAC,IAAI,CAACqP,IAAI,CAAC,EAAE;YACvC,IAAI,CAACmC,aAAa,CAAC,CAAC;YACpB;UACF;UACA,IAAI,CAACnB,WAAW,CAAC,aAAa,CAAC;UAC/B,IAAI,CAACtG,aAAa,CAChB,YAAM;YACJ,IAAI,CAAC2B,MAAI,CAAC1L,kBAAkB,CAAC0L,MAAI,CAAC2D,IAAI,CAAC,EAAE;cACvC,IAAI3D,MAAI,CAAC2D,IAAI,CAACzY,QAAQ,IAAI,CAAC,EAAE;gBAC3B8U,MAAI,CAAC2D,IAAI,CAAC9J,GAAG,CAAC,CAAC;cACjB;cACAmG,MAAI,CAAC8F,aAAa,CAAC,CAAC;cACpB;YACF;YACA;YACA,IAAI9F,MAAI,CAACrL,OAAO,KAAKqL,MAAI,CAACiG,UAAU,CAACjG,MAAI,CAAC9N,WAAW,CAAC,IAAI,CAAC8N,MAAI,CAAC2D,IAAI,EAAE;cACpE3D,MAAI,CAACkG,cAAc,CAAC,CAAC;cACrB;YACF;YACA;YACAlG,MAAI,CAACrL,OAAO,EAAE;YACdqL,MAAI,CAAC9N,WAAW,GAAG,OAAO;YAC1B8N,MAAI,CAACM,sBAAsB,CAAC,CAAC;YAE7BN,MAAI,CAACzV,OAAO,IAAI0L,uBAAK,CAAC5G,IAAI,CAAC,MAAM,CAAC;YAElC2Q,MAAI,CAAC2D,IAAI,CAACzY,QAAQ,GAAGnJ,IAAI,CAACwB,GAAG,CAACyc,MAAI,CAAC2D,IAAI,CAACzY,QAAQ,GAAG,CAAC,EAAE,CAAC,CAAC;YACxD,IAAI8U,MAAI,CAAC2D,IAAI,CAAC7M,QAAQ,EAAE;cACtBmB,IAAI,CAAC+D,UAAU,CAAC,eAAe,EAAEgE,MAAI,CAAC2D,IAAI,CAACzY,QAAQ,CAAC;YACtD;YACA;YACA,IAAI8U,MAAI,CAAC2D,IAAI,CAACzY,QAAQ,IAAI,CAAC,EAAE;cAC3B8U,MAAI,CAAC2D,IAAI,CAAC9J,GAAG,CAAC,CAAC;cACfmG,MAAI,CAAC8F,aAAa,CAAC,CAAC;YACtB;YACA;YACA,IAAI9F,MAAI,CAACrL,OAAO,GAAG,CAAC,EAAE;cACpB,IAAIqL,MAAI,CAACqD,SAAS,CAACrD,MAAI,CAACmD,IAAI,CAAC,EAAE;gBAC7BnD,MAAI,CAACtR,YAAY,GAAG0H,kBAAM,CAAC9b,KAAK,CAACC,GAAG,CAACylB,MAAI,CAACqD,SAAS,CAACrD,MAAI,CAACmD,IAAI,CAAC,CAACuB,WAAW,CAAC;cAC7E;cACA1E,MAAI,CAAC3R,aAAa,GAAG,IAAI;YAC3B;UACF,CAAC,EACA,CAAC,GAAG,IAAI,CAAC8X,aAAa,CAAC,IAAI,CAAChD,IAAI,CAAC,GAAI,IAAI,EAC1C,KACF,CAAC;UACD;QACF,KAAK,UAAU;UACb,IAAI,CAAC,IAAI,CAAC7O,kBAAkB,CAAC,IAAI,CAACqP,IAAI,CAAC,EAAE;YACvC,IAAI,CAACmC,aAAa,CAAC,CAAC;YACpB;UACF;UACA,IAAI,CAACnB,WAAW,CAAC,aAAa,CAAC;UAC/B,IAAI,CAACtG,aAAa,CAChB,YAAM;YACJ,IAAI,CAAC2B,MAAI,CAAC1L,kBAAkB,CAAC0L,MAAI,CAAC2D,IAAI,CAAC,EAAE;cACvC3D,MAAI,CAAC8F,aAAa,CAAC,CAAC;cACpB;YACF;YACA;YACA,IAAI9F,MAAI,CAACrL,OAAO,KAAKqL,MAAI,CAACiG,UAAU,CAACjG,MAAI,CAAC9N,WAAW,CAAC,IAAI,CAAC8N,MAAI,CAAC2D,IAAI,EAAE;cACpE3D,MAAI,CAACkG,cAAc,CAAC,CAAC;cACrB;YACF;YACA;YACAlG,MAAI,CAACrL,OAAO,EAAE;YACdqL,MAAI,CAAC9N,WAAW,GAAG,MAAM;YACzB8N,MAAI,CAACM,sBAAsB,CAAC,CAAC;YAE7BN,MAAI,CAACzV,OAAO,IAAI0L,uBAAK,CAAC5G,IAAI,CAAC,MAAM,CAAC;YAClC2Q,MAAI,CAAC2D,IAAI,CAACzY,QAAQ,GAAGnJ,IAAI,CAACwB,GAAG,CAACyc,MAAI,CAAC2D,IAAI,CAACzY,QAAQ,GAAG,CAAC,EAAE,CAAC,CAAC;YACxD,IAAI8U,MAAI,CAAC2D,IAAI,CAAC7M,QAAQ,EAAE;cACtBmB,IAAI,CAAC+D,UAAU,CAAC,eAAe,EAAEgE,MAAI,CAAC2D,IAAI,CAACzY,QAAQ,CAAC;YACtD;YACA;YACA,IAAI8U,MAAI,CAAC2D,IAAI,CAACzY,QAAQ,IAAI,CAAC,EAAE;cAC3B8U,MAAI,CAAC2D,IAAI,CAAC9J,GAAG,CAAC,CAAC;cACfmG,MAAI,CAAC8F,aAAa,CAAC,CAAC;YACtB;YACA;YACA,IAAI9F,MAAI,CAACrL,OAAO,GAAG,CAAC,EAAE;cACpB,IAAIqL,MAAI,CAACqD,SAAS,CAACrD,MAAI,CAACmD,IAAI,CAAC,EAAE;gBAC7BnD,MAAI,CAACtR,YAAY,GAAG0H,kBAAM,CAAC9b,KAAK,CAACC,GAAG,CAACylB,MAAI,CAACqD,SAAS,CAACrD,MAAI,CAACmD,IAAI,CAAC,CAACuB,WAAW,CAAC;cAC7E;cACA1E,MAAI,CAAC3R,aAAa,GAAG,IAAI;YAC3B;UACF,CAAC,EACA,CAAC,GAAG,IAAI,CAAC8X,aAAa,CAAC,IAAI,CAAChD,IAAI,CAAC,GAAI,IAAI,EAC1C,KACF,CAAC;UACD;QACF,KAAK,OAAO;UACV,IAAI,CAAC,IAAI,CAAC7O,kBAAkB,CAAC,IAAI,CAACqP,IAAI,CAAC,EAAE;YACvC,IAAI,CAACmC,aAAa,CAAC,CAAC;YACpB;UACF;UACA,IAAI,CAACnB,WAAW,CAAC,aAAa,CAAC;UAC/B,IAAI,CAACtG,aAAa,CAChB,YAAM;YACJ,IAAI,CAAC2B,MAAI,CAAC1L,kBAAkB,CAAC0L,MAAI,CAAC2D,IAAI,CAAC,EAAE;cACvC,IAAI3D,MAAI,CAAC2D,IAAI,CAACzpB,IAAI,KAAK,MAAM,IAAI,CAAC8lB,MAAI,CAAC2D,IAAI,CAACrO,QAAQ,EAAE;gBACpD0K,MAAI,CAACvC,UAAU,CAACuC,MAAI,CAAC2D,IAAI,CAAC;cAC5B;cACA3D,MAAI,CAAC8F,aAAa,CAAC,CAAC;cACpB;YACF;YACA,IAAI9F,MAAI,CAAC2D,IAAI,CAACrY,SAAS,GAAG0U,MAAI,CAAC2D,IAAI,CAAC/N,cAAc,EAAE;cAClDoK,MAAI,CAACzV,OAAO,IAAI0L,uBAAK,CAAC5G,IAAI,CAAC,MAAM,CAAC;cAClC2Q,MAAI,CAAC2D,IAAI,CAACrY,SAAS,GAAGvJ,IAAI,CAACuB,GAAG,CAC5BvB,IAAI,CAACG,KAAK,CAAC8d,MAAI,CAAC2D,IAAI,CAACrY,SAAS,GAAG0U,MAAI,CAAC2D,IAAI,CAAC/N,cAAc,GAAGoK,MAAI,CAAC2D,IAAI,CAACyC,gBAAgB,CAAC,EACvFpG,MAAI,CAAC2D,IAAI,CAAC/N,cACZ,CAAC;cACD,IAAIoK,MAAI,CAAC2D,IAAI,CAAC7M,QAAQ,IAAIkJ,MAAI,CAAC7lB,KAAK,CAACmQ,QAAQ,EAAE;gBAC7C2N,IAAI,CAAC+D,UAAU,CAAC,WAAW,EAAEgE,MAAI,CAAC2D,IAAI,CAACrY,SAAS,GAAG,GAAG,GAAG0U,MAAI,CAAC2D,IAAI,CAAC/N,cAAc,CAAC;cACpF;cACAoK,MAAI,CAAC2D,IAAI,CAAC7E,eAAe,CAACkB,MAAI,CAACzL,MAAM,CAAC;YACxC,CAAC,MAAM;cACL,IAAI,CAACyL,MAAI,CAAC2D,IAAI,CAAC/O,OAAO,EAAE;gBACtBoL,MAAI,CAACqG,KAAK,CAACvH,eAAe,CAACkB,MAAI,CAACzL,MAAM,CAAC;gBACvCyL,MAAI,CAAC2D,IAAI,CAAC/O,OAAO,GAAG,IAAI;gBACxB,IAAIoL,MAAI,CAAC2D,IAAI,CAACzpB,IAAI,KAAK,MAAM,IAAI,CAAC8lB,MAAI,CAAC2D,IAAI,CAACrO,QAAQ,EAAE;kBACpD0K,MAAI,CAACvC,UAAU,CAACuC,MAAI,CAAC2D,IAAI,CAAC;gBAC5B;cACF;cACA3D,MAAI,CAAC8F,aAAa,CAAC,CAAC;YACtB;UACF,CAAC,EACD,IAAI,EACJ,KACF,CAAC;UACD;QACF,KAAK,QAAQ;UACX,IAAI,CAAC,IAAI,CAACxR,kBAAkB,CAAC,IAAI,CAACqP,IAAI,CAAC,EAAE;YACvC,IAAI,CAACmC,aAAa,CAAC,CAAC;YACpB;UACF;UACA,IAAI,CAACnB,WAAW,CAAC,aAAa,CAAC;UAC/B,IAAI,IAAI,CAAC1G,KAAK,IAAI,IAAI,CAAC/jB,IAAI,KAAK,UAAU,EAAE;YAC1C,IAAI,CAACiC,MAAM,CAAC4S,MAAM,GAAG,YAAM;cACzB,IAAI,CAACiR,MAAI,CAAC1L,kBAAkB,CAAC0L,MAAI,CAAC2D,IAAI,CAAC,EAAE;gBACvC,IAAI3D,MAAI,CAAC2D,IAAI,IAAI3D,MAAI,CAAC2D,IAAI,CAACrY,SAAS,IAAI,CAAC,EAAE;kBACzC0U,MAAI,CAAC2D,IAAI,CAAC9J,GAAG,CAAC,CAAC;gBACjB;gBACAmG,MAAI,CAAC8F,aAAa,CAAC,CAAC;gBACpB;cACF;cACA,IAAI,CAAC9F,MAAI,CAAC4F,YAAY,CAAC5F,MAAI,CAACzL,MAAM,EAAEyL,MAAI,CAAC2D,IAAI,CAAC,EAAE;gBAC9C3D,MAAI,CAACrR,IAAI,CAAC,CAAC;gBACX;cACF;cACA,IAAIqR,MAAI,CAACsG,YAAY,CAAC,CAAC,EAAE;gBACvBtG,MAAI,CAAC4D,QAAQ,CAACpuB,CAAC,GAAGwqB,MAAI,CAAC2D,IAAI,CAACnuB,CAAC;gBAC7BwqB,MAAI,CAAC4D,QAAQ,CAAC7f,CAAC,GAAGic,MAAI,CAAC2D,IAAI,CAAC5f,CAAC;gBAC7Bic,MAAI,CAAC4D,QAAQ,CAAC1mB,CAAC,GAAG8iB,MAAI,CAAC2D,IAAI,CAACzmB,CAAC;gBAC7B8iB,MAAI,CAAC4D,QAAQ,CAAC1tB,CAAC,GAAG8pB,MAAI,CAAC2D,IAAI,CAACztB,CAAC;gBAC7B,IAAMqwB,MAAM,GAAGvG,MAAI,CAACxa,MAAM;gBAC1Bwa,MAAI,CAACxa,MAAM,GAAGpB,uBAAiB,CAAC4b,MAAI,EAAEA,MAAI,CAAC2D,IAAI,CAACzmB,CAAC,EAAE8iB,MAAI,CAAC2D,IAAI,CAACztB,CAAC,CAAC;gBAC/D,IAAIqP,uBAAiB,CAACghB,MAAM,CAAC,KAAKhhB,uBAAiB,CAACya,MAAI,CAACxa,MAAM,CAAC,EAAE;kBAChEwa,MAAI,CAAC2E,WAAW,CAAC,aAAa,CAAC;gBACjC;cACF;YACF,CAAC;YACDtkB,mBAAmB,CAAC,IAAI,CAAClE,MAAM,EAAE,CAAC,EAAE,YAAM;cACxC,IAAM+hB,UAAU,GAAG,IAAI7C,UAAU,CAC/B;gBACElhB,KAAK,EAAE6lB,MAAI;gBACX1a,MAAM,EAAE0a,MAAI,CAAC2D,IAAI;gBACjBzpB,IAAI,EAAE8lB,MAAI,CAAC9B,UAAU;gBACrB3C,WAAW,EAAEyE,MAAI,CAAC4D;cACpB,CAAC,EACD5D,MAAI,CAACzgB,OACP,CAAC;cACDhC,GAAG,CAACic,QAAQ,CAAC0E,UAAU,CAAC;YAC1B,CAAC,CAAC;UACJ,CAAC,MAAM;YACL,IAAI,CAACG,aAAa,CAChB,YAAM;cACJ,IAAI,CAAC2B,MAAI,CAAC1L,kBAAkB,CAAC0L,MAAI,CAAC2D,IAAI,CAAC,EAAE;gBACvC,IAAI3D,MAAI,CAAC2D,IAAI,IAAI3D,MAAI,CAAC2D,IAAI,CAACrY,SAAS,IAAI,CAAC,EAAE;kBACzC0U,MAAI,CAAC2D,IAAI,CAAC9J,GAAG,CAAC,CAAC;gBACjB;gBACAmG,MAAI,CAAC8F,aAAa,CAAC,CAAC;gBACpB;cACF;cACA,IAAI9F,MAAI,CAACsG,YAAY,CAAC,CAAC,EAAE;gBACvBtG,MAAI,CAAC4D,QAAQ,CAACpuB,CAAC,GAAGwqB,MAAI,CAAC2D,IAAI,CAACnuB,CAAC;gBAC7BwqB,MAAI,CAAC4D,QAAQ,CAAC7f,CAAC,GAAGic,MAAI,CAAC2D,IAAI,CAAC5f,CAAC;gBAC7Bic,MAAI,CAAC4D,QAAQ,CAAC1mB,CAAC,GAAG8iB,MAAI,CAAC2D,IAAI,CAACzmB,CAAC;gBAC7B8iB,MAAI,CAAC4D,QAAQ,CAAC1tB,CAAC,GAAG8pB,MAAI,CAAC2D,IAAI,CAACztB,CAAC;gBAC7B,IAAMqwB,MAAM,GAAGvG,MAAI,CAACxa,MAAM;gBAC1Bwa,MAAI,CAACxa,MAAM,GAAGpB,uBAAiB,CAAC4b,MAAI,EAAEA,MAAI,CAAC2D,IAAI,CAACzmB,CAAC,EAAE8iB,MAAI,CAAC2D,IAAI,CAACztB,CAAC,CAAC;gBAC/D,IAAIqP,uBAAiB,CAACghB,MAAM,CAAC,KAAKhhB,uBAAiB,CAACya,MAAI,CAACxa,MAAM,CAAC,EAAE;kBAChEwa,MAAI,CAAC2E,WAAW,CAAC,aAAa,CAAC;gBACjC;cACF;cACA,IAAI,CAAC3E,MAAI,CAAC4F,YAAY,CAAC5F,MAAI,CAACzL,MAAM,EAAEyL,MAAI,CAAC2D,IAAI,CAAC,EAAE;gBAC9C3D,MAAI,CAAC7G,MAAM,CAAC6G,MAAI,CAAC2D,IAAI,EAAE,QAAQ,CAAC;gBAChC;cACF;cACA,IAAI3D,MAAI,CAACzG,MAAM,IAAIyG,MAAI,CAACzG,MAAM,CAACiN,GAAG,EAAE;gBAClCxG,MAAI,CAACzV,OAAO,IACV0L,uBAAK,CAAC5G,IAAI,CAACrW,KAAK,CAACK,OAAO,CAAC2mB,MAAI,CAACzG,MAAM,CAACiN,GAAG,CAAC,GAAG/iB,gBAAU,CAACuc,MAAI,CAACzG,MAAM,CAACiN,GAAG,CAAC,GAAGxG,MAAI,CAACzG,MAAM,CAACiN,GAAG,CAAC;cAC9F;cACA,IAAIxG,MAAI,CAAC2D,IAAI,CAACrY,SAAS,GAAG,CAAC,EAAE;gBAC3B0U,MAAI,CAAC2D,IAAI,CAACrY,SAAS,GAAG8H,sBAAsB,CAAC4M,MAAI,EAAEA,MAAI,CAAC2D,IAAI,CAAC;gBAC7D,IACE3D,MAAI,CAAC2D,IAAI,CAAC7M,QAAQ,KACjBpW,MAAM,CAACukB,YAAY,KAAKjF,MAAI,CAAC2D,IAAI,IAChCjjB,MAAM,CAACgd,gBAAgB,KAAKsC,MAAI,CAAC2D,IAAI,IACrCjjB,MAAM,CAAC4X,aAAa,KAAK0H,MAAI,CAAC2D,IAAI,CAAC,EACrC;kBACA1L,IAAI,CAAC+D,UAAU,CAAC,WAAW,EAAEgE,MAAI,CAAC2D,IAAI,CAACrY,SAAS,GAAG,GAAG,GAAG0U,MAAI,CAAC2D,IAAI,CAAC/N,cAAc,CAAC;gBACpF;gBACAoK,MAAI,CAAC2D,IAAI,CAAC1H,UAAU,CAAC+D,MAAI,CAAC;gBAC1B,IAAIA,MAAI,CAAC2D,IAAI,CAACrY,SAAS,IAAI,CAAC,EAAE;kBAC5B0U,MAAI,CAAC2D,IAAI,CAAC9J,GAAG,CAAC,CAAC;kBACfmG,MAAI,CAAC8F,aAAa,CAAC,CAAC;gBACtB;cACF;YACF,CAAC,EACD,IAAI,CAAC1H,UAAU,GAAG,IAAI,EACtB,KACF,CAAC;UACH;UACA;QACF,KAAK,MAAM;UACT,IAAI,CAAC,IAAI,CAAC9J,kBAAkB,CAAC,IAAI,CAACqP,IAAI,CAAC,EAAE;YACvC,IAAI,CAACmC,aAAa,CAAC,CAAC;YACpB;UACF;UACA,IAAI,CAACnB,WAAW,CAAC,aAAa,CAAC;UAC/B,IAAI,CAACxoB,MAAM,CAAC4S,MAAM,GAAG,YAAM;YACzB,IAAI,CAACiR,MAAI,CAAC1L,kBAAkB,CAAC0L,MAAI,CAAC2D,IAAI,CAAC,EAAE;cACvC3D,MAAI,CAAC8F,aAAa,CAAC,CAAC;cACpB;YACF;YACA,IAAI9F,MAAI,CAACsG,YAAY,CAAC,CAAC,EAAE;cACvBtG,MAAI,CAAC4D,QAAQ,CAACpuB,CAAC,GAAGwqB,MAAI,CAAC2D,IAAI,CAACnuB,CAAC;cAC7BwqB,MAAI,CAAC4D,QAAQ,CAAC7f,CAAC,GAAGic,MAAI,CAAC2D,IAAI,CAAC5f,CAAC;cAC7Bic,MAAI,CAAC4D,QAAQ,CAAC1mB,CAAC,GAAG8iB,MAAI,CAAC2D,IAAI,CAACzmB,CAAC;cAC7B8iB,MAAI,CAAC4D,QAAQ,CAAC1tB,CAAC,GAAG8pB,MAAI,CAAC2D,IAAI,CAACztB,CAAC;cAC7B,IAAMqwB,MAAM,GAAGvG,MAAI,CAACxa,MAAM;cAC1Bwa,MAAI,CAACxa,MAAM,GAAGpB,uBAAiB,CAAC4b,MAAI,EAAEA,MAAI,CAAC2D,IAAI,CAACzmB,CAAC,EAAE8iB,MAAI,CAAC2D,IAAI,CAACztB,CAAC,CAAC;cAC/D,IAAIqP,uBAAiB,CAACghB,MAAM,CAAC,KAAKhhB,uBAAiB,CAACya,MAAI,CAACxa,MAAM,CAAC,EAAE;gBAChEwa,MAAI,CAAC2E,WAAW,CAAC,aAAa,CAAC;cACjC;YACF;YACA,IAAI,CAAC3E,MAAI,CAAC4F,YAAY,CAAC5F,MAAI,CAACzL,MAAM,EAAEyL,MAAI,CAAC2D,IAAI,CAAC,EAAE;cAC9C3D,MAAI,CAAC7G,MAAM,CAAC6G,MAAI,CAAC2D,IAAI,EAAE,MAAM,CAAC;cAC9B;YACF;YACA,IAAI3D,MAAI,CAAC2D,IAAI,CAACrY,SAAS,GAAG0U,MAAI,CAAC2D,IAAI,CAAC/N,cAAc,EAAE;cAClDoK,MAAI,CAAC2D,IAAI,CAACrY,SAAS,GAAGvJ,IAAI,CAACuB,GAAG,CAAC0c,MAAI,CAAC2D,IAAI,CAACrY,SAAS,GAAG0U,MAAI,CAACyG,OAAO,EAAEzG,MAAI,CAAC2D,IAAI,CAAC/N,cAAc,CAAC;cAC5F,IAAIoK,MAAI,CAAC2D,IAAI,CAAC7M,QAAQ,IAAIpW,MAAM,CAACukB,YAAY,KAAKjF,MAAI,CAAC2D,IAAI,EAAE;gBAC3D1L,IAAI,CAAC+D,UAAU,CAAC,WAAW,EAAEgE,MAAI,CAAC2D,IAAI,CAACrY,SAAS,GAAG,GAAG,GAAG0U,MAAI,CAAC2D,IAAI,CAAC/N,cAAc,CAAC;cACpF;YACF;UACF,CAAC;UACD;QACF,KAAK,UAAU;UACb,IAAI,CAAC,IAAI,CAACtB,kBAAkB,CAAC,IAAI,CAACqP,IAAI,CAAC,EAAE;YACvC,IAAI,CAACmC,aAAa,CAAC,CAAC;YACpB;UACF;UACA,IAAI,CAACnB,WAAW,CAAC,aAAa,CAAC;UAC/B,IAAI,CAACtG,aAAa,CAChB,YAAM;YACJ,IAAI,CAAC2B,MAAI,CAAC1L,kBAAkB,CAAC0L,MAAI,CAAC2D,IAAI,CAAC,EAAE;cACvC3D,MAAI,CAAC8F,aAAa,CAAC,CAAC;cACpB;YACF;YACA;YACA,IAAI9F,MAAI,CAACrL,OAAO,KAAKqL,MAAI,CAACiG,UAAU,CAACjG,MAAI,CAAC9N,WAAW,CAAC,IAAI,CAAC8N,MAAI,CAAC2D,IAAI,EAAE;cACpE3D,MAAI,CAACkG,cAAc,CAAC,CAAC;cACrB;YACF;YACA;YACAlG,MAAI,CAACzV,OAAO,IAAI0L,uBAAK,CAAC5G,IAAI,CAAC,MAAM,CAAC;YAElC2Q,MAAI,CAACrL,OAAO,EAAE;YACdqL,MAAI,CAAC9N,WAAW,GAAG,MAAM;YACzB8N,MAAI,CAACM,sBAAsB,CAAC,CAAC;YAE7BN,MAAI,CAAC2D,IAAI,CAACzY,QAAQ,GAAGnJ,IAAI,CAACwB,GAAG,CAACyc,MAAI,CAAC2D,IAAI,CAACzY,QAAQ,GAAG,CAAC,EAAE,CAAC,CAAC;YACxD8U,MAAI,CAAC2D,IAAI,CAAC5E,aAAa,CAAC,CAAC;YACzB,IAAIiB,MAAI,CAAC2D,IAAI,CAAC7M,QAAQ,IAAIkJ,MAAI,CAAC7lB,KAAK,CAACmQ,QAAQ,EAAE;cAC7C2N,IAAI,CAAC+D,UAAU,CAAC,eAAe,EAAEgE,MAAI,CAAC2D,IAAI,CAACzY,QAAQ,CAAC;YACtD;YACA;YACA,IAAI8U,MAAI,CAACrL,OAAO,GAAG,CAAC,EAAE;cACpB,IAAIqL,MAAI,CAACqD,SAAS,CAACrD,MAAI,CAACmD,IAAI,CAAC,EAAE;gBAC7BnD,MAAI,CAACtR,YAAY,GAAG0H,kBAAM,CAAC9b,KAAK,CAACC,GAAG,CAACylB,MAAI,CAACqD,SAAS,CAACrD,MAAI,CAACmD,IAAI,CAAC,CAACuB,WAAW,CAAC;cAC7E;cACA1E,MAAI,CAAC3R,aAAa,GAAG,IAAI;YAC3B;YACA;YACA,IAAI2R,MAAI,CAAC2D,IAAI,CAACzY,QAAQ,IAAI,CAAC,EAAE;cAC3B8U,MAAI,CAAC8F,aAAa,CAAC,CAAC;YACtB;UACF,CAAC,EACA,CAAC,GAAG,IAAI,CAACK,aAAa,CAAC,IAAI,CAAChD,IAAI,CAAC,GAAI,IAAI,EAC1C,KACF,CAAC;UACD;QACF,KAAK,SAAS;UACZ,IAAI,CAAC,IAAI,CAAC7O,kBAAkB,CAAC,IAAI,CAACqP,IAAI,CAAC,EAAE;YACvC,IAAI,CAACmC,aAAa,CAAC,CAAC;YACpB;UACF;UACA,IAAI,CAACnB,WAAW,CAAC,aAAa,CAAC;UAC/B,IAAI,CAACtG,aAAa,CAChB,YAAM;YACJ,IAAI,CAAC2B,MAAI,CAAC1L,kBAAkB,CAAC0L,MAAI,CAAC2D,IAAI,CAAC,EAAE;cACvC3D,MAAI,CAAC8F,aAAa,CAAC,CAAC;cACpB;YACF;YACA;YACA,IAAI9F,MAAI,CAACrL,OAAO,KAAKqL,MAAI,CAACiG,UAAU,CAACjG,MAAI,CAAC9N,WAAW,CAAC,IAAI,CAAC8N,MAAI,CAAC2D,IAAI,EAAE;cACpE3D,MAAI,CAACkG,cAAc,CAAC,CAAC;cACrB;YACF;YACA;YACAlG,MAAI,CAACrL,OAAO,EAAE;YACdqL,MAAI,CAAC9N,WAAW,GAAG,MAAM;YACzB8N,MAAI,CAACM,sBAAsB,CAAC,CAAC;YAE7BN,MAAI,CAAC2D,IAAI,CAACzY,QAAQ,GAAGnJ,IAAI,CAACwB,GAAG,CAACyc,MAAI,CAAC2D,IAAI,CAACzY,QAAQ,GAAG,CAAC,EAAE,CAAC,CAAC;YACxD,IAAI8U,MAAI,CAAC2D,IAAI,CAAC7M,QAAQ,IAAIkJ,MAAI,CAAC7lB,KAAK,CAACmQ,QAAQ,EAAE;cAC7C2N,IAAI,CAAC+D,UAAU,CAAC,eAAe,EAAEgE,MAAI,CAAC2D,IAAI,CAACzY,QAAQ,CAAC;YACtD;YACA;YACA,IAAI8U,MAAI,CAACrL,OAAO,GAAG,CAAC,EAAE;cACpB,IAAIqL,MAAI,CAACqD,SAAS,IAAIrD,MAAI,CAACqD,SAAS,CAACrD,MAAI,CAACmD,IAAI,CAAC,EAAE;gBAC/CnD,MAAI,CAACtR,YAAY,GAAG0H,kBAAM,CAAC9b,KAAK,CAACC,GAAG,CAACylB,MAAI,CAACqD,SAAS,CAACrD,MAAI,CAACmD,IAAI,CAAC,CAACuB,WAAW,CAAC;cAC7E;cACA1E,MAAI,CAAC3R,aAAa,GAAG,IAAI;YAC3B;YACA;YACA,IAAI2R,MAAI,CAAC2D,IAAI,CAACzY,QAAQ,IAAI,CAAC,EAAE;cAC3B8U,MAAI,CAAC8F,aAAa,CAAC,CAAC;YACtB;UACF,CAAC,EACA,CAAC,GAAG,IAAI,CAACK,aAAa,CAAC,IAAI,CAAChD,IAAI,CAAC,GAAI,IAAI,EAC1C,KACF,CAAC;UACD,IAAI,IAAI,CAACxb,QAAQ,KAAK,MAAM,EAAE;YAC5BtH,mBAAmB,CAAC,IAAI,CAAClE,MAAM,EAAE,CAAC,EAAE,YAAM;cACxC6jB,MAAI,CAACzV,OAAO,IAAI0L,uBAAK,CAAC5G,IAAI,CAAC,MAAM,CAAC;YACpC,CAAC,CAAC;UACJ;UACA;QACF,KAAK,MAAM;UACT,IAAI,CAAC,IAAI,CAACiF,kBAAkB,CAAC,IAAI,CAACqP,IAAI,CAAC,EAAE;YACvC,IAAI,CAACmC,aAAa,CAAC,CAAC;YACpB;UACF;UACA,IAAI,IAAI,CAACnC,IAAI,CAAC5O,MAAM,EAAE;YACpB,IAAI,CAACyI,YAAY,GAAG,IAAI,CAACuI,gBAAgB,CAAC,CAAC,GAAG,IAAI,CAACC,cAAc,CAAC,IAAI,CAACrC,IAAI,CAAC;UAC9E;UACA,IAAI,CAACgB,WAAW,CAAC,aAAa,CAAC;UAC/B,IAAI,CAACxoB,MAAM,CAAC4S,MAAM,GAAG,YAAM;YACzB,IAAI,CAACiR,MAAI,CAAC1L,kBAAkB,CAAC0L,MAAI,CAAC2D,IAAI,CAAC,EAAE;cACvC,IAAI3D,MAAI,CAAC2D,IAAI,IAAI3D,MAAI,CAAC2D,IAAI,CAACrY,SAAS,IAAI,CAAC,EAAE;gBACzC0U,MAAI,CAAC2D,IAAI,CAAC9J,GAAG,CAAC,CAAC;gBACfmG,MAAI,CAACxC,YAAY,GAAGwC,MAAI,CAAC+F,gBAAgB,CAAC,CAAC,GAAG/F,MAAI,CAACgG,cAAc,CAAChG,MAAI,CAAC2D,IAAI,CAAC;gBAC5E;cACF;cACA3D,MAAI,CAAC8F,aAAa,CAAC,CAAC;cACpB;YACF;YACA,IAAI,CAAC9F,MAAI,CAAC4F,YAAY,CAAC5F,MAAI,CAACzL,MAAM,EAAEyL,MAAI,CAAC2D,IAAI,CAAC,EAAE;cAC9C3D,MAAI,CAACrR,IAAI,CAAC,CAAC;cACX;YACF;YACA,IAAIqR,MAAI,CAACsG,YAAY,CAAC,CAAC,EAAE;cACvBtG,MAAI,CAAC4D,QAAQ,CAACpuB,CAAC,GAAGwqB,MAAI,CAAC2D,IAAI,CAACnuB,CAAC;cAC7BwqB,MAAI,CAAC4D,QAAQ,CAAC7f,CAAC,GAAGic,MAAI,CAAC2D,IAAI,CAAC5f,CAAC;cAC7Bic,MAAI,CAAC4D,QAAQ,CAAC1mB,CAAC,GAAG8iB,MAAI,CAAC2D,IAAI,CAACzmB,CAAC;cAC7B8iB,MAAI,CAAC4D,QAAQ,CAAC1tB,CAAC,GAAG8pB,MAAI,CAAC2D,IAAI,CAACztB,CAAC;cAC7B,IAAMqwB,MAAM,GAAGvG,MAAI,CAACxa,MAAM;cAC1Bwa,MAAI,CAACxa,MAAM,GAAGpB,uBAAiB,CAAC4b,MAAI,EAAEA,MAAI,CAAC2D,IAAI,CAACzmB,CAAC,EAAE8iB,MAAI,CAAC2D,IAAI,CAACztB,CAAC,CAAC;cAC/D,IAAIqP,uBAAiB,CAACghB,MAAM,CAAC,KAAKhhB,uBAAiB,CAACya,MAAI,CAACxa,MAAM,CAAC,EAAE;gBAChEwa,MAAI,CAAC2E,WAAW,CAAC,aAAa,CAAC;cACjC;YACF;UACF,CAAC;UACDtkB,mBAAmB,CAAC,IAAI,CAAClE,MAAM,EAAE,CAAC,EAAE,YAAM;YACxC,IAAM+hB,UAAU,GAAG,IAAI7C,UAAU,CAC/B;cACElhB,KAAK,EAAE6lB,MAAI;cACX1a,MAAM,EAAE0a,MAAI,CAAC2D,IAAI;cACjBzpB,IAAI,EAAE,OAAO;cACbqhB,WAAW,EAAEyE,MAAI,CAAC4D,QAAQ;cAC1BtQ,MAAM,EAAE;YACV,CAAC,EACD0M,MAAI,CAACzgB,OACP,CAAC;YACDhC,GAAG,CAACic,QAAQ,CAAC0E,UAAU,CAAC;UAC1B,CAAC,CAAC;UACF;QACF;UACE,IAAI,CAACvP,IAAI,CAAC,CAAC;MACf;IACF;EAAC;IAAAc,GAAA;IAAA5Y,KAAA,EAED,SAAA8T,MAAMA,CAACrM,QAAQ,EAAE;MACf,IACE,IAAI,CAAC6kB,IAAI,KAAK,UAAU,IACxB7kB,QAAQ,IACRA,QAAQ,CAAC+M,MAAM,KAAK,MAAM,IAC1B,CAAC,IAAI,CAAChR,IAAI,CAAC7D,MAAM,IACjB,CAAC,IAAI,CAACmtB,IAAI,IACV,IAAI,CAACrP,kBAAkB,CAAChW,QAAQ,EAAE,QAAQ,CAAC,EAC3C;QACA,IAAI,CAAC6a,MAAM,CAAC7a,QAAQ,EAAE,QAAQ,CAAC;MACjC;IACF;EAAC;IAAAmR,GAAA;IAAA5Y,KAAA,EAED,SAAA6vB,yBAAyBA,CAAA,EAAG;MAAA,IAAAtG,MAAA;MAC1B,IAAMuG,YAAY,GAAGjd,oBAAoB,CAAC,IAAI,EAAE,UAAApL,QAAQ;QAAA,OAAI8hB,MAAI,CAAC9L,kBAAkB,CAAChW,QAAQ,EAAE,UAAU,CAAC;MAAA,EAAC;MAC1G,IAAIqoB,YAAY,CAACnwB,MAAM,EAAE;QACvB,IAAM8O,MAAM,GAAGuI,0BAA0B,CAAC,IAAI,EAAE8Y,YAAY,CAAC;QAC7D,IAAIrhB,MAAM,EAAE;UACV,IAAI,IAAI,CAACiP,MAAM,KAAK,UAAU,EAAE;YAC9B,IAAI,CAACA,MAAM,GAAG,UAAU;YACxB,IAAI,IAAI,CAAC8O,SAAS,CAAC,IAAI,CAACF,IAAI,CAAC,EAAE;cAC7B,IAAI,CAACC,WAAW,GAAGhN,kBAAM,CAAC9b,KAAK,CAACC,GAAG,CAAC,IAAI,CAAC8oB,SAAS,CAAC,IAAI,CAACF,IAAI,CAAC,CAACyD,YAAY,CAAC;YAC7E;UACF;UACA,IAAI/gB,uBAAuB,CAAC,IAAI,EAAEP,MAAM,CAAC,EAAE;YACzC,IAAI,CAACE,MAAM,GAAGpB,uBAAiB,CAAC,IAAI,EAAEkB,MAAM,CAACpI,CAAC,EAAEoI,MAAM,CAACpP,CAAC,CAAC;YACzD,IAAI,CAAC2vB,SAAS,CAAC,IAAI,CAACtR,MAAM,CAAC;YAC3B,OAAO,IAAI;UACb;UACA,IAAI,CAAC+Q,OAAO,CAAChgB,MAAM,CAAChH,QAAQ,CAAC;UAC7B,IAAI,CAACknB,OAAO,CAAClgB,MAAM,CAACjL,IAAI,CAAC;UACzB,OAAO,IAAI;QACb;MACF;MACA,IAAMwsB,aAAa,GAAGnd,oBAAoB,CAAC,IAAI,EAAE,UAAApL,QAAQ;QAAA,OAAI8hB,MAAI,CAAC9L,kBAAkB,CAAChW,QAAQ,EAAE,MAAM,CAAC;MAAA,EAAC;MACvG,IAAIuoB,aAAa,CAACrwB,MAAM,EAAE;QACxB,IAAM8O,OAAM,GAAGuI,0BAA0B,CAAC,IAAI,EAAEgZ,aAAa,CAAC;QAC9D,IAAIvhB,OAAM,EAAE;UACV,IAAI,IAAI,CAACiP,MAAM,KAAK,MAAM,EAAE;YAC1B,IAAI,CAACA,MAAM,GAAG,MAAM;YACpB,IAAI,IAAI,CAAC8O,SAAS,CAAC,IAAI,CAACF,IAAI,CAAC,EAAE;cAC7B,IAAI,CAACC,WAAW,GAAGhN,kBAAM,CAAC9b,KAAK,CAACC,GAAG,CAAC,IAAI,CAAC8oB,SAAS,CAAC,IAAI,CAACF,IAAI,CAAC,CAACC,WAAW,CAAC;YAC5E;UACF;UACA,IAAIvd,uBAAuB,CAAC,IAAI,EAAEP,OAAM,CAAC,EAAE;YACzC,IAAI,CAACE,MAAM,GAAGpB,uBAAiB,CAAC,IAAI,EAAEkB,OAAM,CAACpI,CAAC,EAAEoI,OAAM,CAACpP,CAAC,CAAC;YACzD,IAAI,CAAC2vB,SAAS,CAAC,IAAI,CAACtR,MAAM,CAAC;YAC3B,OAAO,IAAI;UACb;UACA,IAAI,CAAC+Q,OAAO,CAAChgB,OAAM,CAAChH,QAAQ,CAAC;UAC7B,IAAI,CAACknB,OAAO,CAAClgB,OAAM,CAACjL,IAAI,CAAC;UACzB,OAAO,IAAI;QACb;MACF;MACA,OAAO,KAAK;IACd;EAAC;IAAAoV,GAAA;IAAA5Y,KAAA,EAED,SAAAsrB,OAAOA,CAACjoB,IAAI,EAAE;MACZ,IAAMmB,IAAI,GAAG,IAAI,CAAClB,KAAK,CAAC4c,MAAM,CAACsC,KAAK,CAACnf,IAAI,CAAC;MAC1C,IAAI,CAACA,IAAI,GAAGA,IAAI;MAChB,IAAI,CAACoR,SAAS,GAAGjQ,IAAI,CAACua,cAAc,IAAI,IAAI,CAACA,cAAc,GAAG,IAAI,CAACtK,SAAS,CAAC;MAC7E,SAAA8W,GAAA,MAAA0E,gBAAA,GAA2BjxB,MAAM,CAAC6P,OAAO,CAACrK,IAAI,CAAC,EAAA+mB,GAAA,GAAA0E,gBAAA,CAAAtwB,MAAA,EAAA4rB,GAAA,IAAE;QAA5C,IAAA2E,mBAAA,GAAAzuB,kBAAA,CAAAwuB,gBAAA,CAAA1E,GAAA;UAAO3S,GAAG,GAAAsX,mBAAA;UAAElwB,KAAK,GAAAkwB,mBAAA;QACpB,IAAI,CAACtX,GAAG,CAAC,GAAG5Y,KAAK;MACnB;MACA,SAAAmwB,GAAA,MAAAC,gBAAA,GAA2BpxB,MAAM,CAAC6P,OAAO,CAAC,IAAI,CAACtL,MAAM,CAAC,EAAA4sB,GAAA,GAAAC,gBAAA,CAAAzwB,MAAA,EAAAwwB,GAAA,IAAE;QAAnD,IAAAE,mBAAA,GAAA5uB,kBAAA,CAAA2uB,gBAAA,CAAAD,GAAA;UAAOvX,KAAG,GAAAyX,mBAAA;UAAErwB,OAAK,GAAAqwB,mBAAA;QACpB,IAAI,CAACzX,KAAG,CAAC,GAAG2G,kBAAM,CAAC9b,KAAK,CAACC,GAAG,CAAC1D,OAAK,CAAC;MACrC;MACA,IAAI,IAAI,CAAC0d,MAAM,IAAI,CAAC,IAAI,CAACla,IAAI,CAAC7D,MAAM,EAAE;QACpC,IAAI,CAACqvB,SAAS,CAAC,IAAI,CAACtR,MAAM,CAAC;MAC7B,CAAC,MAAM;QACL,IAAI,CAACoQ,WAAW,CAAC,IAAI,CAAClW,YAAY,CAAC;MACrC;IACF;EAAC;IAAAgB,GAAA;IAAA5Y,KAAA,EAED,SAAAivB,aAAaA,CAAA,EAAG;MAAA,IAAA/E,MAAA;MACd,IAAI,CAACvC,YAAY,CAAC,CAAC;MACnB,IAAI,IAAI,CAAChB,YAAY,IAAI,IAAI,CAAC2F,IAAI,KAAK,UAAU,EAAE;QACjD,IAAI,CAAC4C,gBAAgB,CAAC,CAAC;QACvB;MACF;MACA,IAAIoB,aAAa,GAAG,KAAK;MACzB,IAAI,IAAI,CAACjtB,IAAI,KAAK,UAAU,KAAK,IAAI,CAACqa,MAAM,KAAK,UAAU,IAAI,IAAI,CAACA,MAAM,KAAK,MAAM,CAAC,EAAE;QACtF4S,aAAa,GAAG,IAAI,CAACT,yBAAyB,CAAC,CAAC;MAClD,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC/C,IAAI,IAAI,IAAI,CAACA,IAAI,CAACnlB,KAAK,KAAK,QAAQ,EAAE;QACrD,IAAM4oB,OAAO,GAAG1d,oBAAoB,CAAC,IAAI,EAAE,UAAApL,QAAQ;UAAA,OAAIyiB,MAAI,CAACzM,kBAAkB,CAAChW,QAAQ,CAAC;QAAA,EAAC;QACzF,IAAI8oB,OAAO,CAAC5wB,MAAM,EAAE;UAClB,IAAM8O,MAAM,GAAGuI,0BAA0B,CAAC,IAAI,EAAEuZ,OAAO,CAAC;UACxD,IAAI9hB,MAAM,EAAE;YACV,IAAIO,uBAAuB,CAAC,IAAI,EAAEP,MAAM,CAAC,EAAE;cACzC,IAAI,CAACE,MAAM,GAAGpB,uBAAiB,CAAC,IAAI,EAAEkB,MAAM,CAACpI,CAAC,EAAEoI,MAAM,CAACpP,CAAC,CAAC;cACzD,IAAI,CAAC2vB,SAAS,CAAC,IAAI,CAACtR,MAAM,CAAC;cAC3B;YACF;YACA,IAAI,CAAC+Q,OAAO,CAAChgB,MAAM,CAAChH,QAAQ,CAAC;YAC7B,IAAI,CAACknB,OAAO,CAAClgB,MAAM,CAACjL,IAAI,CAAC;YACzB;UACF;QACF;MACF;MACA,IAAI,CAAC8sB,aAAa,EAAE;QAClB,IAAME,eAAe,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,QAAQ,CAAC;QACzD,IAAI,IAAI,CAAC1S,OAAO,IAAI,CAAC0S,eAAe,CAAC3e,QAAQ,CAAC,IAAI,CAACya,IAAI,CAAC,EAAE;UACxD,IAAI,CAAC+C,cAAc,CAAC,CAAC;QACvB,CAAC,MAAM;UACL,IAAI,CAACvX,IAAI,CAAC,CAAC;QACb;MACF;IACF;EAAC;IAAAc,GAAA;IAAA5Y,KAAA,EAED,SAAA+uB,YAAYA,CAACrR,MAAM,EAAEoP,IAAI,EAAE;MACzB,IAAI,CAACpP,MAAM,EAAE;QACX,OAAO,KAAK;MACd;MACA,IAAI,CAACoP,IAAI,EAAE;QACT,IAAI,CAACmC,aAAa,CAAC,CAAC;QACpB,OAAO,KAAK;MACd;MACA,IAAI,CAAC,IAAI,CAAC5rB,IAAI,KAAK,UAAU,IAAIqa,MAAM,KAAK,MAAM,KAAK,IAAI,CAAC0J,KAAK,IAAIra,uBAAiB,CAAC,IAAI,EAAE+f,IAAI,CAAC,IAAI,IAAI,CAAC1F,KAAK,EAAE;QAChH,OAAO,IAAI;MACb;MACA,OAAOpY,uBAAuB,CAAC,IAAI,EAAE8d,IAAI,CAAC;IAC5C;EAAC;IAAAlU,GAAA;IAAA5Y,KAAA,EAED,SAAAyvB,YAAYA,CAAA,EAAG;MACb,OACE,CAAC,IAAI,CAAC3C,IAAI,CAACnuB,CAAC,KAAK,IAAI,CAACouB,QAAQ,CAACpuB,CAAC,IAAI,IAAI,CAACmuB,IAAI,CAAC5f,CAAC,KAAK,IAAI,CAAC6f,QAAQ,CAAC7f,CAAC,KACnEH,uBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC+f,IAAI,CAAC,IAAI,IAAI,CAAC9Z,KAAK;IAEpD;EAAC;IAAA4F,GAAA;IAAA5Y,KAAA,EAED,SAAAywB,UAAUA,CAAA,EAAG;MACX,IACa/pB,GAAG,GACZ,IAAI,CADNgC,OAAO,CAAIhC,GAAG;MAEhB,IAAMpE,IAAI,GAAG,IAAI,CAACkB,IAAI,CAAC,IAAI,CAACA,IAAI,CAAC7D,MAAM,GAAG,CAAC,CAAC;MAC5C,IAAM+wB,QAAQ,GAAGhqB,GAAG,CAAC6I,IAAI,CAACjN,IAAI,CAAC3D,CAAC,CAAC,CAAC2D,IAAI,CAAC4K,CAAC,CAAC;MACzC,IAAI,CAAC,IAAI,CAAC4f,IAAI,IAAI,IAAI,CAACA,IAAI,CAAC7d,WAAW,EAAE;QACvC,IAAI,CAACggB,aAAa,CAAC,CAAC;QACpB;MACF;MACA;MACA,IACEyB,QAAQ,CAAC5pB,GAAG,IACZ4pB,QAAQ,CAAC5pB,GAAG,CAAC0N,MAAM,KAAK,MAAM,IAC9Bkc,QAAQ,CAAC5pB,GAAG,CAACa,KAAK,KAAK,IAAI,CAACA,KAAK,IACjC+oB,QAAQ,CAAC5pB,GAAG,CAAC0nB,OAAO,CAAC,CAAC,IACtBzhB,uBAAiB,CAAC,IAAI,EAAE2jB,QAAQ,CAAC5pB,GAAG,CAAC,IAAI,CAAC,IAC1C4pB,QAAQ,CAAC5pB,GAAG,CAACxB,MAAM,CAACqrB,OAAO,EAC3B;QACA,IAAI,CAACrrB,MAAM,CAACwS,IAAI,CAAC,CAAC;QAClB;MACF;MACA,IAAI4Y,QAAQ,CAAC9f,KAAK,IAAI,IAAI,CAACkc,IAAI,EAAE;QAC/B,IAAI,CAACxK,MAAM,CAAC,IAAI,CAACwK,IAAI,EAAE,IAAI,CAACpP,MAAM,CAAC;QACnC;MACF;MAEA,IAAI,CAAC,IAAI,CAACpY,MAAM,CAACqrB,OAAO,EAAE;QACxB,IAAI,CAACrrB,MAAM,CAACkT,IAAI,CAAC,CAAC;MACpB;MAEA,IAAI,CAAC5Q,MAAM,GAAGuF,iBAAiB,CAAC,IAAI,CAAC;MACrC,IAAIJ,uBAAiB,CAAC,IAAI,EAAE2jB,QAAQ,EAAE,KAAK,CAAC,IAAI,IAAI,CAACvhB,KAAK,EAAE;QAC1DwF,wBAAwB,CAAC,IAAI,CAAC;QAC9B,IAAI,CAACtH,CAAC,GAAGqjB,QAAQ,CAACrjB,CAAC;QACnB,IAAI,CAAC1O,CAAC,GAAG+xB,QAAQ,CAAC/xB,CAAC;QACnB,IAAI,CAACuO,CAAC,GAAGwjB,QAAQ,CAACxjB,CAAC;QACnB,IAAI,IAAI,CAAC+f,WAAW,CAACnmB,GAAG,KAAK,IAAI,EAAE;UACjC,IAAI,CAACmmB,WAAW,CAACnmB,GAAG,GAAG,IAAI;UAC3B,IAAI,CAACmmB,WAAW,CAACrc,KAAK,GAAG,KAAK;QAChC;QACA,IAAI,CAACqc,WAAW,GAAGvmB,GAAG,CAAC6I,IAAI,CAAC,IAAI,CAAC5Q,CAAC,CAAC,CAAC,IAAI,CAACuO,CAAC,CAAC;QAC3C,IAAI,IAAI,CAAC+f,WAAW,CAACnmB,GAAG,KAAK,IAAI,EAAE;UACjC,IAAI,CAACmmB,WAAW,CAACnmB,GAAG,GAAG,IAAI;UAC3B,IAAI,CAACmmB,WAAW,CAACrc,KAAK,GAAG,IAAI;QAC/B;QACAuC,yBAAyB,CAAC,IAAI,CAAC;QAC/B,IAAI,CAAC3P,IAAI,CAACwO,GAAG,CAAC,CAAC;;QAEf;QACA,IAAI,IAAI,CAACyd,YAAY,CAAC,CAAC,EAAE;UACvB,IAAI,CAACnN,MAAM,CAAC,IAAI,CAACwK,IAAI,EAAE,IAAI,CAACpP,MAAM,CAAC;UACnC;QACF;QACA,IAAI,IAAI,CAACqR,YAAY,CAAC,IAAI,CAACrR,MAAM,EAAE,IAAI,CAACoP,IAAI,CAAC,EAAE;UAC7C,IAAI,CAACtpB,IAAI,GAAG,EAAE;UACd,IAAI,CAACmkB,YAAY,CAAC,CAAC;UACnB,IAAI,CAAChZ,MAAM,GAAGpB,uBAAiB,CAAC,IAAI,EAAE,IAAI,CAACuf,IAAI,CAACzmB,CAAC,EAAE,IAAI,CAACymB,IAAI,CAACztB,CAAC,CAAC;UAC/D,IAAI,CAAC2vB,SAAS,CAAC,IAAI,CAACtR,MAAM,CAAC;UAC3B;QACF;QAEA,IAAI,CAAC,IAAI,CAACla,IAAI,CAAC7D,MAAM,EAAE;UACrB,IAAI,CAACmY,IAAI,CAAC,CAAC;QACb;MACF,CAAC,MAAM;QACL,IAAA8R,cAAA,GAEI,IAAI,CADNlhB,OAAO;UAAI0Y,IAAI,GAAAwI,cAAA,CAAJxI,IAAI;UAAEvX,MAAM,GAAA+f,cAAA,CAAN/f,MAAM;QAEzB;QACA,IAAM6lB,MAAM,GAAG,IAAI,CAAC/gB,MAAM;QAC1B,IAAIQ,KAAK,GAAG,IAAI,CAACA,KAAK;QACtB,IAAI,IAAI,CAAC2O,OAAO,GAAG,CAAC,EAAE;UACpB3O,KAAK,IAAI,GAAG;QACd;QACAD,eAAe,CAAC,IAAI,EAAEwhB,QAAQ,CAACrqB,CAAC,EAAEqqB,QAAQ,CAACrxB,CAAC,EAAE,IAAI,CAAC8P,KAAK,CAAC;QACzD6N,gBAAgB,CAAC,IAAI,EAAEnT,MAAM,CAAC,IAAIuX,IAAI,CAACwP,mBAAmB,CAAC,IAAI,CAACttB,KAAK,CAAC;QACtE,IAAIoL,uBAAiB,CAACghB,MAAM,CAAC,KAAKhhB,uBAAiB,CAAC,IAAI,CAACC,MAAM,CAAC,EAAE;UAChE;UACA,IAAI,CAACmf,WAAW,CAAC,cAAc,CAAC;QAClC;MACF;IACF;EAAC;IAAAlV,GAAA;IAAA5Y,KAAA,EAED,SAAAolB,UAAUA,CAAC3d,QAAQ,EAAE;MACnB,IAAI,CAACA,QAAQ,IAAI,IAAI,CAACqlB,IAAI,KAAKrlB,QAAQ,IAAI,IAAI,CAACyW,MAAM,EAAE;QACtD;MACF;MACA,IAAM2S,WAAW,GAAG,IAAI,CAAC/D,IAAI;MAC7B,IAAI,IAAI,CAACzpB,IAAI,KAAK,UAAU,EAAE;QAC5B,IAAIoE,QAAQ,CAAC+M,MAAM,KAAK,QAAQ,EAAE;UAChC,IAAI,CAACsc,UAAU,CAACrpB,QAAQ,CAAC;QAC3B,CAAC,MAAM;UACL,IAAI,CAACsf,YAAY,CAACtf,QAAQ,CAAC;QAC7B;MACF,CAAC,MAAM;QACL,IAAI,CAAC6a,MAAM,CAAC7a,QAAQ,EAAE,QAAQ,CAAC;MACjC;MACA,IAAI,CAACkf,YAAY,GAAGkK,WAAW;IACjC;EAAC;IAAAjY,GAAA;IAAA5Y,KAAA,EAED,SAAA8X,IAAIA,CAAA,EAAG;MACL,IAAI,IAAI,CAACmV,WAAW,CAACnmB,GAAG,CAACa,KAAK,KAAK,IAAI,CAACA,KAAK,IAAI,IAAI,CAACslB,WAAW,CAACrc,KAAK,EAAE;QACvE,IAAI,CAAC0R,MAAM,CAAC,IAAI,CAAC2K,WAAW,CAAC;QAC7B;MACF;MACA,IAAI,CAAC4B,gBAAgB,CAAC,CAAC;MACvB,IAAI,CAAC7B,OAAO,GAAG,IAAI;MACnB,IAAI,CAACtP,MAAM,GAAG,IAAI;MAClB,IAAI,CAACoP,IAAI,GAAG,IAAI;MAChB,IAAI,CAACC,QAAQ,GAAG,IAAI;MACpB,IAAI,CAACE,WAAW,CAACnmB,GAAG,GAAG,IAAI;MAC3B,IAAI,CAACmmB,WAAW,CAACrc,KAAK,GAAG,IAAI;MAC7B,IAAI,CAACpN,IAAI,GAAG,EAAE;MACd,IAAI,CAACmkB,YAAY,CAAC,CAAC;MACnB,IAAI,CAACmG,WAAW,CAAC,eAAe,CAAC;IACnC;EAAC;IAAAlV,GAAA;IAAA5Y,KAAA,EAED,SAAAwnB,aAAaA,CAACrR,QAAQ,EAAEsR,IAAI,EAAoB;MAAA,IAAAuD,MAAA;MAAA,IAAlBzQ,SAAS,GAAAlZ,SAAA,CAAA1B,MAAA,QAAA0B,SAAA,QAAAyL,SAAA,GAAAzL,SAAA,MAAG,IAAI;MAC5C,IAAMqmB,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;QACpB,IAAQhQ,MAAM,GAAKsT,MAAI,CAACtiB,OAAO,CAAvBgP,MAAM;QACd,IAAIA,MAAM,EAAE;UACV;QACF;QACAvB,QAAQ,CAAC,CAAC;MACZ,CAAC;MACD,IAAI,IAAI,CAAC+H,MAAM,EAAE;QACf;MACF;MACA,IAAI,CAACyJ,YAAY,CAAC,CAAC;MACnBpN,SAAS,IAAImN,OAAO,CAAC,CAAC;MACtB,IAAI,CAAC3C,QAAQ,GAAGC,WAAW,CAAC0C,OAAO,EAAED,IAAI,CAAC;IAC5C;EAAC;IAAA7O,GAAA;IAAA5Y,KAAA,EAED,SAAA2nB,YAAYA,CAAA,EAAG;MACb,IAAI,IAAI,CAAC5C,QAAQ,EAAE;QACjBG,aAAa,CAAC,IAAI,CAACH,QAAQ,CAAC;QAC5B,IAAI,CAACA,QAAQ,GAAG,IAAI;MACtB;IACF;EAAC;IAAAnM,GAAA;IAAA5Y,KAAA,EAED,SAAA4uB,IAAIA,CAAA,EAAG;MACL,IAAI,IAAI,CAACna,SAAS,IAAI,CAAC,EAAE;QACvB,IAAI,CAACuO,GAAG,CAAC,CAAC;MACZ,CAAC,MAAM,IAAI,IAAI,CAACwL,OAAO,CAAC,CAAC,EAAE;QACzB,IAAI,CAACiC,UAAU,CAAC,CAAC;MACnB;IACF;EAAC;IAAA7X,GAAA;IAAA5Y,KAAA,EAED,SAAA+wB,OAAOA,CAAA,EAAG;MAAA,IAAArF,MAAA;MACR,IACahlB,GAAG,GACZ,IAAI,CADNgC,OAAO,CAAIhC,GAAG;MAEhB,IAAIomB,IAAI;MACR,KAAK,IAAInuB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;QAC3BiR,mBAAmB,CAAC,IAAI,CAACjR,CAAC,EAAE,IAAI,CAACuO,CAAC,EAAExG,GAAG,CAAC6I,IAAI,EAAE5Q,CAAC,EAAE,UAAAoR,IAAI,EAAI;UACvD,IAAI,CAAC2b,MAAI,CAACpoB,KAAK,CAACqQ,KAAK,CAAC5D,IAAI,CAACpR,CAAC,CAAC,CAACoR,IAAI,CAAC7C,CAAC,CAAC,CAAC8G,MAAM,IAAI,CAACjE,IAAI,CAACa,KAAK,EAAE;YAC3Dkc,IAAI,GAAGpB,MAAI,CAACpoB,KAAK,CAACqQ,KAAK,CAAC5D,IAAI,CAACpR,CAAC,CAAC,CAACoR,IAAI,CAAC7C,CAAC,CAAC;YACvC;UACF;QACF,CAAC,CAAC;QACF,IAAI4f,IAAI,EAAE;UACR,IAAI,CAACxK,MAAM,CAACwK,IAAI,CAAC;UACjB;QACF;MACF;IACF;EAAC;IAAAlU,GAAA;IAAA5Y,KAAA,EAED,SAAAgxB,OAAOA,CAACvpB,QAAQ,EAAE;MAAA,IAAAwpB,MAAA;MAChB,IACavqB,GAAG,GACZ,IAAI,CADNgC,OAAO,CAAIhC,GAAG;MAEhB,IAAIomB,IAAI,GAAG,IAAI;MACfld,mBAAmB,CAAC,IAAI,CAACjR,CAAC,EAAE,IAAI,CAACuO,CAAC,EAAExG,GAAG,CAAC6I,IAAI,EAAE,IAAI,CAACyD,KAAK,EAAE,UAAAjD,IAAI,EAAI;QAChE,IACE,CAACA,IAAI,CAACa,KAAK,KACV,CAACkc,IAAI,IACJ7f,cAAc,CAAC8C,IAAI,CAACpR,CAAC,EAAEoR,IAAI,CAAC7C,CAAC,EAAEzF,QAAQ,CAAC9I,CAAC,EAAE8I,QAAQ,CAACyF,CAAC,CAAC,GACpDD,cAAc,CAAC6f,IAAI,CAACnuB,CAAC,EAAEmuB,IAAI,CAAC5f,CAAC,EAAEzF,QAAQ,CAAC9I,CAAC,EAAE8I,QAAQ,CAACyF,CAAC,CAAC,CAAC,EAC3D;UACA4f,IAAI,GAAGmE,MAAI,CAAC3tB,KAAK,CAACqQ,KAAK,CAAC5D,IAAI,CAACpR,CAAC,CAAC,CAACoR,IAAI,CAAC7C,CAAC,CAAC;UACvC;QACF;MACF,CAAC,CAAC;MACF,IAAI4f,IAAI,EAAE;QACR,IAAI,CAACxK,MAAM,CAACwK,IAAI,CAAC;MACnB,CAAC,MAAM;QACL,IAAI,CAAChV,IAAI,CAAC,CAAC;MACb;IACF;EAAC;IAAAc,GAAA;IAAA5Y,KAAA,EAED,SAAA2tB,SAASA,CAAA,EAAG;MACV,IACajnB,GAAG,GACZ,IAAI,CADNgC,OAAO,CAAIhC,GAAG;MAEhB,IAAI,CAAConB,WAAW,CAAC,aAAa,CAAC;MAC/B,IAAI,CAACxoB,MAAM,CAACiS,cAAc,GAAI,CAAC,IAAIxZ,WAAW,GAAG,IAAI,CAAC,GAAI9B,WAAW;MACrE,IAAIyK,GAAG,CAAC6I,IAAI,CAAC,IAAI,CAAC5Q,CAAC,CAAC,CAAC,IAAI,CAACuO,CAAC,CAAC,CAACpG,GAAG,KAAK,IAAI,EAAE;QACzCJ,GAAG,CAAC6I,IAAI,CAAC,IAAI,CAAC5Q,CAAC,CAAC,CAAC,IAAI,CAACuO,CAAC,CAAC,CAACpG,GAAG,GAAG,IAAI;QACnCJ,GAAG,CAAC6I,IAAI,CAAC,IAAI,CAAC5Q,CAAC,CAAC,CAAC,IAAI,CAACuO,CAAC,CAAC,CAACwW,OAAO,CAACnhB,IAAI,CAAC,IAAI,CAAC;QAC3CmE,GAAG,CAAC6I,IAAI,CAAC,IAAI,CAAC5Q,CAAC,CAAC,CAAC,IAAI,CAACuO,CAAC,CAAC,CAAC0D,KAAK,GAAG,KAAK;MACxC;MACA,IAAI,CAACtL,MAAM,CAAC4rB,UAAU,GAAG,YAAM;QAC7B;MAAA,CACD;IACH;EAAC;IAAAtY,GAAA;IAAA5Y,KAAA,EAED,SAAA4tB,KAAKA,CAAA,EAAG;MAAA,IAAAuD,OAAA;MACN,IAAI,CAACrD,WAAW,CAAC,YAAY,CAAC;MAC9B,IAAI,CAAClmB,MAAM,EAAE;MACb,IAAI,CAACtC,MAAM,CAACooB,IAAI,GAAG,KAAK;MACxB,IAAI,CAACpoB,MAAM,CAAC4rB,UAAU,GAAG,YAAM;QAC7Bvc,wBAAwB,CAACwc,OAAI,CAAC;QAC9B;QACA,IAAIpuB,KAAK,GAAGouB,OAAI,CAAC7tB,KAAK,CAACogB,OAAO,CAAChS,OAAO,CAACyf,OAAI,CAAC;QAC5C,IAAIpuB,KAAK,GAAG,CAAC,EAAE;UACbouB,OAAI,CAAC7tB,KAAK,CAACogB,OAAO,CAACnhB,IAAI,CAAC4uB,OAAI,CAAC;QAC/B;QACAA,OAAI,CAACxD,SAAS,CAAC,CAAC;MAClB,CAAC;IACH;EAAC;IAAA/U,GAAA;IAAA5Y,KAAA,EAED,SAAAgjB,GAAGA,CAAA,EAAG;MACJ,IAAI,IAAI,CAAC9E,MAAM,EAAE;QACf;MACF;MACA,IAAAmM,cAAA,GAEI,IAAI,CADN3hB,OAAO;QAAImB,MAAM,GAAAwgB,cAAA,CAANxgB,MAAM;QAAEuX,IAAI,GAAAiJ,cAAA,CAAJjJ,IAAI;MAGzB,IAAI,CAACsB,MAAM,IACT,IAAI,CAACA,MAAM,CAACM,GAAG,IACf,IAAI,CAACtP,OAAO,IACZ0L,uBAAK,CAAC5G,IAAI,CAACrW,KAAK,CAACK,OAAO,CAAC,IAAI,CAACkgB,MAAM,CAACM,GAAG,CAAC,GAAGpW,gBAAU,CAAC,IAAI,CAAC8V,MAAM,CAACM,GAAG,CAAC,GAAG,IAAI,CAACN,MAAM,CAACM,GAAG,CAAC;MAE5F,IAAI,CAAC2E,YAAY,CAAC,CAAC;MACnB,IAAI,IAAI,CAAC1H,QAAQ,IAAIpW,MAAM,CAAC4X,aAAa,KAAK,IAAI,EAAE;QAClD5X,MAAM,CAACunB,YAAY,CAAC,IAAI,CAAC;MAC3B;MACA,IAAI,IAAI,CAACtE,IAAI,IAAI,IAAI,CAACA,IAAI,CAACrO,QAAQ,KAAK,IAAI,EAAE;QAC5C,IAAI,CAACqO,IAAI,CAACrO,QAAQ,GAAG,IAAI;MAC3B;MACA,IAAI,CAAChK,SAAS,GAAG,CAAC;MAClB,IAAI,CAACjR,IAAI,GAAG,EAAE;MACd,IAAI,CAACka,MAAM,GAAG,IAAI;MAClB,IAAI,CAAC2C,SAAS,GAAG,MAAM;MACvB,IAAI,CAACnC,MAAM,GAAG,IAAI;MAClB,IAAI,CAAC4E,QAAQ,CAAC,CAAC;MACf,IAAI,IAAI,CAACxf,KAAK,EAAE;QACd,IAAI,CAACA,KAAK,CAAC6iB,UAAU,EAAE;QACvB,IAAI,IAAI,CAAC7iB,KAAK,CAACmQ,QAAQ,IAAI,IAAI,CAACnQ,KAAK,CAACujB,gBAAgB,IAAI,IAAI,CAACvjB,KAAK,CAACujB,gBAAgB,CAACd,iBAAiB,EAAE;UACvG3E,IAAI,CAAC+D,UAAU,CACb,iBAAiB,EACjB,IAAI,CAAC7hB,KAAK,CAAC6iB,UAAU,GAAG,GAAG,GAAGjb,IAAI,CAACuB,GAAG,CAACvO,cAAc,EAAE,IAAI,CAACoF,KAAK,CAACpF,cAAc,CAClF,CAAC;QACH;QACA;QACA,IAAI6E,KAAK,GAAG,IAAI,CAACO,KAAK,CAACkf,KAAK,CAAC9Q,OAAO,CAAC,IAAI,CAAC;QAC1C,IAAI3O,KAAK,IAAI,CAAC,EAAE;UACd,IAAI,CAACO,KAAK,CAACkf,KAAK,CAAC/Q,MAAM,CAAC1O,KAAK,EAAE,CAAC,CAAC;QACnC;QACA;QACA,IAAI,IAAI,CAACO,KAAK,CAAC8qB,YAAY,KAAK,IAAI,EAAE;UACpChN,IAAI,CAAC+D,UAAU,CAAC,WAAW,EAAE,IAAI,CAAC1Q,SAAS,GAAG,GAAG,GAAG,IAAI,CAACsK,cAAc,CAAC;QAC1E;MACF;MACA,IAAI,CAAC6O,KAAK,CAAC,CAAC;MACZ5Q,gBAAgB,CAAC,IAAI,EAAEnT,MAAM,CAAC,IAAIuX,IAAI,CAACkI,sBAAsB,CAAC,IAAI,CAAChmB,KAAK,CAAC;IAC3E;EAAC;IAAAsV,GAAA;IAAA5Y,KAAA,EAED,SAAAujB,KAAKA,CAAA,EAAG;MACN,IACa7c,GAAG,GACZ,IAAI,CADNgC,OAAO,CAAIhC,GAAG;MAEhB,IAAI,CAACuI,WAAW,GAAG,IAAI;MACvB;MACA,IAAIlM,KAAK,GAAG,IAAI,CAACO,KAAK,CAACogB,OAAO,CAAChS,OAAO,CAAC,IAAI,CAAC;MAC5C,IAAI3O,KAAK,IAAI,CAAC,EAAE;QACd,IAAI,CAACO,KAAK,CAACogB,OAAO,CAACjS,MAAM,CAAC1O,KAAK,EAAE,CAAC,CAAC;MACrC;MACA;MACA,IAAMsuB,YAAY,GAAG3qB,GAAG,CAAC6I,IAAI,CAAC,IAAI,CAAC5Q,CAAC,CAAC,CAAC,IAAI,CAACuO,CAAC,CAAC,CAACwW,OAAO,CAAChS,OAAO,CAAC,IAAI,CAAC;MACnE,IAAI3O,KAAK,IAAI,CAAC,EAAE;QACd2D,GAAG,CAAC6I,IAAI,CAAC,IAAI,CAAC5Q,CAAC,CAAC,CAAC,IAAI,CAACuO,CAAC,CAAC,CAACwW,OAAO,CAACjS,MAAM,CAAC4f,YAAY,EAAE,CAAC,CAAC;MAC1D;MACA3qB,GAAG,CAAC8B,WAAW,CAAC,IAAI,CAAC;MACrB,IAAI,CAACob,OAAO,CAAC;QAAEC,KAAK,EAAE,IAAI;QAAEvf,OAAO,EAAE;MAAK,CAAC,CAAC;IAC9C;EAAC;IAAAsU,GAAA;IAAA5Y,KAAA,EAED,SAAA8tB,WAAWA,CAACzW,KAAK,EAAE;MACjBD,cAAc,CAACC,KAAK,EAAE,IAAI,EAAEpb,WAAW,CAAC;IAC1C;EAAC;IAAA2c,GAAA;IAAA5Y,KAAA,EAED,SAAAypB,sBAAsBA,CAAA,EAAG;MAAA,IAAA6H,OAAA;MACvB,IACalQ,IAAI,GACb,IAAI,CADN1Y,OAAO,CAAI0Y,IAAI;MAEjB,IAAI,IAAI,CAACnB,QAAQ,IAAI,IAAI,CAAC3c,KAAK,CAACmQ,QAAQ,IAAI,IAAI,CAACnQ,KAAK,CAAC8qB,YAAY,KAAK,IAAI,EAAE;QAC5E,IAAI,IAAI,CAACtQ,OAAO,KAAK,CAAC,EAAE;UACtBsD,IAAI,CAAC+D,UAAU,CAAC,SAAS,EAAE,UAAA1E,OAAO;YAAA,OAAKA,OAAO,CAACwK,SAAS,GAAGqG,OAAI,CAAClL,iBAAiB,CAAC,CAAC,CAAC6E,SAAS;UAAA,CAAC,CAAC;QACjG,CAAC,MAAM,IAAI,IAAI,CAACnN,OAAO,GAAG,CAAC,EAAE;UAC3BsD,IAAI,CAAC+D,UAAU,CAAC,cAAc,EAAE,IAAI,CAACrH,OAAO,CAAC;QAC/C,CAAC,MAAM;UACLsD,IAAI,CAAC+D,UAAU,CAAC,SAAS,EAAE,UAAA1E,OAAO;YAAA,OAAKA,OAAO,CAACwK,SAAS,GAAG,EAAE;UAAA,CAAC,CAAC;QACjE;MACF;IACF;EAAC;IAAArS,GAAA;IAAA5Y,KAAA,EAED,SAAAomB,iBAAiBA,CAAA,EAAG;MAClB,IACahF,IAAI,GACb,IAAI,CADN1Y,OAAO,CAAI0Y,IAAI;MAEjB,IAAM8J,UAAU,GAAGrlB,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MAChDolB,UAAU,CAAC/R,SAAS,GAAG,cAAc;MACrC+R,UAAU,CAACroB,EAAE,GAAG,SAAS;MAEzB,IAAI,IAAI,CAACib,OAAO,EAAE;QAChB,IAAMkG,OAAO,GAAGne,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;QAC7Cke,OAAO,CAAC7K,SAAS,GAAG,mBAAmB;QACvC6K,OAAO,CAACxV,GAAG,GAAG4S,IAAI,CAACiD,SAAS,CAAC5nB,kBAAkB,CAACoV,QAAQ,CAAC,IAAI,CAACwJ,WAAW,CAAC,GAAG,MAAM,GAAG,IAAI,CAACA,WAAW,CAAC;QACvG,IAAMkJ,OAAO,GAAG1e,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;QAC7Cye,OAAO,CAAC1hB,EAAE,GAAG,cAAc;QAC3B0hB,OAAO,CAACR,WAAW,GAAG,IAAI,CAACjG,OAAO;QAClCoN,UAAU,CAAC7R,WAAW,CAAC2K,OAAO,CAAC;QAC/BkH,UAAU,CAAC7R,WAAW,CAACkL,OAAO,CAAC;MACjC;MACA,OAAO2G,UAAU;IACnB;EAAC;IAAAtS,GAAA;IAAA5Y,KAAA,EAED,SAAAuxB,YAAYA,CAAC9iB,MAAM,EAAE6d,IAAI,EAAE5O,MAAM,EAAE8T,YAAY,EAAE;MAC/C,IACapQ,IAAI,GACb,IAAI,CADN1Y,OAAO,CAAI0Y,IAAI;MAEjB,IAAMqQ,eAAe,GAAGrW,sBAAsB,CAAC,IAAI,CAACC,WAAW,CAAC;MAChE,IACEiR,IAAI,KAAK,SAAS,IAClBA,IAAI,KAAKmF,eAAe,IACxB,EAAEj1B,eAAe,CAACqV,QAAQ,CAACya,IAAI,CAAC,IAAI9vB,eAAe,CAACqV,QAAQ,CAAC4f,eAAe,CAAC,CAAC,EAC9E;QACA,IAAI,CAAC3T,OAAO,GAAG,CAAC;QAChB,IAAI,CAACzC,WAAW,GAAG,IAAI;QACvB,IAAI,CAACoO,sBAAsB,CAAC,CAAC;MAC/B;MACA,IAAI,IAAI,CAAC6C,IAAI,KAAKA,IAAI,IAAI,IAAI,CAAC5O,MAAM,KAAKA,MAAM,EAAE;QAChD,IAAI,CAAC4O,IAAI,GAAGA,IAAI;QAChB,IAAI,CAAChpB,KAAK,CAACmQ,QAAQ,IAAI,IAAI,CAACnQ,KAAK,CAAC8qB,YAAY,KAAK,IAAI,IAAIhN,IAAI,CAAC+D,UAAU,CAAC,MAAM,EAAE,IAAI,CAACmH,IAAI,CAAC;QAC7F,IAAI,IAAI,CAACE,SAAS,IAAI,IAAI,CAACA,SAAS,CAACF,IAAI,CAAC,EAAE;UAC1C,IAAI,CAACC,WAAW,GAAGF,cAAc,CAACC,IAAI,EAAE5O,MAAM,EAAE6B,kBAAM,EAAE,IAAI,CAAC;UAC7D,IAAI,CAAC,IAAI,CAACzB,OAAO,EAAE;YACjB,IAAI,CAACtG,aAAa,GAAG+H,kBAAM,CAAC9b,KAAK,CAACC,GAAG,CAAC,IAAI,CAAC8oB,SAAS,CAACF,IAAI,CAAC,CAAC,eAAe,CAAC,CAAC;YAC5E,IAAI,CAACzU,YAAY,GAAG0H,kBAAM,CAAC9b,KAAK,CAACC,GAAG,CAAC,IAAI,CAAC8oB,SAAS,CAACF,IAAI,CAAC,CAAC,cAAc,CAAC,CAAC;YAC1E,IAAI,CAACoF,UAAU,GAAGnS,kBAAM,CAAC9b,KAAK,CAACC,GAAG,CAAC,IAAI,CAAC8oB,SAAS,CAACF,IAAI,CAAC,CAAC,YAAY,CAAC,CAAC;YACtE,IAAI,CAAC7U,WAAW,GAAG8H,kBAAM,CAAC9b,KAAK,CAACC,GAAG,CAAC,IAAI,CAAC8oB,SAAS,CAACF,IAAI,CAAC,CAAC,aAAa,CAAC,CAAC;UAC1E;QACF;MACF;MACA,IAAI,CAAC3F,YAAY,GAAG6K,YAAY,GAAG,IAAI,CAAC7K,YAAY,GAAG,IAAI;MAC3D,OAAO,IAAI,CAACrE,MAAM,CAAC7T,MAAM,EAAEiP,MAAM,CAAC;IACpC;EAAC;IAAA9E,GAAA;IAAA5Y,KAAA,EAED,SAAAqvB,cAAcA,CAAA,EAAG;MAAA,IAAAsC,OAAA;MACf,IACajrB,GAAG,GACZ,IAAI,CADNgC,OAAO,CAAIhC,GAAG;MAEhB,IAAIsX,aAAa,GAAG,EAAE;MACtB,IAAI,IAAI,CAAClN,QAAQ,KAAK,MAAM,EAAE;QAC5BkN,aAAa,GAAG,CAAC,MAAM,CAAC;MAC1B,CAAC,MAAM;QACLA,aAAa,GAAG,CAAC,YAAY,CAAC;QAC9B,IAAMna,SAAS,GAAG;UAChB+tB,OAAO,EAAE,IAAI,CAACtuB,KAAK,CAAC4c,MAAM,CAACrc,SAAS,CAAC+tB,OAAO;UAC5CC,UAAU,EAAE,IAAI,CAACvuB,KAAK,CAAC4c,MAAM,CAACrc,SAAS,CAACguB;QAC1C,CAAC;QACD,SAAAC,GAAA,MAAAC,gBAAA,GAA2B/yB,MAAM,CAAC6P,OAAO,CAAChL,SAAS,CAAC,EAAAiuB,GAAA,GAAAC,gBAAA,CAAApyB,MAAA,EAAAmyB,GAAA,IAAE;UAAjD,IAAAE,mBAAA,GAAAvwB,kBAAA,CAAAswB,gBAAA,CAAAD,GAAA;YAAOlZ,GAAG,GAAAoZ,mBAAA;YAAEhyB,KAAK,GAAAgyB,mBAAA;UACpB,IAAIhyB,KAAK,CAAC0mB,MAAM,IAAI1mB,KAAK,CAAC0mB,MAAM,CAAC7U,QAAQ,CAAC,IAAI,CAACwJ,WAAW,CAAC,EAAE;YAC3D2C,aAAa,CAACzb,IAAI,CAACqW,GAAG,CAAC;YACvB;UACF;QACF;MACF;MAEA,IAAM2X,OAAO,GAAG,IAAI,CAACjtB,KAAK,CAACO,SAAS,CAACwD,MAAM,CAAC,UAAAyhB,QAAQ;QAAA,OAClDrL,wBAAkB,CAACkU,OAAI,EAAE7I,QAAQ,EAAE,UAAU,EAAE;UAAE9K,aAAa,EAAbA;QAAc,CAAC,CAAC;MAAA,CACnE,CAAC;MACD,IAAMvP,MAAM,GAAGgI,kBAAkB,CAAC,IAAI,EAAE8Z,OAAO,CAAC;MAChD,IAAI,IAAI,CAACzD,IAAI,EAAE;QACb,IAAI,CAACnG,YAAY,GAAG,IAAI,CAACmG,IAAI;MAC/B,CAAC,MAAM;QACL,IAAI,CAACnG,YAAY,GAAGjgB,GAAG,CAAC6I,IAAI,CAAC,IAAI,CAAC5Q,CAAC,CAAC,CAAC,IAAI,CAACuO,CAAC,CAAC;MAC9C;MACA,IAAI,CAACoV,MAAM,CAAC7T,MAAM,EAAE,UAAU,CAAC;IACjC;EAAC;IAAAmK,GAAA;IAAA5Y,KAAA,EAED,SAAAiyB,UAAUA,CAACxjB,MAAM,EAAE;MACjB,OAAO,IAAI,CAAC8iB,YAAY,CAAC9iB,MAAM,EAAE,QAAQ,EAAE,SAAS,CAAC;IACvD;EAAC;IAAAmK,GAAA;IAAA5Y,KAAA,EAED,SAAA+mB,YAAYA,CAACtY,MAAM,EAAE;MACnB,OAAO,IAAI,CAAC8iB,YAAY,CAAC9iB,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE;QAAE9I,QAAQ,EAAE;MAAS,CAAC,CAAC;IAChF;EAAC;IAAAiT,GAAA;IAAA5Y,KAAA,EAED,SAAAmvB,cAAcA,CAAC1gB,MAAM,EAAE;MACrB,OAAO,IAAI,CAAC8iB,YAAY,CAAC9iB,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE;QAAE8d,WAAW,EAAE;MAAe,CAAC,CAAC;IACzF;EAAC;IAAA3T,GAAA;IAAA5Y,KAAA,EAED,SAAA8wB,UAAUA,CAACriB,MAAM,EAAE;MACjB,OAAO,IAAI,CAAC8iB,YAAY,CAAC9iB,MAAM,EAAE,QAAQ,EAAE,MAAM,CAAC;IACpD;EAAC;IAAAmK,GAAA;IAAA5Y,KAAA,EAED,SAAAymB,cAAcA,CAAChY,MAAM,EAAE;MACrB,OAAO,IAAI,CAAC8iB,YAAY,CAAC9iB,MAAM,EAAE,SAAS,EAAE,OAAO,CAAC;IACtD;EAAC;IAAAmK,GAAA;IAAA5Y,KAAA,EAED,SAAA4mB,UAAUA,CAACnY,MAAM,EAAE;MACjB,OAAO,IAAI,CAAC8iB,YAAY,CAAC9iB,MAAM,EAAE,QAAQ,EAAE,MAAM,CAAC;IACpD;EAAC;IAAAmK,GAAA;IAAA5Y,KAAA,EAED,SAAAkyB,UAAUA,CAACzjB,MAAM,EAAE;MACjB,OAAO,IAAI,CAAC8iB,YAAY,CAAC9iB,MAAM,EAAE,YAAY,EAAE,UAAU,CAAC;IAC5D;EAAC;IAAAmK,GAAA;IAAA5Y,KAAA,EAED,SAAAmyB,eAAeA,CAAC1jB,MAAM,EAAE;MACtB,OAAO,IAAI,CAAC8iB,YAAY,CAAC9iB,MAAM,EAAE,SAAS,EAAE,aAAa,CAAC;IAC5D;EAAC;IAAAmK,GAAA;IAAA5Y,KAAA,EAED,SAAAoyB,WAAWA,CAAC3jB,MAAM,EAAE;MAClB,OAAO,IAAI,CAAC8iB,YAAY,CAAC9iB,MAAM,EAAE,YAAY,EAAE,WAAW,CAAC;IAC7D;EAAC;IAAAmK,GAAA;IAAA5Y,KAAA,EAED,SAAAqyB,UAAUA,CAAC5jB,MAAM,EAAE;MACjB,OAAO,IAAI,CAAC8iB,YAAY,CAAC9iB,MAAM,EAAE,WAAW,EAAE,UAAU,CAAC;IAC3D;EAAC;IAAAmK,GAAA;IAAA5Y,KAAA,EAED,SAAA0gB,mBAAmBA,CAACD,OAAO,EAAEjc,IAAI,EAAE;MACjC,IAAM2nB,MAAM,GAAGtmB,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MAC5CqmB,MAAM,CAACtpB,EAAE,GAAG,KAAK;MACjBspB,MAAM,CAACpI,WAAW,GAAG,IAAI,CAACzgB,KAAK,CAACK,GAAG;MACnC8c,OAAO,CAACpH,WAAW,CAAC8S,MAAM,CAAC;MAE3B,IAAMrI,OAAO,GAAGje,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MAC7Cge,OAAO,CAACjhB,EAAE,GAAG,MAAM;MACnBihB,OAAO,CAACC,WAAW,GAAG,IAAI,CAAC1gB,IAAI,KAAK,UAAU,GAAG,IAAI,CAACipB,IAAI,IAAI,IAAI,CAACjpB,IAAI,GAAG,IAAI,CAACA,IAAI;MACnFod,OAAO,CAACpH,WAAW,CAACyK,OAAO,CAAC;MAE5B,IAAME,OAAO,GAAGne,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MAC7Cke,OAAO,CAACnhB,EAAE,GAAG,MAAM;MACnBmhB,OAAO,CAACxV,GAAG,GAAG5L,WAAW,CAAC4B,IAAI,CAACyf,IAAI,CAAC;MACpCxD,OAAO,CAACpH,WAAW,CAAC2K,OAAO,CAAC;MAE5B,IAAME,YAAY,GAAGre,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MAClDoe,YAAY,CAACrhB,EAAE,GAAG,WAAW;MAC7BqhB,YAAY,CAACH,WAAW,GAAG,IAAI,CAACtP,SAAS,GAAG,GAAG,GAAG,IAAI,CAACsK,cAAc;MACrE0B,OAAO,CAACpH,WAAW,CAAC6K,YAAY,CAAC;MAEjC,IAAMoO,QAAQ,GAAGzsB,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MAC9CwsB,QAAQ,CAACzvB,EAAE,GAAG,OAAO;MAErB,IAAM0vB,KAAK,GAAG,CACZ,CAAC,aAAa,EAAE,WAAW,CAAC,EAC5B,CAAC,cAAc,EAAE,WAAW,CAAC,EAC7B,CAAC,YAAY,EAAE,WAAW,CAAC,EAC3B,CAAC,aAAa,EAAE,WAAW,CAAC,CAC7B;MAED,KAAK,IAAI5zB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4zB,KAAK,CAAC5yB,MAAM,EAAEhB,CAAC,EAAE,EAAE;QACrC,IAAM6hB,IAAI,GAAG+R,KAAK,CAAC5zB,CAAC,CAAC;QACrB,IAAI6F,IAAI,CAACgc,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;UACjB,IAAMgS,OAAO,GAAG3sB,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;UAC7C0sB,OAAO,CAAC3vB,EAAE,GAAG,MAAM;UAEnB,IAAM4vB,SAAS,GAAG5sB,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;UAC/C2sB,SAAS,CAACjkB,GAAG,GAAG5L,WAAW,CAAC4d,IAAI,CAAC,CAAC,CAAC,CAAC;UACpC,IAAMkS,SAAS,GAAG7sB,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;UAC/C4sB,SAAS,CAAC7vB,EAAE,GAAG2d,IAAI,CAAC,CAAC,CAAC;UACtBkS,SAAS,CAAC3O,WAAW,GAAGvf,IAAI,CAACgc,IAAI,CAAC,CAAC,CAAC,CAAC;UACrCgS,OAAO,CAACnZ,WAAW,CAACoZ,SAAS,CAAC;UAC9BD,OAAO,CAACnZ,WAAW,CAACqZ,SAAS,CAAC;UAC9BJ,QAAQ,CAACjZ,WAAW,CAACmZ,OAAO,CAAC;QAC/B;MACF;MAEA/R,OAAO,CAACpH,WAAW,CAACiZ,QAAQ,CAAC;IAC/B;EAAC;AAAA,EA3kDuBjT,sBAAS,E;;;;;;;;;;;;;;;;;ACtDH;AAWd;AACiB;AACG;AACR;AACkB;AAEzC,IAAMsT,MAAM;EACjB,SAAAA,OAAY/S,OAAO,EAAElX,OAAO,EAAE;IAAA,IAAAkR,KAAA;IAAAmG,qBAAA,OAAA4S,MAAA;IAC5B,IAAI,CAACne,MAAM,GAAG,QAAQ;IACtB,IAAI,CAAC9L,OAAO,GAAGA,OAAO;IAEtB,IAAQhC,GAAG,GAAKgC,OAAO,CAAfhC,GAAG;IACX,IAAI,CAACiB,KAAK,GAAG6C,MAAM,CAAC,CAAC;IACrB,IAAI,CAACyI,MAAM,GAAGvM,GAAG;IAEjB,IAAI,CAAC8U,IAAI,GAAG9U,GAAG,CAAC2f,OAAO,GAAG,KAAK,GAAG,GAAG;IACrC,IAAI,CAACuM,IAAI,GAAGlsB,GAAG,CAAC2f,OAAO,GAAG,KAAK,GAAG,GAAG;IACrC,IAAI,CAAC3K,KAAK,GAAGhV,GAAG,CAAC2f,OAAO,GAAG,KAAK,GAAG,GAAG;IACtC,IAAI,CAAC1K,IAAI,GAAGjV,GAAG,CAAC2f,OAAO,GAAG,KAAK,GAAG,CAAC;IACnC,IAAI,CAAC3C,OAAO,GAAG,EAAE;IACjB,IAAI,CAAClB,KAAK,GAAG,EAAE;IACf,IAAI,CAAC3e,SAAS,GAAG,EAAE;IACnB,IAAI,CAACsiB,UAAU,GAAG,CAAC;IACnB,IAAI,CAACN,YAAY,GAAG,EAAE;IACtB,IAAI,CAAC5R,UAAU,GAAG,CAAC;IACnB,IAAI,CAACnQ,GAAG,GAAG,CAAC;IACZ9E,MAAM,CAACkL,IAAI,CAAC0V,OAAO,CAAC,CAACzV,OAAO,CAAC,UAAAC,IAAI,EAAI;MACnCwP,KAAI,CAACxP,IAAI,CAAC,GAAGwV,OAAO,CAACxV,IAAI,CAAC;IAC5B,CAAC,CAAC;IAEF,IAAI,CAAClM,cAAc,GAAG,IAAI,CAACA,cAAc,IAAIwI,GAAG,CAAC2f,OAAO,GAAGnoB,cAAc,GAAG,CAAC;IAE7E,IAAI,CAAC20B,QAAQ,GAAGluB,WAAW,CAAC,IAAI,CAACY,KAAK,CAAC;IACvC,IAAI,CAAC2a,MAAM,GAAA+J,mBAAA,KAAQ1K,kBAAM,CAAC9b,KAAK,CAACC,GAAG,CAAC,QAAQ,CAAC,CAAE;IAC/C,IAAI,CAACkoB,KAAK,GAAA3B,mBAAA,KAAQ1K,kBAAM,CAAC9b,KAAK,CAACC,GAAG,CAAC,YAAY,CAAC,CAAE;IAClD,IAAI,CAAC4kB,QAAQ,GAAG,IAAI,CAACA,QAAQ,IAAI5hB,GAAG,CAAC2f,OAAO,GAAGrnB,MAAM,CAACkL,IAAI,CAAC,IAAI,CAACgW,MAAM,CAACrc,SAAS,CAAC,CAAC6C,GAAG,CAAC,UAAAkS,GAAG;MAAA,OAAIA,GAAG;IAAA,EAAC,GAAG,EAAE;IACtG,IAAM7H,SAAS,GAAG,EAAE;IAAA,IAAAM,KAAA,YAAAA,MAAA1S,CAAA,EACgB;MAAA,IAAAm0B,MAAA,YAAAA,OAAA5lB,CAAA,EACE;QAAA,IAAA6lB,qBAAA,EAAAC,WAAA,EAAAC,qBAAA,EAAAC,YAAA;QAClC,IAAIniB,SAAS,CAACpS,CAAC,CAAC,IAAI,IAAI,EAAE;UACxBoS,SAAS,CAACpS,CAAC,CAAC,GAAG,EAAE;QACnB;QACAoS,SAAS,CAACpS,CAAC,CAAC,CAACuO,CAAC,CAAC,GAAG;UAChBvO,CAAC,EAADA,CAAC;UACDuO,CAAC,EAADA,CAAC;UACD6G,MAAM,GAAAgf,qBAAA,IAAAC,WAAA,GAAEpZ,KAAI,CAACjG,KAAK,cAAAqf,WAAA,uBAAVA,WAAA,CAAar0B,CAAC,CAAC,CAACuO,CAAC,CAAC,CAAC6G,MAAM,cAAAgf,qBAAA,cAAAA,qBAAA,GAAI,EAAE;UACvC7e,QAAQ,EAAE,SAAVA,QAAQA,CAAA,EAAQ;YACd,IAAA+O,aAAA,GAEIrJ,KAAI,CADNlR,OAAO;cAAI0Y,IAAI,GAAA6B,aAAA,CAAJ7B,IAAI;cAAE1a,GAAG,GAAAuc,aAAA,CAAHvc,GAAG;YAEtB,IAAIkT,KAAI,CAACnG,QAAQ,IAAI,CAAC/M,GAAG,CAAC4M,gBAAgB,EAAE;cAC1C8N,IAAI,CAAC+R,oBAAoB,CAACx0B,CAAC,EAAEuO,CAAC,CAAC;YACjC;UACF,CAAC;UACD8G,MAAM,GAAAif,qBAAA,IAAAC,YAAA,GAAEtZ,KAAI,CAACjG,KAAK,cAAAuf,YAAA,uBAAVA,YAAA,CAAav0B,CAAC,CAAC,CAACuO,CAAC,CAAC,CAAC8G,MAAM,cAAAif,qBAAA,cAAAA,qBAAA,GAAMrZ,KAAI,CAACnG,QAAQ,IAAImG,KAAI,CAACvW,IAAI,KAAK,OAAO,IAAIqD,GAAG,CAAC0sB,aAAa,IAAK;QACzG,CAAC;MACH,CAAC;MAlBD,KAAK,IAAIlmB,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIxG,GAAG,CAACxD,IAAI,EAAEgK,CAAC,EAAE;QAAA4lB,MAAA,CAAA5lB,CAAA;MAAA;IAmBpC,CAAC;IApBD,KAAK,IAAIvO,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI+H,GAAG,CAACxD,IAAI,EAAEvE,CAAC,EAAE;MAAA0S,KAAA,CAAA1S,CAAA;IAAA;IAqBlC,IAAI,CAACgV,KAAK,GAAG5C,SAAS;EACxB;EAAC,OAAA8R,kBAAA,CAAA8P,MAAA;IAAA/Z,GAAA;IAAA5Y,KAAA,EAED,SAAAqzB,aAAaA,CAACzT,OAAO,EAAE;MACrB,IAAMkJ,QAAQ,GAAG,IAAI,CAACwK,cAAc,CAAC1T,OAAO,CAAC;MAC7C,IAAI,IAAI,CAACnM,QAAQ,EAAE;QACjB,IAAI8S,eAAe,GAAG,KAAK;QAC3B,IAAIC,YAAY,GAAG,KAAK;QAExB,KAAK,IAAI7nB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC0iB,aAAa,CAAC1hB,MAAM,EAAEhB,CAAC,EAAE,EAAE;UAClD,IAAMyjB,IAAI,GAAG,IAAI,CAACf,aAAa,CAAC1iB,CAAC,CAAC;UAClC,IAAIyjB,IAAI,CAAC/e,IAAI,KAAK,UAAU,EAAE;YAC5B,IAAIoa,wBAAkB,CAAC2E,IAAI,EAAE0G,QAAQ,EAAE,OAAO,CAAC,EAAE;cAC/CvC,eAAe,GAAG,IAAI;cACtBnE,IAAI,CAACqE,cAAc,CAACqC,QAAQ,CAAC;YAC/B;UACF,CAAC,MAAM;YACL1G,IAAI,CAACE,MAAM,CAACwG,QAAQ,CAAC;YACrBtC,YAAY,GAAG,IAAI;UACrB;QACF;QACA,IAAID,eAAe,EAAE;UACnB/e,6BAA6B,CAACshB,QAAQ,CAAC;QACzC;QACA,IAAItC,YAAY,EAAE;UAChB,IAAMjE,KAAK,GAAG3V,UAAU,CAAC,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;UAC1DwS,uBAAK,CAAC5G,IAAI,CAAC+J,KAAK,CAAC;UACjB;QACF,CAAC,MAAM,IAAIgE,eAAe,EAAE;UAC1B,IAAMhE,MAAK,GAAG,IAAI,CAACrC,MAAM,CAACsC,KAAK,CAACC,QAAQ,CAACC,MAAM,CAAC7D,KAAK;UACrDO,uBAAK,CAAC5G,IAAI,CAAC+J,MAAK,CAAC;UACjB;QACF;MACF;MAEA,OAAOuG,QAAQ;IACjB;EAAC;IAAAlQ,GAAA;IAAA5Y,KAAA,EAED,SAAAuzB,WAAWA,CAAA,EAAG;MACZ,IAAA/J,cAAA,GAEI,IAAI,CADN9gB,OAAO;QAAIwa,OAAO,GAAAsG,cAAA,CAAPtG,OAAO;QAAE9B,IAAI,GAAAoI,cAAA,CAAJpI,IAAI;MAE1B,IAAI,IAAI,CAAC3N,QAAQ,EAAE;QACjB2L,uBAAK,CAAC5G,IAAI,CAAC,MAAM,CAAC;MACpB;MACA,KAAK,IAAI7Z,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACkF,SAAS,CAAClE,MAAM,EAAEhB,CAAC,EAAE,EAAE;QAC9C,IAAMmqB,QAAQ,GAAG,IAAI,CAACjlB,SAAS,CAAClF,CAAC,CAAC;QAClC,IAAImqB,QAAQ,CAAC/K,OAAO,IAAI,CAAC+K,QAAQ,CAAC5K,MAAM,EAAE;UACxC4K,QAAQ,CAAC9B,YAAY,CAAC,CAAC;QACzB;MACF;MACA,KAAK,IAAIroB,EAAC,GAAG,CAAC,EAAEA,EAAC,GAAGukB,OAAO,CAACvjB,MAAM,EAAEhB,EAAC,EAAE,EAAE;QACvC,IAAMkL,MAAM,GAAGqZ,OAAO,CAACvkB,EAAC,CAAC;QACzB,IAAIkL,MAAM,CAACxG,IAAI,KAAK,OAAO,EAAE;UAC3B,IAAIwG,MAAM,CAACukB,YAAY,IAAIvkB,MAAM,CAACukB,YAAY,CAAC9qB,KAAK,CAACqE,KAAK,KAAK,IAAI,CAACA,KAAK,EAAE;YACzEyZ,IAAI,CAACI,YAAY,CAAC3X,MAAM,CAACukB,YAAY,CAAC;UACxC,CAAC,MAAM,IAAIvkB,MAAM,CAACgd,gBAAgB,IAAIhd,MAAM,CAACgd,gBAAgB,CAACvjB,KAAK,CAACqE,KAAK,KAAK,IAAI,CAACA,KAAK,EAAE;YACxFyZ,IAAI,CAACI,YAAY,CAAC3X,MAAM,CAACgd,gBAAgB,CAAC;UAC5C,CAAC,MAAM,IAAIhd,MAAM,CAAC4X,aAAa,IAAI5X,MAAM,CAAC4X,aAAa,CAACne,KAAK,CAACqE,KAAK,KAAK,IAAI,CAACA,KAAK,EAAE;YAClFyZ,IAAI,CAACI,YAAY,CAAC3X,MAAM,CAAC4X,aAAa,CAAC;UACzC;QACF;MACF;IACF;EAAC;IAAA7I,GAAA;IAAA5Y,KAAA,EAED,SAAAwzB,YAAYA,CAAA,EAAG;MACb,IACatQ,OAAO,GAChB,IAAI,CADNxa,OAAO,CAAIwa,OAAO;MAEpB,IAAMuQ,MAAM,GAAAxhB,wBAAA,CAAOiR,OAAO,CAAC;MAC3BuQ,MAAM,CAAChiB,MAAM,CAACyR,OAAO,CAACxR,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;MACvC,OAAO+hB,MAAM;IACf;EAAC;IAAA7a,GAAA;IAAA5Y,KAAA,EAED,SAAA+rB,YAAYA,CAACC,UAAU,EAAE;MACvB,KAAK,IAAIrtB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqtB,UAAU,CAACrsB,MAAM,EAAEhB,CAAC,EAAE,EAAE;QAC1C,IAAMge,SAAS,GAAGqP,UAAU,CAACrtB,CAAC,CAAC;QAC/B,IAAM+0B,KAAK,GAAGvxB,KAAK,CAACK,OAAO,CAACma,SAAS,CAACtZ,IAAI,CAAC,GAAGsZ,SAAS,CAACtZ,IAAI,GAAG,CAACsZ,SAAS,CAACtZ,IAAI,CAAC;QAC/E,KAAK,IAAI6J,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwmB,KAAK,CAAC/zB,MAAM,EAAEuN,CAAC,EAAE,EAAE;UACrC,IAAM7J,IAAI,GAAGqwB,KAAK,CAACxmB,CAAC,CAAC;UACrB,IAAIlO,MAAM,CAACkL,IAAI,CAAC,IAAI,CAACgW,MAAM,CAACrc,SAAS,CAAC,CAACgO,QAAQ,CAACxO,IAAI,CAAC,EAAE;YACrD,IAAI,CAAC6c,MAAM,CAACrc,SAAS,CAACR,IAAI,CAAC,IAAIqZ,YAAY,CAAC,IAAI,CAACwD,MAAM,CAACrc,SAAS,CAACR,IAAI,CAAC,EAAEsZ,SAAS,CAAC;UACrF,CAAC,MAAM,IAAI3d,MAAM,CAACkL,IAAI,CAAC,IAAI,CAACgW,MAAM,CAACsC,KAAK,CAAC,CAAC3Q,QAAQ,CAACxO,IAAI,CAAC,EAAE;YACxD,IAAI,CAAC6c,MAAM,CAACsC,KAAK,CAACnf,IAAI,CAAC,IAAIqZ,YAAY,CAAC,IAAI,CAACwD,MAAM,CAACsC,KAAK,CAACnf,IAAI,CAAC,EAAEsZ,SAAS,CAAC;UAC7E;QACF;MACF;IACF;EAAC;IAAA/D,GAAA;IAAA5Y,KAAA,EAED,SAAA2zB,WAAWA,CAACh1B,CAAC,EAAEuO,CAAC,EAAE7J,IAAI,EAAE;MAAA,IAAAqX,MAAA;MACtB,IAAAgP,cAAA,GAEI,IAAI,CADNhhB,OAAO;QAAI0Y,IAAI,GAAAsI,cAAA,CAAJtI,IAAI;QAAE1a,GAAG,GAAAgjB,cAAA,CAAHhjB,GAAG;MAEtB,IAAMwZ,MAAM,GAAG,IAAI,CAACA,MAAM,CAACrc,SAAS,CAACR,IAAI,CAAC;MAC1C,IACEkH,SAAS,CAAC,IAAI,EAAE2V,MAAM,CAACpW,IAAI,CAAC,KAC3B,CAACoW,MAAM,CAACtC,UAAU,IAAIsC,MAAM,CAACtC,UAAU,CAACJ,KAAK,CAAC,UAAAhO,SAAS;QAAA,OAAIyN,gBAAgB,CAACzN,SAAS,EAAEkL,MAAI,CAAC;MAAA,EAAC,CAAC,EAC/F;QACA,IAAI,CAAC2Y,aAAa,CAAC;UAAE10B,CAAC,EAADA,CAAC;UAAEuO,CAAC,EAADA,CAAC;UAAE7J,IAAI,EAAJA,IAAI;UAAE0a,OAAO,EAAErX,GAAG,CAAC2f;QAAQ,CAAC,CAAC;QACxD/b,OAAO,CAAC,IAAI,EAAE4V,MAAM,CAACpW,IAAI,CAAC;QAC1B,IAAI,CAAC2J,QAAQ,IAAI2N,IAAI,CAACqJ,YAAY,CAAC,CAAC;QACpC,OAAO,IAAI;MACb;MACA,OAAO,KAAK;IACd;EAAC;IAAA7R,GAAA;IAAA5Y,KAAA,EAED,SAAAgqB,UAAUA,CAACpK,OAAO,EAAE;MAClB,IAAQlX,OAAO,GAAK,IAAI,CAAhBA,OAAO;MACf,IAAI0Z,IAAI,GAAG1Z,OAAO,CAAChC,GAAG,CAACic,QAAQ,CAAC,IAAI8J,IAAI,CAAAxC,mBAAA,CAAAA,mBAAA,KAAMrK,OAAO;QAAEtc,KAAK,EAAE;MAAI,IAAIoF,OAAO,CAAC,CAAC;MAC/EsU,gBAAgB,CAACoF,IAAI,EAAE1Z,OAAO,CAACmB,MAAM,CAAC,IAAInB,OAAO,CAAC0Y,IAAI,CAACkI,sBAAsB,CAAC,IAAI,CAAC;MACnF,OAAOlH,IAAI;IACb;EAAC;IAAAxJ,GAAA;IAAA5Y,KAAA,EAED,SAAAszB,cAAcA,CAAC1T,OAAO,EAAE;MACtB,IAAQlX,OAAO,GAAK,IAAI,CAAhBA,OAAO;MACf,IAAMogB,QAAQ,GAAGpgB,OAAO,CAAChC,GAAG,CAACic,QAAQ,CAAC,IAAI0C,QAAQ,CAAA4E,mBAAA,CAAAA,mBAAA,KAAMrK,OAAO;QAAEtc,KAAK,EAAE;MAAI,IAAIoF,OAAO,CAAC,CAAC;MACzF,IAAI,CAAC7E,SAAS,CAACtB,IAAI,CAACumB,QAAQ,CAAC;MAC7B9L,gBAAgB,CAAC8L,QAAQ,EAAEpgB,OAAO,CAACmB,MAAM,CAAC,IAAInB,OAAO,CAAC0Y,IAAI,CAACkI,sBAAsB,CAAC,IAAI,CAAC;MACvF,OAAOR,QAAQ;IACjB;EAAC;AAAA,I;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5L8B;AASf;AAElB,IAAM8K,aAAa,GAAG,qCAAqC;AAC3D,IAAMC,aAAa,GAAG,kCAAkC;AAEjD,IAAMC,EAAE,0BAAAC,OAAA;EACb,SAAAD,GAAAzrB,IAAA,EAA0BK,OAAO,EAAE;IAAA,IAAAkR,KAAA;IAAA,IAAlB+D,KAAK,GAAAqW,QAAA,MAAAC,yBAAA,CAAA5rB,IAAA,GAAAA,IAAA;IAAA0X,iBAAA,OAAA+T,EAAA;IACpBla,KAAA,GAAAoG,YAAA,OAAA8T,EAAA,GAAA7J,eAAA,CAAAA,eAAA,KAAWtM,KAAK;MAAElK,QAAQ,EAAE,KAAK;MAAEpQ,IAAI,EAAE;IAAI,IAAIqF,OAAO;IACxDkR,KAAA,CAAKtF,YAAY,GAAG,EAAE;IACtBsF,KAAA,CAAKrF,iBAAiB,GAAG,EAAE;IAC3BqF,KAAA,CAAKsa,YAAY,GAAG,EAAE;IACtBta,KAAA,CAAKua,aAAa,GAAG,EAAE;IACvBva,KAAA,CAAKlF,qBAAqB,GAAG,EAAE;IAC/BkF,KAAA,CAAKmL,QAAQ,GAAGC,WAAW,CAAC;MAAA,OAAMpL,KAAA,CAAKgV,IAAI,CAAC,CAAC;IAAA,GAAE,IAAI,CAAC;IACpDhV,KAAA,CAAKyH,aAAa,GAAG,EAAE;IACvBzH,KAAA,CAAKwU,YAAY,GAAG,IAAI;IACxBxU,KAAA,CAAKiN,gBAAgB,GAAG,IAAI;IAC5BjN,KAAA,CAAK6H,aAAa,GAAG,IAAI;IACzB7H,KAAA,CAAKwa,UAAU,GAAG,CAAC;IACnBxa,KAAA,CAAK3F,UAAU,GAAG,CAAC;IAEnB2F,KAAA,CAAKya,OAAO,GAAG;MACb,CAAC,EAAE,SAAS;MACZ,CAAC,EAAE,WAAW;MACd,CAAC,EAAE;IACL,CAAC;IACDza,KAAA,CAAK0a,iBAAiB,GAAG;MACvB,CAAC,EAAE,EAAE;MACL,CAAC,EAAE,EAAE;MACL,CAAC,EAAE,EAAE;MACL,CAAC,EAAE;IACL,CAAC;IACD1a,KAAA,CAAK2a,4BAA4B,GAAG;MAClC,CAAC,EAAE;QACD/Y,IAAI,EAAE,EAAE;QACRoX,IAAI,EAAE,EAAE;QACRjX,IAAI,EAAE,CAAC;QACPD,KAAK,EAAE;MACT,CAAC;MACD,CAAC,EAAE;QACDF,IAAI,EAAE,EAAE;QACRoX,IAAI,EAAE,EAAE;QACRjX,IAAI,EAAE,EAAE;QACRD,KAAK,EAAE;MACT,CAAC;MACD,CAAC,EAAE;QACDF,IAAI,EAAE,EAAE;QACRoX,IAAI,EAAE,EAAE;QACRjX,IAAI,EAAE,EAAE;QACRD,KAAK,EAAE;MACT,CAAC;MACD,CAAC,EAAE;QACDF,IAAI,EAAE,EAAE;QACRoX,IAAI,EAAE,EAAE;QACRjX,IAAI,EAAE,EAAE;QACRD,KAAK,EAAE;MACT;IACF,CAAC;IACD9B,KAAA,CAAK4a,gBAAgB,GAAG;MACtB,CAAC,EAAE;QACD3C,UAAU,EAAE,CAAC;QACbD,OAAO,EAAE,CAAC;QACV6C,QAAQ,EAAE,CAAC;QACXC,MAAM,EAAE;MACV,CAAC;MACD,CAAC,EAAE;QACD7C,UAAU,EAAE,CAAC;QACbD,OAAO,EAAE,CAAC;QACV+C,IAAI,EAAE,CAAC;QACPF,QAAQ,EAAE,CAAC;QACXC,MAAM,EAAE;MACV,CAAC;MACD,CAAC,EAAE;QACD7C,UAAU,EAAE,CAAC;QACbD,OAAO,EAAE,CAAC;QACV+C,IAAI,EAAE,CAAC;QACPF,QAAQ,EAAE,CAAC;QACXC,MAAM,EAAE;MACV,CAAC;MACD,CAAC,EAAE;QACD7C,UAAU,EAAE,CAAC;QACbD,OAAO,EAAE,CAAC;QACV+C,IAAI,EAAE,EAAE;QACRF,QAAQ,EAAE,CAAC;QACXC,MAAM,EAAE;MACV;IACF,CAAC;IAAA,OAAA9a,KAAA;EACH;EAACgJ,WAAA,CAAAkR,EAAA,EAAAC,OAAA;EAAA,OAAAlR,cAAA,CAAAiR,EAAA;IAAAlb,GAAA;IAAA5Y,KAAA,EAED,SAAA40B,wBAAwBA,CAACC,YAAY,EAAEhxB,SAAS,EAAE;MAChD,OACE,CAAC,IAAI,CAAC2wB,gBAAgB,CAAC,IAAI,CAAC1wB,GAAG,CAAC,CAAC+wB,YAAY,CAAC,IAAIhxB,SAAS,CAAClE,MAAM,GAAG,IAAI,CAAC60B,gBAAgB,CAAC,IAAI,CAAC1wB,GAAG,CAAC,CAAC+wB,YAAY,CAAC;IAEtH;EAAC;IAAAjc,GAAA;IAAA5Y,KAAA,EAED,SAAA80B,gBAAgBA,CAACpB,KAAK,EAAE;MACtB,OAAO,IAAI,CAAC7vB,SAAS,CAACwD,MAAM,CAAC,UAAAT,CAAC;QAAA,OAAI8sB,KAAK,CAAC7hB,QAAQ,CAACjL,CAAC,CAACvD,IAAI,CAAC;MAAA,EAAC;IAC3D;EAAC;IAAAuV,GAAA;IAAA5Y,KAAA,EAED,SAAA+pB,mBAAmBA,CAAC1mB,IAAI,EAAE;MACxB,IAAM0xB,EAAE,GAAG,IAAI;MACf,OAAO;QACLrG,aAAa,EAAE,SAAfA,aAAaA,CAAEjgB,MAAM,EAAI;UACvB,IAAQ/H,GAAG,GAAKquB,EAAE,CAACrsB,OAAO,CAAlBhC,GAAG;UACX,IAAIrD,IAAI,KAAK,UAAU,IAAIoL,MAAM,CAAC+F,MAAM,KAAK,UAAU,EAAE;YACvD,IAAMqgB,YAAY,GAAGpmB,MAAM,CAACpL,IAAI,KAAK,WAAW,GAAG,SAAS,GAAG,YAAY;YAC3E,IAAMQ,SAAS,GAAGkxB,EAAE,CAACD,gBAAgB,CAAC,CAACD,YAAY,CAAC,CAAC;YACrD,IACEtqB,SAAS,CAACwqB,EAAE,EAAEA,EAAE,CAAC7U,MAAM,CAACrc,SAAS,CAACgxB,YAAY,CAAC,CAAC,IAChDE,EAAE,CAACH,wBAAwB,CAACC,YAAY,EAAEhxB,SAAS,CAAC,EACpD;cACA,IAAMmxB,eAAe,GAAGve,kBAAkB,CAAChI,MAAM,KAAAzL,MAAA,CAAAiP,oBAAA,CAAMpO,SAAS,GAAAoO,oBAAA,CAAK8iB,EAAE,CAACD,gBAAgB,CAAC,CAAC,YAAY,CAAC,CAAC,EAAC,CAAC;cAC1G,IAAI,CAACE,eAAe,IAAIjoB,uBAAiB,CAACioB,eAAe,EAAEvmB,MAAM,CAAC,GAAG,CAAC,EAAE;gBACtE,IAAMrB,GAAG,GAAGkI,+BAA+B,CAAC7G,MAAM,EAAE/H,GAAG,CAAC6I,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;gBACxE,IAAInC,GAAG,IAAI2nB,EAAE,CAACpB,WAAW,CAACvmB,GAAG,CAACzO,CAAC,EAAEyO,GAAG,CAACF,CAAC,EAAE2nB,YAAY,CAAC,EAAE;kBACrD7qB,OAAO,CAACirB,GAAG,aAAAjyB,MAAA,CAAa6xB,YAAY,WAAQznB,GAAG,CAAC;gBAClD;cACF;YACF;UACF;QACF;MACF,CAAC;IACH;EAAC;IAAAwL,GAAA;IAAA5Y,KAAA,EAED,SAAA4uB,IAAIA,CAAA,EAAG;MAAA,IAAAlU,MAAA;MACL,IAAAuI,aAAA,GAAwB,IAAI,CAACva,OAAO;QAA5BhC,GAAG,GAAAuc,aAAA,CAAHvc,GAAG;QAAEgR,MAAM,GAAAuL,aAAA,CAANvL,MAAM;MACnB,IAAIA,MAAM,EAAE;QACV;MACF;MAEA,IAAMwd,YAAY,GAAG,IAAI,CAACZ,iBAAiB,CAAC,IAAI,CAACxwB,GAAG,CAAC;MACrD,IAAMqxB,0BAA0B,GAAG,CAAC;MACpC,IAAMC,WAAW,GAAG,EAAE;MACtB,IAAMC,oCAAoC,GAAG,EAAE;MAC/C,IAAMC,2BAA2B,GAAG,CAAC;MAErCtrB,OAAO,CAACirB,GAAG,CAAC,qBAAqB,EAAErB,aAAa,CAAC;MAEjD5pB,OAAO,CAACirB,GAAG,YAAAjyB,MAAA,CACE,IAAI,CAACc,GAAG,cAAAd,MAAA,CAAW,IAAI,CAACwY,IAAI,cAAAxY,MAAA,CAAW,IAAI,CAAC4vB,IAAI,eAAA5vB,MAAA,CAAY,IAAI,CAAC0Y,KAAK,cAAA1Y,MAAA,CAAW,IAAI,CAAC2Y,IAAI,oBAAA3Y,MAAA,CAAiB,IAAI,CAACmjB,UAAU,OAAAnjB,MAAA,CAAI,IAAI,CAAC9E,cAAc,GAC5J21B,aACF,CAAC;MAED,IAAM0B,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIlyB,IAAI;QAAA,IAAEmM,SAAS,GAAAnO,SAAA,CAAA1B,MAAA,QAAA0B,SAAA,QAAAyL,SAAA,GAAAzL,SAAA,MAAG,UAAA+gB,IAAI;UAAA,OAAIA,IAAI,CAAC3N,SAAS,GAAG,CAAC;QAAA;QAAA,OACrEiG,MAAI,CAAC8H,KAAK,CAACnb,MAAM,CAAC,UAAA+a,IAAI;UAAA,OAAIA,IAAI,CAAC/e,IAAI,KAAKA,IAAI,IAAImM,SAAS,CAAC4S,IAAI,CAAC;QAAA,EAAC;MAAA;MAElE,IAAMoT,SAAS,GAAGD,iBAAiB,CAAC,UAAU,CAAC;MAC/C,IAAME,QAAQ,GAAGF,iBAAiB,CAAC,SAAS,CAAC;MAE7CvrB,OAAO,CAACirB,GAAG,kBAAAjyB,MAAA,CACQwyB,SAAS,CAAC71B,MAAM,OAAAqD,MAAA,CAAIkyB,YAAY,kBAAAlyB,MAAA,CAAeyyB,QAAQ,CAAC91B,MAAM,OAAAqD,MAAA,CAAIoyB,WAAW,GAC9FvB,aACF,CAAC;MAED,IAAM6B,WAAW,GAAG,IAAI,CAACZ,gBAAgB,CAAC,CAAC,YAAY,CAAC,CAAC;MACzD,IAAMa,WAAW,GAAG,IAAI,CAACb,gBAAgB,CAAC,CAAC,YAAY,CAAC,CAAC;MACzD,IAAMc,MAAM,GAAG,IAAI,CAACd,gBAAgB,CAAC,CAAC,OAAO,CAAC,CAAC;MAC/C,IAAMe,QAAQ,GAAG,IAAI,CAACf,gBAAgB,CAAC,CAAC,SAAS,CAAC,CAAC;MACnD,IAAMgB,QAAQ,GAAG,IAAI,CAAChB,gBAAgB,CAAC,CAAC,UAAU,CAAC,CAAC;MACpD,IAAMiB,OAAO,GAAG,IAAI,CAACjB,gBAAgB,CAAC,CAAC,QAAQ,CAAC,CAAC;MACjD,IAAMkB,KAAK,GAAG,IAAI,CAAClB,gBAAgB,CAAC,CAAC,MAAM,CAAC,CAAC;MAC7C,IAAMmB,UAAU,GAAGD,KAAK,CAAC3uB,MAAM,CAAC,UAAAyH,KAAA;QAAA,IAAG2P,QAAQ,GAAA3P,KAAA,CAAR2P,QAAQ;QAAA,OAAO,CAACA,QAAQ;MAAA,EAAC;MAE5DzU,OAAO,CAACirB,GAAG,oBAAAjyB,MAAA,CACU0yB,WAAW,CAAC/1B,MAAM,gBAAAqD,MAAA,CAAa4yB,MAAM,CAACj2B,MAAM,qBAAAqD,MAAA,CAAkB2yB,WAAW,CAACh2B,MAAM,mBAAAqD,MAAA,CAAgB6yB,QAAQ,CAACl2B,MAAM,kBAAAqD,MAAA,CAAe8yB,QAAQ,CAACn2B,MAAM,iBAAAqD,MAAA,CAAc+yB,OAAO,GACrLlC,aACF,CAAC;MAED,IAAMqC,iBAAiB,GAAG,IAAI,CAACryB,SAAS,CAACwD,MAAM,CAC7C,UAAAT,CAAC;QAAA,OAAI,CAACA,CAAC,CAACmX,OAAO,IAAKnX,CAAC,CAAC6N,SAAS,GAAG,CAAC,IAAI7N,CAAC,CAAC6N,SAAS,GAAG7N,CAAC,CAACmY,cAAe;MAAA,CACxE,CAAC;MACD,IAAMoX,cAAc,GAAGD,iBAAiB,CAAC7uB,MAAM,CAAC,UAAAT,CAAC;QAAA,OAAIA,CAAC,CAACvD,IAAI,KAAK,OAAO;MAAA,EAAC;MAExE,IAAM+yB,eAAe,GAAG,SAAlBA,eAAeA,CAAGC,KAAK;QAAA,OAAIb,SAAS,CAACnuB,MAAM,CAAC,UAAA9H,CAAC;UAAA,OAAI,CAACA,CAAC,CAACytB,OAAO,IAAIqJ,KAAK,CAACxkB,QAAQ,CAACtS,CAAC,CAAC+sB,IAAI,CAAC;QAAA,EAAC;MAAA;MAC5F,IAAMgK,gBAAgB,GAAGd,SAAS,CAACnuB,MAAM,CAAC,UAAA9H,CAAC;QAAA,OAAIA,CAAC,CAACytB,OAAO,IAAIztB,CAAC,CAACme,MAAM,KAAK,QAAQ;MAAA,EAAC;MAElF,IAAM6Y,eAAe,GAAGH,eAAe,CAAC,CAAC,YAAY,CAAC,CAAC;MACvD,IAAMI,eAAe,GAAGJ,eAAe,CAAC,CAAC,SAAS,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;MACxE,IAAMK,eAAe,GAAGL,eAAe,CAAC,CAAC,WAAW,CAAC,CAAC;MACtD,IAAMM,gBAAgB,GAAGN,eAAe,CAAC,CAAC,YAAY,CAAC,CAAC;MACxD,IAAMO,gBAAgB,GAAGP,eAAe,CAAC,CAAC,SAAS,CAAC,CAAC;MAErD,IAAMQ,kBAAkB,GAAGrrB,kBAAkB,CAACiqB,SAAS,CAAC71B,MAAM,EAAE,IAAI,CAAC40B,4BAA4B,CAAC,IAAI,CAACzwB,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC;MACpH,IAAM+yB,kBAAkB,GAAGtrB,kBAAkB,CAACiqB,SAAS,CAAC71B,MAAM,EAAE,IAAI,CAAC40B,4BAA4B,CAAC,IAAI,CAACzwB,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC;MACpH,IAAMgzB,kBAAkB,GAAGvrB,kBAAkB,CAACiqB,SAAS,CAAC71B,MAAM,EAAE,IAAI,CAAC40B,4BAA4B,CAAC,IAAI,CAACzwB,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC;MACpH,IAAMizB,mBAAmB,GAAGxrB,kBAAkB,CAC5CiqB,SAAS,CAAC71B,MAAM,EAChB,IAAI,CAAC40B,4BAA4B,CAAC,IAAI,CAACzwB,GAAG,CAAC,CAAC,OAAO,CACrD,CAAC;MAEDkG,OAAO,CAACirB,GAAG,0BAAAjyB,MAAA,CACgBuzB,eAAe,CAAC52B,MAAM,OAAAqD,MAAA,CAAI4zB,kBAAkB,2BAAA5zB,MAAA,CAAwBwzB,eAAe,CAAC72B,MAAM,OAAAqD,MAAA,CAAI6zB,kBAAkB,4BAAA7zB,MAAA,CAAyB0zB,gBAAgB,CAAC/2B,MAAM,OAAAqD,MAAA,CAAI+zB,mBAAmB,2BAAA/zB,MAAA,CAAwByzB,eAAe,CAAC92B,MAAM,OAAAqD,MAAA,CAAI8zB,kBAAkB,2BAAA9zB,MAAA,CAAwB2zB,gBAAgB,CAACh3B,MAAM,GACnUk0B,aACF,CAAC;MAED,IAAMmD,eAAe,GAAGvB,QAAQ,CAACpuB,MAAM,CAAC,UAAAzI,CAAC;QAAA,OAAIA,CAAC,CAACouB,OAAO,IAAIpuB,CAAC,CAAC8e,MAAM,KAAK,QAAQ,IAAI9e,CAAC,CAACq4B,OAAO;MAAA,EAAC;MAC7F,IAAMC,eAAe,GAAGzB,QAAQ,CAACpuB,MAAM,CAAC,UAAAzI,CAAC;QAAA,OAAIA,CAAC,CAACouB,OAAO,IAAIpuB,CAAC,CAAC8e,MAAM,KAAK,QAAQ,IAAI,CAAC9e,CAAC,CAACq4B,OAAO;MAAA,EAAC;MAE9FjtB,OAAO,CAACirB,GAAG,yBAAAjyB,MAAA,CACeg0B,eAAe,CAACr3B,MAAM,0BAAAqD,MAAA,CAAuBk0B,eAAe,CAACv3B,MAAM,GAC3Fk0B,aACF,CAAC;;MAED;MACA,IAAI,CAAC,IAAI,CAAChwB,SAAS,CAAClE,MAAM,IAAI,CAAC,IAAI,CAAC6iB,KAAK,CAAC7iB,MAAM,EAAE;QAChDqK,OAAO,CAACirB,GAAG,CAAC,6CAA6C,CAAC;QAC1D,IAAI,CAACjS,GAAG,CAAC,CAAC;QACV;MACF;;MAEA;MACA,IAAI,IAAI,CAAC/O,UAAU,IAAIvN,GAAG,CAACywB,UAAU,EAAE;QACrCvnB,mBAAmB,CAAC,IAAI,CAACjR,CAAC,EAAE,IAAI,CAACuO,CAAC,EAAE,IAAI,CAACyG,KAAK,EAAE,IAAI,CAACygB,UAAU,EAAE,UAAArkB,IAAI,EAAI;UACvE,IAAM8D,UAAU,GAAGnN,GAAG,CAAC6I,IAAI,CAACQ,IAAI,CAACpR,CAAC,CAAC,CAACoR,IAAI,CAAC7C,CAAC,CAAC;UAC3C6C,IAAI,CAACjJ,GAAG,GAAG+M,UAAU,CAAC/M,GAAG;UACzB,IAAI+M,UAAU,CAAC/M,GAAG,EAAE;YAClB,IAAQA,GAAG,GAAK+M,UAAU,CAAlB/M,GAAG;YACX,IAAIA,GAAG,CAACuN,QAAQ,GAAG,CAAC,EAAE;cACpB,IAAIvN,GAAG,CAACzD,IAAI,KAAK,MAAM,IAAI,CAACqX,MAAI,CAACpG,YAAY,CAACzC,QAAQ,CAAC/K,GAAG,CAAC,EAAE;gBAC3D4T,MAAI,CAACpG,YAAY,CAAC/R,IAAI,CAACuE,GAAG,CAAC;cAC7B;cACA,IAAIA,GAAG,CAACzD,IAAI,KAAK,WAAW,IAAI,CAACqX,MAAI,CAACnG,iBAAiB,CAAC1C,QAAQ,CAAC/K,GAAG,CAAC,EAAE;gBACrE4T,MAAI,CAACnG,iBAAiB,CAAChS,IAAI,CAACuE,GAAG,CAAC;cAClC;cACA,IAAIA,GAAG,CAACzD,IAAI,KAAK,OAAO,IAAI,CAACqX,MAAI,CAACyZ,aAAa,CAACtiB,QAAQ,CAAC/K,GAAG,CAAC,EAAE;gBAC7D4T,MAAI,CAACyZ,aAAa,CAAC5xB,IAAI,CAACuE,GAAG,CAAC;cAC9B;cACA,IAAIA,GAAG,CAACzD,IAAI,KAAK,MAAM,IAAI,CAACqX,MAAI,CAACwZ,YAAY,CAACriB,QAAQ,CAAC/K,GAAG,CAAC,EAAE;gBAC3D4T,MAAI,CAACwZ,YAAY,CAAC3xB,IAAI,CAACuE,GAAG,CAAC;cAC7B;YACF;YACA,IACEA,GAAG,CAAC0N,MAAM,KAAK,UAAU,IACzB1N,GAAG,CAACxD,KAAK,CAACqE,KAAK,KAAK+S,MAAI,CAAC/S,KAAK,IAC9B,CAAC+S,MAAI,CAAChG,qBAAqB,CAAC7C,QAAQ,CAAC/K,GAAG,CAAC,EACzC;cACA4T,MAAI,CAAChG,qBAAqB,CAACnS,IAAI,CAACuE,GAAG,CAAC;YACtC;UACF;UACA,IAAI,CAACiJ,IAAI,CAACiE,MAAM,EAAE;YAChB0G,MAAI,CAACzG,UAAU,EAAE;YACjBlE,IAAI,CAACiE,MAAM,GAAG,IAAI;UACpB;QACF,CAAC,CAAC;QACF,IAAI,CAACogB,UAAU,EAAE;MACnB;;MAEA;MACA,IAAMgD,yBAAyB,GAAG,SAA5BA,yBAAyBA,CAAI5B,SAAS,EAAE6B,YAAY,EAAEnC,YAAY,EAAEoC,cAAc,EAAK;QAC3F,IAAID,YAAY,CAAC13B,MAAM,EAAE;UACvB,IAAI61B,SAAS,CAAC71B,MAAM,GAAGu1B,YAAY,EAAE;YACnC,KAAK,IAAIv2B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuM,IAAI,CAACuB,GAAG,CAACyoB,YAAY,EAAEoB,gBAAgB,CAAC32B,MAAM,CAAC,EAAEhB,CAAC,EAAE,EAAE;cACxE,IAAMgH,QAAQ,GAAG8Q,kBAAkB,CAAC6f,gBAAgB,CAAC33B,CAAC,CAAC,EAAE04B,YAAY,CAAC;cACtEC,cAAc,CAAChB,gBAAgB,CAAC33B,CAAC,CAAC,EAAEgH,QAAQ,CAAC;YAC/C;UACF,CAAC,MAAM;YACL,KAAK,IAAIhH,EAAC,GAAG,CAAC,EAAEA,EAAC,GAAG62B,SAAS,CAAC71B,MAAM,GAAGu1B,YAAY,EAAEv2B,EAAC,EAAE,EAAE;cACxD62B,SAAS,CAAC72B,EAAC,CAAC,CAACmZ,IAAI,CAAC,CAAC;YACrB;UACF;QACF,CAAC,MAAM;UACL,KAAK,IAAInZ,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG62B,SAAS,CAAC71B,MAAM,EAAEhB,GAAC,EAAE,EAAE;YACzC62B,SAAS,CAAC72B,GAAC,CAAC,CAACmZ,IAAI,CAAC,CAAC;UACrB;QACF;MACF,CAAC;;MAED;MACAsf,yBAAyB,CAACZ,eAAe,EAAE,IAAI,CAACjiB,iBAAiB,EAAEsiB,kBAAkB,EAAE,UAACU,QAAQ,EAAEC,IAAI,EAAK;QACzGD,QAAQ,CAACpF,eAAe,CAACqF,IAAI,CAAC;MAChC,CAAC,CAAC;;MAEF;MACAJ,yBAAyB,CAACb,eAAe,EAAE,IAAI,CAACjiB,YAAY,EAAEsiB,kBAAkB,EAAE,UAACW,QAAQ,EAAEE,IAAI,EAAK;QACpGF,QAAQ,CAACrF,UAAU,CAACuF,IAAI,CAAC;MAC3B,CAAC,CAAC;;MAEF;MACAL,yBAAyB,CAACV,gBAAgB,EAAE,IAAI,CAACvC,aAAa,EAAE4C,mBAAmB,EAAE,UAACQ,QAAQ,EAAE7b,KAAK,EAAK;QACxG6b,QAAQ,CAACnF,WAAW,CAAC1W,KAAK,CAAC;MAC7B,CAAC,CAAC;;MAEF;MACA0b,yBAAyB,CAACX,eAAe,EAAE,IAAI,CAACvC,YAAY,EAAE4C,kBAAkB,EAAE,UAACS,QAAQ,EAAE5b,IAAI,EAAK;QACpG4b,QAAQ,CAAClF,UAAU,CAAC1W,IAAI,CAAC;MAC3B,CAAC,CAAC;MAEF,KAAK,IAAIhd,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGs3B,UAAU,CAACt2B,MAAM,EAAEhB,CAAC,EAAE,EAAE;QAC1C,IAAM44B,QAAQ,GAAG9gB,kBAAkB,CAACwf,UAAU,CAACt3B,CAAC,CAAC,EAAE23B,gBAAgB,CAAC;QACpEiB,QAAQ,IAAIA,QAAQ,CAAC3Q,UAAU,CAACqP,UAAU,CAACt3B,CAAC,CAAC,CAAC;MAChD;;MAEA;MACA,IAAIu3B,iBAAiB,CAACv2B,MAAM,EAAE;QAAA,IAAA6S,SAAA,GAAAC,4BAAA,CACLyjB,iBAAiB;UAAAxjB,KAAA;QAAA;UAAxC,KAAAF,SAAA,CAAAnG,CAAA,MAAAqG,KAAA,GAAAF,SAAA,CAAAjU,CAAA,IAAAwB,IAAA,GAA0C;YAAA,IAA/B+oB,QAAQ,GAAApW,KAAA,CAAA1S,KAAA;YACjB,IAAI22B,gBAAgB,CAACh3B,MAAM,IAAIw1B,0BAA0B,EAAE;YAC3D,IAAMuC,kBAAkB,GAAGlC,SAAS,CAACnuB,MAAM,CAAC,UAAA9H,CAAC;cAAA,OAAIA,CAAC,CAAC+sB,IAAI,KAAK,SAAS,IAAI/sB,CAAC,CAACytB,OAAO;YAAA,EAAC;YACnF,IAAMuK,SAAQ,GAAG9gB,kBAAkB,CAACqS,QAAQ,EAAE4O,kBAAkB,CAAC;YACjE,IAAIH,SAAQ,EAAE;cACZvtB,OAAO,CAACirB,GAAG,CAAC,yBAAyB,EAAEnM,QAAQ,CAAC;cAChDyO,SAAQ,CAAC9Q,cAAc,CAACqC,QAAQ,CAAC;YACnC;UACF;QAAC,SAAAlW,GAAA;UAAAJ,SAAA,CAAArU,CAAA,CAAAyU,GAAA;QAAA;UAAAJ,SAAA,CAAArT,CAAA;QAAA;MACH;;MAEA;MACA,IAAM4nB,YAAY,GAAG,SAAfA,YAAYA,CAAI0O,QAAQ,EAAEhnB,MAAM,EAAK;QACzCzE,OAAO,CAACirB,GAAG,CAAC,6BAA6B,EAAExmB,MAAM,CAAC;QAClDgnB,QAAQ,CAACtrB,OAAO,CAAC,UAAAwtB,OAAO;UAAA,OAAIA,OAAO,CAACrV,MAAM,CAAC7T,MAAM,EAAE,QAAQ,CAAC;QAAA,EAAC;MAC/D,CAAC;MAED,IAAIyoB,eAAe,CAACv3B,MAAM,IAAI21B,2BAA2B,EAAE;QACzD,IAAM7mB,MAAM,GACV,IAAI,CAACiG,qBAAqB,CAAC,CAAC,CAAC,IAC7BhO,GAAG,CAAC6I,IAAI,CAAC/C,WAAW,CAAC,CAAC,EAAE9F,GAAG,CAAC6I,IAAI,CAAC5P,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC6M,WAAW,CAAC,CAAC,EAAE9F,GAAG,CAAC6I,IAAI,CAAC,CAAC,CAAC,CAAC5P,MAAM,GAAG,CAAC,CAAC,CAAC;QACvFqK,OAAO,CAACirB,GAAG,CAAC,wBAAwB,EAAExmB,MAAM,CAAC;QAC7CsY,YAAY,CAACmQ,eAAe,EAAEzoB,MAAM,CAAC;MACvC;MAEA,IAAIuoB,eAAe,CAACr3B,MAAM,IAAI,IAAI,CAAC+U,qBAAqB,CAAC/U,MAAM,EAAE;QAC/DqK,OAAO,CAACirB,GAAG,CAAC,sDAAsD,CAAC;QACnElO,YAAY,CAACiQ,eAAe,EAAE,IAAI,CAACtiB,qBAAqB,CAAC,CAAC,CAAC,CAAC;MAC9D;;MAEA;MACA,IAAMkjB,QAAQ,GAAG,SAAXA,QAAQA,CAAIC,YAAY,EAAEC,QAAQ,EAAEC,YAAY,EAAEC,QAAQ,EAAElO,KAAK,EAAK;QAC1E;QACA,IAAMmO,WAAW,GAAGH,QAAQ,GAAGD,YAAY;QAC3C,IAAIK,WAAW,GAAG,CAAC;QAEnB,IAAID,WAAW,IAAI,CAAC,EAAE;UACpB;QACF;QACA;QAAA,IAAA7iB,UAAA,GAAA3C,4BAAA,CACuBslB,YAAY;UAAA1iB,MAAA;QAAA;UAAnC,KAAAD,UAAA,CAAA/I,CAAA,MAAAgJ,MAAA,GAAAD,UAAA,CAAA7W,CAAA,IAAAwB,IAAA,GAAqC;YAAA,IAA1B+oB,SAAQ,GAAAzT,MAAA,CAAArV,KAAA;YACjB,IAAIk4B,WAAW,IAAID,WAAW,EAAE,MAAK,CAAC;;YAEtC,IAAInP,SAAQ,IAAIA,SAAQ,CAACrD,OAAO,CAACuS,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAElO,KAAK,CAAC,EAAE;cAC/DoO,WAAW,EAAE;cACbluB,OAAO,CAACirB,GAAG,WAAAjyB,MAAA,CAAWg1B,QAAQ,YAAAh1B,MAAA,CAAS8lB,SAAQ,CAACzlB,IAAI,sBAAAL,MAAA,CAAmBk1B,WAAW,CAAE,CAAC;YACvF;UACF;QAAC,SAAAtlB,GAAA;UAAAwC,UAAA,CAAAjX,CAAA,CAAAyU,GAAA;QAAA;UAAAwC,UAAA,CAAAjW,CAAA;QAAA;MACH,CAAC;MAEDy4B,QAAQ,CAACpC,SAAS,CAAC71B,MAAM,EAAEu1B,YAAY,EAAEQ,WAAW,EAAE,UAAU,CAAC;MACjEkC,QAAQ,CAACnC,QAAQ,CAAC91B,MAAM,EAAEy1B,WAAW,EAAEU,QAAQ,EAAE,SAAS,CAAC;;MAE3D;MACA,IAAMqC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAI3oB,SAAS,EAAEqlB,YAAY,EAAEuD,gBAAgB,EAAK;QACzE,IAAMhV,IAAI,GAAG;UACXiV,KAAK,EAAEzC,MAAM;UACbjB,IAAI,EAAEqB,KAAK;UACXvB,QAAQ,EAAEqB,QAAQ;UAClBlE,OAAO,EAAEiE,QAAQ;UACjBhE,UAAU,EAAE8D,WAAW;UACvBjB,MAAM,EAAEqB;QACV,CAAC;QACD,IAAMjN,QAAQ,GAAGpO,MAAI,CAACwF,MAAM,CAACrc,SAAS,CAACgxB,YAAY,CAAC;QACpD,IACErlB,SAAS,IACTjF,SAAS,CAACmQ,MAAI,EAAEoO,QAAQ,CAAChf,IAAI,CAAC,IAC9B4Q,MAAI,CAACka,wBAAwB,CAACC,YAAY,EAAEzR,IAAI,CAACyR,YAAY,CAAC,CAAC,EAC/D;UACA,IAAMznB,GAAG,GAAGgrB,gBAAgB,CAAC,CAAC;UAC9B,IAAIhrB,GAAG,IAAIsN,MAAI,CAACiZ,WAAW,CAACvmB,GAAG,CAACzO,CAAC,EAAEyO,GAAG,CAACF,CAAC,EAAE2nB,YAAY,CAAC,EAAE;YACvD7qB,OAAO,CAACirB,GAAG,qBAAAjyB,MAAA,CAAqB6xB,YAAY,oBAAiBznB,GAAG,CAAC;UACnE;QACF;MACF,CAAC;;MAED;MACA+qB,mBAAmB,CAAC,IAAI,CAAChS,UAAU,GAAG,CAAC,GAAG,IAAI,CAACjoB,cAAc,IAAI,CAACi4B,cAAc,CAACx2B,MAAM,EAAE,OAAO,EAAE;QAAA,OAChG2V,+BAA+B,CAACogB,WAAW,CAAC,CAAC,CAAC,EAAEhvB,GAAG,CAAC6I,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;MAAA,CACvE,CAAC;;MAED;MACA4oB,mBAAmB,CAAC3C,SAAS,CAAC71B,MAAM,GAAG01B,oCAAoC,EAAE,UAAU,EAAE;QAAA,OACvF/f,+BAA+B,CAACogB,WAAW,CAAC,CAAC,CAAC,EAAEhvB,GAAG,CAAC6I,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,UAAAQ,IAAI;UAAA,OAC/E2K,MAAI,CAAC8Y,YAAY,CAAC,CAAC,CAAChW,KAAK,CACvB,UAAA3T,MAAM;YAAA,OAAIkD,uBAAiB,CAACgD,IAAI,EAAElG,MAAM,CAAC,IAAIkD,uBAAiB,CAAC2oB,WAAW,CAAC,CAAC,CAAC,EAAE7rB,MAAM,CAAC;UAAA,CACxF,CAAC;QAAA,CACH,CAAC;MAAA,CACH,CAAC;;MAED;MACAsuB,mBAAmB,CAACpC,OAAO,CAACp2B,MAAM,KAAK,CAAC,EAAE,QAAQ,EAAE;QAAA,OAClD2V,+BAA+B,CAACogB,WAAW,CAAC,CAAC,CAAC,EAAEhvB,GAAG,CAAC6I,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,UAAAQ,IAAI;UAAA,OAC/E2K,MAAI,CAAC8Y,YAAY,CAAC,CAAC,CAAChW,KAAK,CACvB,UAAA3T,MAAM;YAAA,OAAIkD,uBAAiB,CAACgD,IAAI,EAAElG,MAAM,CAAC,IAAIkD,uBAAiB,CAAC2oB,WAAW,CAAC,CAAC,CAAC,EAAE7rB,MAAM,CAAC;UAAA,CACxF,CAAC;QAAA,CACH,CAAC;MAAA,CACH,CAAC;;MAED;MACAsuB,mBAAmB,CAAC,IAAI,EAAE,MAAM,EAAE,YAAM;QACtC,IAAMt0B,SAAS,MAAAb,MAAA,CAAAiP,oBAAA,CAAO4jB,QAAQ,GAAA5jB,oBAAA,CAAKyjB,WAAW,EAAC,EAAC;QAAA,IAAA7e,UAAA,GAAApE,4BAAA,CAEzB5O,SAAS;UAAAiT,MAAA;QAAA;UAAA,IAAAzF,KAAA,YAAAA,MAAA,EAAE;cAAA,IAAvByX,QAAQ,GAAAhS,MAAA,CAAA9W,KAAA;cACjB;cACA,IAAMs4B,QAAQ,GAAGhjB,+BAA+B,CAC9CwT,QAAQ,EACRpiB,GAAG,CAAC6I,IAAI,EACR,CAAC,CAAC,EAAE,EAAE,CAAC,EACP,CAAC,EACD,KAAK,EACL,UAAAQ,IAAI;gBAAA,OACF2K,MAAI,CAAC8Y,YAAY,CAAC,CAAC,CAAChW,KAAK,CAAC,UAAA3T,MAAM;kBAAA,OAAIkD,uBAAiB,CAACgD,IAAI,EAAElG,MAAM,CAAC,IAAIkD,uBAAiB,CAAC+b,QAAQ,EAAEjf,MAAM,CAAC;gBAAA,EAAC;cAAA,GAC7G,KACF,CAAC;cAED,IAAIyuB,QAAQ,EAAE;gBAAA;kBAAA/4B,CAAA,EACL+4B;gBAAQ,GAAC;cAClB;YACF,CAAC;YAAAC,IAAA;UAhBD,KAAA1hB,UAAA,CAAAxK,CAAA,MAAAyK,MAAA,GAAAD,UAAA,CAAAtY,CAAA,IAAAwB,IAAA;YAAAw4B,IAAA,GAAAlnB,KAAA;YAAA,IAAAknB,IAAA,SAAAA,IAAA,CAAAh5B,CAAA;UAAA;QAgBC,SAAAqT,GAAA;UAAAiE,UAAA,CAAA1Y,CAAA,CAAAyU,GAAA;QAAA;UAAAiE,UAAA,CAAA1X,CAAA;QAAA;QAED,OAAO,IAAI,EAAC;MACd,CAAC,CAAC;;MAEF;MACA,IAAMumB,aAAa,GAAG,SAAhBA,aAAaA,CAAIqS,YAAY,EAAES,cAAc,EAAK;QACtD;QAAA,IAAAthB,UAAA,GAAAzE,4BAAA,CACuBslB,YAAY;UAAA5gB,MAAA;QAAA;UAAnC,KAAAD,UAAA,CAAA7K,CAAA,MAAA8K,MAAA,GAAAD,UAAA,CAAA3Y,CAAA,IAAAwB,IAAA,GAAqC;YAAA,IAA1B+oB,UAAQ,GAAA3R,MAAA,CAAAnX,KAAA;YACjB,IAAI8oB,UAAQ,IAAIA,UAAQ,CAACpD,aAAa,CAAC8S,cAAc,CAAC,EAAE;cACtDxuB,OAAO,CAACirB,GAAG,WAAAjyB,MAAA,CAAWw1B,cAAc,YAAAx1B,MAAA,CAAS8lB,UAAQ,CAACzlB,IAAI,CAAE,CAAC;YAC/D;UACF;QAAC,SAAAuP,GAAA;UAAAsE,UAAA,CAAA/Y,CAAA,CAAAyU,GAAA;QAAA;UAAAsE,UAAA,CAAA/X,CAAA;QAAA;MACH,CAAC;MACD,IAAI,IAAI,CAACk1B,OAAO,CAAC,IAAI,CAACvwB,GAAG,GAAG,CAAC,CAAC,EAAE;QAC9B4hB,aAAa,CAACgQ,WAAW,EAAE,IAAI,CAACrB,OAAO,CAAC,IAAI,CAACvwB,GAAG,GAAG,CAAC,CAAC,CAAC;MACxD;MAEAkG,OAAO,CAACirB,GAAG,CAAC,mBAAmB,EAAErB,aAAa,CAAC;IACjD;EAAC;IAAAhb,GAAA;IAAA5Y,KAAA,EAED,SAAAgjB,GAAGA,CAAA,EAAG;MACJ,IACaE,OAAO,GAChB,IAAI,CADNxa,OAAO,CAAIwa,OAAO;MAEpBgC,aAAa,CAAC,IAAI,CAACH,QAAQ,CAAC;MAC5B7B,OAAO,CAACzR,MAAM,CAACyR,OAAO,CAACxR,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC1C;EAAC;AAAA,EAnbqBihB,MAAM,E;;;;;;;;;;;;;;;;;;;;;ACdK;AACkC;AACU;AAwBhE;AAER,IAAM8F,MAAM,0BAAA9Y,UAAA;EACjB,SAAA8Y,OAAY7Y,OAAO,EAAElX,OAAO,EAAE;IAAA,IAAAgkB,OAAA,EAAAC,OAAA,EAAAC,OAAA,EAAA9M,eAAA,EAAAD,cAAA,EAAAgN,UAAA;IAAA,IAAAjT,KAAA;IAAAmG,qBAAA,OAAA0Y,MAAA;IAC5B7e,KAAA,GAAAoG,gBAAA,OAAAyY,MAAA;IAEA7e,KAAA,CAAKlR,OAAO,GAAGA,OAAO;IAEtB,IAAAgS,MAAA,GAAAd,KAAA;MACalT,GAAG,GAAAgU,MAAA,CAAdhS,OAAO,CAAIhC,GAAG;IAEhBkT,KAAA,CAAKjS,KAAK,GAAG6C,MAAM,CAAC,CAAC;IACrBoP,KAAA,CAAKpF,MAAM,GAAG,QAAQ;IAEtBoF,KAAA,CAAKkT,IAAI,GAAG,IAAI;IAChBlT,KAAA,CAAKmT,QAAQ,GAAG,IAAI;IACpBnT,KAAA,CAAK+M,YAAY,GAAG,IAAI;IACxB/M,KAAA,CAAKpW,IAAI,GAAG,EAAE;IACdoW,KAAA,CAAKqG,QAAQ,GAAG,KAAK;IACrBrG,KAAA,CAAKjL,MAAM,GAAGnC,iBAAW,CAAC,CAAC,EAAE,GAAG,CAAC;IACjCoN,KAAA,CAAK8D,MAAM,GAAG,IAAI;IAClB9D,KAAA,CAAKjQ,YAAY,GAAG,CAAC;IACrBiQ,KAAA,CAAKhC,YAAY,GAAG,eAAe;IACnCgC,KAAA,CAAKoT,OAAO,GAAG,IAAI;IACnBpT,KAAA,CAAKsE,MAAM,GAAG,KAAK;IACnBtE,KAAA,CAAK3K,WAAW,GAAG,KAAK;IACxB2K,KAAA,CAAKY,OAAO;IACZZ,KAAA,CAAKvT,CAAC,GAAG,IAAI;IACbuT,KAAA,CAAKva,CAAC,GAAG,IAAI;IACbua,KAAA,CAAKvM,CAAC,GAAG,IAAI;IAEbrO,MAAM,CAACkL,IAAI,CAAC0V,OAAO,CAAC,CAACzV,OAAO,CAAC,UAAAC,IAAI,EAAI;MACnCwP,KAAA,CAAKxP,IAAI,CAAC,GAAGwV,OAAO,CAACxV,IAAI,CAAC;IAC5B,CAAC,CAAC;IACFpL,MAAM,CAACkL,IAAI,CAAC0P,KAAA,CAAKtW,KAAK,CAAC4c,MAAM,CAACwY,OAAO,CAAC9e,KAAA,CAAKvW,IAAI,CAAC,CAAC,CAAC8G,OAAO,CAAC,UAAAC,IAAI,EAAI;MAChEwP,KAAA,CAAKxP,IAAI,CAAC,GAAGwP,KAAA,CAAKtW,KAAK,CAAC4c,MAAM,CAACwY,OAAO,CAAC9e,KAAA,CAAKvW,IAAI,CAAC,CAAC+G,IAAI,CAAC;IACzD,CAAC,CAAC;IAEFwP,KAAA,CAAK1W,IAAI,GAAG,CAAC;IACb0W,KAAA,CAAKlG,OAAO,GAAG,KAAK;IACpBkG,KAAA,CAAKvT,CAAC,IAAAqmB,OAAA,GAAG9S,KAAA,CAAKvT,CAAC,cAAAqmB,OAAA,cAAAA,OAAA,GAAIhmB,GAAG,CAAC6I,IAAI,CAACqK,KAAA,CAAKjb,CAAC,CAAC,CAACib,KAAA,CAAK1M,CAAC,CAAC,CAAC7G,CAAC;IAC7CuT,KAAA,CAAKva,CAAC,IAAAstB,OAAA,GAAG/S,KAAA,CAAKva,CAAC,cAAAstB,OAAA,cAAAA,OAAA,GAAIjmB,GAAG,CAAC6I,IAAI,CAACqK,KAAA,CAAKjb,CAAC,CAAC,CAACib,KAAA,CAAK1M,CAAC,CAAC,CAAC7N,CAAC;IAC7Cua,KAAA,CAAKvM,CAAC,IAAAuf,OAAA,GAAGhT,KAAA,CAAKvM,CAAC,cAAAuf,OAAA,cAAAA,OAAA,GAAIlmB,GAAG,CAAC6I,IAAI,CAACqK,KAAA,CAAKjb,CAAC,CAAC,CAACib,KAAA,CAAK1M,CAAC,CAAC,CAACG,CAAC;IAC7CuM,KAAA,CAAKhS,MAAM,GAAGuF,iBAAiB,CAAAyM,KAAK,CAAC;IAErCA,KAAA,CAAKqT,WAAW,GAAGvmB,GAAG,CAAC6I,IAAI,CAACqK,KAAA,CAAKjb,CAAC,CAAC,CAACib,KAAA,CAAK1M,CAAC,CAAC;IAC3C0M,KAAA,CAAKqT,WAAW,CAACnmB,GAAG,GAAA8S,KAAO;IAC3BA,KAAA,CAAKqT,WAAW,CAACrc,KAAK,GAAG,IAAI;IAE7BgJ,KAAA,CAAKnF,SAAS,IAAAqL,eAAA,GAAGlG,KAAA,CAAKnF,SAAS,cAAAqL,eAAA,cAAAA,eAAA,GAAIlG,KAAA,CAAKmF,cAAc;IACtDnF,KAAA,CAAKvF,QAAQ,IAAAwL,cAAA,GAAGjG,KAAA,CAAKvF,QAAQ,cAAAwL,cAAA,cAAAA,cAAA,GAAIjG,KAAA,CAAKwG,aAAa;IAEnD,SAAA8M,EAAA,MAAA1B,eAAA,GAA2BxsB,MAAM,CAAC6P,OAAO,CAAC+K,KAAA,CAAKrW,MAAM,CAAC,EAAA2pB,EAAA,GAAA1B,eAAA,CAAA7rB,MAAA,EAAAutB,EAAA,IAAE;MAAnD,IAAAzB,kBAAA,GAAAhqB,oBAAA,CAAA+pB,eAAA,CAAA0B,EAAA;QAAOtU,GAAG,GAAA6S,kBAAA;QAAEzrB,KAAK,GAAAyrB,kBAAA;MACpB7R,KAAA,CAAKhB,GAAG,CAAC,GAAG2G,kBAAM,CAAC9b,KAAK,CAACC,GAAG,CAAC1D,KAAK,CAAC;IACrC;IAEA4Z,KAAA,aAAc,GAAG;MACf4G,IAAI,EAAE,SAANA,IAAIA,CAAEC,OAAO,EAAI;QACf,IAAMjc,IAAI,GAAGoV,KAAA,CAAKtW,KAAK,CAAC4c,MAAM,CAACwY,OAAO,CAAC9e,KAAA,CAAKvW,IAAI,CAAC;QACjDuW,KAAA,CAAK8G,mBAAmB,CAACD,OAAO,EAAEjc,IAAI,CAAC;MACzC;IACF,CAAC;IAEDoV,KAAA,CAAK2G,SAAS,GAAG,KAAK;IACtB3G,KAAA,CAAKyG,SAAS,GAAG,QAAQ;IACzBzG,KAAA,CAAKtU,MAAM,GAAG,IAAIma,2BAAc,CAAC7F,KAAA,CAAKpC,aAAa,CAACc,UAAU,CAAC,OAAO,CAAC,CAAC;IACxEsB,KAAA,CAAKtU,MAAM,CAACqC,KAAK,GAAG,QAAQ;IAC5BiS,KAAA,CAAKtU,MAAM,CAACib,SAAS,GAAG,KAAK;IAC7B3G,KAAA,CAAKtU,MAAM,CAAC+a,SAAS,GAAG,MAAM;IAC9BzG,KAAA,CAAKtU,MAAM,CAACgb,UAAU,GAAG,KAAK;IAC9B1G,KAAA,CAAKtU,MAAM,CAAC2b,WAAW,GAAG,IAAI;IAC9BrH,KAAA,CAAKtU,MAAM,CAACooB,IAAI,IAAAb,UAAA,GAAGjT,KAAA,CAAK8T,IAAI,cAAAb,UAAA,cAAAA,UAAA,GAAI,IAAI;IACpC,IAAIjT,KAAA,CAAKsE,MAAM,EAAE;MACftE,KAAA,CAAKhC,YAAY,KAAK,aAAa,GAAGgC,KAAA,CAAK+T,SAAS,CAAC,CAAC,GAAG/T,KAAA,CAAKgU,KAAK,CAAC,CAAC;IACvE,CAAC,MAAM;MACLhU,KAAA,CAAKkU,WAAW,CAAClU,KAAA,CAAKhC,YAAY,CAAC;IACrC;IACAgC,KAAA,CAAKtU,MAAM,CAACqE,YAAY,GAAGiQ,KAAA,CAAKjQ,YAAY;IAE5CiQ,KAAA,CAAKsH,EAAE,CAAC,WAAW,EAAE,UAAAQ,GAAG,EAAI;MAC1B,IAAAzG,MAAA,GAAArB,KAAA;QAAAuH,cAAA,GAAAlG,MAAA,CACEvS,OAAO;QAAI2K,QAAQ,GAAA8N,cAAA,CAAR9N,QAAQ;QAAExJ,MAAM,GAAAsX,cAAA,CAANtX,MAAM;QAAEuX,IAAI,GAAAD,cAAA,CAAJC,IAAI;MAEnC,IAAI/N,QAAQ,CAACwO,aAAa,IAAIxO,QAAQ,CAACyO,cAAc,IAAI,CAACzO,QAAQ,CAAC0O,YAAY,CAACL,GAAG,CAAC,EAAE;QACpF;MACF;MACArO,QAAQ,CAAC2O,KAAK,CAACC,OAAO,GAAG,IAAI;MAC7B,IAAI0W,wBAAwB,GAAG,KAAK;MACpC,IAAIpS,eAAe,GAAG,KAAK;MAC3B,IAAIC,YAAY,GAAG,KAAK;MAExB,IAAI3c,MAAM,CAACwX,aAAa,CAAC1hB,MAAM,EAAE;QAC/B,KAAK,IAAIhB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkL,MAAM,CAACwX,aAAa,CAAC1hB,MAAM,EAAEhB,CAAC,EAAE,EAAE;UACpD,IAAMmoB,UAAU,GAAGjd,MAAM,CAACwX,aAAa,CAAC1iB,CAAC,CAAC;UAC1C,IAAImoB,UAAU,CAACzjB,IAAI,KAAK,UAAU,EAAE;YAClC,IAAIoa,wBAAkB,CAACqJ,UAAU,EAAAlN,KAAA,EAAQ,MAAM,CAAC,EAAE;cAChDkN,UAAU,CAACgK,UAAU,CAAAlX,KAAK,CAAC;cAC3B2M,eAAe,GAAG,IAAI;cACtBoS,wBAAwB,GAAG,IAAI;YACjC,CAAC,MAAM,IAAIlb,wBAAkB,CAACqJ,UAAU,EAAAlN,KAAA,EAAQ,UAAU,CAAC,EAAE;cAC3DkN,UAAU,CAACqI,cAAc,CAAAvV,KAAK,CAAC;cAC/B2M,eAAe,GAAG,IAAI;cACtBoS,wBAAwB,GAAG,IAAI;YACjC;UACF,CAAC,MAAM,IAAIlb,wBAAkB,CAACqJ,UAAU,EAAAlN,KAAA,EAAQ,QAAQ,CAAC,EAAE;YACzDkN,UAAU,CAACxE,MAAM,CAAA1I,KAAA,EAAO,QAAQ,CAAC;YACjC+e,wBAAwB,GAAG,IAAI;YAC/BnS,YAAY,GAAG,IAAI;UACrB;QACF;MACF,CAAC,MAAM,IAAI3c,MAAM,CAACgd,gBAAgB,IAAIhd,MAAM,CAACgd,gBAAgB,CAACO,KAAK,EAAE;QACnE,IACE3J,wBAAkB,CAAC5T,MAAM,CAACgd,gBAAgB,EAAAjN,KAAA,EAAQ,QAAQ,CAAC,IAC3D7M,uBAAiB,CAAClD,MAAM,CAACgd,gBAAgB,EAAAjN,KAAM,CAAC,IAAI/P,MAAM,CAACgd,gBAAgB,CAACO,KAAK,EACjF;UACAvd,MAAM,CAACgd,gBAAgB,CAACK,YAAY,CAAAtN,KAAK,CAAC;UAC1C+e,wBAAwB,GAAG,IAAI;QACjC;MACF,CAAC,MAAM,IAAI,CAACplB,uBAAuB,CAAAqG,KAAA,EAAO/P,MAAM,CAAC,IAAInD,GAAG,CAAC4M,gBAAgB,KAAKsG,KAAA,CAAKvF,QAAQ,GAAG,CAAC,EAAE;QAC/FxK,MAAM,CAACyX,WAAW,CAAC,CAAC;QACpB1H,KAAA,CAAK2H,MAAM,CAAC,CAAC;QACbH,IAAI,CAACI,YAAY,CAAA5H,KAAK,CAAC;QACvB/P,MAAM,CAAC4X,aAAa,GAAA7H,KAAO;MAC7B;MAEA,IAAI4M,YAAY,EAAE;QAChB,IAAMjE,KAAK,GAAG3V,UAAU,CAAC,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;QAC1DwS,uBAAK,CAAC5G,IAAI,CAAC+J,KAAK,CAAC;MACnB,CAAC,MAAM,IAAIgE,eAAe,EAAE;QAC1B,IAAMhE,MAAK,GAAGhD,kBAAM,CAAC9b,KAAK,CAACC,GAAG,CAAC,QAAQ,CAAC,CAAC8e,KAAK,CAACC,QAAQ,CAACC,MAAM,CAACrE,IAAI;QACnEe,uBAAK,CAAC5G,IAAI,CAAC+J,MAAK,CAAC;MACnB;MACA,IAAIoW,wBAAwB,EAAE;QAC5BnxB,6BAA6B,CAAAoS,KAAK,CAAC;MACrC;IACF,CAAC,CAAC;IAEFA,KAAA,CAAKmL,QAAQ,GAAG,IAAI;IACpBnL,KAAA,CAAKtU,MAAM,CAAC0b,YAAY,GAAG,IAAI;IAC/BpH,KAAA,CAAK+I,QAAQ,CAAC/I,KAAA,CAAKtU,MAAM,CAAC;IAE1B6N,yBAAyB,CAAAyG,KAAK,CAAC;IAAA,OAAAA,KAAA;EACjC;EAACgJ,eAAA,CAAA6V,MAAA,EAAA9Y,UAAA;EAAA,OAAAkD,kBAAA,CAAA4V,MAAA;IAAA7f,GAAA;IAAA5Y,KAAA,EAED,SAAAwnB,aAAaA,CAACrR,QAAQ,EAAEsR,IAAI,EAAoB;MAAA,IAAA9F,MAAA;MAAA,IAAlBpH,SAAS,GAAAlZ,SAAA,CAAA1B,MAAA,QAAA0B,SAAA,QAAAyL,SAAA,GAAAzL,SAAA,MAAG,IAAI;MAC5C,IAAMqmB,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;QACpB,IAAQhQ,MAAM,GAAKiK,MAAI,CAACjZ,OAAO,CAAvBgP,MAAM;QACd,IAAIA,MAAM,EAAE;UACV;QACF;QACAvB,QAAQ,CAAC,CAAC;MACZ,CAAC;MACD,IAAI,CAACwR,YAAY,CAAC,CAAC;MACnBpN,SAAS,IAAImN,OAAO,CAAC,CAAC;MACtB,IAAI,CAAC3C,QAAQ,GAAGC,WAAW,CAAC0C,OAAO,EAAED,IAAI,CAAC;IAC5C;EAAC;IAAA7O,GAAA;IAAA5Y,KAAA,EAED,SAAA2nB,YAAYA,CAAA,EAAG;MACb,IAAI,IAAI,CAAC5C,QAAQ,EAAE;QACjBG,aAAa,CAAC,IAAI,CAACH,QAAQ,CAAC;QAC5B,IAAI,CAACA,QAAQ,GAAG,IAAI;MACtB;IACF;EAAC;IAAAnM,GAAA;IAAA5Y,KAAA,EAED,SAAAuhB,MAAMA,CAAA,EAAG;MACP,IAAI,IAAI,CAACtB,QAAQ,EAAE;QACjB;MACF;MAEA,IAAI,CAACA,QAAQ,GAAG,IAAI;MACpB,IAAMvY,SAAS,GAAG,IAAIjF,qBAAQ,CAAC,CAAC;MAChCiF,SAAS,CAACC,KAAK,GAAG,WAAW;MAC7BD,SAAS,CAACE,MAAM,GAAG,CAAC;MACpB,IAAMpE,IAAI,GAAG,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,GAAG,CAAC;MACnEkE,SAAS,CAACG,IAAI,CAACrE,IAAI,CAAC;MACpBkE,SAAS,CAACI,MAAM,CAACpL,WAAW,CAAC;MAC7B,IAAI,CAACqL,UAAU,CAACL,SAAS,EAAE,CAAC,CAAC;IAC/B;EAAC;IAAAkR,GAAA;IAAA5Y,KAAA,EAED,SAAA8iB,QAAQA,CAAA,EAAG;MACT,IAAI,CAAC,IAAI,CAAC7C,QAAQ,EAAE;QAClB;MACF;MAEA,IAAI,CAACA,QAAQ,GAAG,KAAK;MACrB,IAAMvY,SAAS,GAAG,IAAI,CAACqb,eAAe,CAAC,WAAW,CAAC;MACnD,IAAIrb,SAAS,EAAE;QACb,IAAI,CAACc,WAAW,CAACd,SAAS,CAAC;MAC7B;IACF;EAAC;IAAAkR,GAAA;IAAA5Y,KAAA,EAED,SAAAwuB,OAAOA,CAAA,EAAG;MACR,OAAO,IAAI,CAAChrB,IAAI,CAAC7D,MAAM,GAAG,CAAC;IAC7B;EAAC;IAAAiZ,GAAA;IAAA5Y,KAAA,EAED,SAAAyuB,OAAOA,CAAC3B,IAAI,EAAE;MACZ,IAAI,CAACA,IAAI,EAAE;QACT,IAAI,CAAChV,IAAI,CAAC,CAAC;QACX;MACF;MACA,IAAI,CAACgV,IAAI,GAAGA,IAAI;MAChB,IAAI,CAACC,QAAQ,GAAG;QACdpuB,CAAC,EAAEmuB,IAAI,CAACnuB,CAAC;QACTuO,CAAC,EAAE4f,IAAI,CAAC5f;MACV,CAAC;IACH;EAAC;IAAA0L,GAAA;IAAA5Y,KAAA,EAED,SAAA+Z,KAAKA,CAAA,EAAG;MAAA,IAAA8N,aAAA,EAAAyG,YAAA;MACN,CAAAzG,aAAA,OAAI,CAACrN,OAAO,cAAAqN,aAAA,eAAZA,aAAA,CAAc9N,KAAK,CAAC,CAAC;MACrB,CAAAuU,YAAA,OAAI,CAAChpB,MAAM,cAAAgpB,YAAA,eAAXA,YAAA,CAAaxW,IAAI,CAAC,CAAC;IACrB;EAAC;IAAAc,GAAA;IAAA5Y,KAAA,EAED,SAAAma,MAAMA,CAAA,EAAG;MAAA,IAAA2N,cAAA,EAAAyG,aAAA;MACP,CAAAzG,cAAA,OAAI,CAACtN,OAAO,cAAAsN,cAAA,eAAZA,cAAA,CAAc3N,MAAM,CAAC,CAAC;MACtB,CAAAoU,aAAA,OAAI,CAACjpB,MAAM,cAAAipB,aAAA,eAAXA,aAAA,CAAa/V,IAAI,CAAC,CAAC;IACrB;EAAC;IAAAI,GAAA;IAAA5Y,KAAA,EAED,SAAA2uB,OAAOA,CAACnrB,IAAI,EAAE;MAAA,IAAAokB,MAAA;MACZ,IAAI,CAACpkB,IAAI,CAAC7D,MAAM,EAAE;QAChB,IAAI,CAACmY,IAAI,CAAC,CAAC;QACX;MACF;MAEA,IAAI,CAACgW,WAAW,CAAC,cAAc,CAAC;MAChC,IAAI,CAACd,OAAO,GAAG,KAAK;MACpB,IAAI,CAACxpB,IAAI,GAAGA,IAAI;MAChB,IAAI,CAACgkB,aAAa,CAAC;QAAA,OAAMI,MAAI,CAACgH,IAAI,CAAC,CAAC;MAAA,GAAE1yB,SAAS,EAAE,IAAI,CAAC;IACxD;EAAC;IAAA0c,GAAA;IAAA5Y,KAAA,EAED,SAAA44B,cAAcA,CAAClb,MAAM,EAAEoP,IAAI,EAAE;MAC3B,IAAI,CAACpP,MAAM,EAAE;QACX,OAAO,KAAK;MACd;MACA,IAAI,CAACoP,IAAI,EAAE;QACT,IAAI,CAACmC,aAAa,CAAC,CAAC;QACpB,OAAO,KAAK;MACd;MACA,OAAOjgB,uBAAuB,CAAC,IAAI,EAAE8d,IAAI,CAAC;IAC5C;EAAC;IAAAlU,GAAA;IAAA5Y,KAAA,EAED,SAAAsiB,MAAMA,CAACwK,IAAI,EAAEpP,MAAM,EAAE;MAAA,IAAAoR,qBAAA;MACnB,IACapoB,GAAG,GACZ,IAAI,CADNgC,OAAO,CAAIhC,GAAG;MAEhB,IAAI,CAACihB,YAAY,CAAC,CAAC;MACnB,IAAInkB,IAAI,GAAG,EAAE;MACb;MACA,IAAI,CAACspB,IAAI,EAAE;QACT,IAAI,CAAChV,IAAI,CAAC,CAAC;QACX;MACF;MACA;MACA,IACE,IAAI,CAAC8gB,cAAc,CAAClb,MAAM,EAAEoP,IAAI,CAAC,KAChC,CAACpmB,GAAG,CAAC6I,IAAI,CAAC,IAAI,CAAC5Q,CAAC,CAAC,CAAC,IAAI,CAACuO,CAAC,CAAC,CAAC0D,KAAK,IAC7BlK,GAAG,CAAC6I,IAAI,CAAC,IAAI,CAAC5Q,CAAC,CAAC,CAAC,IAAI,CAACuO,CAAC,CAAC,CAAC0D,KAAK,IAAI,EAAAke,qBAAA,GAAApoB,GAAG,CAAC6I,IAAI,CAAC,IAAI,CAAC5Q,CAAC,CAAC,CAAC,IAAI,CAACuO,CAAC,CAAC,CAACpG,GAAG,cAAAgoB,qBAAA,uBAA5BA,qBAAA,CAA8BnnB,KAAK,MAAK,IAAI,CAACA,KAAM,CAAC,EACzF;QACA,IAAI,CAAC8mB,OAAO,CAAC3B,IAAI,CAAC;QAClB,IAAI,CAACpP,MAAM,GAAGA,MAAM;QACpB,IAAI,CAAC/O,MAAM,GAAGpB,uBAAiB,CAAC,IAAI,EAAEuf,IAAI,CAACzmB,CAAC,EAAEymB,IAAI,CAACztB,CAAC,CAAC;QACrD,IAAI,CAAC2vB,SAAS,CAACtR,MAAM,CAAC;QACtB;MACF;MACA;MACA,IAAIhX,GAAG,CAAC6I,IAAI,CAACud,IAAI,CAACnuB,CAAC,CAAC,IAAI+H,GAAG,CAAC6I,IAAI,CAACud,IAAI,CAACnuB,CAAC,CAAC,CAACmuB,IAAI,CAAC5f,CAAC,CAAC,IAAIxG,GAAG,CAAC6I,IAAI,CAACud,IAAI,CAACnuB,CAAC,CAAC,CAACmuB,IAAI,CAAC5f,CAAC,CAAC,CAAC0D,KAAK,EAAE;QAClFpN,IAAI,GAAGqM,8BAA8B,CAAC,IAAI,EAAEid,IAAI,EAAEpmB,GAAG,CAAC;MACxD,CAAC,MAAM;QACLlD,IAAI,GAAGwM,eAAe,CAAC,IAAI,EAAE8c,IAAI,CAACnuB,CAAC,EAAEmuB,IAAI,CAAC5f,CAAC,EAAExG,GAAG,CAAC;MACnD;MACA;MACA,IAAIlD,IAAI,CAAC7D,MAAM,EAAE;QACf,IAAI,CAAC8uB,OAAO,CAAC3B,IAAI,CAAC;QAClB,IAAI,CAACpP,MAAM,GAAGA,MAAM;QACpB,IAAI,CAACiR,OAAO,CAACnrB,IAAI,CAAC;MACpB,CAAC,MAAM;QACL,IAAI,CAACsU,IAAI,CAAC,CAAC;MACb;IACF;EAAC;IAAAc,GAAA;IAAA5Y,KAAA,EAED,SAAAyd,kBAAkBA,CAAChP,MAAM,EAAE;MACzB,OAAOgP,wBAAkB,CAAC,IAAI,EAAEhP,MAAM,EAAE,IAAI,CAACiP,MAAM,CAAC;IACtD;EAAC;IAAA9E,GAAA;IAAA5Y,KAAA,EAED,SAAAgvB,SAASA,CAAC9sB,IAAI,EAAE;MAAA,IAAAinB,MAAA;MACd,IAAAlG,aAAA,GAEI,IAAI,CADNva,OAAO;QAAI0Y,IAAI,GAAA6B,aAAA,CAAJ7B,IAAI;QAAEvX,MAAM,GAAAoZ,aAAA,CAANpZ,MAAM;MAEzB,QAAQ3H,IAAI;QACV,KAAK,QAAQ;UACX,IAAI,CAAC,IAAI,CAACub,kBAAkB,CAAC,IAAI,CAACqP,IAAI,CAAC,EAAE;YACvC,IAAI,CAACmC,aAAa,CAAC,CAAC;YACpB;UACF;UACA,IAAI,CAACnB,WAAW,CAAC,aAAa,CAAC;UAC/B,IAAI,CAACtG,aAAa,CAChB,YAAM;YACJ,IAAI,CAAC2B,MAAI,CAAC1L,kBAAkB,CAAC0L,MAAI,CAAC2D,IAAI,CAAC,EAAE;cACvC,IAAI3D,MAAI,CAAC2D,IAAI,IAAI3D,MAAI,CAAC2D,IAAI,CAACrY,SAAS,IAAI,CAAC,EAAE;gBACzC0U,MAAI,CAAC2D,IAAI,CAAC9J,GAAG,CAAC,CAAC;cACjB;cACAmG,MAAI,CAAC8F,aAAa,CAAC,CAAC;cACpB;YACF;YACA,IAAI9F,MAAI,CAACsG,YAAY,CAAC,CAAC,EAAE;cACvBtG,MAAI,CAACxa,MAAM,GAAGpB,uBAAiB,CAAC4b,MAAI,EAAEA,MAAI,CAAC2D,IAAI,CAACzmB,CAAC,EAAE8iB,MAAI,CAAC2D,IAAI,CAACztB,CAAC,CAAC;cAC/D8pB,MAAI,CAAC2E,WAAW,CAAC,aAAa,CAAC;YACjC;YACA,IAAI,CAAC9e,uBAAuB,CAACma,MAAI,EAAEA,MAAI,CAAC2D,IAAI,CAAC,EAAE;cAC7C3D,MAAI,CAAC7G,MAAM,CAAC6G,MAAI,CAAC2D,IAAI,EAAE,QAAQ,CAAC;cAChC;YACF;YAEA3D,MAAI,CAACzG,MAAM,IAAIyG,MAAI,CAACzG,MAAM,CAACiN,GAAG,IAAIxG,MAAI,CAACzV,OAAO,IAAI0L,uBAAK,CAAC5G,IAAI,CAAC2Q,MAAI,CAACzG,MAAM,CAACiN,GAAG,CAAC;YAE7E,IAAIxG,MAAI,CAAC2D,IAAI,CAACrY,SAAS,GAAG,CAAC,EAAE;cAC3B0U,MAAI,CAAC2D,IAAI,CAACrY,SAAS,GAAG8H,sBAAsB,CAAC4M,MAAI,EAAEA,MAAI,CAAC2D,IAAI,CAAC;cAC7D,IACE3D,MAAI,CAAC2D,IAAI,CAAC7M,QAAQ,IAClBpW,MAAM,KACLA,MAAM,CAACukB,YAAY,KAAKjF,MAAI,CAAC2D,IAAI,IAAIjjB,MAAM,CAACgd,gBAAgB,KAAKsC,MAAI,CAAC2D,IAAI,CAAC,EAC5E;gBACA1L,IAAI,CAAC+D,UAAU,CAAC,WAAW,EAAEgE,MAAI,CAAC2D,IAAI,CAACrY,SAAS,GAAG,GAAG,GAAG0U,MAAI,CAAC2D,IAAI,CAAC/N,cAAc,CAAC;cACpF;cACAoK,MAAI,CAAC2D,IAAI,CAAC1H,UAAU,CAAC+D,MAAI,CAAC;YAC5B;YAEA,IAAIA,MAAI,CAAC2D,IAAI,CAACrY,SAAS,IAAI,CAAC,EAAE;cAC5B0U,MAAI,CAAC2D,IAAI,CAAC9J,GAAG,CAAC,CAAC;cACfmG,MAAI,CAAC8F,aAAa,CAAC,CAAC;YACtB;UACF,CAAC,EACD,IAAI,CAAC1H,UAAU,GAAG,IAAI,EACtB,KACF,CAAC;UACD;QACF;UACE,IAAI,CAACzP,IAAI,CAAC,CAAC;MACf;IACF;EAAC;IAAAc,GAAA;IAAA5Y,KAAA,EAED,SAAAivB,aAAaA,CAAA,EAAG;MAAA,IAAA1F,MAAA;MACd,IAAI,CAAC5B,YAAY,CAAC,CAAC;MACnB,IAAM4I,OAAO,GAAG1d,oBAAoB,CAAC,IAAI,EAAE,UAAApL,QAAQ;QAAA,OAAI8hB,MAAI,CAAC9L,kBAAkB,CAAChW,QAAQ,CAAC;MAAA,EAAC;MACzF,IAAI8oB,OAAO,CAAC5wB,MAAM,EAAE;QAClB,IAAM8O,MAAM,GAAGuI,0BAA0B,CAAC,IAAI,EAAEuZ,OAAO,CAAC;QACxD,IAAI9hB,MAAM,EAAE;UACV,IAAIO,uBAAuB,CAAC,IAAI,EAAEP,MAAM,CAAC,EAAE;YACzC,IAAI,CAACE,MAAM,GAAGpB,uBAAiB,CAAC,IAAI,EAAEkB,MAAM,CAACpI,CAAC,EAAEoI,MAAM,CAACpP,CAAC,CAAC;YACzD,IAAI,CAAC2vB,SAAS,CAAC,IAAI,CAACtR,MAAM,CAAC;YAC3B;UACF;UACA,IAAI,CAAC+Q,OAAO,CAAChgB,MAAM,CAAChH,QAAQ,CAAC;UAC7B,IAAI,CAACknB,OAAO,CAAClgB,MAAM,CAACjL,IAAI,CAAC;UACzB;QACF;MACF;MACA,IAAI,CAACsU,IAAI,CAAC,CAAC;MACX;IACF;EAAC;IAAAc,GAAA;IAAA5Y,KAAA,EAED,SAAAyvB,YAAYA,CAAA,EAAG;MACb,OACE,CAAC,IAAI,CAAC3C,IAAI,CAACnuB,CAAC,KAAK,IAAI,CAACouB,QAAQ,CAACpuB,CAAC,IAAI,IAAI,CAACmuB,IAAI,CAAC5f,CAAC,KAAK,IAAI,CAAC6f,QAAQ,CAAC7f,CAAC,KACnEH,uBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC+f,IAAI,CAAC,IAAI,IAAI,CAAC9Z,KAAK;IAEpD;EAAC;IAAA4F,GAAA;IAAA5Y,KAAA,EAED,SAAAywB,UAAUA,CAAA,EAAG;MACX,IACa/pB,GAAG,GACZ,IAAI,CADNgC,OAAO,CAAIhC,GAAG;MAEhB,IAAMpE,IAAI,GAAG,IAAI,CAACkB,IAAI,CAAC,IAAI,CAACA,IAAI,CAAC7D,MAAM,GAAG,CAAC,CAAC;MAC5C,IAAM+wB,QAAQ,GAAGhqB,GAAG,CAAC6I,IAAI,CAACjN,IAAI,CAAC3D,CAAC,CAAC,CAAC2D,IAAI,CAAC4K,CAAC,CAAC;MACzC,IAAI,CAAC,IAAI,CAAC4f,IAAI,IAAI,IAAI,CAACA,IAAI,CAAC7d,WAAW,EAAE;QACvC,IAAI,CAACggB,aAAa,CAAC,CAAC;QACpB;MACF;MACA;MACA,IACEyB,QAAQ,CAAC5pB,GAAG,IACZ4pB,QAAQ,CAAC5pB,GAAG,CAAC0N,MAAM,KAAK,QAAQ,IAChCkc,QAAQ,CAAC5pB,GAAG,CAACa,KAAK,KAAK,IAAI,CAACA,KAAK,IACjC+oB,QAAQ,CAAC5pB,GAAG,CAAC0nB,OAAO,CAAC,CAAC,IACtBzhB,uBAAiB,CAAC,IAAI,EAAE2jB,QAAQ,CAAC5pB,GAAG,CAAC,IAAI,CAAC,IAC1C4pB,QAAQ,CAAC5pB,GAAG,CAACxB,MAAM,CAACqrB,OAAO,EAC3B;QACA,IAAI,CAACrrB,MAAM,CAACwS,IAAI,CAAC,CAAC;QAClB;MACF;MACA,IAAI4Y,QAAQ,CAAC9f,KAAK,IAAI,IAAI,CAACkc,IAAI,EAAE;QAC/B,IAAI,CAACxK,MAAM,CAAC,IAAI,CAACwK,IAAI,EAAE,IAAI,CAACpP,MAAM,CAAC;QACnC;MACF;MAEA,IAAI,CAAC,IAAI,CAACpY,MAAM,CAACqrB,OAAO,EAAE;QACxB,IAAI,CAACrrB,MAAM,CAACkT,IAAI,CAAC,CAAC;MACpB;MAEA,IAAI,CAAC5Q,MAAM,GAAGuF,iBAAiB,CAAC,IAAI,CAAC;MACrC,IAAIJ,uBAAiB,CAAC,IAAI,EAAE2jB,QAAQ,EAAE,KAAK,CAAC,GAAG,IAAI,CAACvhB,KAAK,EAAE;QACzDwF,wBAAwB,CAAC,IAAI,CAAC;QAE9B,IAAI,CAACtH,CAAC,GAAGqjB,QAAQ,CAACrjB,CAAC;QACnB,IAAI,CAAC1O,CAAC,GAAG+xB,QAAQ,CAAC/xB,CAAC;QACnB,IAAI,CAACuO,CAAC,GAAGwjB,QAAQ,CAACxjB,CAAC;QAEnB,IAAI,IAAI,CAAC+f,WAAW,CAACnmB,GAAG,KAAK,IAAI,EAAE;UACjC,IAAI,CAACmmB,WAAW,CAACnmB,GAAG,GAAG,IAAI;UAC3B,IAAI,CAACmmB,WAAW,CAACrc,KAAK,GAAG,KAAK;QAChC;QACA,IAAI,CAACqc,WAAW,GAAGvmB,GAAG,CAAC6I,IAAI,CAAC,IAAI,CAAC5Q,CAAC,CAAC,CAAC,IAAI,CAACuO,CAAC,CAAC;QAC3C,IAAI,IAAI,CAAC+f,WAAW,CAACnmB,GAAG,KAAK,IAAI,EAAE;UACjC,IAAI,CAACmmB,WAAW,CAACnmB,GAAG,GAAG,IAAI;UAC3B,IAAI,CAACmmB,WAAW,CAACrc,KAAK,GAAG,IAAI;QAC/B;QAEAuC,yBAAyB,CAAC,IAAI,CAAC;QAC/B,IAAI,CAAC3P,IAAI,CAACwO,GAAG,CAAC,CAAC;;QAEf;QACA,IAAI,IAAI,CAACyd,YAAY,CAAC,CAAC,EAAE;UACvB,IAAI,CAACnN,MAAM,CAAC,IAAI,CAACwK,IAAI,EAAE,IAAI,CAACpP,MAAM,CAAC;UACnC;QACF;QACA,IAAI,IAAI,CAACkb,cAAc,CAAC,IAAI,CAAClb,MAAM,EAAE,IAAI,CAACoP,IAAI,CAAC,EAAE;UAC/C,IAAI,CAACtpB,IAAI,GAAG,EAAE;UACd,IAAI,CAACmkB,YAAY,CAAC,CAAC;UACnB,IAAI,CAAChZ,MAAM,GAAGpB,uBAAiB,CAAC,IAAI,EAAE,IAAI,CAACuf,IAAI,CAACzmB,CAAC,EAAE,IAAI,CAACymB,IAAI,CAACztB,CAAC,CAAC;UAC/D,IAAI,CAAC2vB,SAAS,CAAC,IAAI,CAACtR,MAAM,CAAC;UAC3B;QACF;QAEA,IAAI,CAAC,IAAI,CAACla,IAAI,CAAC7D,MAAM,EAAE;UACrB,IAAI,CAACmY,IAAI,CAAC,CAAC;QACb;MACF,CAAC,MAAM;QACL;QACA,IAAM4X,MAAM,GAAG,IAAI,CAAC/gB,MAAM;QAC1BO,eAAe,CAAC,IAAI,EAAEwhB,QAAQ,CAACrqB,CAAC,EAAEqqB,QAAQ,CAACrxB,CAAC,EAAE,IAAI,CAAC8P,KAAK,CAAC;QACzD,IAAIT,iBAAiB,CAACghB,MAAM,CAAC,KAAKhhB,iBAAiB,CAAC,IAAI,CAACC,MAAM,CAAC,EAAE;UAChE;UACA,IAAI,CAACmf,WAAW,CAAC,cAAc,CAAC;QAClC;MACF;IACF;EAAC;IAAAlV,GAAA;IAAA5Y,KAAA,EAED,SAAA64B,WAAWA,CAACpxB,QAAQ,EAAE;MACpB,IAAI,IAAI,CAACqxB,QAAQ,KAAK,SAAS,EAAE;QAC/B,IAAI,CAAC9H,OAAO,CAACvpB,QAAQ,CAAC;MACxB,CAAC,MAAM;QACL,IAAI,CAAC6a,MAAM,CAAC7a,QAAQ,EAAE,QAAQ,CAAC;MACjC;IACF;EAAC;IAAAmR,GAAA;IAAA5Y,KAAA,EAED,SAAA8T,MAAMA,CAACrM,QAAQ,EAAE;MACf,IAAI,IAAI,CAACqxB,QAAQ,IAAIrxB,QAAQ,IAAIA,QAAQ,CAAC+M,MAAM,KAAK,MAAM,IAAI,CAAC,IAAI,CAAC0J,MAAM,IAAI,CAAC,IAAI,CAAC1a,IAAI,CAAC7D,MAAM,IAAI,CAAC,IAAI,CAACmtB,IAAI,EAAE;QAC9G,IAAI,CAAC+L,WAAW,CAACpxB,QAAQ,CAAC;MAC5B;IACF;EAAC;IAAAmR,GAAA;IAAA5Y,KAAA,EAED,SAAAolB,UAAUA,CAAC3d,QAAQ,EAAE;MACnB,IAAI,CAACA,QAAQ,IAAI,IAAI,CAACqlB,IAAI,IAAI,IAAI,CAAC5O,MAAM,EAAE;QACzC;MACF;MACA,IAAI,CAAC2a,WAAW,CAACpxB,QAAQ,CAAC;IAC5B;EAAC;IAAAmR,GAAA;IAAA5Y,KAAA,EAED,SAAA8X,IAAIA,CAAA,EAAG;MACL,IAAI,IAAI,CAACmV,WAAW,CAACnmB,GAAG,CAACa,KAAK,KAAK,IAAI,CAACA,KAAK,IAAI,IAAI,CAACslB,WAAW,CAACrc,KAAK,EAAE;QACvE,IAAI,CAAC0R,MAAM,CAAC,IAAI,CAAC2K,WAAW,CAAC;QAC7B;MACF;MACA,IAAI,CAACD,OAAO,GAAG,IAAI;MACnB,IAAI,CAACtP,MAAM,GAAG,IAAI;MAClB,IAAI,CAACoP,IAAI,GAAG,IAAI;MAChB,IAAI,CAACC,QAAQ,GAAG,IAAI;MACpB,IAAI,CAACE,WAAW,CAACnmB,GAAG,GAAG,IAAI;MAC3B,IAAI,CAACmmB,WAAW,CAACrc,KAAK,GAAG,IAAI;MAC7B,IAAI,CAACpN,IAAI,GAAG,EAAE;MACd,IAAI,CAACmkB,YAAY,CAAC,CAAC;MACnB,IAAI,CAACmG,WAAW,CAAC,eAAe,CAAC;IACnC;EAAC;IAAAlV,GAAA;IAAA5Y,KAAA,EAED,SAAA4uB,IAAIA,CAAA,EAAG;MACL,IAAI,IAAI,CAACna,SAAS,IAAI,CAAC,EAAE;QACvB,IAAI,CAACuO,GAAG,CAAC,CAAC;MACZ,CAAC,MAAM,IAAI,IAAI,CAACwL,OAAO,CAAC,CAAC,EAAE;QACzB,IAAI,CAACiC,UAAU,CAAC,CAAC;MACnB;IACF;EAAC;IAAA7X,GAAA;IAAA5Y,KAAA,EAED,SAAAgxB,OAAOA,CAACvpB,QAAQ,EAAE;MAAA,IAAAyiB,MAAA;MAChB,IACaxjB,GAAG,GACZ,IAAI,CADNgC,OAAO,CAAIhC,GAAG;MAEhB,IAAIomB,IAAI,GAAG,IAAI;MACfld,mBAAmB,CAAC,IAAI,CAACjR,CAAC,EAAE,IAAI,CAACuO,CAAC,EAAExG,GAAG,CAAC6I,IAAI,EAAE,IAAI,CAACyD,KAAK,EAAE,UAAAjD,IAAI,EAAI;QAChE,IACE,CAACA,IAAI,CAACa,KAAK,KACV,CAACkc,IAAI,IACJ7f,oBAAc,CAAC8C,IAAI,CAACpR,CAAC,EAAEoR,IAAI,CAAC7C,CAAC,EAAEzF,QAAQ,CAAC9I,CAAC,EAAE8I,QAAQ,CAACyF,CAAC,CAAC,GACpDD,oBAAc,CAAC6f,IAAI,CAACnuB,CAAC,EAAEmuB,IAAI,CAAC5f,CAAC,EAAEzF,QAAQ,CAAC9I,CAAC,EAAE8I,QAAQ,CAACyF,CAAC,CAAC,CAAC,EAC3D;UACA4f,IAAI,GAAG5C,MAAI,CAAC5mB,KAAK,CAACqQ,KAAK,CAAC5D,IAAI,CAACpR,CAAC,CAAC,CAACoR,IAAI,CAAC7C,CAAC,CAAC;UACvC;QACF;MACF,CAAC,CAAC;MACF,IAAI4f,IAAI,EAAE;QACR,IAAI,CAACxK,MAAM,CAACwK,IAAI,CAAC;MACnB,CAAC,MAAM;QACL,IAAI,CAAChV,IAAI,CAAC,CAAC;MACb;IACF;EAAC;IAAAc,GAAA;IAAA5Y,KAAA,EAED,SAAA2tB,SAASA,CAAA,EAAG;MAAA,IAAA3C,MAAA;MACV,IAAAxB,cAAA,GAEI,IAAI,CADN9gB,OAAO;QAAImB,MAAM,GAAA2f,cAAA,CAAN3f,MAAM;QAAEuX,IAAI,GAAAoI,cAAA,CAAJpI,IAAI;MAEzB,IAAI,CAAC0M,WAAW,CAAC,aAAa,CAAC;MAC/B,IAAI,CAACxoB,MAAM,CAACiS,cAAc,GAAG,CAAC;MAC9B,IAAI,CAACiQ,aAAa,CAAC,YAAM;QACvB,IAAIwD,MAAI,CAAC3W,QAAQ,GAAG,CAAC,EAAE;UACrB2W,MAAI,CAAC3W,QAAQ,EAAE;UACf,IAAI2W,MAAI,CAAC/K,QAAQ,IAAIpW,MAAM,CAAC4X,aAAa,KAAKuJ,MAAI,EAAE;YAClD5J,IAAI,CAAC+D,UAAU,CAAC,eAAe,EAAE6F,MAAI,CAAC3W,QAAQ,CAAC;UACjD;QACF;QACA2W,MAAI,CAAC9C,aAAa,CAAC,CAAC;MACtB,CAAC,EAAE,IAAI,CAAC;IACV;EAAC;IAAAtP,GAAA;IAAA5Y,KAAA,EAED,SAAA4tB,KAAKA,CAAA,EAAG;MAAA,IAAAlC,MAAA;MACN,IAAI,CAACoC,WAAW,CAAC,YAAY,CAAC;MAC9B,IAAI,CAAClmB,MAAM,EAAE;MACb,IAAI,CAACtC,MAAM,CAACooB,IAAI,GAAG,KAAK;MACxB,IAAI,CAACpoB,MAAM,CAAC4rB,UAAU,GAAG,YAAM;QAC7BxF,MAAI,CAACiC,SAAS,CAAC,CAAC;MAClB,CAAC;IACH;EAAC;IAAA/U,GAAA;IAAA5Y,KAAA,EAED,SAAAgjB,GAAGA,CAAA,EAAG;MACJ,IAAI,IAAI,CAAC9E,MAAM,EAAE;QACf;MACF;MACA,IAAI,IAAI,CAACwE,MAAM,IAAI,IAAI,CAAChP,OAAO,EAAE;QAC/B,IAAI,CAACgP,MAAM,CAACM,GAAG,IAAI5D,uBAAK,CAAC5G,IAAI,CAAC,IAAI,CAACkK,MAAM,CAACM,GAAG,CAAC;QAC9C,IAAI,CAACN,MAAM,CAACqW,IAAI,IAAI3Z,uBAAK,CAAC5G,IAAI,CAAC,IAAI,CAACkK,MAAM,CAACqW,IAAI,CAAC;MAClD;MACApkB,wBAAwB,CAAC,IAAI,CAAC;MAE9B,IAAI,CAACrR,KAAK,CAAC6iB,UAAU,EAAE;MACvB,IAAI,CAACwB,YAAY,CAAC,CAAC;MACnB,IAAI,CAACzJ,MAAM,GAAG,IAAI;MAClB,IAAI,CAACtW,MAAM,EAAE;MACb,IAAI,CAACpE,IAAI,GAAG,EAAE;MACd,IAAI,CAACka,MAAM,GAAG,IAAI;MAClB,IAAI,CAACkQ,KAAK,CAAC,CAAC;IACd;EAAC;IAAAhV,GAAA;IAAA5Y,KAAA,EAED,SAAAkoB,aAAaA,CAAA,EAAG;MAAA,IAAA+I,MAAA;MACd,IAAAvH,cAAA,GAEI,IAAI,CADNhhB,OAAO;QAAImB,MAAM,GAAA6f,cAAA,CAAN7f,MAAM;QAAEnD,GAAG,GAAAgjB,cAAA,CAAHhjB,GAAG;MAExB,IAAMyhB,UAAU,GAAG7c,aAAa,CAAC,IAAI,CAAC+I,QAAQ,EAAE,IAAI,CAAC+L,aAAa,CAAC;MAEnE,IAAI+H,UAAU,GAAG,EAAE,IAAIA,UAAU,GAAG,EAAE,EAAE;QACtC,IAAI,CAAC7iB,MAAM,CAACqE,YAAY,GAAG,CAAC;MAC9B,CAAC,MAAM,IAAIwe,UAAU,GAAG,CAAC,IAAIA,UAAU,IAAI,EAAE,EAAE;QAC7C,IAAI,CAAC7iB,MAAM,CAACqE,YAAY,GAAG,CAAC;MAC9B,CAAC,MAAM,IAAIwe,UAAU,IAAI,CAAC,EAAE;QAC1B,IAAI,CAACR,YAAY,CAAC,CAAC;QACnB,IAAIjhB,GAAG,CAAC6I,IAAI,CAAC,IAAI,CAAC5Q,CAAC,CAAC,CAAC,IAAI,CAACuO,CAAC,CAAC,CAACpG,GAAG,KAAK,IAAI,EAAE;UACzCJ,GAAG,CAAC6I,IAAI,CAAC,IAAI,CAAC5Q,CAAC,CAAC,CAAC,IAAI,CAACuO,CAAC,CAAC,CAACpG,GAAG,GAAG,IAAI;UACnCJ,GAAG,CAAC6I,IAAI,CAAC,IAAI,CAAC5Q,CAAC,CAAC,CAAC,IAAI,CAACuO,CAAC,CAAC,CAACwW,OAAO,CAACnhB,IAAI,CAAC,IAAI,CAAC;UAC3CmE,GAAG,CAAC6I,IAAI,CAAC,IAAI,CAAC5Q,CAAC,CAAC,CAAC,IAAI,CAACuO,CAAC,CAAC,CAAC0D,KAAK,GAAG,KAAK;QACxC;QACA,IAAI,IAAI,CAACqP,QAAQ,IAAIpW,MAAM,CAAC4X,aAAa,KAAK,IAAI,EAAE;UAClD5X,MAAM,CAACyX,WAAW,CAAC,CAAC;QACtB;QACA,IAAI,CAAChc,MAAM,CAACqE,YAAY,GAAG,CAAC;QAC5B,IAAI,CAAC6Q,OAAO,GAAG,IAAId,aAAa,CAAC,YAAM;UACrCuX,MAAI,CAAC1N,KAAK,CAAC,CAAC;QACd,CAAC,EAAExlB,WAAW,GAAG,IAAI,CAAC;MACxB;IACF;EAAC;IAAA6a,GAAA;IAAA5Y,KAAA,EAED,SAAAujB,KAAKA,CAAA,EAAG;MACN,IACa7c,GAAG,GACZ,IAAI,CADNgC,OAAO,CAAIhC,GAAG;MAEhB,IAAI,CAACuI,WAAW,GAAG,IAAI;MACvB;MACA,IAAMoiB,YAAY,GAAG3qB,GAAG,CAAC6I,IAAI,CAAC,IAAI,CAAC5Q,CAAC,CAAC,CAAC,IAAI,CAACuO,CAAC,CAAC,CAACwW,OAAO,CAAChS,OAAO,CAAC,IAAI,CAAC;MACnE2f,YAAY,IAAI,CAAC,IAAI3qB,GAAG,CAAC6I,IAAI,CAAC,IAAI,CAAC5Q,CAAC,CAAC,CAAC,IAAI,CAACuO,CAAC,CAAC,CAACwW,OAAO,CAACjS,MAAM,CAAC4f,YAAY,EAAE,CAAC,CAAC;MAC7E3qB,GAAG,CAAC8B,WAAW,CAAC,IAAI,CAAC;MACrB,IAAI,CAACob,OAAO,CAAC;QAAEC,KAAK,EAAE,IAAI;QAAEvf,OAAO,EAAE;MAAK,CAAC,CAAC;IAC9C;EAAC;IAAAsU,GAAA;IAAA5Y,KAAA,EAED,SAAA8tB,WAAWA,CAACzW,KAAK,EAAE;MACjBD,cAAc,CAACC,KAAK,EAAE,IAAI,EAAEpb,WAAW,CAAC;IAC1C;EAAC;IAAA2c,GAAA;IAAA5Y,KAAA,EAED,SAAA0gB,mBAAmBA,CAACD,OAAO,EAAEjc,IAAI,EAAE;MACjC,IACa4c,IAAI,GACb,IAAI,CADN1Y,OAAO,CAAI0Y,IAAI;MAGjB,IAAM+K,MAAM,GAAGtmB,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MAC5CqmB,MAAM,CAACtpB,EAAE,GAAG,KAAK;MACjBspB,MAAM,CAACpI,WAAW,GAAG,EAAE;MACvBtD,OAAO,CAACpH,WAAW,CAAC8S,MAAM,CAAC;MAE3B,IAAMrI,OAAO,GAAGje,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MAC7Cge,OAAO,CAACjhB,EAAE,GAAG,MAAM;MACnBihB,OAAO,CAACC,WAAW,GAAG,IAAI,CAAC1gB,IAAI;MAC/Bod,OAAO,CAACpH,WAAW,CAACyK,OAAO,CAAC;MAE5B,IAAME,OAAO,GAAGne,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MAC7Cke,OAAO,CAACnhB,EAAE,GAAG,MAAM;MACnBmhB,OAAO,CAACxV,GAAG,GAAG5L,WAAW,CAAC4B,IAAI,CAACyf,IAAI,CAAC;MACpCxD,OAAO,CAACpH,WAAW,CAAC2K,OAAO,CAAC;MAE5B,IAAME,YAAY,GAAGre,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MAClDoe,YAAY,CAACrhB,EAAE,GAAG,WAAW;MAC7BqhB,YAAY,CAACH,WAAW,GAAG,IAAI,CAACtP,SAAS,GAAG,GAAG,GAAG,IAAI,CAACsK,cAAc;MACrE0B,OAAO,CAACpH,WAAW,CAAC6K,YAAY,CAAC;MAEjC,IAAMC,WAAW,GAAGte,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MACjDqe,WAAW,CAACthB,EAAE,GAAG,UAAU;MAC3BshB,WAAW,CAAChL,SAAS,GAAG,mBAAmB;MAC3C,IAAMmL,YAAY,GAAGze,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MAClDwe,YAAY,CAAC9V,GAAG,GAAG4S,IAAI,CAACgL,KAAK,CAAC,MAAM,CAAC;MACrC9H,YAAY,CAACnL,SAAS,GAAG,wBAAwB;MACjD,IAAMoL,OAAO,GAAG1e,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MAC7Cye,OAAO,CAAC1hB,EAAE,GAAG,eAAe;MAC5B0hB,OAAO,CAACR,WAAW,GAAG,IAAI,CAAC1P,QAAQ;MACnC8P,WAAW,CAAC9K,WAAW,CAACiL,YAAY,CAAC;MACrCH,WAAW,CAAC9K,WAAW,CAACkL,OAAO,CAAC;MAChC9D,OAAO,CAACpH,WAAW,CAAC8K,WAAW,CAAC;IAClC;EAAC;AAAA,EA7nByB9E,sBAAS,E;;;;;;;;;;;;;;;;;;AC5BH;AACD;AAE1B,IAAM2Z,IAAI,0BAAAjF,OAAA;EACf,SAAAiF,KAAYtwB,OAAO,EAAE;IAAAqX,mBAAA,OAAAiZ,IAAA;IAAA,OAAAhZ,cAAA,OAAAgZ,IAAA,GACb;MAAEr6B,CAAC,EAAE,CAAC;MAAEuO,CAAC,EAAE,CAAC;MAAE7J,IAAI,EAAE;IAAO,CAAC,EAAEqF,OAAO;EAC7C;EAACka,aAAA,CAAAoW,IAAA,EAAAjF,OAAA;EAAA,OAAAlR,gBAAA,CAAAmW,IAAA;IAAApgB,GAAA;IAAA5Y,KAAA,EACD,SAAAi5B,YAAYA,CAACrZ,OAAO,EAAE;MACpB,IAAQlX,OAAO,GAAK,IAAI,CAAhBA,OAAO;MACf,IAAI0Z,IAAI,GAAG1Z,OAAO,CAAChC,GAAG,CAACic,QAAQ,CAAC,IAAI8V,MAAM,CAAAxO,iBAAA,CAAAA,iBAAA,KAAMrK,OAAO;QAAEtc,KAAK,EAAE;MAAI,IAAIoF,OAAO,CAAC,CAAC;MACjF,IAAI,CAAC8Z,KAAK,CAACjgB,IAAI,CAAC6f,IAAI,CAAC;MACrB,OAAOA,IAAI;IACb;EAAC;AAAA,EATuBuQ,MAAM,E;;;;;;;;;;;;;;;;;;;;ACHC;AAE1B,IAAMuG,KAAK,0BAAAnF,OAAA;EAChB,SAAAmF,MAAA7wB,IAAA,EAA0BK,OAAO,EAAE;IAAA,IAAAkR,KAAA;IAAA,IAAlB+D,KAAK,GAAAqW,aAAA,MAAAC,8BAAA,CAAA5rB,IAAA,GAAAA,IAAA;IAAA0X,oBAAA,OAAAmZ,KAAA;IACpBtf,KAAA,GAAAoG,eAAA,OAAAkZ,KAAA,GAAAjP,kBAAA,CAAAA,kBAAA,KAAWtM,KAAK;MAAEta,IAAI,EAAE;IAAO,IAAIqF,OAAO;IAC1CkR,KAAA,CAAKyH,aAAa,GAAG,EAAE;IACvBzH,KAAA,CAAKwU,YAAY,GAAG,IAAI;IACxBxU,KAAA,CAAKiN,gBAAgB,GAAG,IAAI;IAC5BjN,KAAA,CAAK6H,aAAa,GAAG,IAAI;IAAA,OAAA7H,KAAA;EAC3B;EAACgJ,cAAA,CAAAsW,KAAA,EAAAnF,OAAA;EAAA,OAAAlR,iBAAA,CAAAqW,KAAA;IAAAtgB,GAAA;IAAA5Y,KAAA,EAED,SAAAoxB,YAAYA,CAAChP,IAAI,EAAE;MACjB,IACahB,IAAI,GACb,IAAI,CADN1Y,OAAO,CAAI0Y,IAAI;MAEjB,IAAMre,KAAK,GAAG,IAAI,CAACse,aAAa,CAAC3P,OAAO,CAAC0Q,IAAI,CAAC;MAC9C,IAAI,CAACf,aAAa,CAAC5P,MAAM,CAAC1O,KAAK,EAAE,CAAC,CAAC;MAEnC,IAAI,CAAC,IAAI,CAACse,aAAa,CAAC1hB,MAAM,EAAE;QAC9B,IAAI,CAACyuB,YAAY,GAAG,IAAI;QACxB,IAAI,CAAC/M,aAAa,GAAG,EAAE;QACvBD,IAAI,CAACI,YAAY,CAAC,CAAC;QACnB;MACF;MAEA,IAAI2X,YAAY;MAChB,IAAI,IAAI,CAAC/K,YAAY,KAAKhM,IAAI,EAAE;QAC9B,KAAK,IAAIzjB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC0iB,aAAa,CAAC1hB,MAAM,EAAEhB,CAAC,EAAE,EAAE;UAClD,IAAI,IAAI,CAAC0iB,aAAa,CAAC1iB,CAAC,CAAC,CAAC0E,IAAI,KAAK,UAAU,EAAE;YAC7C81B,YAAY,GAAG,IAAI,CAAC9X,aAAa,CAAC1iB,CAAC,CAAC,CAAC0E,IAAI;YACzC;UACF;QACF;MACF;MACA,IAAI,CAAC+qB,YAAY,GAAG+K,YAAY,IAAI,IAAI,CAAC9X,aAAa,CAAC,CAAC,CAAC;MACzDD,IAAI,CAACI,YAAY,CAAC,IAAI,CAAC4M,YAAY,CAAC;IACtC;EAAC;IAAAxV,GAAA;IAAA5Y,KAAA,EAED,SAAAo5B,gBAAgBA,CAAA,EAAG;MACjB,IACahY,IAAI,GACb,IAAI,CADN1Y,OAAO,CAAI0Y,IAAI;MAEjB,KAAK,IAAIziB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC0iB,aAAa,CAAC1hB,MAAM,EAAEhB,CAAC,EAAE,EAAE;QAClD,IAAI,CAAC0iB,aAAa,CAAC1iB,CAAC,CAAC,CAACmkB,QAAQ,CAAC,CAAC;MAClC;MACA,IAAI,CAACsL,YAAY,GAAG,IAAI;MACxB,IAAI,CAAC/M,aAAa,GAAG,EAAE;MACvBD,IAAI,CAACI,YAAY,CAAC,CAAC;IACrB;EAAC;IAAA5I,GAAA;IAAA5Y,KAAA,EAED,SAAAshB,WAAWA,CAAA,EAAG;MACZ,IAAI,IAAI,CAACuF,gBAAgB,EAAE;QACzB,IAAI,CAACA,gBAAgB,CAAC/D,QAAQ,CAAC,CAAC;QAChC,IAAI,CAAC+D,gBAAgB,GAAG,IAAI;MAC9B;MACA,IAAI,IAAI,CAACpF,aAAa,EAAE;QACtB,IAAI,CAACA,aAAa,CAACqB,QAAQ,CAAC,CAAC;QAC7B,IAAI,CAACrB,aAAa,GAAG,IAAI;MAC3B;MACA,IAAI,CAAC2X,gBAAgB,CAAC,CAAC;IACzB;EAAC;AAAA,EA1DwBzG,MAAM,E;;ACFb;AACE;;;;;;;;;;;;;;;;;;;;;;ACD6B;AAYpC;AACkD;AAE1D,IAAM0G,IAAI,0BAAA1Z,UAAA;EACf,SAAA0Z,KAAYzZ,OAAO,EAAElX,OAAO,EAAE;IAAA,IAAAkR,KAAA;IAAAmG,mBAAA,OAAAsZ,IAAA;IAC5Bzf,KAAA,GAAAoG,cAAA,OAAAqZ,IAAA;IAEAzf,KAAA,CAAKlR,OAAO,GAAGA,OAAO;IAEtB,IAAAgS,MAAA,GAAAd,KAAA;MACalT,GAAG,GAAAgU,MAAA,CAAdhS,OAAO,CAAIhC,GAAG;IAEhBkT,KAAA,CAAKpF,MAAM,GAAG,MAAM;IACpBoF,KAAA,CAAKlT,GAAG,GAAGA,GAAG;IAEdkT,KAAA,CAAKhJ,KAAK,GAAG,KAAK;IAClBgJ,KAAA,CAAKlG,OAAO,GAAG,KAAK;IACpBkG,KAAA,CAAKhS,MAAM,GAAG,CAAC;IACfgS,KAAA,CAAK7D,QAAQ,GAAG,KAAK;IACrB6D,KAAA,CAAK9D,MAAM,GAAG,KAAK;IACnB8D,KAAA,CAAK0f,WAAW,GAAG,KAAK;IACxB1f,KAAA,CAAKvM,CAAC,GAAG,CAAC;IACVuM,KAAA,CAAK5F,MAAM,GAAG,KAAK;IACnB4F,KAAA,CAAK7F,MAAM,GAAG,EAAE;IAChB6F,KAAA,CAAK9S,GAAG,GAAG,IAAI;IACf8S,KAAA,CAAK8J,OAAO,GAAG,EAAE;IACjB9J,KAAA,CAAK2f,UAAU,GAAG,EAAE;IAEpBv6B,MAAM,CAACkL,IAAI,CAAC0V,OAAO,CAAC,CAACzV,OAAO,CAAC,UAAAC,IAAI,EAAI;MACnCwP,KAAA,CAAKxP,IAAI,CAAC,GAAGwV,OAAO,CAACxV,IAAI,CAAC;IAC5B,CAAC,CAAC;IACFpL,MAAM,CAACkL,IAAI,CAACqV,kBAAM,CAAC9b,KAAK,CAACC,GAAG,CAAC,QAAQ,CAAC,CAACiM,KAAK,CAACiK,KAAA,CAAKvW,IAAI,CAAC,CAAC,CAAC8G,OAAO,CAAC,UAAAC,IAAI,EAAI;MACvEwP,KAAA,CAAKxP,IAAI,CAAC,GAAGmV,kBAAM,CAAC9b,KAAK,CAACC,GAAG,CAAC,QAAQ,CAAC,CAACiM,KAAK,CAACiK,KAAA,CAAKvW,IAAI,CAAC,CAAC+G,IAAI,CAAC;IAChE,CAAC,CAAC;IACF,IAAMgD,GAAG,GAAGnC,oBAAoB,CAAC2O,KAAA,CAAKjb,CAAC,EAAEib,KAAA,CAAK1M,CAAC,CAAC;IAEhD0M,KAAA,CAAKvT,CAAC,GAAG+G,GAAG,CAAC,CAAC,CAAC;IACfwM,KAAA,CAAKva,CAAC,GAAG+N,GAAG,CAAC,CAAC,CAAC,GAAGwM,KAAA,CAAKvM,CAAC,GAAGrR,UAAU;IAErC,IAAMqI,WAAW,GAAGuI,UAAU,CAACgN,KAAA,CAAKrW,MAAM,CAAC;IAC3C,IAAMud,YAAY,GAAGzc,WAAW,CAACvB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9C,IAAMie,WAAW,GAAG1c,WAAW,GAAG,MAAM;IACxC,IAAMH,WAAW,GAAGqb,kBAAM,CAAC9b,KAAK,CAACC,GAAG,CAACod,YAAY,CAAC;IAClD,IAAMxc,OAAO,GAAGJ,WAAW,CAACC,QAAQ,CAAC4c,WAAW,CAAC;IACjDnH,KAAA,CAAKtU,MAAM,GAAGga,mBAAM,CAACld,IAAI,CAACkC,OAAO,CAAC;IAClCsV,KAAA,CAAKtU,MAAM,CAACqC,KAAK,GAAG,QAAQ;IAC5BiS,KAAA,CAAKtU,MAAM,CAACyS,MAAM,CAACC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC;IAChC4B,KAAA,CAAKtU,MAAM,CAAC2b,WAAW,GAAG,IAAI;IAC9BrH,KAAA,CAAKtU,MAAM,CAACib,SAAS,GAAG,KAAK;IAC7B3G,KAAA,CAAKtU,MAAM,CAAC+a,SAAS,GAAG,MAAM;IAC9BzG,KAAA,CAAKtU,MAAM,CAACgb,UAAU,GAAG,KAAK;IAC9B1G,KAAA,CAAK+I,QAAQ,CAAC/I,KAAA,CAAKtU,MAAM,CAAC;IAE1BsU,KAAA,CAAK2f,UAAU,CAACpvB,OAAO,CAAC,UAAA7E,MAAM;MAAA,IAAA2V,MAAA;MAAA,OAAI,CAAAA,MAAA,GAAArB,KAAA,EAAK4f,cAAc,CAAAl4B,KAAA,CAAA2Z,MAAA,EAAAhJ,sBAAA,CAAIjT,MAAM,CAACke,MAAM,CAAC5X,MAAM,CAAC,EAAC;IAAA,EAAC;IAEhFsU,KAAA,CAAKyG,SAAS,GAAG,MAAM;IACvBzG,KAAA,CAAK2G,SAAS,GAAG,KAAK;IACtB3G,KAAA,CAAK0G,UAAU,GAAG,KAAK;IAAA,OAAA1G,KAAA;EACzB;EAACgJ,aAAA,CAAAyW,IAAA,EAAA1Z,UAAA;EAAA,OAAAkD,gBAAA,CAAAwW,IAAA;IAAAzgB,GAAA;IAAA5Y,KAAA,EAED,SAAAy5B,aAAaA,CAAA,EAAG;MACd,IAAAxW,aAAA,GAEI,IAAI,CADNva,OAAO;QAAIhC,GAAG,GAAAuc,aAAA,CAAHvc,GAAG;QAAEmD,MAAM,GAAAoZ,aAAA,CAANpZ,MAAM;MAGxB,SAAS6vB,WAAWA,CAACjyB,QAAQ,EAAE;QAC7B,IACEf,GAAG,CAAC4M,gBAAgB,IACpB,CAAC7L,QAAQ,CAACnE,KAAK,IACfmE,QAAQ,CAACnE,KAAK,CAACmQ,QAAQ,IACvBF,uBAAuB,CAAC9L,QAAQ,EAAEoC,MAAM,CAAC,EACzC;UACApC,QAAQ,CAACiM,OAAO,GAAG,IAAI;QACzB;MACF;MAEA,IAAI,CAAChN,GAAG,CAAC4M,gBAAgB,IAAI,CAACzJ,MAAM,CAAC8J,KAAK,CAAC,IAAI,CAAChV,CAAC,CAAC,CAAC,IAAI,CAACuO,CAAC,CAAC,CAAC8G,MAAM,EAAE;QACjE;MACF;MACA,IAAI,CAACN,OAAO,GAAG,IAAI;MACnB,IAAI,IAAI,CAAC5M,GAAG,EAAE;QACZ4yB,WAAW,CAAC,IAAI,CAAC5yB,GAAG,CAAC;MACvB;MACA,IAAI,IAAI,CAAC4c,OAAO,CAAC/jB,MAAM,EAAE;QACvB,KAAK,IAAIhB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC+kB,OAAO,CAAC/jB,MAAM,EAAEhB,CAAC,EAAE,EAAE;UAC5C+6B,WAAW,CAAC,IAAI,CAAChW,OAAO,CAAC/kB,CAAC,CAAC,CAAC;QAC9B;MACF;IACF;EAAC;IAAAia,GAAA;IAAA5Y,KAAA,EAED,SAAA25B,eAAeA,CAACvhB,SAAS,EAAE;MACzB,IAAM0I,YAAY,GAAG,OAAO;MAC5B,IAAgB8Y,UAAU,GAAK,IAAI,CAA3Bt0B,MAAM;MACd,IAAMu0B,qBAAqB,GAAGD,UAAU,CAACt1B,OAAO,CAACqD,KAAK;MACtD,IAAMmyB,eAAe,GAAGD,qBAAqB,CAAC/2B,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAC3D,IAAI0I,GAAG,GAAG,CAAC,CAAC;MACZ,IAAIzI,KAAK;MACT,IAAIg3B,GAAG,GAAG,CAAC;MACX,KAAK,IAAIp7B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;QAC3B6M,GAAG,CAAC7M,CAAC,CAAC,GAAG,EAAE;QACX,IAAIA,CAAC,GAAG,CAAC,EAAE;UACT6M,GAAG,CAAC7M,CAAC,CAAC,CAAC4D,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,CAAC,MAAM;UACL,KAAK,IAAI2K,CAAC,GAAG6sB,GAAG,EAAE7sB,CAAC,GAAG6sB,GAAG,GAAG,CAAC,EAAE7sB,CAAC,EAAE,EAAE;YAClC1B,GAAG,CAAC7M,CAAC,CAAC,CAAC4D,IAAI,CAAC2K,CAAC,GAAG,CAAC,CAAC;UACpB;UACA6sB,GAAG,IAAI,CAAC;QACV;MACF;MACA,QAAQ3hB,SAAS;QACf,KAAK,MAAM;UACTrV,KAAK,GAAGyI,GAAG,CAACsuB,eAAe,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;UACnC;QACF,KAAK,OAAO;UACV/2B,KAAK,GAAGyI,GAAG,CAACsuB,eAAe,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;UACnC;QACF,KAAK,OAAO;UACV/2B,KAAK,GAAGyI,GAAG,CAACsuB,eAAe,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;UACnC;QACF,KAAK,KAAK;UACR/2B,KAAK,GAAGyI,GAAG,CAACsuB,eAAe,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;UACnC;MACJ;MACA,IAAM51B,WAAW,GAAGqb,kBAAM,CAAC9b,KAAK,CAACC,GAAG,CAACod,YAAY,CAAC;MAClD,IAAMxc,OAAO,GAAGJ,WAAW,CAACC,QAAQ,CAAC4G,YAAY,CAAChI,KAAK,CAAC,GAAG,GAAG,GAAG+d,YAAY,GAAG,MAAM,CAAC;MACvF,IAAMxb,MAAM,GAAGga,mBAAM,CAACld,IAAI,CAACkC,OAAO,CAAC;MACnCgB,MAAM,CAAC8S,SAAS,GAAGA,SAAS;MAC5B9S,MAAM,CAACyS,MAAM,CAACC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC;MAC3B1S,MAAM,CAACjC,IAAI,GAAG,QAAQ;MACtB,IAAI,CAACsf,QAAQ,CAACrd,MAAM,CAAC;IACvB;EAAC;IAAAsT,GAAA;IAAA5Y,KAAA,EAED,SAAAg6B,cAAcA,CAAClZ,YAAY,EAAE/d,KAAK,EAAE;MAClC,IAAQuC,MAAM,GAAK,IAAI,CAAfA,MAAM;MACd,IAAMpB,WAAW,GAAGqb,kBAAM,CAAC9b,KAAK,CAACC,GAAG,CAACod,YAAY,CAAC;MAClD,IAAMxc,OAAO,GAAGJ,WAAW,CAACC,QAAQ,CAACpB,KAAK,GAAG,GAAG,GAAG+d,YAAY,GAAG,MAAM,CAAC;MACzE,IAAI,CAACzd,IAAI,GAAG,QAAQ;MACpB,IAAI,CAACyS,MAAM,GAAG,IAAI;MAClB,IAAI,CAACwjB,WAAW,GAAG,IAAI;MACvB,IAAI,IAAI,CAACxyB,GAAG,IAAI,OAAO,IAAI,CAACA,GAAG,CAACkc,GAAG,KAAK,UAAU,EAAE;QAClD,IAAI,CAAClc,GAAG,CAACkc,GAAG,CAAC,IAAI,CAAC;MACpB;MACA1d,MAAM,CAAChB,OAAO,GAAGA,OAAO;IAC1B;EAAC;IAAAsU,GAAA;IAAA5Y,KAAA,EAED,SAAAi6B,eAAeA,CAACl3B,KAAK,EAAiB;MAAA,IAAfm3B,SAAS,GAAA74B,SAAA,CAAA1B,MAAA,QAAA0B,SAAA,QAAAyL,SAAA,GAAAzL,SAAA,MAAG,CAAC;MAClC,IAAQiE,MAAM,GAAK,IAAI,CAAfA,MAAM;MACd,IAAMwb,YAAY,GAAGxb,MAAM,CAAChB,OAAO,CAACqD,KAAK,CAAC7E,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACA,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACrE,IAAMoB,WAAW,GAAGqb,kBAAM,CAAC9b,KAAK,CAACC,GAAG,CAACod,YAAY,CAAC;MAClD,IAAMxc,OAAO,GAAGJ,WAAW,CAACC,QAAQ,CAACpB,KAAK,GAAG,GAAG,GAAG+d,YAAY,GAAG,MAAM,CAAC;MACzE,IAAIoZ,SAAS,EAAE;QACb,IAAI,CAAC76B,CAAC,IAAI66B,SAAS;MACrB;MACA,IAAI,CAACnkB,QAAQ,GAAG,IAAI;MACpB,IAAI,IAAI,CAACjP,GAAG,EAAE;QACZ,IAAI,CAACA,GAAG,CAACc,MAAM,GAAGuF,iBAAiB,CAAC,IAAI,CAACrG,GAAG,CAAC;MAC/C;MACAxB,MAAM,CAACqC,KAAK,GAAG,QAAQ;MACvBrC,MAAM,CAACyS,MAAM,CAACC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC;MAC3B1S,MAAM,CAAChB,OAAO,GAAGA,OAAO;IAC1B;EAAC;IAAAsU,GAAA;IAAA5Y,KAAA,EAED,SAAAm6B,QAAQA,CAAA,EAAG;MACT,IAAMp3B,KAAK,GAAGgI,YAAY,CAACyB,iBAAW,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MAC7C,IAAMsU,YAAY,GAAG,OAAO;MAC5B,IAAM5c,WAAW,GAAGqb,kBAAM,CAAC9b,KAAK,CAACC,GAAG,CAACod,YAAY,CAAC;MAClD,IAAI,CAACxb,MAAM,CAAChB,OAAO,GAAGJ,WAAW,CAACC,QAAQ,CAACpB,KAAK,GAAG,GAAG,GAAG+d,YAAY,GAAG,MAAM,CAAC;MAC/E,IAAI,CAACzd,IAAI,GAAG,OAAO;MACnB,IAAI,CAACyN,QAAQ,GAAG,OAAO;IACzB;EAAC;IAAA8H,GAAA;IAAA5Y,KAAA,EACD,SAAAo6B,wBAAwBA,CAAA,EAAG;MAAA,IAAAzY,MAAA;MACzB,IAAMpS,IAAI,GAAG,IAAI,CAAC0D,MAAM,CAAC1D,IAAI;MAC7B,IAAI,IAAI,CAAClM,IAAI,KAAK,OAAO,IAAI,CAAC,IAAI,CAACiC,MAAM,CAAChB,OAAO,CAACqD,KAAK,CAACkK,QAAQ,CAAC,OAAO,CAAC,EAAE;QACzE,IAAI,CAACsoB,QAAQ,CAAC,CAAC;MACjB;MACAvqB,mBAAmB,CAAC,IAAI,CAACjR,CAAC,EAAE,IAAI,CAACuO,CAAC,EAAEqC,IAAI,EAAE,CAAC,EAAE,UAAAQ,IAAI,EAAI;QACnD,IAAIA,IAAI,CAAC1M,IAAI,KAAK,OAAO,IAAIse,MAAI,CAACte,IAAI,KAAK,OAAO,EAAE;UAClD,IAAM8I,IAAI,GAAGY,uBAAiB,CAAC4U,MAAI,EAAE5R,IAAI,CAAC;UAC1C,IAAMX,IAAI,GAAGlE,IAAI,CAACG,KAAK,CAAC,CAACsW,MAAI,CAAChjB,CAAC,GAAGoR,IAAI,CAACpR,CAAC,IAAIwN,IAAI,CAAC;UACjD,IAAMkD,IAAI,GAAGnE,IAAI,CAACG,KAAK,CAAC,CAACsW,MAAI,CAACzU,CAAC,GAAG6C,IAAI,CAAC7C,CAAC,IAAIf,IAAI,CAAC;UACjD,IAAIoD,IAAI,CAACQ,IAAI,CAACpR,CAAC,GAAGyQ,IAAI,CAAC,IAAIG,IAAI,CAACQ,IAAI,CAACpR,CAAC,GAAGyQ,IAAI,CAAC,CAACW,IAAI,CAAC7C,CAAC,GAAGmC,IAAI,CAAC,EAAE;YAC7D,IAAMZ,MAAM,GAAGc,IAAI,CAACQ,IAAI,CAACpR,CAAC,GAAGyQ,IAAI,CAAC,CAACW,IAAI,CAAC7C,CAAC,GAAGmC,IAAI,CAAC;YACjD,IAAMgrB,KAAK,GAAG9qB,IAAI,CAACoS,MAAI,CAAChjB,CAAC,GAAGoR,IAAI,CAACpR,CAAC,GAAG8P,MAAM,CAAC9P,CAAC,CAAC,CAACgjB,MAAI,CAACzU,CAAC,GAAG6C,IAAI,CAAC7C,CAAC,GAAGuB,MAAM,CAACvB,CAAC,CAAC;YAC1E,IAAIuB,MAAM,CAACpL,IAAI,KAAKse,MAAI,CAACte,IAAI,IAAIg3B,KAAK,CAACh3B,IAAI,KAAKse,MAAI,CAACte,IAAI,EAAE;cACzD,IAAI6H,IAAI,CAACC,KAAK,CAAC4B,uBAAiB,CAAC4U,MAAI,EAAE5R,IAAI,CAAC,CAAC,KAAK,CAAC,EAAE;gBACnDA,IAAI,CAACoqB,QAAQ,CAAC,CAAC;gBACf1rB,MAAM,CAAC0rB,QAAQ,CAAC,CAAC;cACnB;YACF;UACF;QACF;MACF,CAAC,CAAC;IACJ;EAAC;IAAAvhB,GAAA;IAAA5Y,KAAA,EAED,SAAAs6B,yBAAyBA,CAAA,EAAG;MAAA,IAAA1S,MAAA;MAC1B,IAAMrY,IAAI,GAAG,IAAI,CAAC0D,MAAM,CAAC1D,IAAI;MAC7BK,mBAAmB,CAAC,IAAI,CAACjR,CAAC,EAAE,IAAI,CAACuO,CAAC,EAAEqC,IAAI,EAAE,CAAC,EAAE,UAAAQ,IAAI,EAAI;QACnD,IAAIA,IAAI,CAAC1C,CAAC,KAAKua,MAAI,CAACva,CAAC,EAAE;UACrB,IAAMlB,IAAI,GAAGY,uBAAiB,CAAC6a,MAAI,EAAE7X,IAAI,CAAC;UAC1C,IAAMX,IAAI,GAAGlE,IAAI,CAACG,KAAK,CAAC,CAACuc,MAAI,CAACjpB,CAAC,GAAGoR,IAAI,CAACpR,CAAC,IAAIwN,IAAI,CAAC;UACjD,IAAMkD,IAAI,GAAGnE,IAAI,CAACG,KAAK,CAAC,CAACuc,MAAI,CAAC1a,CAAC,GAAG6C,IAAI,CAAC7C,CAAC,IAAIf,IAAI,CAAC;UACjD,IAAIoD,IAAI,CAACQ,IAAI,CAACpR,CAAC,GAAGyQ,IAAI,CAAC,IAAIG,IAAI,CAACQ,IAAI,CAACpR,CAAC,GAAGyQ,IAAI,CAAC,CAACW,IAAI,CAAC7C,CAAC,GAAGmC,IAAI,CAAC,EAAE;YAC7D,IAAMZ,MAAM,GAAGc,IAAI,CAACQ,IAAI,CAACpR,CAAC,GAAGyQ,IAAI,CAAC,CAACW,IAAI,CAAC7C,CAAC,GAAGmC,IAAI,CAAC;YACjD,IAAMgrB,KAAK,GAAG9qB,IAAI,CAACqY,MAAI,CAACjpB,CAAC,GAAGoR,IAAI,CAACpR,CAAC,GAAG8P,MAAM,CAAC9P,CAAC,CAAC,CAACipB,MAAI,CAAC1a,CAAC,GAAG6C,IAAI,CAAC7C,CAAC,GAAGuB,MAAM,CAACvB,CAAC,CAAC;YAC1E,IAAIuB,MAAM,CAACpB,CAAC,IAAIua,MAAI,CAACva,CAAC,IAAIoB,MAAM,CAACpB,CAAC,KAAKua,MAAI,CAACva,CAAC,IAAIgtB,KAAK,CAAChtB,CAAC,KAAKua,MAAI,CAACva,CAAC,EAAE;cACnE,IAAInC,IAAI,CAACC,KAAK,CAAC4B,uBAAiB,CAAC6a,MAAI,EAAE7X,IAAI,CAAC,CAAC,KAAK,CAAC,EAAE;gBACnDtB,MAAM,CAAC8rB,YAAY,CAAC9rB,MAAM,CAACpB,CAAC,GAAG,CAAC,CAAC;cACnC;YACF;UACF;QACF;MACF,CAAC,CAAC;IACJ;EAAC;IAAAuL,GAAA;IAAA5Y,KAAA,EAED,SAAAu6B,YAAYA,CAACC,KAAK,EAAW;MAAA,IAATT,GAAG,GAAA14B,SAAA,CAAA1B,MAAA,QAAA0B,SAAA,QAAAyL,SAAA,GAAAzL,SAAA,MAAG,CAAC;MACzB,IAAIm5B,KAAK,KAAK,CAAC,EAAE;QACf,IAAI,CAACn7B,CAAC,IAAIrD,UAAU;QACpB,IAAI,CAACqR,CAAC,GAAGmtB,KAAK;QACd;MACF;MACA,IAAMjrB,IAAI,GAAG,IAAI,CAAC0D,MAAM,CAAC1D,IAAI;MAC7BK,mBAAmB,CAAC,IAAI,CAACjR,CAAC,EAAE,IAAI,CAACuO,CAAC,EAAEqC,IAAI,EAAEirB,KAAK,GAAGT,GAAG,EAAE,UAAAhqB,IAAI,EAAI;QAC7D,IAAIA,IAAI,CAAC1C,CAAC,GAAG0sB,GAAG,EAAE;UAChBhqB,IAAI,CAAC1Q,CAAC,IAAI,CAAC06B,GAAG,GAAGhqB,IAAI,CAAC1C,CAAC,IAAIrR,UAAU;UACrC+T,IAAI,CAAC1C,CAAC,GAAG0sB,GAAG;UACZhqB,IAAI,CAACuqB,yBAAyB,CAAC/qB,IAAI,CAAC;QACtC;MACF,CAAC,CAAC;MACF,IAAIwqB,GAAG,GAAG,CAAC,GAAGS,KAAK,EAAE;QACnB,IAAI,CAACD,YAAY,CAACC,KAAK,EAAET,GAAG,GAAG,CAAC,CAAC;MACnC;MACA,IAAI,IAAI,CAACjzB,GAAG,EAAE;QACZ,IAAI,CAACA,GAAG,CAACc,MAAM,GAAGuF,iBAAiB,CAAC,IAAI,CAACrG,GAAG,CAAC;MAC/C;IACF;EAAC;IAAA8R,GAAA;IAAA5Y,KAAA,EAED,SAAAw5B,cAAcA,CAACiB,YAAY,EAAEC,UAAU,EAAEC,SAAS,EAAE;MAClD,IAAMr1B,MAAM,GAAGga,mBAAM,CAACld,IAAI,CAAC2B,UAAU,CAAC02B,YAAY,EAAElb,kBAAM,CAAC,CAAC;MAC5Dja,MAAM,CAACqC,KAAK,GAAG,aAAa;MAC5BrC,MAAM,CAACs1B,IAAI,GAAGt9B,SAAS;MACvBgI,MAAM,CAACyS,MAAM,CAACC,GAAG,CAAC1S,MAAM,CAAChB,OAAO,CAAC2T,aAAa,CAAC5R,CAAC,EAAEf,MAAM,CAAChB,OAAO,CAAC2T,aAAa,CAAC5Y,CAAC,CAAC;MACjF,IAAI,CAACsjB,QAAQ,CAACrd,MAAM,CAAC;MACrB,IAAI,CAACi0B,UAAU,CAACh3B,IAAI,CAAC;QAAE+C,MAAM,EAANA,MAAM;QAAEm1B,YAAY,EAAZA,YAAY;QAAEC,UAAU,EAAVA,UAAU;QAAEC,SAAS,EAATA;MAAU,CAAC,CAAC;MACrE,IAAID,UAAU,EAAE;QACd,IAAMjS,WAAW,GAAGnJ,mBAAM,CAACld,IAAI,CAAC2B,UAAU,CAAC22B,UAAU,EAAEnb,kBAAM,CAAC,CAAC;QAC/DkJ,WAAW,CAAC9gB,KAAK,GAAG,kBAAkB;QACtC8gB,WAAW,CAACmS,IAAI,GAAGt9B,SAAS;QAC5B+H,yBAAyB,CAACojB,WAAW,EAAEkS,SAAS,CAAC;QACjD,IAAI,CAAChY,QAAQ,CAAC8F,WAAW,CAAC;QAC1B,IAAI,CAAC8Q,UAAU,CAACh3B,IAAI,CAAC;UAAE+C,MAAM,EAAEmjB,WAAW;UAAEgS,YAAY,EAAZA,YAAY;UAAEC,UAAU,EAAVA,UAAU;UAAEC,SAAS,EAATA;QAAU,CAAC,CAAC;MACpF,CAAC,MAAM;QACLt1B,yBAAyB,CAACC,MAAM,EAAEq1B,SAAS,CAAC;MAC9C;MACA,IAAI,CAAC/yB,MAAM,GAAG,GAAG;IACnB;EAAC;IAAAgR,GAAA;IAAA5Y,KAAA,EAED,SAAA66B,iBAAiBA,CAACpzB,QAAQ,EAAE;MAC1B,IAAQf,GAAG,GAAK,IAAI,CAACgC,OAAO,CAApBhC,GAAG;MACX,IAAIe,QAAQ,CAACnE,KAAK,IAAI,CAACmE,QAAQ,CAACnE,KAAK,CAACmQ,QAAQ,IAAIhM,QAAQ,CAAC+M,MAAM,KAAK,UAAU,EAAE;QAChF,IAAI7V,CAAC,GAAG,CAAC;QACT,IAAMm8B,SAAS,GAAGp0B,GAAG,CAAC6I,IAAI,CAAC9H,QAAQ,CAAC9I,CAAC,CAAC,CAAC8I,QAAQ,CAACyF,CAAC,CAAC;QAClD,OAAOvO,CAAC,GAAGm8B,SAAS,CAACvB,UAAU,CAAC55B,MAAM,EAAE;UACtC,IAAIm7B,SAAS,CAACvB,UAAU,CAAC56B,CAAC,CAAC,EAAE;YAAA,IAAAo8B,qBAAA;YAC3B,CAAAA,qBAAA,GAAAD,SAAS,CAACvB,UAAU,CAAC56B,CAAC,CAAC,CAAC2G,MAAM,cAAAy1B,qBAAA,eAA9BA,qBAAA,CAAgCnX,OAAO,CAAC,CAAC,EAAC;YAC1CkX,SAAS,CAACvB,UAAU,CAAC9nB,MAAM,CAAC9S,CAAC,EAAE,CAAC,CAAC,EAAC;UACpC,CAAC,MAAM;YACLA,CAAC,EAAE,EAAC;UACN;QACF;MACF;IACF;EAAC;IAAAia,GAAA;IAAA5Y,KAAA,EAED,SAAAg7B,cAAcA,CAACvzB,QAAQ,EAAEwzB,IAAI,EAAE;MAC7B,IAAAzR,cAAA,GAAwB,IAAI,CAAC9gB,OAAO;QAA5BmB,MAAM,GAAA2f,cAAA,CAAN3f,MAAM;QAAEnD,GAAG,GAAA8iB,cAAA,CAAH9iB,GAAG;MACnB,IAAI,CAAC6M,uBAAuB,CAAC9L,QAAQ,EAAEoC,MAAM,CAAC,EAAE;QAC9C,IAAIpC,QAAQ,CAACnE,KAAK,IAAI,CAACmE,QAAQ,CAACnE,KAAK,CAACmQ,QAAQ,EAAE;UAC9C,IAAI,CAACwnB,IAAI,IAAIxzB,QAAQ,CAAC+M,MAAM,KAAK,UAAU,EAAE;YAC3C,IAAMjR,MAAM,GAAGH,gBAAgB,CAACqE,QAAQ,CAACpE,IAAI,EAAEoE,QAAQ,CAACnE,KAAK,EAAEic,kBAAM,CAAC;YACtE,IAAMub,SAAS,GAAGp0B,GAAG,CAAC6I,IAAI,CAAC9H,QAAQ,CAAC9I,CAAC,CAAC,CAAC8I,QAAQ,CAACyF,CAAC,CAAC;YAClD4tB,SAAS,CAACtB,cAAc,CAACj2B,MAAM,CAACilB,MAAM,SAAM,EAAEjlB,MAAM,CAACilB,MAAM,CAACjjB,KAAK,EAAEkC,QAAQ,CAACnE,KAAK,CAACiC,KAAK,CAAC;UAC1F;UACAkC,QAAQ,CAACiM,OAAO,GAAG,KAAK;QAC1B,CAAC,MAAM;UACL,KAAK,IAAI/U,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8I,QAAQ,CAACuhB,QAAQ,CAACrpB,MAAM,EAAEhB,CAAC,EAAE,EAAE;YACjD,IAAI8I,QAAQ,CAACuhB,QAAQ,CAACrqB,CAAC,CAAC,CAACi8B,IAAI,EAAE;cAC7BnzB,QAAQ,CAACuhB,QAAQ,CAACrqB,CAAC,CAAC,CAACi8B,IAAI,GAAGt9B,SAAS;YACvC;UACF;QACF;MACF;IACF;EAAC;IAAAsb,GAAA;IAAA5Y,KAAA,EAED,SAAA6U,MAAMA,CAAComB,IAAI,EAAE;MACX,IAAI,IAAI,CAACn0B,GAAG,EAAE;QACZ,IAAI,CAACk0B,cAAc,CAAC,IAAI,CAACl0B,GAAG,EAAEm0B,IAAI,CAAC;MACrC;MACA,KAAK,IAAIt8B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACqqB,QAAQ,CAACrpB,MAAM,EAAEhB,CAAC,EAAE,EAAE;QAC7C,IAAI,IAAI,CAACqqB,QAAQ,CAACrqB,CAAC,CAAC,CAACi8B,IAAI,EAAE;UACzB,IAAI,CAAC5R,QAAQ,CAACrqB,CAAC,CAAC,CAACi8B,IAAI,GAAGt9B,SAAS;QACnC;MACF;MACA,IAAI,IAAI,CAAComB,OAAO,CAAC/jB,MAAM,EAAE;QACvB,KAAK,IAAIhB,EAAC,GAAG,CAAC,EAAEA,EAAC,GAAG,IAAI,CAAC+kB,OAAO,CAAC/jB,MAAM,EAAEhB,EAAC,EAAE,EAAE;UAC5C,IAAI,CAACq8B,cAAc,CAAC,IAAI,CAACtX,OAAO,CAAC/kB,EAAC,CAAC,EAAEs8B,IAAI,CAAC;QAC5C;MACF;IACF;EAAC;IAAAriB,GAAA;IAAA5Y,KAAA,EAED,SAAAmU,SAASA,CAAA,EAAG;MACV,IACad,QAAQ,GACjB,IAAI,CADN3K,OAAO,CAAI2K,QAAQ;MAErB,SAAS6nB,iBAAiBA,CAACzzB,QAAQ,EAAE;QACnC,IAAI4L,QAAQ,CAACG,gBAAgB,CAAC/L,QAAQ,CAAC,EAAE;UACvCA,QAAQ,CAACiM,OAAO,GAAG,IAAI;QACzB;QACA,KAAK,IAAI/U,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8I,QAAQ,CAACuhB,QAAQ,CAACrpB,MAAM,EAAEhB,CAAC,EAAE,EAAE;UACjD,IAAI8I,QAAQ,CAACuhB,QAAQ,CAACrqB,CAAC,CAAC,CAACi8B,IAAI,EAAE;YAC7BnzB,QAAQ,CAACuhB,QAAQ,CAACrqB,CAAC,CAAC,CAACi8B,IAAI,GAAGl+B,WAAW;UACzC;QACF;MACF;MACA,IAAI,CAAC,IAAI,CAACgX,OAAO,EAAE;QACjB,IAAI,CAACA,OAAO,GAAG,IAAI;MACrB;MAEA,IAAI,CAAC9L,MAAM,GAAG,CAAC;MACf,KAAK,IAAIjJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACqqB,QAAQ,CAACrpB,MAAM,EAAEhB,CAAC,EAAE,EAAE;QAC7C,IAAI,IAAI,CAACqqB,QAAQ,CAACrqB,CAAC,CAAC,CAACi8B,IAAI,EAAE;UACzB,IAAI,CAAC5R,QAAQ,CAACrqB,CAAC,CAAC,CAACi8B,IAAI,GAAGl+B,WAAW;QACrC;MACF;MACA,IAAI,IAAI,CAACoK,GAAG,EAAE;QACZ,IAAI,CAAC+zB,iBAAiB,CAAC,IAAI,CAAC/zB,GAAG,CAAC;QAChCo0B,iBAAiB,CAAC,IAAI,CAACp0B,GAAG,CAAC;MAC7B;MACA,IAAI,IAAI,CAAC4c,OAAO,CAAC/jB,MAAM,EAAE;QACvB,KAAK,IAAIhB,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,IAAI,CAAC+kB,OAAO,CAAC/jB,MAAM,EAAEhB,GAAC,EAAE,EAAE;UAC5Cu8B,iBAAiB,CAAC,IAAI,CAACxX,OAAO,CAAC/kB,GAAC,CAAC,CAAC;QACpC;MACF;IACF;EAAC;AAAA,EAlVuB0gB,sBAAS,E;;;;;;;;;;;;;;;;;;ACfgB;AACd;AACM;AAS5B;AAC0B;AACZ;;AAE7B;AACA;AACA;AACA;AACA;AACA;AALA,IAOqB5Y,OAAG,0BAAAkZ,UAAA;EACtB,SAAAlZ,IAAYiC,OAAO,EAAE;IAAA,IAAAkR,KAAA;IAAAmG,kBAAA,OAAAtZ,GAAA;IACnBmT,KAAA,GAAAoG,aAAA,OAAAvZ,GAAA;IAEAmT,KAAA,CAAKlR,OAAO,GAAGA,OAAO;IACtBkR,KAAA,CAAK1W,IAAI;IACT0W,KAAA,CAAKuhB,WAAW,GAAG,CACjB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAChH,CAAC,CACF;IACDvhB,KAAA,CAAKwhB,cAAc,GAAG,IAAI;IAC1BxhB,KAAA,CAAKyhB,YAAY,GAAG,IAAI;IAExBzhB,KAAA,CAAK0T,KAAK,GAAG,KAAK;IAClB1T,KAAA,CAAKrK,IAAI,GAAG,EAAE;IACdqK,KAAA,CAAK0hB,gBAAgB,GAAG,IAAI;IAE5B1hB,KAAA,CAAK2hB,eAAe,GAAG,KAAK;IAC5B3hB,KAAA,CAAK4hB,IAAI,GAAG,IAAI;IAEhB5hB,KAAA,CAAKyM,OAAO,GAAG,KAAK;IACpBzM,KAAA,CAAKtG,gBAAgB,GAAG,KAAoB,IAAI,CAAK;IACrDsG,KAAA,CAAKwZ,aAAa,GAAGxZ,KAAA,CAAKyM,OAAO,IAAI,KAAK;IAE1CzM,KAAA,CAAKvT,CAAC,GAAG,CAAC;IACVuT,KAAA,CAAKva,CAAC,GAAG,CAAC;IACVua,KAAA,CAAK6hB,aAAa,GAAG,CAAC;IAEtB7hB,KAAA,CAAK8hB,UAAU,GAAG,EAAE;IACpB9hB,KAAA,CAAK+hB,cAAc,GAAG,CAAC;IACvB/hB,KAAA,CAAKgiB,IAAI,GAAG,IAAI;IAChBhiB,KAAA,CAAKuG,SAAS,GAAG,EAAE;IAEnBvG,KAAA,CAAKyG,SAAS,GAAG,MAAM;IACvBzG,KAAA,CAAK2G,SAAS,GAAG,KAAK;IACtB3G,KAAA,CAAK0G,UAAU,GAAG,KAAK;IACvB1G,KAAA,CAAKud,UAAU;IAAA,OAAAvd,KAAA;EACjB;EAACgJ,YAAA,CAAAnc,GAAA,EAAAkZ,UAAA;EAAA,OAAAkD,eAAA,CAAApc,GAAA;IAAAmS,GAAA;IAAA5Y,KAAA,EAED,SAAA67B,aAAaA,CAACx1B,CAAC,EAAEhH,CAAC,EAAE;MAClB;MACA,IAAI,CAACgH,CAAC,GAAGA,CAAC;MACV,IAAI,CAAChH,CAAC,GAAGA,CAAC;IACZ;EAAC;IAAAuZ,GAAA;IAAA5Y,KAAA,EAED,SAAA87B,gBAAgBA,CAAAzzB,IAAA,EAA+C;MAAA,IAAAqS,MAAA;MAAA,IAA5ChU,GAAG,GAAA2B,IAAA,CAAH3B,GAAG;QAAEwc,OAAO,GAAA7a,IAAA,CAAP6a,OAAO;QAAE6Y,MAAM,GAAA1zB,IAAA,CAAN0zB,MAAM;QAAE5b,SAAS,GAAA9X,IAAA,CAAT8X,SAAS;QAAEuY,OAAO,GAAArwB,IAAA,CAAPqwB,OAAO;MACzD,IAAMsD,QAAQ,GAAG;QACf9C,KAAK,EAALA,KAAK;QACLpF,EAAE,EAAFA,EAAEA;MACJ,CAAC;MACD,IAAA7Q,aAAA,GAA2B,IAAI,CAACva,OAAO;QAA/B0Y,IAAI,GAAA6B,aAAA,CAAJ7B,IAAI;QAAE/N,QAAQ,GAAA4P,aAAA,CAAR5P,QAAQ;MACtB,IAAI,CAAC4oB,cAAc,CAAC,CAAC;MACrB,IAAI,CAAC/4B,IAAI,GAAGwD,GAAG,CAAC/G,MAAM,GAAG,CAAC;MAE1B,IAAI,CAACi8B,IAAI,GAAG,IAAI5C,IAAI,CAAC,IAAI,CAACtwB,OAAO,CAAC;MAElC,KAAK,IAAI/J,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,IAAI,CAACuE,IAAI,EAAEvE,CAAC,EAAE,EAAE;QACnC,IAAMu9B,IAAI,GAAGx1B,GAAG,CAAC/H,CAAC,CAAC;QACnB,KAAK,IAAIuO,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,IAAI,CAAChK,IAAI,EAAEgK,CAAC,EAAE,EAAE;UACnC,IAAI,CAAC,IAAI,CAACqC,IAAI,CAAC5Q,CAAC,CAAC,EAAE;YACjB,IAAI,CAAC4Q,IAAI,CAAC5Q,CAAC,CAAC,GAAG,EAAE;UACnB;UACA,IAAMoR,IAAI,GAAGmsB,IAAI,CAAChvB,CAAC,CAAC;UACpB,IAAMivB,OAAO,GAAG,IAAI9C,IAAI,CAAC;YAAE16B,CAAC,EAADA,CAAC;YAAEuO,CAAC,EAADA,CAAC;YAAEG,CAAC,EAAE0C,IAAI,CAAC1C,CAAC;YAAEhK,IAAI,EAAE0M,IAAI,CAAC1M,IAAI;YAAEk2B,UAAU,EAAExpB,IAAI,CAACwpB;UAAW,CAAC,EAAE,IAAI,CAAC7wB,OAAO,CAAC;UACzG,IAAI,CAACia,QAAQ,CAACwZ,OAAO,CAAC;UACtB,IAAI,CAAC5sB,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,CAAC,GAAGivB,OAAO;UACzB,IAAI,CAAC,IAAI,CAAC7oB,gBAAgB,EAAE;YAC1B,IAAI,CAAC/D,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,CAAC,CAAC2H,MAAM,CAAC,CAAC;UAC1B;QACF;MACF;MACA,KAAK,IAAIlW,EAAC,GAAG,CAAC,EAAEA,EAAC,IAAI,IAAI,CAACuE,IAAI,EAAEvE,EAAC,EAAE,EAAE;QACnC,KAAK,IAAIuO,EAAC,GAAG,CAAC,EAAEA,EAAC,IAAI,IAAI,CAAChK,IAAI,EAAEgK,EAAC,EAAE,EAAE;UACnC,IAAI,CAACqC,IAAI,CAAC5Q,EAAC,CAAC,CAACuO,EAAC,CAAC,CAACktB,wBAAwB,CAAC,CAAC;QAC5C;MACF;MACA,IAAI,CAACja,SAAS,GAAGA,SAAS,CAACzZ,GAAG,CAAC,UAAAf,QAAQ;QAAA,OAAI+U,MAAI,CAACiI,QAAQ,CAAC,IAAIjD,QAAQ,CAAC/Z,QAAQ,EAAE+U,MAAI,CAAChS,OAAO,CAAC,CAAC;MAAA,EAAC;MAE/F,IAAI,CAAC0zB,iBAAiB,CAAC,CAAC;MACxB,IAAI,CAACC,sBAAsB,CAAC,CAAC;MAC7B,IAAI,CAACC,iBAAiB,CAAC,CAAC;MAExB,IAAI,CAAC5zB,OAAO,CAACwa,OAAO,GAAGA,OAAO,CAACxc,GAAG,CAAC,UAAAmD,MAAM,EAAI;QAC3C,IAAMzK,CAAC,GAAG,IAAI48B,QAAQ,CAACnyB,MAAM,CAACxG,IAAI,CAAC,CAAA4mB,gBAAA,CAAAA,gBAAA,KAE5BpgB,MAAM;UACT6Z,OAAO,EAAE,EAAE;UACX7f,SAAS,EAAE,EAAE;UACb2e,KAAK,EAAE;QAAE,IAEX9H,MAAI,CAAChS,OACP,CAAC;QACD,IAAImB,MAAM,CAAC4J,QAAQ,EAAE;UACnBiH,MAAI,CAAChS,OAAO,CAACmB,MAAM,GAAGzK,CAAC;QACzB;QACA,OAAOA,CAAC;MACV,CAAC,CAAC;MACFiU,QAAQ,CAACkpB,SAAS,CAACR,MAAM,CAAC11B,CAAC,EAAE01B,MAAM,CAAC18B,CAAC,EAAE,IAAI,CAAC;MAC5C+hB,IAAI,CAAC6Z,IAAI,CAAC,CAAC;MACX7Z,IAAI,CAACiC,sBAAsB,CAAC,CAAC;MAE7B,IAAI,CAAC3a,OAAO,CAACwa,OAAO,CAAC/Y,OAAO,CAAC,UAACN,MAAM,EAAE9G,KAAK,EAAK;QAC9C,IAAAy5B,cAAA,GAAsCtZ,OAAO,CAACngB,KAAK,CAAC;UAA5Cc,SAAS,GAAA24B,cAAA,CAAT34B,SAAS;UAAE2e,KAAK,GAAAga,cAAA,CAALha,KAAK;UAAEkB,OAAO,GAAA8Y,cAAA,CAAP9Y,OAAO;QACjC7Z,MAAM,CAAChG,SAAS,GAAGA,SAAS,CAAC6C,GAAG,CAAC,UAAAoiB,QAAQ;UAAA,OAAIjf,MAAM,CAACypB,cAAc,CAACxK,QAAQ,CAAC;QAAA,EAAC;QAC7Ejf,MAAM,CAAC2Y,KAAK,GAAGA,KAAK,CAAC9b,GAAG,CAAC,UAAA0b,IAAI;UAAA,OAAIvY,MAAM,CAACmgB,UAAU,CAAC5H,IAAI,CAAC;QAAA,EAAC;QACzDvY,MAAM,CAAC6Z,OAAO,GAAGA,OAAO,CAAChd,GAAG,CAAC,UAAA0b,IAAI;UAAA,OAAIvY,MAAM,CAACmgB,UAAU,CAAC5H,IAAI,CAAC;QAAA,EAAC;MAC/D,CAAC,CAAC;MACFsW,OAAO,CAACvuB,OAAO,CAAC,UAAAsyB,MAAM;QAAA,OAAI/hB,MAAI,CAACkhB,IAAI,CAAC3C,YAAY,CAACwD,MAAM,CAAC;MAAA,EAAC;MAEzD,SAASC,OAAOA,CAAClxB,GAAG,EAAE9E,GAAG,EAAE;QACzB,IAAI8E,GAAG,EAAE;UACP,IAAIrJ,KAAK,CAACK,OAAO,CAACgJ,GAAG,CAAC,EAAE;YACtB,OAAOA,GAAG,CAAC,CAAC,CAAC,GAAG9E,GAAG,CAACqc,eAAe,CAACvX,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG9E,GAAG,CAAC6I,IAAI,CAAC/D,GAAG,CAAC,CAAC,CAAC,CAAC,CAACA,GAAG,CAAC,CAAC,CAAC,CAAC;UACxE,CAAC,MAAM;YACL,OAAO9E,GAAG,CAACqc,eAAe,CAACvX,GAAG,CAAC;UACjC;QACF;QACA,OAAO,IAAI;MACb;MAEA,SAASmxB,WAAWA,CAACva,IAAI,EAAE1Z,OAAO,EAAE;QAClC,IAAI0Z,IAAI,CAACuE,YAAY,EAAE;UACrBvE,IAAI,CAACuE,YAAY,GAAG+V,OAAO,CAACta,IAAI,CAACuE,YAAY,EAAEje,OAAO,CAAC;QACzD;QACA,IAAI0Z,IAAI,CAAC0K,IAAI,IAAI,CAAC1K,IAAI,CAAClE,MAAM,EAAE;UAC7B,IAAM4O,IAAI,GAAG4P,OAAO,CAACta,IAAI,CAAC0K,IAAI,EAAEpkB,OAAO,CAAC;UACxC,IAAIokB,IAAI,EAAE;YACR1K,IAAI,CAACmP,YAAY,GAAGnP,IAAI,CAACmP,YAAY,CAACzE,IAAI,EAAE1K,IAAI,CAACkK,IAAI,EAAElK,IAAI,CAAC1E,MAAM,EAAE,IAAI,CAAC,GAAG0E,IAAI,CAACE,MAAM,CAACwK,IAAI,EAAE1K,IAAI,CAAC1E,MAAM,CAAC;UAC5G,CAAC,MAAM;YACL0E,IAAI,CAACtK,IAAI,CAAC,CAAC;UACb;QACF;MACF;MAEA,IAAI,CAAC8jB,IAAI,CAACpZ,KAAK,CAACrY,OAAO,CAAC,UAAAsyB,MAAM;QAAA,OAAIE,WAAW,CAACF,MAAM,EAAE/hB,MAAI,CAAC;MAAA,EAAC;MAE5D,IAAI,CAAChS,OAAO,CAACwa,OAAO,CAAC/Y,OAAO,CAAC,UAAAN,MAAM,EAAI;QACrC,KAAK,IAAIlL,GAAC,GAAG,CAAC,EAAEA,GAAC,IAAI+b,MAAI,CAACxX,IAAI,EAAEvE,GAAC,EAAE,EAAE;UACnC,IAAMu9B,KAAI,GAAGryB,MAAM,CAAC8J,KAAK,CAAChV,GAAC,CAAC;UAC5B,KAAK,IAAIuO,GAAC,GAAG,CAAC,EAAEA,GAAC,IAAIwN,MAAI,CAACxX,IAAI,EAAEgK,GAAC,EAAE,EAAE;YACnC,IAAM6C,KAAI,GAAGmsB,KAAI,CAAChvB,GAAC,CAAC;YACpB,IAAI6C,KAAI,CAACiE,MAAM,EAAE;cACfjE,KAAI,CAACmE,QAAQ,CAAC,CAAC;YACjB;YACAnE,KAAI,CAACgE,MAAM,GAAGhE,KAAI,CAACgE,MAAM,CAACrN,GAAG,CAAC,UAAAxE,IAAI;cAAA,OAAIw6B,OAAO,CAACx6B,IAAI,EAAEwY,MAAI,CAAC;YAAA,EAAC,CAACrT,MAAM,CAACu1B,OAAO,CAAC;YAC1E,IAAI/yB,MAAM,CAAC4J,QAAQ,IAAI1D,KAAI,CAACiE,MAAM,EAAE;cAClC,IAAI,CAACjE,KAAI,CAACgE,MAAM,CAACpU,MAAM,EAAE;gBACvB+a,MAAI,CAACnL,IAAI,CAAC5Q,GAAC,CAAC,CAACuO,GAAC,CAAC,CAAC2H,MAAM,CAAC,IAAI,CAAC;cAC9B,CAAC,MAAM;gBACL6F,MAAI,CAACnL,IAAI,CAAC5Q,GAAC,CAAC,CAACuO,GAAC,CAAC,CAACiH,SAAS,CAAC,CAAC;cAC7B;YACF;UACF;QACF;QACAtK,MAAM,CAAC2Y,KAAK,CAACrY,OAAO,CAAC,UAAAiY,IAAI;UAAA,OAAIua,WAAW,CAACva,IAAI,EAAE1H,MAAI,CAAC;QAAA,EAAC;MACvD,CAAC,CAAC;MAEF,IAAI,CAAC4S,KAAK,GAAG,IAAI;IACnB;EAAC;IAAA1U,GAAA;IAAA5Y,KAAA,EAED,SAAA68B,WAAWA,CAAA,EAAa;MAAA,IAAZC,MAAM,GAAAz7B,SAAA,CAAA1B,MAAA,QAAA0B,SAAA,QAAAyL,SAAA,GAAAzL,SAAA,MAAG,CAAC;MACpB,IAAI,CAAC46B,cAAc,CAAC,CAAC;MACrB,IAAI,CAACc,aAAa,CAAC,CAAC;MAEpB,QAAQ,IAAI,CAAC75B,IAAI;QACf,KAAK,GAAG;UACN,IAAI,CAACy4B,cAAc,GAAG,CAAC;UACvB;QACF,KAAK,GAAG;UACN,IAAI,CAACA,cAAc,GAAG,CAAC;UACvB;QACF,KAAK,GAAG;UACN,IAAI,CAACA,cAAc,GAAG,CAAC;UACvB;QACF,KAAK,GAAG;UACN,IAAI,CAACA,cAAc,GAAG,CAAC;UACvB;QACF,KAAK,GAAG;UACN,IAAI,CAACA,cAAc,GAAG,CAAC;UACvB;QACF;UACE,IAAI,CAACA,cAAc,GAAG,CAAC;MAC3B;MAEA,IAAI,CAACxE,UAAU,GAAGjsB,IAAI,CAAC8xB,GAAG,CAAC,IAAI,CAAC95B,IAAI,EAAE,CAAC,CAAC;MAExC,IAAI,CAACw4B,UAAU,GAAG,IAAI,CAACuB,gBAAgB,CAAC,CAAC;MAEzC,IAAI,IAAI,CAACvB,UAAU,CAAC/7B,MAAM,GAAG,IAAI,CAACg8B,cAAc,EAAE;QAChD,IAAImB,MAAM,IAAI,EAAE,EAAE;UAChBI,KAAK,CAAC,gCAAgC,CAAC;UACvC;QACF;QACA,IAAI,CAACL,WAAW,CAACC,MAAM,GAAG,CAAC,CAAC;QAC5B;MACF;MAEA,IAAI,CAACK,8BAA8B,CAAC,IAAI,CAACzB,UAAU,CAAC;IACtD;EAAC;IAAA9iB,GAAA;IAAA5Y,KAAA,EAED,SAAAo9B,UAAUA,CAAA,EAAG;MACX,IAAA5T,cAAA,GAEI,IAAI,CADN9gB,OAAO;QAAI0Y,IAAI,GAAAoI,cAAA,CAAJpI,IAAI;QAAEvX,MAAM,GAAA2f,cAAA,CAAN3f,MAAM;MAGzB,IAAI,CAAC+xB,IAAI,GAAG,IAAI5C,IAAI,CAAC,IAAI,CAACtwB,OAAO,CAAC;;MAElC;MACA;;MAEA,IAAI,CAAC20B,YAAY,CAAC,CAAC;MAEnB,IAAI,CAAC,IAAI,CAAC/pB,gBAAgB,EAAE;QAC1B,KAAK,IAAI3U,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,IAAI,CAACuE,IAAI,EAAEvE,CAAC,EAAE,EAAE;UACnC,KAAK,IAAIuO,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,IAAI,CAAChK,IAAI,EAAEgK,CAAC,EAAE,EAAE;YACnC,IAAI,CAACqC,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,CAAC,CAAC2H,MAAM,CAAC,CAAC;UAC1B;QACF;QACA,KAAK,IAAIlW,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAGkL,MAAM,CAAChG,SAAS,CAAClE,MAAM,EAAEhB,GAAC,EAAE,EAAE;UAChD,IAAMmqB,QAAQ,GAAGjf,MAAM,CAAChG,SAAS,CAAClF,GAAC,CAAC;UACpCwU,yBAAyB,CAAC2V,QAAQ,CAAC;QACrC;QACA,KAAK,IAAInqB,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAGkL,MAAM,CAAC2Y,KAAK,CAAC7iB,MAAM,EAAEhB,GAAC,EAAE,EAAE;UAC5C,IAAMyjB,IAAI,GAAGvY,MAAM,CAAC2Y,KAAK,CAAC7jB,GAAC,CAAC;UAC5BwU,yBAAyB,CAACiP,IAAI,CAAC;QACjC;MACF;MAEA,IAAI,CAACkL,KAAK,GAAG,IAAI;MACjBlM,IAAI,CAACiC,sBAAsB,CAAC,CAAC;IAC/B;EAAC;IAAAzK,GAAA;IAAA5Y,KAAA,EAED,SAAAs9B,eAAeA,CAAA,EAAG;MAChB,IAAQ50B,OAAO,GAAK,IAAI,CAAhBA,OAAO;MAEf,IAAMwa,OAAO,GAAG,EAAE;MAClB,IAAMgG,KAAK,GAAG,EAAE;MAChB,IAAMqU,OAAO,GAAGp7B,KAAK,CAACC,IAAI,CAACD,KAAK,CAAC,IAAI,CAACu5B,UAAU,CAAC/7B,MAAM,CAAC,CAACuK,IAAI,CAAC,CAAC,CAAC;MAEhE,KAAK,IAAIvL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC+8B,UAAU,CAAC/7B,MAAM,EAAEhB,CAAC,EAAE,EAAE;QAC/C,IAAMyO,GAAG,GAAGR,gBAAU,CAAC2wB,OAAO,CAAC;QAC/BrU,KAAK,CAAC3mB,IAAI,CAAC6K,GAAG,CAAC;QACfmwB,OAAO,CAAC9rB,MAAM,CAAC8rB,OAAO,CAAC7rB,OAAO,CAACtE,GAAG,CAAC,EAAE,CAAC,CAAC;MACzC;MAEA,KAAK,IAAIzO,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,IAAI,CAACg9B,cAAc,EAAEh9B,GAAC,EAAE,EAAE;QAAA,IAAA6+B,qBAAA,EAAAC,sBAAA;QAC5C,IAAMC,IAAI,IAAAF,qBAAA,GAAG,IAAI,CAAC9B,UAAU,CAACxS,KAAK,CAACvqB,GAAC,CAAC,CAAC,cAAA6+B,qBAAA,uBAAzBA,qBAAA,CAA2B7+B,CAAC;QACzC,IAAMg/B,IAAI,IAAAF,sBAAA,GAAG,IAAI,CAAC/B,UAAU,CAACxS,KAAK,CAACvqB,GAAC,CAAC,CAAC,cAAA8+B,sBAAA,uBAAzBA,sBAAA,CAA2BvwB,CAAC;QACzC,IAAIwwB,IAAI,IAAIC,IAAI,EAAE;UAChB,IAAMp4B,KAAK,GAAGb,MAAM,CAAC/F,GAAC,CAAC;UACvB,IAAI,CAACA,GAAC,EAAE;YACNukB,OAAO,CAAC3gB,IAAI,CACV,IAAI22B,KAAK,CACP;cACEv6B,CAAC,EAAE++B,IAAI;cACPxwB,CAAC,EAAEywB,IAAI;cACP75B,GAAG,EAAE,CAAC;cACNH,GAAG,EAAE,OAAO;cACZ4B,KAAK,EAALA,KAAK;cACLkO,QAAQ,EAAE;YACZ,CAAC,EACD/K,OACF,CACF,CAAC;UACH,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC8yB,IAAI,EAAE;YACrBtY,OAAO,CAAC3gB,IAAI,CAAC,IAAIuxB,EAAE,CAAC;cAAEn1B,CAAC,EAAE++B,IAAI;cAAExwB,CAAC,EAAEywB,IAAI;cAAE75B,GAAG,EAAE,CAAC;cAAEH,GAAG,EAAE,OAAO;cAAE4B,KAAK,EAALA;YAAM,CAAC,EAAEmD,OAAO,CAAC,CAAC;UAClF;QACF;MACF;MACA,OAAOwa,OAAO;IAChB;EAAC;IAAAtK,GAAA;IAAA5Y,KAAA,EAED,SAAA49B,YAAYA,CAAA,EAAG;MACb,IACa1a,OAAO,GAChB,IAAI,CADNxa,OAAO,CAAIwa,OAAO;;MAGpB;MACA,KAAK,IAAIvkB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGukB,OAAO,CAACvjB,MAAM,EAAEhB,CAAC,EAAE,EAAE;QACvC,IAAMkL,MAAM,GAAGqZ,OAAO,CAACvkB,CAAC,CAAC;QACzB,IAAMk/B,UAAU,GAAGh0B,MAAM,CAACwpB,aAAa,CAAC;UAAE10B,CAAC,EAAEkL,MAAM,CAAClL,CAAC;UAAEuO,CAAC,EAAErD,MAAM,CAACqD,CAAC;UAAE7J,IAAI,EAAE,YAAY;UAAE0a,OAAO,EAAE;QAAK,CAAC,CAAC;QACxG,KAAK,IAAIpf,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,IAAI,CAAC88B,aAAa,EAAE98B,GAAC,EAAE,EAAE;UAC3Ck/B,UAAU,CAAClU,SAAS,CAAC,UAAU,CAAC;QAClC;MACF;IACF;EAAC;IAAA/Q,GAAA;IAAA5Y,KAAA,EAED,SAAA89B,0BAA0BA,CACxBj0B,MAAM,EACNk0B,SAAS,EAMT;MAAA,IAAA9iB,MAAA;MAAA,IALA+iB,YAAY,GAAA38B,SAAA,CAAA1B,MAAA,QAAA0B,SAAA,QAAAyL,SAAA,GAAAzL,SAAA,MAAG,EAAE;MAAA,IACjB48B,gBAAgB,GAAA58B,SAAA,CAAA1B,MAAA,QAAA0B,SAAA,QAAAyL,SAAA,GAAAzL,SAAA,MAAG,CAAC;MAAA,IACpB68B,gBAAgB,GAAA78B,SAAA,CAAA1B,MAAA,QAAA0B,SAAA,QAAAyL,SAAA,GAAAzL,SAAA,MAAG,EAAE;MAAA,IACrB88B,YAAY,GAAA98B,SAAA,CAAA1B,MAAA,QAAA0B,SAAA,QAAAyL,SAAA,GAAAzL,SAAA,MAAG,EAAE;MAAA,IACjB+8B,mBAAmB,GAAA/8B,SAAA,CAAA1B,MAAA,QAAA0B,SAAA,QAAAyL,SAAA,GAAAzL,SAAA,MAAG,GAAG;MAEzB,IAAQkO,IAAI,GAAK,IAAI,CAAbA,IAAI;MACZ,IAAW8uB,OAAO,GAAiBx0B,MAAM,CAAjClL,CAAC;QAAc2/B,OAAO,GAAKz0B,MAAM,CAArBqD,CAAC;MACrB,IAAMqxB,SAAS,GAAGhvB,IAAI,CAAC5P,MAAM;MAC7B,IAAM6+B,UAAU,GAAGjvB,IAAI,CAAC,CAAC,CAAC,CAAC5P,MAAM;MACjC,IAAM8+B,WAAW,GAAG,EAAE;MACtB,IAAMC,SAAS,GAAG,IAAIC,GAAG,CAAC,CAAC;;MAE3B;MACA,SAASjvB,QAAQA,CAACjC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAE;QAChC,OAAO1C,IAAI,CAACqB,IAAI,CAACrB,IAAA,CAAA8xB,GAAA,CAACvvB,EAAE,GAAGE,EAAE,EAAK,CAAC,IAAAzC,IAAA,CAAA8xB,GAAA,CAAItvB,EAAE,GAAGE,EAAE,EAAK,CAAC,EAAC;MACnD;;MAEA;MACA,SAASgxB,YAAYA,CAACC,OAAO,EAAEC,OAAO,EAAEC,MAAM,EAAgC;QAAA,IAA9BC,OAAO,GAAA39B,SAAA,CAAA1B,MAAA,QAAA0B,SAAA,QAAAyL,SAAA,GAAAzL,SAAA,MAAG,GAAG;QAAA,IAAE49B,SAAS,GAAA59B,SAAA,CAAA1B,MAAA,QAAA0B,SAAA,QAAAyL,SAAA,GAAAzL,SAAA,MAAG,CAAC;QAC1E,IAAM69B,WAAW,GAAG,EAAE;QACtB,KAAK,IAAI74B,CAAC,GAAG,CAAC04B,MAAM,EAAE14B,CAAC,IAAI04B,MAAM,EAAE14B,CAAC,EAAE,EAAE;UACtC,KAAK,IAAIhH,CAAC,GAAG,CAAC0/B,MAAM,EAAE1/B,CAAC,IAAI0/B,MAAM,EAAE1/B,CAAC,EAAE,EAAE;YACtC,IAAM8/B,cAAc,GAAGj0B,IAAI,CAACqB,IAAI,CAAClG,CAAC,GAAGA,CAAC,GAAGhH,CAAC,GAAGA,CAAC,CAAC;YAC/C,IAAM+/B,KAAK,GAAGl0B,IAAI,CAACyB,MAAM,CAAC,CAAC,GAAGsyB,SAAS,GAAGA,SAAS,GAAG,CAAC,EAAC;YACxD,IAAIE,cAAc,GAAGC,KAAK,IAAIL,MAAM,EAAE;cACpC;cACA,IAAMM,KAAK,GAAGR,OAAO,GAAGx4B,CAAC;cACzB,IAAMi5B,KAAK,GAAGR,OAAO,GAAGz/B,CAAC;cACzB,IACEggC,KAAK,IAAI,CAAC,IACVA,KAAK,GAAGd,SAAS;cAAI;cACrBe,KAAK,IAAI,CAAC,IACVA,KAAK,GAAGd,UAAU,IAClB,CAACjvB,IAAI,CAAC8vB,KAAK,CAAC,CAACC,KAAK,CAAC,CAAC1uB,KAAK;cAAI;cAC7BrB,IAAI,CAAC8vB,KAAK,CAAC,CAACC,KAAK,CAAC,CAACxuB,QAAQ,KAAK,OAAO;cAAI;cAC3CvB,IAAI,CAAC8vB,KAAK,CAAC,CAACC,KAAK,CAAC,CAACj8B,IAAI,KAAK,QAAQ;cAAI;cACxC,CAACkM,IAAI,CAAC8vB,KAAK,CAAC,CAACC,KAAK,CAAC,CAACvpB,QAAQ;cAAI;cAChC7K,IAAI,CAACyB,MAAM,CAAC,CAAC,GAAGqyB,OAAO,CAAC;cAAA,EACxB;gBACAE,WAAW,CAAC38B,IAAI,CAAC;kBAAE5D,CAAC,EAAE0gC,KAAK;kBAAEnyB,CAAC,EAAEoyB;gBAAM,CAAC,CAAC;cAC1C;YACF;UACF;QACF;QACA,OAAOJ,WAAW;MACpB;;MAEA;MACA,KAAK,IAAIK,OAAO,GAAG,CAAC,EAAEA,OAAO,GAAGvB,YAAY,EAAEuB,OAAO,EAAE,EAAE;QACvD,IAAIC,cAAc;UAAEC,cAAc;QAClC,IAAIC,KAAK,GAAG,CAAC;QACb,IAAMC,aAAa,GAAGz0B,IAAI,CAACC,KAAK,CAACD,IAAI,CAACyB,MAAM,CAAC,CAAC,IAAIuxB,gBAAgB,GAAGD,gBAAgB,GAAG,CAAC,CAAC,CAAC,GAAGA,gBAAgB,EAAC;QAC/G,IAAM2B,cAAc,GAAG10B,IAAI,CAACyB,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,EAAC;QACjD,IAAMsyB,SAAS,GAAG/zB,IAAI,CAACyB,MAAM,CAAC,CAAC,GAAG,CAAC,EAAC;;QAEpC;QACA,GAAG;UACD6yB,cAAc,GAAGnB,OAAO,GAAGnzB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACyB,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,EAAC;UAC/D8yB,cAAc,GAAGnB,OAAO,GAAGpzB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACyB,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;UAC9D+yB,KAAK,EAAE;UACP,IAAIA,KAAK,GAAG,GAAG,EAAE,MAAK,CAAC;QACzB,CAAC,QACChwB,QAAQ,CAAC8vB,cAAc,EAAEC,cAAc,EAAEpB,OAAO,EAAEC,OAAO,CAAC,GAAGH,YAAY,IACzEqB,cAAc,GAAG,CAAC,IAClBA,cAAc,IAAIjB,SAAS,IAC3BkB,cAAc,GAAG,CAAC,IAClBA,cAAc,IAAIjB,UAAU;QAAI;QAChCjvB,IAAI,CAACiwB,cAAc,CAAC,CAACC,cAAc,CAAC,CAAC3uB,QAAQ,KAAK,OAAO;QAAI;QAC7DvB,IAAI,CAACiwB,cAAc,CAAC,CAACC,cAAc,CAAC,CAAC7uB,KAAK;QAAI;QAC9CrB,IAAI,CAACiwB,cAAc,CAAC,CAACC,cAAc,CAAC,CAAC1pB,QAAQ,CAAC;QAAA;QAGhD,IAAI2pB,KAAK,IAAI,GAAG,EAAE;UAChB,IAAMG,WAAW,GAAGjB,YAAY,CAACY,cAAc,EAAEC,cAAc,EAAEE,aAAa,EAAEC,cAAc,EAAEX,SAAS,CAAC;UAC1GY,WAAW,CAAC11B,OAAO,CAAC,UAAA4F,IAAI;YAAA,OAAI0uB,WAAW,CAACl8B,IAAI,CAACwN,IAAI,CAAC;UAAA,EAAC;QACrD;MACF;;MAEA;MACA,IAAM+vB,kBAAkB,GAAG50B,IAAI,CAACC,KAAK,CAAC4yB,SAAS,GAAG,GAAG,CAAC;MACtD,KAAK,IAAIp/B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmhC,kBAAkB,EAAEnhC,CAAC,EAAE,EAAE;QAC3C,IAAIohC,KAAK;UAAEC,KAAK;QAChB,IAAIN,MAAK,GAAG,CAAC;QAEb,GAAG;UACDK,KAAK,GAAG1B,OAAO,GAAGnzB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACyB,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,EAAC;UACtDqzB,KAAK,GAAG1B,OAAO,GAAGpzB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACyB,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;UACrD+yB,MAAK,EAAE;UACP,IAAIA,MAAK,GAAG,EAAE,EAAE,MAAK,CAAC;QACxB,CAAC,QACChwB,QAAQ,CAACqwB,KAAK,EAAEC,KAAK,EAAE3B,OAAO,EAAEC,OAAO,CAAC,GAAGH,YAAY,IACvD4B,KAAK,GAAG,CAAC,IACTA,KAAK,IAAIxB,SAAS,IAClByB,KAAK,GAAG,CAAC,IACTA,KAAK,IAAIxB,UAAU;QAAI;QACvBjvB,IAAI,CAACwwB,KAAK,CAAC,CAACC,KAAK,CAAC,CAAClvB,QAAQ,KAAK,OAAO;QAAI;QAC3CvB,IAAI,CAACwwB,KAAK,CAAC,CAACC,KAAK,CAAC,CAACpvB,KAAK;QAAI;QAC5BrB,IAAI,CAACwwB,KAAK,CAAC,CAACC,KAAK,CAAC,CAACjqB,QAAQ,CAAC;QAAA;QAG9B,IAAI2pB,MAAK,IAAI,EAAE,EAAE;UACfjB,WAAW,CAACl8B,IAAI,CAAC;YAAE5D,CAAC,EAAEohC,KAAK;YAAE7yB,CAAC,EAAE8yB;UAAM,CAAC,CAAC;QAC1C;MACF;;MAEA;MACA,KAAK,IAAIC,QAAQ,GAAG,CAAC,EAAEA,QAAQ,GAAGjC,YAAY,EAAEiC,QAAQ,EAAE,EAAE;QAC1D,IAAI/0B,IAAI,CAACyB,MAAM,CAAC,CAAC,GAAGyxB,mBAAmB,EAAE;UACvC,IAAI8B,eAAe;YAAEC,eAAe;UACpC,IAAIT,OAAK,GAAG,CAAC;UACb,IAAMU,cAAc,GAAGl1B,IAAI,CAACC,KAAK,CAACD,IAAI,CAACyB,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAC;UACzD,IAAMsyB,UAAS,GAAG/zB,IAAI,CAACyB,MAAM,CAAC,CAAC,GAAG,GAAG;UAErC,GAAG;YACDuzB,eAAe,GAAG7B,OAAO,GAAGnzB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACyB,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,EAAC;YAChEwzB,eAAe,GAAG7B,OAAO,GAAGpzB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACyB,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;YAC/D+yB,OAAK,EAAE;YACP,IAAIA,OAAK,GAAG,GAAG,EAAE;UACnB,CAAC,QACChwB,QAAQ,CAACwwB,eAAe,EAAEC,eAAe,EAAE9B,OAAO,EAAEC,OAAO,CAAC,GAAGH,YAAY,IAC3E+B,eAAe,GAAG,CAAC,IACnBA,eAAe,IAAI3B,SAAS,IAC5B4B,eAAe,GAAG,CAAC,IACnBA,eAAe,IAAI3B,UAAU;UAAI;UACjCjvB,IAAI,CAAC2wB,eAAe,CAAC,CAACC,eAAe,CAAC,CAACrvB,QAAQ,KAAK,OAAO;UAAI;UAC/DvB,IAAI,CAAC2wB,eAAe,CAAC,CAACC,eAAe,CAAC,CAACvvB,KAAK;UAAI;UAChDrB,IAAI,CAAC2wB,eAAe,CAAC,CAACC,eAAe,CAAC,CAACpqB,QAAQ,CAAC;UAAA;UAGlD,IAAI2pB,OAAK,IAAI,GAAG,EAAE;YAChB,IAAMW,aAAa,GAAGzB,YAAY,CAACsB,eAAe,EAAEC,eAAe,EAAEC,cAAc,EAAE,CAAC,EAAEnB,UAAS,CAAC;YAClGoB,aAAa,CAACl2B,OAAO,CAAC,UAAAm2B,WAAW,EAAI;cACnC,IAAMv9B,KAAK,GAAG07B,WAAW,CAAC8B,SAAS,CAAC,UAAAxwB,IAAI;gBAAA,OAAIA,IAAI,CAACpR,CAAC,KAAK2hC,WAAW,CAAC3hC,CAAC,IAAIoR,IAAI,CAAC7C,CAAC,KAAKozB,WAAW,CAACpzB,CAAC;cAAA,EAAC;cACjG,IAAInK,KAAK,GAAG,CAAC,CAAC,EAAE;gBACd07B,WAAW,CAAChtB,MAAM,CAAC1O,KAAK,EAAE,CAAC,CAAC,EAAC;cAC/B;YACF,CAAC,CAAC;UACJ;QACF;MACF;;MAEA;MACA,IAAMy9B,UAAU,GAAG,EAAE;MACrB,IAAMC,aAAa,GAAGv1B,IAAI,CAACyB,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,EAAC;;MAEnD,KAAK,IAAIiiB,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAG4R,UAAU,EAAE5R,IAAI,EAAE,EAAE;QAC5C,IAAI8R,OAAO;UAAEC,OAAO;QACpB,IAAIjB,OAAK,GAAG,CAAC;QAEb,GAAG;UACDgB,OAAO,GAAG9R,IAAI,GAAG6R,aAAa;UAC9BE,OAAO,GAAG/R,IAAI;UACd8Q,OAAK,EAAE;UACP,IAAIA,OAAK,GAAG,EAAE,EAAE;QAClB,CAAC,QACChwB,QAAQ,CAAC2uB,OAAO,GAAGqC,OAAO,EAAEpC,OAAO,GAAGqC,OAAO,EAAEtC,OAAO,EAAEC,OAAO,CAAC,GAAGH,YAAY,IAC/EE,OAAO,GAAGqC,OAAO,GAAG,CAAC,IACrBrC,OAAO,GAAGqC,OAAO,IAAInC,SAAS,IAC9BD,OAAO,GAAGqC,OAAO,GAAG,CAAC,IACrBrC,OAAO,GAAGqC,OAAO,IAAInC,UAAU;QAGjC,IAAIkB,OAAK,IAAI,EAAE,EAAE;UACf,IAAMkB,WAAW,GAAG11B,IAAI,CAACyB,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;UAChD,IAAMk0B,WAAW,GAAG31B,IAAI,CAACyB,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;UAChD+xB,SAAS,CAACoC,GAAG,IAAA99B,MAAA,CAAIq7B,OAAO,GAAGqC,OAAO,GAAGE,WAAW,OAAA59B,MAAA,CAAIs7B,OAAO,GAAGqC,OAAO,GAAGE,WAAW,CAAE,CAAC;QACxF;MACF;;MAEA;MACApC,WAAW,CAACt0B,OAAO,CAAC,UAAA4F,IAAI,EAAI;QAC1B,IAAI2uB,SAAS,CAAC53B,GAAG,IAAA9D,MAAA,CAAI+M,IAAI,CAACpR,CAAC,OAAAqE,MAAA,CAAI+M,IAAI,CAAC7C,CAAC,CAAE,CAAC,EAAE;UACxCuxB,WAAW,CAAChtB,MAAM,CAACgtB,WAAW,CAAC/sB,OAAO,CAAC3B,IAAI,CAAC,EAAE,CAAC,CAAC;QAClD;MACF,CAAC,CAAC;;MAEF;MACA,IAAMgxB,YAAY,GAAG,EAAE;MACvB,KAAK,IAAIpiC,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAGo/B,SAAS,EAAEp/B,GAAC,EAAE,EAAE;QAClC,IAAI8/B,WAAW,CAAC9+B,MAAM,KAAK,CAAC,EAAE;QAC9B,IAAMqhC,SAAS,GAAG91B,IAAI,CAACC,KAAK,CAACD,IAAI,CAACyB,MAAM,CAAC,CAAC,GAAG8xB,WAAW,CAAC9+B,MAAM,CAAC;QAChE,IAAMoQ,IAAI,GAAG0uB,WAAW,CAACuC,SAAS,CAAC;QACnCD,YAAY,CAACx+B,IAAI,CAACwN,IAAI,CAAC;QACvB0uB,WAAW,CAAChtB,MAAM,CAACuvB,SAAS,EAAE,CAAC,CAAC;MAClC;;MAEA;MAAA,IAAA3vB,KAAA,YAAAA,MAAA,EACiC;QAA5B,IAAMtB,IAAI,GAAAkxB,aAAA,CAAAC,GAAA;QACb;QACA,IACE3xB,IAAI,CAACQ,IAAI,CAACpR,CAAC,CAAC,CAACoR,IAAI,CAAC7C,CAAC,CAAC,CAAC4D,QAAQ,KAAK,OAAO,IACzC,CAACvB,IAAI,CAACQ,IAAI,CAACpR,CAAC,CAAC,CAACoR,IAAI,CAAC7C,CAAC,CAAC,CAACosB,WAAW,IACjC,CAAC/pB,IAAI,CAACQ,IAAI,CAACpR,CAAC,CAAC,CAACoR,IAAI,CAAC7C,CAAC,CAAC,CAAC0D,KAAK,IAC3B,CAACrB,IAAI,CAACQ,IAAI,CAACpR,CAAC,CAAC,CAACoR,IAAI,CAAC7C,CAAC,CAAC,CAAC6I,QAAQ,EAC9B;UACA,IAAI1D,MAAM,GAAG,IAAI;UACjBE,wBAAwB,CAACxC,IAAI,CAACpR,CAAC,EAAEoR,IAAI,CAAC7C,CAAC,EAAEqC,IAAI,EAAE,CAAC,EAAE,UAAAQ,IAAI,EAAI;YAAA,IAAAoxB,SAAA;YACxD,IAAI,CAAC,WAAW,EAAE,MAAM,EAAE,OAAO,CAAC,CAACtvB,QAAQ,EAAAsvB,SAAA,GAACpxB,IAAI,CAACjJ,GAAG,cAAAq6B,SAAA,uBAARA,SAAA,CAAU99B,IAAI,CAAC,EAAE;cAC3DgP,MAAM,GAAG,KAAK;YAChB;UACF,CAAC,CAAC;UACFA,MAAM,IAAI4I,MAAI,CAACkF,SAAS,CAAC5d,IAAI,CAAC0Y,MAAI,CAAC0H,QAAQ,CAAC,IAAIjD,QAAQ,CAAC;YAAE/gB,CAAC,EAAEoR,IAAI,CAACpR,CAAC;YAAEuO,CAAC,EAAE6C,IAAI,CAAC7C,CAAC;YAAE7J,IAAI,EAAE;UAAO,CAAC,EAAE4X,MAAI,CAACvS,OAAO,CAAC,CAAC,CAAC;QAClH;MACF,CAAC;MAhBD,SAAAw4B,GAAA,MAAAD,aAAA,GAAmBF,YAAY,EAAAG,GAAA,GAAAD,aAAA,CAAAthC,MAAA,EAAAuhC,GAAA;QAAA7vB,KAAA;MAAA;IAiBjC;EAAC;IAAAuH,GAAA;IAAA5Y,KAAA,EAED,SAAAm9B,8BAA8BA,CAACzB,UAAU,EAAE;MACzC,KAAK,IAAI/8B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+8B,UAAU,CAAC/7B,MAAM,EAAEhB,CAAC,EAAE,EAAE;QAC1C,IAAI,CAACyiC,kBAAkB,CAAC1F,UAAU,CAAC/8B,CAAC,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QAC/D,IAAI,CAACyiC,kBAAkB,CAAC1F,UAAU,CAAC/8B,CAAC,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QAChE,IAAI,CAACyiC,kBAAkB,CAAC1F,UAAU,CAAC/8B,CAAC,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QAChE,IAAI,CAACyiC,kBAAkB,CAAC1F,UAAU,CAAC/8B,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QAC3D,IAAI,CAACyiC,kBAAkB,CAAC1F,UAAU,CAAC/8B,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QAC5D,IAAI,CAACyiC,kBAAkB,CAAC1F,UAAU,CAAC/8B,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QAC5D,IAAI,CAACyiC,kBAAkB,CAAC1F,UAAU,CAAC/8B,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QAC1D,IAAI,CAACyiC,kBAAkB,CAAC1F,UAAU,CAAC/8B,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QAC3D,IAAI,CAACyiC,kBAAkB,CAAC1F,UAAU,CAAC/8B,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QAC3D,IAAI,CAACm/B,0BAA0B,CAACpC,UAAU,CAAC/8B,CAAC,CAAC,EAAE,IAAI,CAACuE,IAAI,GAAG,CAAC,CAAC;MAC/D;IACF;EAAC;IAAA0V,GAAA;IAAA5Y,KAAA,EAED,SAAAqhC,eAAeA,CAAA,EAAqC;MAAA,IAApCC,QAAQ,GAAAjgC,SAAA,CAAA1B,MAAA,QAAA0B,SAAA,QAAAyL,SAAA,GAAAzL,SAAA,MAAG,GAAG;MAAA,IAAEkgC,QAAQ,GAAAlgC,SAAA,CAAA1B,MAAA,QAAA0B,SAAA,QAAAyL,SAAA,GAAAzL,SAAA,MAAG,OAAO;MAChD,IAAMmgC,UAAU,GAAG,EAAE;;MAErB;MACA,KAAK,IAAI7iC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2iC,QAAQ,EAAE3iC,CAAC,EAAE,EAAE;QACjC6iC,UAAU,CAAC7iC,CAAC,CAAC,GAAG,EAAE;QAClB,KAAK,IAAIuO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGo0B,QAAQ,EAAEp0B,CAAC,EAAE,EAAE;UACjCs0B,UAAU,CAAC7iC,CAAC,CAAC,CAACuO,CAAC,CAAC,GAAG,CAAC,EAAC;QACvB;MACF;;MAEA;MACA,SAASu0B,sBAAsBA,CAACp7B,CAAC,EAAEhH,CAAC,EAAE0/B,MAAM,EAAE17B,IAAI,EAAE;QAClD,KAAK,IAAI1E,GAAC,GAAG,CAACogC,MAAM,EAAEpgC,GAAC,IAAIogC,MAAM,EAAEpgC,GAAC,EAAE,EAAE;UACtC,KAAK,IAAIuO,GAAC,GAAG,CAAC6xB,MAAM,EAAE7xB,GAAC,IAAI6xB,MAAM,EAAE7xB,GAAC,EAAE,EAAE;YACtC,IAAMw0B,EAAE,GAAGr7B,CAAC,GAAG1H,GAAC;YAChB,IAAMgjC,EAAE,GAAGtiC,CAAC,GAAG6N,GAAC;YAChB,IAAIw0B,EAAE,IAAI,CAAC,IAAIA,EAAE,GAAGJ,QAAQ,IAAIK,EAAE,IAAI,CAAC,IAAIA,EAAE,GAAGL,QAAQ,IAAI3iC,GAAC,GAAGA,GAAC,GAAGuO,GAAC,GAAGA,GAAC,IAAI6xB,MAAM,GAAGA,MAAM,EAAE;cAC5FyC,UAAU,CAACE,EAAE,CAAC,CAACC,EAAE,CAAC,GAAGt+B,IAAI;YAC3B;UACF;QACF;MACF;;MAEA;MACA,SAASu+B,aAAaA,CAAA,EAAG;QACvB,IAAIL,QAAQ,KAAK,WAAW,EAAE;UAC5B,IAAMM,QAAQ,GAAG,EAAE,EAAC;UACpB,IAAMC,WAAW,GAAG,IAAI,EAAC;;UAEzB;UACA,KAAK,IAAInjC,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG2iC,QAAQ,EAAE3iC,GAAC,EAAE,EAAE;YACjC,KAAK,IAAIuO,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAGo0B,QAAQ,EAAEp0B,GAAC,EAAE,EAAE;cACjC,IAAMiyB,cAAc,GAAGj0B,IAAI,CAACoB,GAAG,CAAC3N,GAAC,GAAG2iC,QAAQ,GAAG,CAAC,CAAC,GAAGp2B,IAAI,CAACoB,GAAG,CAACY,GAAC,GAAGo0B,QAAQ,GAAG,CAAC,CAAC,EAAC;;cAE/E;cACA,IAAMS,QAAQ,GAAG72B,IAAI,CAACuB,GAAG,CAAC9N,GAAC,EAAEuO,GAAC,EAAEo0B,QAAQ,GAAG3iC,GAAC,EAAE2iC,QAAQ,GAAGp0B,GAAC,CAAC;cAC3D,IAAM80B,YAAY,GAAG92B,IAAI,CAACyB,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,EAAC;;cAE7C,IAAIo1B,QAAQ,GAAGF,QAAQ,GAAG32B,IAAI,CAAC+2B,GAAG,CAAC9C,cAAc,GAAG2C,WAAW,CAAC,GAAG,CAAC,GAAGE,YAAY,EAAE;gBACnFR,UAAU,CAAC7iC,GAAC,CAAC,CAACuO,GAAC,CAAC,GAAG,CAAC,EAAC;cACvB;YACF;UACF;QACF,CAAC,MAAM,IAAIq0B,QAAQ,KAAK,KAAK,EAAE;UAC7B,IAAMW,OAAO,GAAGh3B,IAAI,CAACC,KAAK,CAACm2B,QAAQ,GAAG,CAAC,CAAC;UACxC,IAAMa,OAAO,GAAGj3B,IAAI,CAACC,KAAK,CAACm2B,QAAQ,GAAG,CAAC,CAAC;UACxC,IAAMc,UAAU,GAAGl3B,IAAI,CAACC,KAAK,CAACm2B,QAAQ,GAAG,CAAC,CAAC,EAAC;UAC5C,IAAMQ,YAAW,GAAG,GAAG,EAAC;;UAExB;UACA,KAAK,IAAInjC,GAAC,GAAG,CAACyjC,UAAU,EAAEzjC,GAAC,IAAIyjC,UAAU,EAAEzjC,GAAC,EAAE,EAAE;YAC9C,KAAK,IAAIuO,GAAC,GAAG,CAACk1B,UAAU,EAAEl1B,GAAC,IAAIk1B,UAAU,EAAEl1B,GAAC,EAAE,EAAE;cAC9C,IAAMw0B,EAAE,GAAGQ,OAAO,GAAGvjC,GAAC;cACtB,IAAMgjC,EAAE,GAAGQ,OAAO,GAAGj1B,GAAC;cACtB,IAAMm1B,kBAAkB,GAAGn3B,IAAI,CAACqB,IAAI,CAAC5N,GAAC,GAAGA,GAAC,GAAGuO,GAAC,GAAGA,GAAC,CAAC;cACnD,IAAMkyB,KAAK,GAAGl0B,IAAI,CAAC+2B,GAAG,CAACI,kBAAkB,GAAGP,YAAW,CAAC,GAAG,CAAC,EAAC;cAC7D,IAAME,aAAY,GAAG92B,IAAI,CAACyB,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,EAAC;;cAE7C,IACE+0B,EAAE,IAAI,CAAC,IACPA,EAAE,GAAGJ,QAAQ,IACbK,EAAE,IAAI,CAAC,IACPA,EAAE,GAAGL,QAAQ,IACbe,kBAAkB,GAAGD,UAAU,GAAGhD,KAAK,GAAG4C,aAAY,EACtD;gBACAR,UAAU,CAACE,EAAE,CAAC,CAACC,EAAE,CAAC,GAAG,CAAC,EAAC;cACzB;YACF;UACF;QACF;QACA;MACF;;MAEA;MACA,SAASW,mBAAmBA,CAAA,EAAG;QAC7B;QACAC,gBAAgB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;;QAE7B;QACAA,gBAAgB,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;MAC/B;;MAEA;MACA,SAASA,gBAAgBA,CAACl/B,IAAI,EAAE26B,YAAY,EAAEwE,cAAc,EAAEC,cAAc,EAAE;QAC5E,KAAK,IAAI9jC,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGq/B,YAAY,EAAEr/B,IAAC,EAAE,EAAE;UACrC,IAAM+jC,QAAQ,GAAGx3B,IAAI,CAACC,KAAK,CAACD,IAAI,CAACyB,MAAM,CAAC,CAAC,GAAG20B,QAAQ,CAAC;UACrD,IAAMqB,QAAQ,GAAGz3B,IAAI,CAACC,KAAK,CAACD,IAAI,CAACyB,MAAM,CAAC,CAAC,GAAG20B,QAAQ,CAAC;UACrD,IAAMvC,MAAM,GAAG7zB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACyB,MAAM,CAAC,CAAC,IAAI81B,cAAc,GAAGD,cAAc,CAAC,CAAC,GAAGA,cAAc;;UAE7F;UACA,IAAIn/B,IAAI,KAAK,CAAC,IAAIm+B,UAAU,CAACkB,QAAQ,CAAC,CAACC,QAAQ,CAAC,KAAK,CAAC,EAAE;YACtD,SAAQ,CAAC;UACX;UAEAlB,sBAAsB,CAACiB,QAAQ,EAAEC,QAAQ,EAAE5D,MAAM,EAAE17B,IAAI,CAAC;QAC1D;MACF;;MAEA;MACAu+B,aAAa,CAAC,CAAC;;MAEf;MACAU,mBAAmB,CAAC,CAAC;MAErB,OAAOd,UAAU;IACnB;EAAC;IAAA5oB,GAAA;IAAA5Y,KAAA,EAED,SAAA+8B,aAAaA,CAAA,EAAG;MACd,IAAM1vB,CAAC,GAAG,CAAC;MACX,IAAMu1B,OAAO,GAAG,IAAI,CAACvB,eAAe,CAAC,GAAG,CAAC;MACzC,IAAI,CAACn+B,IAAI,GAAG0/B,OAAO,CAACjjC,MAAM,GAAG,CAAC;;MAE9B;MACA,IAAM6hC,UAAU,GAAG;QACjB,CAAC,EAAE,OAAO;QACV,CAAC,EAAE,QAAQ;QACX,CAAC,EAAE,OAAO;QACV,CAAC,EAAE;MACL,CAAC;MAED,KAAK,IAAI7iC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,IAAI,CAACuE,IAAI,EAAEvE,CAAC,EAAE,EAAE;QACnC,IAAI,CAAC,IAAI,CAAC4Q,IAAI,CAAC5Q,CAAC,CAAC,EAAE,IAAI,CAAC4Q,IAAI,CAAC5Q,CAAC,CAAC,GAAG,EAAE;QACpC,KAAK,IAAIuO,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,IAAI,CAAChK,IAAI,EAAEgK,CAAC,EAAE,EAAE;UACnC,IAAM7J,IAAI,GAAGm+B,UAAU,CAACoB,OAAO,CAACjkC,CAAC,CAAC,CAACuO,CAAC,CAAC,CAAC;UACtC,IAAM6C,IAAI,GAAG,IAAIspB,IAAI,CAAC;YAAE16B,CAAC,EAADA,CAAC;YAAEuO,CAAC,EAADA,CAAC;YAAEG,CAAC,EAADA,CAAC;YAAEhK,IAAI,EAAJA;UAAK,CAAC,EAAE,IAAI,CAACqF,OAAO,CAAC;UACtD,IAAI,CAACia,QAAQ,CAAC5S,IAAI,CAAC,EAAC;UACpB,IAAI,CAACR,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,CAAC,GAAG6C,IAAI;QACxB;MACF;;MAEA;MACA,KAAK,IAAIpR,IAAC,GAAG,CAAC,EAAEA,IAAC,IAAI,IAAI,CAACuE,IAAI,EAAEvE,IAAC,EAAE,EAAE;QACnC,KAAK,IAAIuO,GAAC,GAAG,CAAC,EAAEA,GAAC,IAAI,IAAI,CAAChK,IAAI,EAAEgK,GAAC,EAAE,EAAE;UACnC,IAAI,CAACqC,IAAI,CAAC5Q,IAAC,CAAC,CAACuO,GAAC,CAAC,CAACktB,wBAAwB,CAAC,CAAC;QAC5C;MACF;MAEA,IAAI,CAACiC,sBAAsB,CAAC,CAAC;MAC7B,IAAI,CAACC,iBAAiB,CAAC,CAAC;IAC1B;EAAC;IAAA1jB,GAAA;IAAA5Y,KAAA,EAED,SAAAq9B,YAAYA,CAAA,EAAG;MACb,KAAK,IAAI1+B,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,IAAI,CAACuE,IAAI,EAAEvE,CAAC,EAAE,EAAE;QACnC,KAAK,IAAIuO,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,IAAI,CAAChK,IAAI,EAAEgK,CAAC,EAAE,EAAE;UACnC,IAAM6C,IAAI,GAAG,IAAI,CAACR,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,CAAC;UAC5B,IAAI0C,mBAAmB,CAACjR,CAAC,EAAEuO,CAAC,EAAE,IAAI,CAACqC,IAAI,EAAE,CAAC,EAAE,UAAAoC,SAAS;YAAA,OAAIA,SAAS,CAACf,KAAK;UAAA,EAAC,CAACjR,MAAM,GAAG,CAAC,EAAE;YACpF;UACF;UACA,IAAI,CAACoQ,IAAI,CAACjJ,GAAG,IAAI,CAACiJ,IAAI,CAACa,KAAK,IAAI,CAACb,IAAI,CAAC+F,MAAM,IAAI,CAAC/F,IAAI,CAACgG,QAAQ,EAAE;YAC9D,IAAIhG,IAAI,CAACe,QAAQ,KAAK,OAAO,IAAI5F,IAAI,CAACyB,MAAM,CAAC,CAAC,GAAG,IAAI,IAAIhO,CAAC,GAAG,CAAC,IAAIuO,CAAC,GAAG,CAAC,IAAIvO,CAAC,GAAG,IAAI,CAACuE,IAAI,IAAIgK,CAAC,GAAG,IAAI,CAAChK,IAAI,EAAE;cACzG,IAAM2/B,iBAAiB,GAAGr2B,iBAAW,CAAC,GAAG,EAAE,GAAG,CAAC,CAACzK,QAAQ,CAAC,CAAC;cAC1D,IAAMmC,WAAW,GAAGqb,kBAAM,CAAC9b,KAAK,CAACC,GAAG,CAACm/B,iBAAiB,CAAC;cACvD,IAAMv+B,OAAO,GAAGJ,WAAW,CAACC,QAAQ,CAAC,MAAM,GAAG0+B,iBAAiB,GAAG,MAAM,CAAC;cACzE,IAAM13B,KAAK,GAAGmU,mBAAM,CAACld,IAAI,CAACkC,OAAO,CAAC;cAClC6G,KAAK,CAACxD,KAAK,GAAG,OAAO;cACrBwD,KAAK,CAAC8V,WAAW,GAAG,IAAI;cACxB9V,KAAK,CAACoV,SAAS,GAAG,KAAK;cACvBpV,KAAK,CAACkV,SAAS,GAAG,MAAM;cACxBlV,KAAK,CAACmV,UAAU,GAAG,KAAK;cACxBnV,KAAK,CAAC6V,YAAY,GAAG,IAAI;cACzBjR,IAAI,CAAC4S,QAAQ,CAACxX,KAAK,CAAC;YACtB;YACA,IAAID,IAAI,CAACyB,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC0uB,YAAY,EAAE;cACrC,IAAItrB,IAAI,CAACe,QAAQ,KAAK,OAAO,EAAE;gBAC7B,IAAMzN,IAAI,GAAGuJ,gBAAU,CAAC,CAAC,MAAM,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;gBACnD,QAAQvJ,IAAI;kBACV,KAAK,MAAM;oBACT,IAAMw/B,kBAAiB,GAAGr2B,iBAAW,CAAC,GAAG,EAAE,GAAG,CAAC,CAACzK,QAAQ,CAAC,CAAC;oBAC1D,IAAMmC,YAAW,GAAGqb,kBAAM,CAAC9b,KAAK,CAACC,GAAG,CAACm/B,kBAAiB,CAAC;oBACvD,IAAMv+B,QAAO,GAAGJ,YAAW,CAACC,QAAQ,CAAC,MAAM,GAAG0+B,kBAAiB,GAAG,MAAM,CAAC;oBACzE,IAAMC,IAAI,GAAGxjB,mBAAM,CAACld,IAAI,CAACkC,QAAO,CAAC;oBACjCw+B,IAAI,CAACn7B,KAAK,GAAG,KAAK;oBAClBm7B,IAAI,CAAC7hB,WAAW,GAAG,IAAI;oBACvB6hB,IAAI,CAACviB,SAAS,GAAG,KAAK;oBACtBuiB,IAAI,CAACziB,SAAS,GAAG,MAAM;oBACvByiB,IAAI,CAACxiB,UAAU,GAAG,KAAK;oBACvBwiB,IAAI,CAAC9hB,YAAY,GAAG,IAAI;oBACxBjR,IAAI,CAAC4S,QAAQ,CAACmgB,IAAI,CAAC;oBACnB;kBACF,KAAK,QAAQ;oBACX,IAAMpK,OAAO,GAAGnZ,kBAAM,CAAC9b,KAAK,CAACC,GAAG,CAAC,QAAQ,CAAC,CAACg1B,OAAO;oBAClD,IAAMr1B,KAAI,GAAGuJ,gBAAU,CAAC5N,MAAM,CAACkL,IAAI,CAACwuB,OAAO,CAAC,CAAC;oBAC7C,IAAI,CAACkD,IAAI,CAAC3C,YAAY,CAAC;sBAAEt6B,CAAC,EAADA,CAAC;sBAAEuO,CAAC,EAADA,CAAC;sBAAE7J,IAAI,EAAJA;oBAAK,CAAC,CAAC;oBACtC;gBACJ;cACF,CAAC,MAAM;gBACL,IAAI,CAAC8c,SAAS,CAAC5d,IAAI,CAAC,IAAI,CAACogB,QAAQ,CAAC,IAAIjD,QAAQ,CAAC;kBAAE/gB,CAAC,EAADA,CAAC;kBAAEuO,CAAC,EAADA,CAAC;kBAAE7J,IAAI,EAAE;gBAAS,CAAC,EAAE,IAAI,CAACqF,OAAO,CAAC,CAAC,CAAC;cAC1F;YACF;UACF;QACF;MACF;IACF;EAAC;IAAAkQ,GAAA;IAAA5Y,KAAA,EAED,SAAA+iC,iBAAiBA,CAAA,EAAG;MAAA,IAAAphB,MAAA;MAClB,KAAK,IAAIhjB,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,IAAI,CAACuE,IAAI,EAAEvE,CAAC,EAAE,EAAE;QAAA,IAAAm0B,MAAA,YAAAA,OAAA,EACE;UACnC,IAAM/iB,IAAI,GAAG4R,MAAI,CAACpS,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,CAAC;UAC5B,IAAIhC,IAAI,CAACyB,MAAM,CAAC,CAAC,GAAGgV,MAAI,CAACyZ,cAAc,EAAE;YACvC,IAAMZ,KAAK,GAAG5tB,gBAAU,CAAC+U,MAAI,CAACwZ,WAAW,CAAC;YAC1C,IAAI6H,WAAW,GAAG,IAAI;YACtB,IACEzwB,wBAAwB,CAAC5T,CAAC,EAAEuO,CAAC,EAAEyU,MAAI,CAACpS,IAAI,EAAEirB,KAAK,GAAG,CAAC,EAAE,UAAAzqB,IAAI,EAAI;cAC3D,IAAIA,IAAI,CAACe,QAAQ,KAAK,OAAO,IAAKf,IAAI,CAACjJ,GAAG,IAAIiJ,IAAI,CAACjJ,GAAG,CAAC0N,MAAM,KAAK,UAAW,EAAE;gBAC7EwuB,WAAW,GAAG,KAAK;cACrB;YACF,CAAC,CAAC,EACH;YACD,IAAIA,WAAW,EAAE;cACfjzB,IAAI,CAACwqB,YAAY,CAACC,KAAK,CAAC;YAC1B;UACF;QACF,CAAC;QAhBD,KAAK,IAAIttB,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,IAAI,CAAChK,IAAI,EAAEgK,CAAC,EAAE;UAAA4lB,MAAA;QAAA;MAiBrC;MACA,KAAK,IAAIn0B,IAAC,GAAG,CAAC,EAAEA,IAAC,IAAI,IAAI,CAACuE,IAAI,EAAEvE,IAAC,EAAE,EAAE;QAAA,IAAAskC,MAAA,YAAAA,OAAA,EACE;UACnC,IAAMlzB,IAAI,GAAG4R,MAAI,CAACpS,IAAI,CAAC5Q,IAAC,CAAC,CAACuO,GAAC,CAAC;UAC5B,IAAI6C,IAAI,CAAC1C,CAAC,KAAK,CAAC,EAAE;YAChB,IAAI61B,QAAQ,GAAG,IAAI;YACnB,IAAInJ,GAAG,GAAG,CAAC;YACX,IACEnqB,mBAAmB,CAACjR,IAAC,EAAEuO,GAAC,EAAEyU,MAAI,CAACpS,IAAI,EAAE,CAAC,EAAE,UAAAQ,IAAI,EAAI;cAC9C,IAAIA,IAAI,CAAC1C,CAAC,GAAG,CAAC,EAAE;gBACd0sB,GAAG,EAAE;cACP;cACA,IAAIA,GAAG,IAAI,CAAC,EAAE;gBACZmJ,QAAQ,GAAG,KAAK;cAClB;YACF,CAAC,CAAC,EACH;YACD,IAAIA,QAAQ,EAAE;cACZnzB,IAAI,CAACwqB,YAAY,CAAC,CAAC,CAAC;YACtB;UACF;QACF,CAAC;QAnBD,KAAK,IAAIrtB,GAAC,GAAG,CAAC,EAAEA,GAAC,IAAI,IAAI,CAAChK,IAAI,EAAEgK,GAAC,EAAE;UAAA+1B,MAAA;QAAA;MAoBrC;MACA;MACA,KAAK,IAAItkC,IAAC,GAAG,CAAC,EAAEA,IAAC,IAAI,IAAI,CAACuE,IAAI,EAAEvE,IAAC,EAAE,EAAE;QACnC,KAAK,IAAIuO,GAAC,GAAG,CAAC,EAAEA,GAAC,IAAI,IAAI,CAAChK,IAAI,EAAEgK,GAAC,EAAE,EAAE;UACnC,IAAM6C,IAAI,GAAG,IAAI,CAACR,IAAI,CAAC5Q,IAAC,CAAC,CAACuO,GAAC,CAAC;UAC5B6C,IAAI,CAACuqB,yBAAyB,CAAC,CAAC;QAClC;MACF;IACF;EAAC;IAAA1hB,GAAA;IAAA5Y,KAAA,EAED,SAAAo8B,iBAAiBA,CAAA,EAAG;MAClB,KAAK,IAAIz9B,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,IAAI,CAACuE,IAAI,EAAEvE,CAAC,EAAE,EAAE;QACnC,KAAK,IAAIuO,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,IAAI,CAAChK,IAAI,EAAEgK,CAAC,EAAE,EAAE;UACnC,IAAM6C,IAAI,GAAG,IAAI,CAACR,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,CAAC;UAC5B;UACA,IACE,IAAI,CAACqC,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,IAChB,IAAI,CAAC4Q,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,CAAC,CAACG,CAAC,GAAG0C,IAAI,CAAC1C,CAAC,KAAK,CAAC,KACnC,CAAC,IAAI,CAACkC,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC4Q,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,CAAC,CAACG,CAAC,IAAI0C,IAAI,CAAC1C,CAAC,CAAC,KACrD,CAAC,IAAI,CAACkC,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAACqC,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,CAACG,CAAC,IAAI0C,IAAI,CAAC1C,CAAC,CAAC,KACxD,CAAC,IAAI,CAACkC,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAACqC,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,CAACG,CAAC,IAAI0C,IAAI,CAAC1C,CAAC,CAAC,EACzD;YACA0C,IAAI,CAACkqB,eAAe,CAAC,KAAK,EAAEj+B,UAAU,GAAG,CAAC,CAAC;UAC7C,CAAC,MAAM,IACL,IAAI,CAACuT,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,IAChB,IAAI,CAAC4Q,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,CAAC,CAACG,CAAC,GAAG0C,IAAI,CAAC1C,CAAC,KAAK,CAAC,KACnC,CAAC,IAAI,CAACkC,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC4Q,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,CAAC,CAACG,CAAC,IAAI0C,IAAI,CAAC1C,CAAC,CAAC,KACrD,CAAC,IAAI,CAACkC,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAACqC,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,CAACG,CAAC,IAAI0C,IAAI,CAAC1C,CAAC,CAAC,KACxD,CAAC,IAAI,CAACkC,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAACqC,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,CAACG,CAAC,IAAI0C,IAAI,CAAC1C,CAAC,CAAC,EACzD;YACA0C,IAAI,CAACkqB,eAAe,CAAC,KAAK,EAAEj+B,UAAU,GAAG,CAAC,CAAC;UAC7C,CAAC,MAAM,IACL,IAAI,CAACuT,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,IACnB,IAAI,CAACqC,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,CAACG,CAAC,GAAG0C,IAAI,CAAC1C,CAAC,KAAK,CAAC,KACnC,CAAC,IAAI,CAACkC,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC4Q,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,CAAC,CAACG,CAAC,IAAI0C,IAAI,CAAC1C,CAAC,CAAC,KACrD,CAAC,IAAI,CAACkC,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAACqC,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,CAACG,CAAC,IAAI0C,IAAI,CAAC1C,CAAC,CAAC,KACxD,CAAC,IAAI,CAACkC,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC4Q,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,CAAC,CAACG,CAAC,IAAI0C,IAAI,CAAC1C,CAAC,CAAC,EACtD;YACA0C,IAAI,CAACkqB,eAAe,CAAC,KAAK,EAAEj+B,UAAU,GAAG,CAAC,CAAC;UAC7C,CAAC,MAAM,IACL,IAAI,CAACuT,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,IACnB,IAAI,CAACqC,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,CAACG,CAAC,GAAG0C,IAAI,CAAC1C,CAAC,KAAK,CAAC,KACnC,CAAC,IAAI,CAACkC,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC4Q,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,CAAC,CAACG,CAAC,IAAI0C,IAAI,CAAC1C,CAAC,CAAC,KACrD,CAAC,IAAI,CAACkC,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAACqC,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,CAACG,CAAC,IAAI0C,IAAI,CAAC1C,CAAC,CAAC,KACxD,CAAC,IAAI,CAACkC,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC4Q,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,CAAC,CAACG,CAAC,IAAI0C,IAAI,CAAC1C,CAAC,CAAC,EACtD;YACA0C,IAAI,CAACkqB,eAAe,CAAC,KAAK,EAAEj+B,UAAU,GAAG,CAAC,CAAC;UAC7C,CAAC,CAAC;UAAA,KACG,IACH,IAAI,CAACuT,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,IAChB,IAAI,CAAC4Q,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,IACvB,IAAI,CAACqC,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,CAACG,CAAC,GAAG0C,IAAI,CAAC1C,CAAC,KAAK,CAAC,KACvC,CAAC,IAAI,CAACkC,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAACqC,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,CAACG,CAAC,IAAI0C,IAAI,CAAC1C,CAAC,CAAC,KACxD,CAAC,IAAI,CAACkC,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC4Q,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,CAAC,CAACG,CAAC,IAAI0C,IAAI,CAAC1C,CAAC,CAAC,EACtD;YACA0C,IAAI,CAACkqB,eAAe,CAAC,KAAK,EAAEj+B,UAAU,GAAG,CAAC,CAAC;UAC7C,CAAC,MAAM,IACL,IAAI,CAACuT,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,IAChB,IAAI,CAAC4Q,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,IACvB,IAAI,CAACqC,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,CAACG,CAAC,GAAG0C,IAAI,CAAC1C,CAAC,KAAK,CAAC,KACvC,CAAC,IAAI,CAACkC,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAACqC,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,CAACG,CAAC,IAAI0C,IAAI,CAAC1C,CAAC,CAAC,KACxD,CAAC,IAAI,CAACkC,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC4Q,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,CAAC,CAACG,CAAC,IAAI0C,IAAI,CAAC1C,CAAC,CAAC,EACtD;YACA0C,IAAI,CAACkqB,eAAe,CAAC,KAAK,CAAC;UAC7B,CAAC,MAAM,IACL,IAAI,CAAC1qB,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,IAChB,IAAI,CAAC4Q,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,IACvB,IAAI,CAACqC,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,CAACG,CAAC,GAAG0C,IAAI,CAAC1C,CAAC,KAAK,CAAC,KACvC,CAAC,IAAI,CAACkC,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAACqC,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,CAACG,CAAC,IAAI0C,IAAI,CAAC1C,CAAC,CAAC,KACxD,CAAC,IAAI,CAACkC,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC4Q,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,CAAC,CAACG,CAAC,IAAI0C,IAAI,CAAC1C,CAAC,CAAC,EACtD;YACA0C,IAAI,CAACkqB,eAAe,CAAC,KAAK,CAAC;UAC7B,CAAC,MAAM,IACL,IAAI,CAAC1qB,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,IAChB,IAAI,CAAC4Q,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,IACvB,IAAI,CAACqC,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,CAACG,CAAC,GAAG0C,IAAI,CAAC1C,CAAC,KAAK,CAAC,KACvC,CAAC,IAAI,CAACkC,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAACqC,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,CAACG,CAAC,IAAI0C,IAAI,CAAC1C,CAAC,CAAC,KACxD,CAAC,IAAI,CAACkC,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC4Q,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,CAAC,CAACG,CAAC,IAAI0C,IAAI,CAAC1C,CAAC,CAAC,EACtD;YACA0C,IAAI,CAACkqB,eAAe,CAAC,KAAK,EAAEj+B,UAAU,GAAG,CAAC,CAAC;UAC7C;UACA;UAAA,KACK,IACH,IAAI,CAACuT,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,IACnB,IAAI,CAACqC,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,CAACG,CAAC,GAAG0C,IAAI,CAAC1C,CAAC,KAAK,CAAC,IACpC,IAAI,CAACkC,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,IAChB,IAAI,CAAC4Q,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,CAAC,CAACG,CAAC,GAAG0C,IAAI,CAAC1C,CAAC,KAAK,CAAC,EACpC;YACA0C,IAAI,CAACkqB,eAAe,CAAC,KAAK,EAAEj+B,UAAU,GAAG,CAAC,CAAC;UAC7C,CAAC,MAAM,IACL,IAAI,CAACuT,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,IACnB,IAAI,CAACqC,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,CAACG,CAAC,GAAG0C,IAAI,CAAC1C,CAAC,KAAK,CAAC,IACpC,IAAI,CAACkC,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,IAChB,IAAI,CAAC4Q,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,CAAC,CAACG,CAAC,GAAG0C,IAAI,CAAC1C,CAAC,KAAK,CAAC,EACpC;YACA0C,IAAI,CAACkqB,eAAe,CAAC,KAAK,EAAEj+B,UAAU,GAAG,CAAC,CAAC;UAC7C,CAAC,MAAM,IACL,IAAI,CAACuT,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,IACnB,IAAI,CAACqC,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,CAACG,CAAC,GAAG0C,IAAI,CAAC1C,CAAC,KAAK,CAAC,IACpC,IAAI,CAACkC,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,IAChB,IAAI,CAAC4Q,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,CAAC,CAACG,CAAC,GAAG0C,IAAI,CAAC1C,CAAC,KAAK,CAAC,EACpC;YACA0C,IAAI,CAACkqB,eAAe,CAAC,KAAK,EAAEj+B,UAAU,CAAC;UACzC,CAAC,MAAM,IACL,IAAI,CAACuT,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,IACnB,IAAI,CAACqC,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,CAACG,CAAC,GAAG0C,IAAI,CAAC1C,CAAC,KAAK,CAAC,IACpC,IAAI,CAACkC,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,IAChB,IAAI,CAAC4Q,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,CAAC,CAACG,CAAC,GAAG0C,IAAI,CAAC1C,CAAC,KAAK,CAAC,EACpC;YACA0C,IAAI,CAACkqB,eAAe,CAAC,KAAK,EAAEj+B,UAAU,CAAC;UACzC;QACF;MACF;IACF;EAAC;IAAA4c,GAAA;IAAA5Y,KAAA,EAED,SAAAq8B,sBAAsBA,CAAA,EAAG;MACvB,KAAK,IAAI19B,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,IAAI,CAACuE,IAAI,EAAEvE,CAAC,EAAE,EAAE;QACnC,KAAK,IAAIuO,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,IAAI,CAAChK,IAAI,EAAEgK,CAAC,EAAE,EAAE;UACnC,IAAM6C,IAAI,GAAG,IAAI,CAACR,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,CAAC;UAC5B,IAAI6C,IAAI,CAAC1M,IAAI,KAAK,OAAO,EAAE;YACzB;YACA,IACE,IAAI,CAACkM,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,IAChB,IAAI,CAAC4Q,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,CAAC,CAAC7J,IAAI,KAAK,OAAO,KACnC,CAAC,IAAI,CAACkM,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC4Q,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,CAAC,CAAC7J,IAAI,KAAK,OAAO,CAAC,KAC1D,CAAC,IAAI,CAACkM,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAACqC,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,CAAC7J,IAAI,KAAK,OAAO,CAAC,KAC7D,CAAC,IAAI,CAACkM,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAACqC,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,CAAC7J,IAAI,KAAK,OAAO,CAAC,EAC9D;cACA0M,IAAI,CAACiqB,cAAc,CAAC,OAAO,EAAE,KAAK,CAAC;YACrC,CAAC,MAAM,IACL,IAAI,CAACzqB,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,IAChB,IAAI,CAAC4Q,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,CAAC,CAAC7J,IAAI,KAAK,OAAO,KACnC,CAAC,IAAI,CAACkM,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC4Q,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,CAAC,CAAC7J,IAAI,KAAK,OAAO,CAAC,KAC1D,CAAC,IAAI,CAACkM,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAACqC,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,CAAC7J,IAAI,KAAK,OAAO,CAAC,KAC7D,CAAC,IAAI,CAACkM,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAACqC,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,CAAC7J,IAAI,KAAK,OAAO,CAAC,EAC9D;cACA0M,IAAI,CAACiqB,cAAc,CAAC,OAAO,EAAE,KAAK,CAAC;YACrC,CAAC,MAAM,IACL,IAAI,CAACzqB,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,IACnB,IAAI,CAACqC,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,CAAC7J,IAAI,KAAK,OAAO,KACnC,CAAC,IAAI,CAACkM,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC4Q,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,CAAC,CAAC7J,IAAI,KAAK,OAAO,CAAC,KAC1D,CAAC,IAAI,CAACkM,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAACqC,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,CAAC7J,IAAI,KAAK,OAAO,CAAC,KAC7D,CAAC,IAAI,CAACkM,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC4Q,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,CAAC,CAAC7J,IAAI,KAAK,OAAO,CAAC,EAC3D;cACA0M,IAAI,CAACiqB,cAAc,CAAC,OAAO,EAAE,KAAK,CAAC;YACrC,CAAC,MAAM,IACL,IAAI,CAACzqB,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,IACnB,IAAI,CAACqC,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,CAAC7J,IAAI,KAAK,OAAO,KACnC,CAAC,IAAI,CAACkM,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC4Q,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,CAAC,CAAC7J,IAAI,KAAK,OAAO,CAAC,KAC1D,CAAC,IAAI,CAACkM,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAACqC,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,CAAC7J,IAAI,KAAK,OAAO,CAAC,KAC7D,CAAC,IAAI,CAACkM,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC4Q,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,CAAC,CAAC7J,IAAI,KAAK,OAAO,CAAC,EAC3D;cACA0M,IAAI,CAACiqB,cAAc,CAAC,OAAO,EAAE,KAAK,CAAC;YACrC,CAAC,CAAC;YAAA,KACG,IACH,IAAI,CAACzqB,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,IAChB,IAAI,CAAC4Q,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,IACvB,IAAI,CAACqC,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,CAAC7J,IAAI,KAAK,OAAO,KACvC,CAAC,IAAI,CAACkM,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAACqC,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,CAAC7J,IAAI,KAAK,OAAO,CAAC,KAC7D,CAAC,IAAI,CAACkM,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC4Q,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,CAAC,CAAC7J,IAAI,KAAK,OAAO,CAAC,EAC3D;cACA0M,IAAI,CAACiqB,cAAc,CAAC,OAAO,EAAE,KAAK,CAAC;YACrC,CAAC,MAAM,IACL,IAAI,CAACzqB,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,IAChB,IAAI,CAAC4Q,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,IACvB,IAAI,CAACqC,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,CAAC7J,IAAI,KAAK,OAAO,KACvC,CAAC,IAAI,CAACkM,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAACqC,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,CAAC7J,IAAI,KAAK,OAAO,CAAC,KAC7D,CAAC,IAAI,CAACkM,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC4Q,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,CAAC,CAAC7J,IAAI,KAAK,OAAO,CAAC,EAC3D;cACA0M,IAAI,CAACiqB,cAAc,CAAC,OAAO,EAAE,KAAK,CAAC;YACrC,CAAC,MAAM,IACL,IAAI,CAACzqB,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,IAChB,IAAI,CAAC4Q,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,IACvB,IAAI,CAACqC,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,CAAC7J,IAAI,KAAK,OAAO,KACvC,CAAC,IAAI,CAACkM,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAACqC,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,CAAC7J,IAAI,KAAK,OAAO,CAAC,KAC7D,CAAC,IAAI,CAACkM,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC4Q,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,CAAC,CAAC7J,IAAI,KAAK,OAAO,CAAC,EAC3D;cACA0M,IAAI,CAACiqB,cAAc,CAAC,OAAO,EAAE,KAAK,CAAC;YACrC,CAAC,MAAM,IACL,IAAI,CAACzqB,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,IAChB,IAAI,CAAC4Q,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,IACvB,IAAI,CAACqC,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,CAAC7J,IAAI,KAAK,OAAO,KACvC,CAAC,IAAI,CAACkM,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAACqC,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,CAAC7J,IAAI,KAAK,OAAO,CAAC,KAC7D,CAAC,IAAI,CAACkM,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC4Q,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,CAAC,CAAC7J,IAAI,KAAK,OAAO,CAAC,EAC3D;cACA0M,IAAI,CAACiqB,cAAc,CAAC,OAAO,EAAE,KAAK,CAAC;YACrC;YACA;YAAA,KACK,IACH,IAAI,CAACzqB,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,IACnB,IAAI,CAACqC,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,CAAC7J,IAAI,KAAK,OAAO,IACpC,IAAI,CAACkM,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,IAChB,IAAI,CAAC4Q,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,CAAC,CAAC7J,IAAI,KAAK,OAAO,EACpC;cACA0M,IAAI,CAACiqB,cAAc,CAAC,OAAO,EAAE,KAAK,CAAC;YACrC,CAAC,MAAM,IACL,IAAI,CAACzqB,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,IACnB,IAAI,CAACqC,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,CAAC7J,IAAI,KAAK,OAAO,IACpC,IAAI,CAACkM,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,IAChB,IAAI,CAAC4Q,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,CAAC,CAAC7J,IAAI,KAAK,OAAO,EACpC;cACA0M,IAAI,CAACiqB,cAAc,CAAC,OAAO,EAAE,KAAK,CAAC;YACrC,CAAC,MAAM,IACL,IAAI,CAACzqB,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,IACnB,IAAI,CAACqC,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,CAAC7J,IAAI,KAAK,OAAO,IACpC,IAAI,CAACkM,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,IAChB,IAAI,CAAC4Q,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,CAAC,CAAC7J,IAAI,KAAK,OAAO,EACpC;cACA0M,IAAI,CAACiqB,cAAc,CAAC,OAAO,EAAE,KAAK,CAAC;YACrC,CAAC,MAAM,IACL,IAAI,CAACzqB,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,IACnB,IAAI,CAACqC,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,CAAC7J,IAAI,KAAK,OAAO,IACpC,IAAI,CAACkM,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,IAChB,IAAI,CAAC4Q,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,CAAC,CAAC7J,IAAI,KAAK,OAAO,EACpC;cACA0M,IAAI,CAACiqB,cAAc,CAAC,OAAO,EAAE,KAAK,CAAC;YACrC;UACF;QACF;MACF;IACF;EAAC;IAAAphB,GAAA;IAAA5Y,KAAA,EACD,SAAAs8B,iBAAiBA,CAAA,EAAG;MAClB,KAAK,IAAI39B,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,IAAI,CAACuE,IAAI,EAAEvE,CAAC,EAAE,EAAE;QACnC,KAAK,IAAIuO,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,IAAI,CAAChK,IAAI,EAAEgK,CAAC,EAAE,EAAE;UACnC,IAAM6C,IAAI,GAAG,IAAI,CAACR,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,CAAC;UAC5B,IAAMi2B,YAAY,GAAG,CAAC,OAAO,EAAE,QAAQ,CAAC;UACxC,IAAIpzB,IAAI,CAAC1M,IAAI,KAAK,QAAQ,EAAE;YAC1B,IAAI,IAAI,CAACkM,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC4Q,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,CAAC,IAAIi2B,YAAY,CAACtxB,QAAQ,CAAC,IAAI,CAACtC,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,CAAC,CAAC7J,IAAI,CAAC,EAAE;cAC9F,IAAI,CAACkM,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,CAAC,CAACysB,eAAe,CAAC,KAAK,CAAC;YAC5C;YACA,IAAI,IAAI,CAACpqB,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC4Q,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,CAAC,IAAIi2B,YAAY,CAACtxB,QAAQ,CAAC,IAAI,CAACtC,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,CAAC,CAAC7J,IAAI,CAAC,EAAE;cAC9F,IAAI,CAACkM,IAAI,CAAC5Q,CAAC,GAAG,CAAC,CAAC,CAACuO,CAAC,CAAC,CAACysB,eAAe,CAAC,MAAM,CAAC;YAC7C;YACA,IAAI,IAAI,CAACpqB,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,IAAIi2B,YAAY,CAACtxB,QAAQ,CAAC,IAAI,CAACtC,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,CAAC7J,IAAI,CAAC,EAAE;cAC1E,IAAI,CAACkM,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,CAACysB,eAAe,CAAC,OAAO,CAAC;YAC9C;YACA,IAAI,IAAI,CAACpqB,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,IAAIi2B,YAAY,CAACtxB,QAAQ,CAAC,IAAI,CAACtC,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,CAAC7J,IAAI,CAAC,EAAE;cAC1E,IAAI,CAACkM,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,GAAG,CAAC,CAAC,CAACysB,eAAe,CAAC,OAAO,CAAC;YAC9C;UACF;QACF;MACF;IACF;EAAC;IAAA/gB,GAAA;IAAA5Y,KAAA,EACD,SAAAi9B,gBAAgBA,CAAA,EAAG;MACjB,IAAMmG,OAAO,GAAG,EAAE;MAClB,IAAMC,SAAS,GAAG,EAAE;MACpB,IAAMC,QAAQ,GAAGp4B,IAAI,CAACC,KAAK,CAAC,IAAI,CAACjI,IAAI,GAAG,CAAC,CAAC;MAC1C,IAAMqgC,KAAK,GAAG,CACZ;QACEhzB,IAAI,EAAE8yB,SAAS;QACf5yB,IAAI,EAAE,IAAI,CAACvN,IAAI,GAAG,CAAC,GAAGogC,QAAQ;QAC9B9yB,IAAI,EAAE,IAAI,CAACtN,IAAI,GAAG,CAAC,GAAGogC,QAAQ;QAC9B5yB,IAAI,EAAE,IAAI,CAACxN,IAAI,GAAGmgC;MACpB,CAAC,EACD;QACE9yB,IAAI,EAAE8yB,SAAS;QACf5yB,IAAI,EAAE4yB,SAAS;QACf7yB,IAAI,EAAE,IAAI,CAACtN,IAAI,GAAG,CAAC,GAAGogC,QAAQ;QAC9B5yB,IAAI,EAAE,IAAI,CAACxN,IAAI,GAAG,CAAC,GAAGogC;MACxB,CAAC,EACD;QACE/yB,IAAI,EAAE,IAAI,CAACrN,IAAI,GAAG,CAAC,GAAGogC,QAAQ;QAC9B7yB,IAAI,EAAE4yB,SAAS;QACf7yB,IAAI,EAAE,IAAI,CAACtN,IAAI,GAAGmgC,SAAS;QAC3B3yB,IAAI,EAAE,IAAI,CAACxN,IAAI,GAAG,CAAC,GAAGogC;MACxB,CAAC,EACD;QACE/yB,IAAI,EAAE,IAAI,CAACrN,IAAI,GAAG,CAAC,GAAGogC,QAAQ;QAC9B7yB,IAAI,EAAE,IAAI,CAACvN,IAAI,GAAG,CAAC,GAAGogC,QAAQ;QAC9B9yB,IAAI,EAAE,IAAI,CAACtN,IAAI,GAAGmgC,SAAS;QAC3B3yB,IAAI,EAAE,IAAI,CAACxN,IAAI,GAAGmgC;MACpB,CAAC,CACF;MACD,KAAK,IAAI1kC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4kC,KAAK,CAAC5jC,MAAM,EAAEhB,CAAC,EAAE,EAAE;QACrC,IAAMyO,GAAG,GAAG8E,0BAA0B,CAACqxB,KAAK,CAAC5kC,CAAC,CAAC,EAAE,IAAI,CAAC4Q,IAAI,EAAE,CAAC,EAAE,UAAAQ,IAAI,EAAI;UACrE,OAAO,CAACA,IAAI,CAAC+F,MAAM,IAAI,CAAC/F,IAAI,CAACa,KAAK,IAAI,CAACb,IAAI,CAACgG,QAAQ;QACtD,CAAC,CAAC;QACF,IAAI3I,GAAG,EAAE;UACPg2B,OAAO,CAAC7gC,IAAI,CAAC6K,GAAG,CAAC;QACnB;MACF;MACA,OAAOg2B,OAAO;IAChB;EAAC;IAAAxqB,GAAA;IAAA5Y,KAAA,EAED,SAAAohC,kBAAkBA,CAACv3B,MAAM,EAAEpC,QAAQ,EAAE4M,QAAQ,EAAE+S,KAAK,EAAE;MACpD,IAAQ1e,OAAO,GAAW,IAAI,CAAtBA,OAAO;QAAE6G,IAAI,GAAK,IAAI,CAAbA,IAAI;;MAErB;MACA,SAASi0B,aAAaA,CAAC3E,OAAO,EAAEC,OAAO,EAAE3yB,IAAI,EAAE;QAC7C,IAAMwD,KAAK,GAAG,EAAE;QAChB;QACA,KAAK,IAAI3D,EAAE,GAAG,CAACG,IAAI,EAAEH,EAAE,IAAIG,IAAI,EAAEH,EAAE,EAAE,EAAE;UAAA,IAAAy3B,MAAA,YAAAA,OAAA,EACE;YACrC,IAAMC,IAAI,GAAG7E,OAAO,GAAG7yB,EAAE;YACzB,IAAM23B,IAAI,GAAG7E,OAAO,GAAG7yB,EAAE;;YAEzB;YACA,IAAIsD,IAAI,CAACm0B,IAAI,CAAC,IAAIn0B,IAAI,CAACm0B,IAAI,CAAC,CAACC,IAAI,CAAC,EAAE;cAClC,IAAM5zB,IAAI,GAAGR,IAAI,CAACm0B,IAAI,CAAC,CAACC,IAAI,CAAC;cAC7B,IAAItxB,MAAM,GAAG,IAAI;cACjBE,wBAAwB,CAACxC,IAAI,CAACpR,CAAC,EAAEoR,IAAI,CAAC7C,CAAC,EAAEqC,IAAI,EAAE,CAAC,EAAE,UAAAQ,IAAI,EAAI;gBAAA,IAAA6zB,UAAA;gBACxD,IAAI,CAAC,WAAW,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC/xB,QAAQ,EAAA+xB,UAAA,GAAC7zB,IAAI,CAACjJ,GAAG,cAAA88B,UAAA,uBAARA,UAAA,CAAUvgC,IAAI,CAAC,EAAE;kBAC3DgP,MAAM,GAAG,KAAK;gBAChB;cACF,CAAC,CAAC;cACF;cACA,IAAIA,MAAM,IAAI,CAACtC,IAAI,CAACa,KAAK,IAAIb,IAAI,CAACe,QAAQ,KAAK,OAAO,IAAI,CAACf,IAAI,CAACjJ,GAAG,IAAI,CAACiJ,IAAI,CAAC+F,MAAM,IAAI,CAAC/F,IAAI,CAACgG,QAAQ,EAAE;gBACrGpG,KAAK,CAACpN,IAAI,CAAC;kBAAE5D,CAAC,EAAE+kC,IAAI;kBAAEx2B,CAAC,EAAEy2B;gBAAK,CAAC,CAAC;cAClC;YACF;UACF,CAAC;UAlBD,KAAK,IAAI13B,EAAE,GAAG,CAACE,IAAI,EAAEF,EAAE,IAAIE,IAAI,EAAEF,EAAE,EAAE;YAAAw3B,MAAA;UAAA;QAmBvC;QACA,OAAO9zB,KAAK;MACd;;MAEA;MACA,IAAMk0B,cAAc,GAAGr3B,iBAAW,CAAC4a,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,CAAC;MACtD,IAAMyX,OAAO,GAAGh1B,MAAM,CAAClL,CAAC,GAAGiO,gBAAU,CAAC,CAAC,CAACi3B,cAAc,EAAEA,cAAc,CAAC,CAAC;MACxE,IAAM/E,OAAO,GAAGj1B,MAAM,CAACqD,CAAC,GAAGN,gBAAU,CAAC,CAAC,CAACi3B,cAAc,EAAEA,cAAc,CAAC,CAAC;;MAExE;MACA,IAAMC,UAAU,GAAGN,aAAa,CAAC3E,OAAO,EAAEC,OAAO,EAAE,CAAC,CAAC,EAAC;;MAEtD;MACA,IAAIgF,UAAU,CAACnkC,MAAM,GAAG0U,QAAQ,EAAE;QAChCrK,OAAO,CAACK,IAAI,CAAC,sDAAsD,CAAC;QACpE,OAAM,CAAC;MACT;;MAEA;MACA,IAAM02B,YAAY,GAAG,EAAE;MACvB,KAAK,IAAIpiC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0V,QAAQ,EAAE1V,CAAC,EAAE,EAAE;QACjC,IAAMqiC,SAAS,GAAG91B,IAAI,CAACC,KAAK,CAACD,IAAI,CAACyB,MAAM,CAAC,CAAC,GAAGm3B,UAAU,CAACnkC,MAAM,CAAC;QAC/D,IAAMoQ,IAAI,GAAG+zB,UAAU,CAAC9C,SAAS,CAAC;QAClCD,YAAY,CAACx+B,IAAI,CAACwN,IAAI,CAAC,EAAC;QACxB+zB,UAAU,CAACryB,MAAM,CAACuvB,SAAS,EAAE,CAAC,CAAC,EAAC;MAClC;;MAEA;MACA,SAAA+C,IAAA,MAAAC,cAAA,GAAmBjD,YAAY,EAAAgD,IAAA,GAAAC,cAAA,CAAArkC,MAAA,EAAAokC,IAAA,IAAE;QAA5B,IAAMh0B,MAAI,GAAAi0B,cAAA,CAAAD,IAAA;QACb,IAAI,CAAC5jB,SAAS,CAAC5d,IAAI,CAAC,IAAI,CAACogB,QAAQ,CAAC,IAAIjD,QAAQ,CAAC;UAAE/gB,CAAC,EAAEoR,MAAI,CAACpR,CAAC;UAAEuO,CAAC,EAAE6C,MAAI,CAAC7C,CAAC;UAAE7J,IAAI,EAAEoE;QAAS,CAAC,EAAEiB,OAAO,CAAC,CAAC,CAAC;MACrG;IACF;EAAC;AAAA,EAlkC8B2W,sBAAS;;;;;;;;;;;;ACtBV;AAYjB;AACuE;AACnD;AAAA,IAEd6kB,IAAI;EACvB,SAAAA,KAAYx7B,OAAO,EAAE;IAAA,IAAAkR,KAAA;IAAAmG,mBAAA,OAAAmkB,IAAA;IACnB,IAAI,CAACx7B,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACy7B,MAAM,GAAGt+B,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IAC3C,IAAI,CAACq+B,MAAM,CAACthC,EAAE,GAAG,QAAQ;IACzB,IAAI,CAACshC,MAAM,CAAChrB,SAAS,GAAG,YAAY;IACpC,IAAI,CAACiT,KAAK,GAAG;MACX5Q,IAAI,EAAE5Y,WAAW,CAAC,WAAW,CAAC;MAC9BgwB,IAAI,EAAEhwB,WAAW,CAAC,WAAW,CAAC;MAC9B8Y,KAAK,EAAE9Y,WAAW,CAAC,WAAW,CAAC;MAC/B+Y,IAAI,EAAE/Y,WAAW,CAAC,WAAW;IAC/B,CAAC;IACD,IAAI,CAACyhB,SAAS,GAAG;MACf7I,IAAI,EAAE5Y,WAAW,CAAC,WAAW,CAAC;MAC9B8Y,KAAK,EAAE9Y,WAAW,CAAC,WAAW,CAAC;MAC/BgwB,IAAI,EAAEhwB,WAAW,CAAC,WAAW,CAAC;MAC9B+Y,IAAI,EAAE/Y,WAAW,CAAC,WAAW;IAC/B,CAAC;IAED,IAAI,CAACwhC,SAAS,GAAG,KAAK;IACtB,IAAI,CAACC,gBAAgB;IAErB,IAAI,CAAClkB,SAAS,GAAGta,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IAC9C,IAAI,CAACqa,SAAS,CAAChH,SAAS,GAAG,kBAAkB;IAC5C,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,CAAC,CAAChP,OAAO,CAAC,UAAAm6B,GAAG,EAAI;MAChD1qB,KAAI,CAAC2qB,cAAc,CAACD,GAAG,CAAC;IAC1B,CAAC,CAAC;IAEF,IAAI,CAACxgC,GAAG,GAAG+B,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IACxC,IAAI,CAAChC,GAAG,CAACqV,SAAS,GAAG,YAAY;IACjC,IAAMyG,OAAO,GAAG/Z,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IAC7C8Z,OAAO,CAACzG,SAAS,GAAG,gBAAgB;IACpC,IAAMiI,IAAI,GAAGvb,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IAC1Csb,IAAI,CAACjI,SAAS,GAAG,qBAAqB;IACtCiI,IAAI,CAACojB,SAAS,GAAG,MAAM;IACvBpjB,IAAI,CAACqjB,gBAAgB,CAAC,aAAa,EAAE,YAAM;MACzC7qB,KAAI,CAAClR,OAAO,CAACqR,KAAK,CAAC,CAAC;MACpB,IAAMhB,OAAO,GAAGlT,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MAC7CiT,OAAO,CAACI,SAAS,GAAG,YAAY;MAChC,IAAMD,KAAK,GAAG,IAAIJ,KAAK,CAACC,OAAO,CAAC;MAChC,IAAM9P,IAAI,GAAGpD,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;MAC7CmD,IAAI,CAACu7B,SAAS,GAAG,MAAM;MACvBv7B,IAAI,CAACw7B,gBAAgB,CAAC,aAAa,EAAE,YAAM;QACzC7qB,KAAI,CAAClR,OAAO,CAACO,IAAI,CAAC,CAAC;QACnBiQ,KAAK,CAACK,KAAK,CAAC,CAAC;QACbK,KAAI,CAAClR,OAAO,CAACyR,MAAM,CAAC,CAAC;MACvB,CAAC,CAAC;MACF,IAAMuqB,IAAI,GAAG7+B,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MAC1C,IAAM6+B,KAAK,GAAG9+B,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;MAC7C6+B,KAAK,CAACthC,IAAI,GAAG,MAAM;MACnBshC,KAAK,CAACje,MAAM,GAAG,kBAAkB;MACjCie,KAAK,CAACF,gBAAgB,CAAC,QAAQ,EAAE,UAAA/iB,GAAG,EAAI;QACtC,IAAIkjB,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;QAC7BD,MAAM,CAACE,MAAM,GAAG,UAAAz8B,IAAA,EAA4B;UAAA,IAAf+N,MAAM,GAAA/N,IAAA,CAAhBoG,MAAM,CAAI2H,MAAM;UACjCwD,KAAI,CAAClR,OAAO,CAACg8B,IAAI,CAACK,IAAI,CAACC,KAAK,CAAC5uB,MAAM,CAAC,CAAC;UACrC8C,KAAK,CAACK,KAAK,CAAC,CAAC;UACbK,KAAI,CAAClR,OAAO,CAACyR,MAAM,CAAC,CAAC;QACvB,CAAC;QACDyqB,MAAM,CAACK,UAAU,CAACvjB,GAAG,CAACjT,MAAM,CAACy2B,KAAK,CAAC,CAAC,CAAC,CAAC;MACxC,CAAC,CAAC;MACFR,IAAI,CAACvrB,SAAS,GAAG,YAAY;MAC7BurB,IAAI,CAACF,SAAS,GAAG,MAAM;MACvBE,IAAI,CAACrrB,WAAW,CAACsrB,KAAK,CAAC;MACvB,IAAMQ,MAAM,GAAGt/B,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;MAC/Cq/B,MAAM,CAACX,SAAS,GAAG,QAAQ;MAC3BW,MAAM,CAACV,gBAAgB,CAAC,aAAa,EAAE,YAAM;QAC3CvrB,KAAK,CAACK,KAAK,CAAC,CAAC;QACbK,KAAI,CAAClR,OAAO,CAACyR,MAAM,CAAC,CAAC;MACvB,CAAC,CAAC;MACFpB,OAAO,CAACM,WAAW,CAACpQ,IAAI,CAAC;MACzB8P,OAAO,CAACM,WAAW,CAACqrB,IAAI,CAAC;MACzB3rB,OAAO,CAACM,WAAW,CAAC8rB,MAAM,CAAC;IAC7B,CAAC,CAAC;IACFvlB,OAAO,CAACvG,WAAW,CAAC+H,IAAI,CAAC;IAEzB,IAAI,CAAC+iB,MAAM,CAAC9qB,WAAW,CAAC,IAAI,CAAC8G,SAAS,CAAC;IACvC,IAAI,CAACgkB,MAAM,CAAC9qB,WAAW,CAAC,IAAI,CAACvV,GAAG,CAAC;IACjC,IAAI,CAACqgC,MAAM,CAAC9qB,WAAW,CAACuG,OAAO,CAAC;IAChC/Z,QAAQ,CAACyT,IAAI,CAAC8rB,OAAO,CAAC,IAAI,CAACjB,MAAM,CAAC;IAElC,IAAI,CAACkB,SAAS,GAAGx/B,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IAC9C,IAAI,CAACu/B,SAAS,CAAClsB,SAAS,GAAG,eAAe;IAC1C,IAAI,CAACmsB,aAAa,GAAGz/B,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IAClD,IAAI,CAACw/B,aAAa,CAACnsB,SAAS,GAAG,gBAAgB;IAC/C,IAAI,CAACosB,aAAa,GAAG1/B,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IAClD,IAAI,CAACy/B,aAAa,CAACpsB,SAAS,GAAG,gBAAgB;IAC/C,IAAMqsB,gBAAgB,GAAG3/B,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IACtD0/B,gBAAgB,CAACrsB,SAAS,GAAG,oBAAoB;IACjD,IAAI,CAACssB,YAAY,GAAG5/B,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IACjD,IAAI,CAAC2/B,YAAY,CAACtsB,SAAS,GAAG,eAAe;IAC7C,IAAI,CAACssB,YAAY,CAAChB,gBAAgB,CAAC,aAAa,EAAE,UAAA/iB,GAAG,EAAI;MACvD,IACarO,QAAQ,GACjBuG,KAAI,CADNlR,OAAO,CAAI2K,QAAQ;MAErBuG,KAAI,CAACyqB,gBAAgB,GAAGl8B,UAAU,CAAC,YAAM;QACvCyR,KAAI,CAACwqB,SAAS,GAAG,IAAI;QACrB,IAAMsB,aAAa,GAAG9rB,KAAI,CAAC+rB,gBAAgB,CAAC,CAAC;QAC7C,IAAM9gB,IAAI,GAAGnD,GAAG,CAACjT,MAAM,CAACm3B,qBAAqB,CAAC,CAAC;QAC/C,IAAMv/B,CAAC,GAAG,CAACqb,GAAG,CAACmkB,OAAO,GAAGhhB,IAAI,CAACzW,IAAI,GAAGyW,IAAI,CAAC9e,KAAK,GAAG,CAAC,IAAI2/B,aAAa;QACpE,IAAMrmC,CAAC,GAAG,CAACqiB,GAAG,CAACokB,OAAO,GAAGjhB,IAAI,CAACxW,GAAG,GAAG,CAAC,IAAIq3B,aAAa;QACtDryB,QAAQ,CAACkpB,SAAS,CAACl2B,CAAC,EAAEhH,CAAC,CAAC;MAC1B,CAAC,EAAE9C,mBAAmB,CAAC;IACzB,CAAC,CAAC;IACF,IAAI,CAACkpC,YAAY,CAAChB,gBAAgB,CAAC,WAAW,EAAE,UAAA/iB,GAAG,EAAI;MAAA,IAAAqkB,qBAAA;MACrD,IAAA9iB,aAAA,GAEIrJ,KAAI,CADNlR,OAAO;QAAImB,MAAM,GAAAoZ,aAAA,CAANpZ,MAAM;QAAEwJ,QAAQ,GAAA4P,aAAA,CAAR5P,QAAQ;QAAE3M,GAAG,GAAAuc,aAAA,CAAHvc,GAAG;MAElCsT,YAAY,CAACJ,KAAI,CAACyqB,gBAAgB,CAAC;MACnC,IAAIhxB,QAAQ,CAACwO,aAAa,IAAIxO,QAAQ,CAACyO,cAAc,IAAIlI,KAAI,CAACwqB,SAAS,EAAE;QACvExqB,KAAI,CAACwqB,SAAS,GAAG,KAAK;QACtB;MACF;MACAxqB,KAAI,CAACwqB,SAAS,GAAG,KAAK;MACtB,IAAMsB,aAAa,GAAG9rB,KAAI,CAAC+rB,gBAAgB,CAAC,CAAC;MAC7C,IAAM9gB,IAAI,GAAGnD,GAAG,CAACjT,MAAM,CAACm3B,qBAAqB,CAAC,CAAC;MAC/C,IAAMv/B,CAAC,GAAG,CAACqb,GAAG,CAACmkB,OAAO,GAAGhhB,IAAI,CAACzW,IAAI,GAAGyW,IAAI,CAAC9e,KAAK,GAAG,CAAC,IAAI2/B,aAAa;MACpE,IAAMrmC,CAAC,GAAG,CAACqiB,GAAG,CAACokB,OAAO,GAAGjhB,IAAI,CAACxW,GAAG,GAAG,CAAC,IAAIq3B,aAAa;MAEtD,IAAI77B,MAAM,aAANA,MAAM,gBAAAk8B,qBAAA,GAANl8B,MAAM,CAAEwX,aAAa,cAAA0kB,qBAAA,eAArBA,qBAAA,CAAuBpmC,MAAM,EAAE;QACjC,IAAMyN,GAAG,GAAGhC,oBAAoB,CAAC/E,CAAC,EAAEhH,CAAC,CAAC;QACtC,IAAMV,CAAC,GAAGuM,IAAI,CAACuB,GAAG,CAACvB,IAAI,CAACwB,GAAG,CAACU,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE1G,GAAG,CAACxD,IAAI,CAAC;QACjD,IAAMgK,CAAC,GAAGhC,IAAI,CAACuB,GAAG,CAACvB,IAAI,CAACwB,GAAG,CAACU,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE1G,GAAG,CAACxD,IAAI,CAAC;QACjD,IAAIwD,GAAG,CAAC6I,IAAI,CAAC5Q,CAAC,CAAC,IAAI+H,GAAG,CAAC6I,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,CAAC,EAAE;UACjC,IAAM6C,IAAI,GAAGrJ,GAAG,CAAC6I,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,CAAC;UAC3BmG,QAAQ,CAAC2yB,SAAS,CAACj2B,IAAI,CAAC;QAC1B;MACF,CAAC,MAAM;QACLsD,QAAQ,CAACkpB,SAAS,CAACl2B,CAAC,EAAEhH,CAAC,CAAC;MAC1B;IACF,CAAC,CAAC;IACFmmC,gBAAgB,CAACnsB,WAAW,CAAC,IAAI,CAACosB,YAAY,CAAC;IAE/C,IAAI,CAACQ,cAAc,GAAGpgC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IACtD,IAAI,CAACogC,cAAc,GAAG,EAAE;IACxB,IAAI,CAACC,gBAAgB,GAAGtgC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IACxD,IAAI,CAACsgC,aAAa,GAAGvgC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IACrD,IAAI,CAACsgC,aAAa,CAACC,KAAK,CAACz+B,MAAM,GAAG,CAAC;IAEnC,IAAI,CAAC69B,YAAY,CAACpsB,WAAW,CAAC,IAAI,CAAC4sB,cAAc,CAAC;IAClD,IAAI,CAACR,YAAY,CAACpsB,WAAW,CAAC,IAAI,CAAC8sB,gBAAgB,CAAC;IACpD,IAAI,CAACV,YAAY,CAACpsB,WAAW,CAAC,IAAI,CAAC+sB,aAAa,CAAC;IACjD,IAAI,CAACf,SAAS,CAAChsB,WAAW,CAAC,IAAI,CAACisB,aAAa,CAAC;IAC9C,IAAI,CAACD,SAAS,CAAChsB,WAAW,CAAC,IAAI,CAACksB,aAAa,CAAC;IAC9C,IAAI,CAACF,SAAS,CAAChsB,WAAW,CAACmsB,gBAAgB,CAAC;IAC5C3/B,QAAQ,CAACyT,IAAI,CAACD,WAAW,CAAC,IAAI,CAACgsB,SAAS,CAAC;IAEzC,IAAI,CAACiB,OAAO,GAAG,KAAK;IACpB,IAAI,CAACC,MAAM,GAAG1gC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IAC3C,IAAI,CAACygC,MAAM,CAACptB,SAAS,GAAG,QAAQ;IAChC,IAAI,CAACotB,MAAM,CAAC/B,SAAS,GAAG,GAAG;IAC3B,IAAI,CAAC+B,MAAM,CAAC9B,gBAAgB,CAAC,aAAa,EAAE,UAAA/iB,GAAG,EAAI;MACjDA,GAAG,CAAC8kB,cAAc,CAAC,CAAC;MACpB,IAAI5sB,KAAI,CAAC0sB,OAAO,EAAE;QAChB1sB,KAAI,CAAC2sB,MAAM,CAAC/B,SAAS,GAAG,GAAG;QAC3B5qB,KAAI,CAACyrB,SAAS,CAACgB,KAAK,CAACI,OAAO,GAAG,MAAM;QACrC7sB,KAAI,CAAC0sB,OAAO,GAAG,KAAK;MACtB,CAAC,MAAM;QACL1sB,KAAI,CAACyrB,SAAS,CAACgB,KAAK,CAACI,OAAO,GAAG,MAAM;QACrC7sB,KAAI,CAAC2sB,MAAM,CAAC/B,SAAS,GAAG,GAAG;QAC3B5qB,KAAI,CAAC0sB,OAAO,GAAG,IAAI;MACrB;MACA5kB,GAAG,CAACglB,eAAe,CAAC,CAAC;IACvB,CAAC,CAAC;IACFvqC,SAAS,IAAI0J,QAAQ,CAACyT,IAAI,CAAC8rB,OAAO,CAAC,IAAI,CAACmB,MAAM,CAAC;IAE/C,IAAI,CAAC3V,mBAAmB,GAAGvW,QAAQ,CAAC,IAAI,CAACiP,sBAAsB,EAAE,GAAG,CAAC;IACrE,IAAI,CAACjG,sBAAsB,GAAGhJ,QAAQ,CAAC,IAAI,CAACssB,yBAAyB,EAAE,GAAG,CAAC;IAC3E,IAAI,CAACC,mBAAmB,GAAGvsB,QAAQ,CAAC,IAAI,CAACwsB,sBAAsB,EAAE,GAAG,CAAC;IAErE,IAAI,CAACC,YAAY,GAAG,KAAK;IACzB,IAAI,CAACrc,YAAY,CAAC,CAAC;EACrB;EAAC,OAAA5H,gBAAA,CAAAqhB,IAAA;IAAAtrB,GAAA;IAAA5Y,KAAA,EAED,SAAA4jB,OAAOA,CAAA,EAAG;MACR,IAAI,CAACyhB,SAAS,CAAC5rB,MAAM,CAAC,CAAC;MACvB,IAAI,CAAC0qB,MAAM,CAAC1qB,MAAM,CAAC,CAAC;IACtB;EAAC;IAAAb,GAAA;IAAA5Y,KAAA,EAED,SAAAi7B,IAAIA,CAAA,EAAG;MACL,IAAI,CAAC8L,WAAW,CAAC,CAAC;MAClB,IAAI,CAACtc,YAAY,CAAC,CAAC;IACrB;EAAC;IAAA7R,GAAA;IAAA5Y,KAAA,EAED,SAAA2lC,gBAAgBA,CAAA,EAAG;MACjB,IACaj/B,GAAG,GACZ,IAAI,CADNgC,OAAO,CAAIhC,GAAG;MAEhB,IAAMsgC,QAAQ,GAAGlrC,UAAU,GAAG,CAAC,GAAI4K,GAAG,CAACxD,IAAI,GAAGpH,UAAU,GAAI,CAAC;MAC7D,OAAQkrC,QAAQ,GAAG,GAAG,GAAI,CAAC;IAC7B;EAAC;IAAApuB,GAAA;IAAA5Y,KAAA,EAED,SAAA+mC,WAAWA,CAAA,EAAG;MACZ,IACargC,GAAG,GACZ,IAAI,CADNgC,OAAO,CAAIhC,GAAG;MAGhB,IAAMgC,OAAO,GAAG,IAAI,CAACu9B,cAAc,CAAC//B,UAAU,CAAC,IAAI,CAAC;MACpD,IAAM+gC,aAAa,GAAG,IAAI,CAACb,aAAa,CAAClgC,UAAU,CAAC,IAAI,CAAC;MACzD,IAAMghC,eAAe,GAAG,IAAI,CAACf,gBAAgB,CAACjgC,UAAU,CAAC,IAAI,CAAC;MAE9D,IAAMw/B,aAAa,GAAG,IAAI,CAACC,gBAAgB,CAAC,CAAC,GAAG,IAAI,CAACmB,YAAY;MACjE,IAAME,QAAQ,GAAGlrC,UAAU,GAAG,CAAC,GAAI4K,GAAG,CAACxD,IAAI,GAAGpH,UAAU,GAAI,CAAC;MAC7D,IAAMqrC,SAAS,GAAGH,QAAQ,GAAG,CAAC,GAAGtB,aAAa;MAC9Ch9B,OAAO,CAACy+B,SAAS,CAACA,SAAS,EAAE,CAAC,CAAC;MAC/BF,aAAa,CAACE,SAAS,CAACA,SAAS,EAAE,CAAC,CAAC;MACrCD,eAAe,CAACC,SAAS,CAACA,SAAS,EAAE,CAAC,CAAC;MAEvC,IAAIzgC,GAAG,CAAC4M,gBAAgB,IAAI5M,GAAG,CAAC0sB,aAAa,EAAE;QAC7C,IAAI,CAACgU,oBAAoB,CAAC,CAAC;MAC7B;IACF;EAAC;IAAAxuB,GAAA;IAAA5Y,KAAA,EAED,SAAAonC,oBAAoBA,CAAA,EAAG;MACrB,IACa1gC,GAAG,GACZ,IAAI,CADNgC,OAAO,CAAIhC,GAAG;MAGhB,IAAMd,MAAM,GAAG,IAAI,CAACqgC,cAAc;MAClC,IAAMv9B,OAAO,GAAG9C,MAAM,CAACM,UAAU,CAAC,IAAI,CAAC;MAEvC,IAAMw/B,aAAa,GAAG,IAAI,CAACC,gBAAgB,CAAC,CAAC,GAAG,IAAI,CAACmB,YAAY;MACjE,IAAME,QAAQ,GAAGlrC,UAAU,GAAG,CAAC,GAAI4K,GAAG,CAACxD,IAAI,GAAGpH,UAAU,GAAI,CAAC;MAC7D,IAAMqrC,SAAS,GAAGH,QAAQ,GAAG,CAAC,GAAGtB,aAAa;MAE9Ch9B,OAAO,CAAC2+B,SAAS,CAAC,CAACF,SAAS,EAAE,CAAC,EAAEvhC,MAAM,CAACG,KAAK,EAAEH,MAAM,CAACI,MAAM,CAAC;MAE7D,KAAK,IAAIrH,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI+H,GAAG,CAACxD,IAAI,EAAEvE,CAAC,EAAE,EAAE;QAClC,KAAK,IAAIuO,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIxG,GAAG,CAACxD,IAAI,EAAEgK,CAAC,EAAE,EAAE;UAClC,IAAM6C,IAAI,GAAGrJ,GAAG,CAAC6I,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,CAAC;UAC3B,IAAM7G,CAAC,GAAG0J,IAAI,CAAC1J,CAAC;UAChB,IAAMhH,CAAC,GAAG0Q,IAAI,CAAC1Q,CAAC;UAChB2J,iBAAiB,CACfN,OAAO,EACPrC,CAAC,GAAGq/B,aAAa,GAAGyB,SAAS,EAC7B9nC,CAAC,GAAGqmC,aAAa,EACjB5pC,UAAU,GAAG4pC,aAAa,GAAG,CAAC,EAC9B3pC,WAAW,GAAG2pC,aAAa,GAAG,CAAC,EAC/B31B,IAAI,CAACxK,KACP,CAAC;QACH;MACF;IACF;EAAC;IAAAqT,GAAA;IAAA5Y,KAAA,EAED,SAAAmzB,oBAAoBA,CAACx0B,CAAC,EAAEuO,CAAC,EAAE;MACzB,IACaxG,GAAG,GACZ,IAAI,CADNgC,OAAO,CAAIhC,GAAG;MAGhB,IAAMd,MAAM,GAAG,IAAI,CAACqgC,cAAc;MAClC,IAAMv9B,OAAO,GAAG9C,MAAM,CAACM,UAAU,CAAC,IAAI,CAAC;MAEvC,IAAMw/B,aAAa,GAAG,IAAI,CAACC,gBAAgB,CAAC,CAAC,GAAG,IAAI,CAACmB,YAAY;MACjE,IAAME,QAAQ,GAAGlrC,UAAU,GAAG,CAAC,GAAI4K,GAAG,CAACxD,IAAI,GAAGpH,UAAU,GAAI,CAAC;MAC7D,IAAMqrC,SAAS,GAAGH,QAAQ,GAAG,CAAC,GAAGtB,aAAa;MAE9C,IAAM31B,IAAI,GAAGrJ,GAAG,CAAC6I,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,CAAC;MAC3B,IAAI3H,KAAK,GAAGwK,IAAI,CAACxK,KAAK;MAEtB,IAAMc,CAAC,GAAG0J,IAAI,CAAC1J,CAAC;MAChB,IAAMhH,CAAC,GAAG0Q,IAAI,CAAC1Q,CAAC;MAChB2J,iBAAiB,CACfN,OAAO,EACPrC,CAAC,GAAGq/B,aAAa,GAAGyB,SAAS,EAC7B9nC,CAAC,GAAGqmC,aAAa,EACjB5pC,UAAU,GAAG4pC,aAAa,GAAG,CAAC,EAC9B3pC,WAAW,GAAG2pC,aAAa,GAAG,CAAC,EAC/BngC,KACF,CAAC;MAED,IAAIwK,IAAI,CAACjJ,GAAG,IAAIiJ,IAAI,CAACjJ,GAAG,CAAC0N,MAAM,KAAK,UAAU,EAAE;QAC9C,IAAI,CAAC8yB,qBAAqB,CAACv3B,IAAI,CAACjJ,GAAG,CAAC;MACtC;IACF;EAAC;IAAA8R,GAAA;IAAA5Y,KAAA,EAED,SAAAsnC,qBAAqBA,CAAC3hC,QAAQ,EAAE;MAC9B,IACae,GAAG,GACZ,IAAI,CADNgC,OAAO,CAAIhC,GAAG;MAGhB,IAAMd,MAAM,GAAG,IAAI,CAACugC,gBAAgB;MACpC,IAAMz9B,OAAO,GAAG9C,MAAM,CAACM,UAAU,CAAC,IAAI,CAAC;MAEvC,IAAMqhC,UAAU,GAAG,CAAC;MACpB,IAAM7B,aAAa,GAAG,IAAI,CAACC,gBAAgB,CAAC,CAAC,GAAG,IAAI,CAACmB,YAAY;MACjE,IAAME,QAAQ,GAAGlrC,UAAU,GAAG,CAAC,GAAI4K,GAAG,CAACxD,IAAI,GAAGpH,UAAU,GAAI,CAAC;MAC7D,IAAMqrC,SAAS,GAAGH,QAAQ,GAAG,CAAC,GAAGtB,aAAa;MAE9C,IAAM8B,MAAM,GAAG7hC,QAAQ,CAACU,CAAC,GAAGq/B,aAAa,GAAG6B,UAAU,GAAG,CAAC;MAC1D,IAAME,MAAM,GAAG9hC,QAAQ,CAACtG,CAAC,GAAGqmC,aAAa,GAAG6B,UAAU,GAAG,CAAC;MAC1D9+B,mBAAmB,CAACC,OAAO,EAAE8+B,MAAM,GAAGL,SAAS,EAAEM,MAAM,EAAEF,UAAU,EAAEA,UAAU,EAAE5hC,QAAQ,CAACJ,KAAK,CAAC;IAClG;EAAC;IAAAqT,GAAA;IAAA5Y,KAAA,EAED,SAAA2mC,yBAAyBA,CAAA,EAAG;MAC1B,IAAAnd,cAAA,GAEI,IAAI,CADN9gB,OAAO;QAAIhC,GAAG,GAAA8iB,cAAA,CAAH9iB,GAAG;QAAEmD,MAAM,GAAA2f,cAAA,CAAN3f,MAAM;MAGxB,IAAMjE,MAAM,GAAG,IAAI,CAACugC,gBAAgB;MACpC,IAAMz9B,OAAO,GAAG9C,MAAM,CAACM,UAAU,CAAC,IAAI,CAAC;MAEvC,IAAMqhC,UAAU,GAAG,CAAC;MACpB,IAAM7B,aAAa,GAAG,IAAI,CAACC,gBAAgB,CAAC,CAAC,GAAG,IAAI,CAACmB,YAAY;MACjE,IAAME,QAAQ,GAAGlrC,UAAU,GAAG,CAAC,GAAI4K,GAAG,CAACxD,IAAI,GAAGpH,UAAU,GAAI,CAAC;MAC7D,IAAMqrC,SAAS,GAAGH,QAAQ,GAAG,CAAC,GAAGtB,aAAa;MAE9Ch9B,OAAO,CAAC2+B,SAAS,CAAC,CAACF,SAAS,EAAE,CAAC,EAAEvhC,MAAM,CAACG,KAAK,EAAEH,MAAM,CAACI,MAAM,CAAC;MAE7DU,GAAG,CAACyZ,SAAS,CAAChW,OAAO,CAAC,UAAAxE,QAAQ,EAAI;QAAA,IAAA+hC,aAAA;QAChC,IAAM33B,IAAI,GAAGlG,MAAM,aAANA,MAAM,gBAAA69B,aAAA,GAAN79B,MAAM,CAAE8J,KAAK,cAAA+zB,aAAA,gBAAAA,aAAA,GAAbA,aAAA,CAAgB/hC,QAAQ,CAAChH,CAAC,CAAC,cAAA+oC,aAAA,uBAA3BA,aAAA,CAA8B/hC,QAAQ,CAACuH,CAAC,CAAC;QACtD,IAAIvH,QAAQ,CAACJ,KAAK,KAAKwK,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEiE,MAAM,IAAItN,GAAG,CAAC4M,gBAAgB,CAAC,EAAE;UAC5D,IAAMk0B,MAAM,GAAG7hC,QAAQ,CAACU,CAAC,GAAGq/B,aAAa,GAAG6B,UAAU,GAAG,CAAC;UAC1D,IAAME,MAAM,GAAG9hC,QAAQ,CAACtG,CAAC,GAAGqmC,aAAa,GAAG6B,UAAU,GAAG,CAAC;UAC1D9+B,mBAAmB,CAACC,OAAO,EAAE8+B,MAAM,GAAGL,SAAS,EAAEM,MAAM,EAAEF,UAAU,EAAEA,UAAU,EAAE5hC,QAAQ,CAACJ,KAAK,CAAC;QAClG;MACF,CAAC,CAAC;IACJ;EAAC;IAAAqT,GAAA;IAAA5Y,KAAA,EAED,SAAA6mC,sBAAsBA,CAAA,EAAG;MACvB,IAAAnd,cAAA,GAEI,IAAI,CADNhhB,OAAO;QAAIi/B,GAAG,GAAAje,cAAA,CAAHie,GAAG;QAAEjhC,GAAG,GAAAgjB,cAAA,CAAHhjB,GAAG;QAAE2M,QAAQ,GAAAqW,cAAA,CAARrW,QAAQ;MAG/B,IAAMzN,MAAM,GAAG,IAAI,CAACwgC,aAAa;MACjC,IAAM19B,OAAO,GAAG9C,MAAM,CAACM,UAAU,CAAC,IAAI,CAAC;MAEvC,IAAMw/B,aAAa,GAAG,IAAI,CAACC,gBAAgB,CAAC,CAAC,GAAG,IAAI,CAACmB,YAAY;MACjE,IAAME,QAAQ,GAAGlrC,UAAU,GAAG,CAAC,GAAI4K,GAAG,CAACxD,IAAI,GAAGpH,UAAU,GAAI,CAAC;MAC7D,IAAMqrC,SAAS,GAAGH,QAAQ,GAAG,CAAC,GAAGtB,aAAa;MAE9Ch9B,OAAO,CAAC2+B,SAAS,CAAC,CAACF,SAAS,EAAE,CAAC,EAAEvhC,MAAM,CAACG,KAAK,EAAEH,MAAM,CAACI,MAAM,CAAC;MAE7D,IAAMK,CAAC,GAAGgN,QAAQ,CAAC0oB,MAAM,CAAC11B,CAAC,GAAGq/B,aAAa;MAC3C,IAAMrmC,CAAC,GAAGgU,QAAQ,CAAC0oB,MAAM,CAAC18B,CAAC,GAAGqmC,aAAa;MAC3C,IAAMllC,CAAC,GAAGmnC,GAAG,CAACC,MAAM,CAAC7hC,KAAK,GAAG2/B,aAAa;MAC1C,IAAM3zB,CAAC,GAAG41B,GAAG,CAACC,MAAM,CAAC5hC,MAAM,GAAG0/B,aAAa;MAC3C78B,yBAAyB,CAACH,OAAO,EAAErC,CAAC,GAAG8gC,SAAS,EAAE9nC,CAAC,EAAEmB,CAAC,EAAEuR,CAAC,EAAE,OAAO,CAAC;IACrE;EAAC;IAAA6G,GAAA;IAAA5Y,KAAA,EAED,SAAAspB,sBAAsBA,CAAChmB,KAAK,EAAE;MAC5B,IAAI,CAACA,KAAK,EAAE;QACV;MACF;MAEA,IACaoD,GAAG,GACZ,IAAI,CADNgC,OAAO,CAAIhC,GAAG;MAGhB,IAAM6gC,UAAU,GAAG,CAAC;MACpB,IAAMM,aAAa,GAAG,IAAI,CAAC3B,cAAc,CAAC4B,IAAI,CAAC,UAAAh5B,KAAA;QAAA,IAAGjM,EAAE,GAAAiM,KAAA,CAAFjM,EAAE;QAAA,OAAOA,EAAE,gBAAAG,MAAA,CAAgBM,KAAK,CAACqE,KAAK,CAAE;MAAA,EAAC;MAC3F,IAAMpC,KAAK,GAAGjC,KAAK,CAACuvB,QAAQ;MAE5B,IAAIjtB,MAAM;MACV,IAAI8C,OAAO;MAEX,IAAMg9B,aAAa,GAAG,IAAI,CAACC,gBAAgB,CAAC,CAAC,GAAG,IAAI,CAACmB,YAAY;MACjE,IAAME,QAAQ,GAAGlrC,UAAU,GAAG,CAAC,GAAI4K,GAAG,CAACxD,IAAI,GAAGpH,UAAU,GAAI,CAAC;MAC7D,IAAMqrC,SAAS,GAAGH,QAAQ,GAAG,CAAC,GAAGtB,aAAa;MAE9C,IAAImC,aAAa,EAAE;QACjBjiC,MAAM,GAAGiiC,aAAa,CAACjiC,MAAM;QAC7B8C,OAAO,GAAGm/B,aAAa,CAACn/B,OAAO;MACjC,CAAC,MAAM;QACL9C,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;QACzC4C,OAAO,GAAG9C,MAAM,CAACM,UAAU,CAAC,IAAI,CAAC;QACjCwC,OAAO,CAACy+B,SAAS,CAACA,SAAS,EAAE,CAAC,CAAC;QAC/B,IAAI,CAACjB,cAAc,CAAC3jC,IAAI,CAAC;UACvBM,EAAE,aAAAG,MAAA,CAAaM,KAAK,CAACqE,KAAK,CAAE;UAC5B/B,MAAM,EAANA,MAAM;UACN8C,OAAO,EAAPA;QACF,CAAC,CAAC;QACF,IAAI,CAAC+8B,YAAY,CAACpsB,WAAW,CAACzT,MAAM,CAAC;MACvC;MAEA8C,OAAO,CAAC2+B,SAAS,CAAC,CAACF,SAAS,EAAE,CAAC,EAAEvhC,MAAM,CAACG,KAAK,EAAEH,MAAM,CAACI,MAAM,CAAC;MAE7D1C,KAAK,CAACO,SAAS,CAACsG,OAAO,CAAC,UAAA49B,KAAA,EAA8B;QAAA,IAA3B1hC,CAAC,GAAA0hC,KAAA,CAAD1hC,CAAC;UAAEhH,CAAC,GAAA0oC,KAAA,CAAD1oC,CAAC;UAAE6D,IAAI,GAAA6kC,KAAA,CAAJ7kC,IAAI;UAAE+c,QAAQ,GAAA8nB,KAAA,CAAR9nB,QAAQ;QAC7C,IAAM+nB,SAAS,GAAGT,UAAU,GAAGrkC,IAAI;QACnC,IAAMskC,MAAM,GAAGnhC,CAAC,GAAGq/B,aAAa,GAAGsC,SAAS,GAAG,CAAC;QAChD,IAAMP,MAAM,GAAGpoC,CAAC,GAAGqmC,aAAa,GAAGsC,SAAS,GAAG,CAAC;QAChDv/B,mBAAmB,CAACC,OAAO,EAAE8+B,MAAM,GAAGL,SAAS,EAAEM,MAAM,EAAEO,SAAS,EAAEA,SAAS,EAAE/nB,QAAQ,GAAG,OAAO,GAAG1a,KAAK,CAAC;MAC5G,CAAC,CAAC;MAEFjC,KAAK,CAACkf,KAAK,CAACrY,OAAO,CAAC,UAAA89B,KAAA,EAAwB;QAAA,IAArB5hC,CAAC,GAAA4hC,KAAA,CAAD5hC,CAAC;UAAEhH,CAAC,GAAA4oC,KAAA,CAAD5oC,CAAC;UAAE4gB,QAAQ,GAAAgoB,KAAA,CAARhoB,QAAQ;QACnC,IAAMunB,MAAM,GAAGnhC,CAAC,GAAGq/B,aAAa,GAAG6B,UAAU,GAAG,CAAC;QACjD,IAAME,MAAM,GAAGpoC,CAAC,GAAGqmC,aAAa,GAAG6B,UAAU,GAAG,CAAC;QACjD9+B,mBAAmB,CAACC,OAAO,EAAE8+B,MAAM,GAAGL,SAAS,EAAEM,MAAM,EAAEF,UAAU,EAAEA,UAAU,EAAEtnB,QAAQ,GAAG,OAAO,GAAG1a,KAAK,CAAC;MAC9G,CAAC,CAAC;IACJ;EAAC;IAAAqT,GAAA;IAAA5Y,KAAA,EAED,SAAAkoC,UAAUA,CAACp+B,IAAI,EAAE;MACf,IACaD,MAAM,GACf,IAAI,CADNnB,OAAO,CAAImB,MAAM;MAEnB,IAAMlE,QAAQ,GAAG3G,MAAM,CAACkL,IAAI,CAACJ,IAAI,CAAC,CAACg+B,IAAI,CAAC,UAAA19B,IAAI;QAAA,OAAIP,MAAM,CAACO,IAAI,CAAC,GAAGN,IAAI,CAACM,IAAI,CAAC;MAAA,EAAC;MAC1E,wBAAApH,MAAA,CAAwB2C,QAAQ;IAClC;EAAC;IAAAiT,GAAA;IAAA5Y,KAAA,EAED,SAAA8qB,WAAWA,CAACqd,OAAO,EAAE;MACnB,IACaC,OAAO,GAChB,IAAI,CADN1/B,OAAO,CAAI0/B,OAAO;MAEpB,IAAIviC,QAAQ,CAAC2T,cAAc,CAAC,KAAK,CAAC,EAAE;QAClC3T,QAAQ,CAAC2T,cAAc,CAAC,KAAK,CAAC,CAACC,MAAM,CAAC,CAAC;MACzC;MACA,IAAM4uB,GAAG,GAAGxiC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MACzCuiC,GAAG,CAACxlC,EAAE,GAAG,KAAK;MACdwlC,GAAG,CAAClvB,SAAS,GAAG,SAAS;MACzBna,MAAM,CAACspC,MAAM,CAACD,GAAG,CAAChC,KAAK,EAAE;QACvBkC,MAAM,EAAE,IAAI,CAAClD,SAAS,CAACmD,YAAY,GAAG,CAAC,GAAG;MAC5C,CAAC,CAAC;MACF,IAAMC,GAAG,GAAG5iC,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;MAC1C2iC,GAAG,CAAC1kB,WAAW,GAAGokB,OAAO;MACzBM,GAAG,CAACtvB,SAAS,GAAG,iBAAiB;MAEjCkvB,GAAG,CAAChvB,WAAW,CAACovB,GAAG,CAAC;MACpBL,OAAO,CAAC/uB,WAAW,CAACgvB,GAAG,CAAC;MACxBlgC,UAAU,CAAC,YAAM;QACfkgC,GAAG,CAAC5uB,MAAM,CAAC,CAAC;MACd,CAAC,EAAE,IAAI,CAAC;IACV;EAAC;IAAAb,GAAA;IAAA5Y,KAAA,EAED,SAAAukC,cAAcA,CAACriC,IAAI,EAAE;MACnB,IAAMmmC,GAAG,GAAGxiC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MACzCuiC,GAAG,CAAClvB,SAAS,GAAG,UAAU;MAE1B,IAAMuvB,GAAG,GAAG7iC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MACzC4iC,GAAG,CAACvvB,SAAS,GAAG,kBAAkB;MAClCuvB,GAAG,CAACl6B,GAAG,GAAG,IAAI,CAAC4d,KAAK,CAAClqB,IAAI,CAAC;MAE1B,IAAI,CAACA,IAAI,CAAC,GAAG2D,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MAC1CuiC,GAAG,CAAChvB,WAAW,CAACqvB,GAAG,CAAC;MACpBL,GAAG,CAAChvB,WAAW,CAAC,IAAI,CAACnX,IAAI,CAAC,CAAC;MAC3B,IAAI,CAACie,SAAS,CAAC9G,WAAW,CAACgvB,GAAG,CAAC;IACjC;EAAC;IAAAzvB,GAAA;IAAA5Y,KAAA,EAED,SAAAqrB,eAAeA,CAAA,EAAG;MAChB,IACaxhB,MAAM,GACf,IAAI,CADNnB,OAAO,CAAImB,MAAM;MAEnB,IAAIA,MAAM,CAACgd,gBAAgB,IAAIhd,MAAM,CAACukB,YAAY,EAAE;QAClD,IAAI,CAAC5M,YAAY,CAAC3X,MAAM,CAACgd,gBAAgB,IAAIhd,MAAM,CAACukB,YAAY,CAAC;MACnE;IACF;EAAC;IAAAxV,GAAA;IAAA5Y,KAAA,EAED,SAAAyqB,YAAYA,CAAA,EAAG;MAAA,IAAA/P,MAAA;MACb,IACa7Q,MAAM,GACf,IAAI,CADNnB,OAAO,CAAImB,MAAM;MAEnB,IAAMzL,CAAC,GAAG;QACR,CAAC,EAAE,WAAW;QACd,CAAC,EAAE,UAAU;QACb,CAAC,EAAE,YAAY;QACf,CAAC,EAAE;MACL,CAAC;MACA,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC+L,OAAO,CAAC,UAAAC,IAAI,EAAI;QACxD,IAAMoB,GAAG,GAAGN,IAAI,CAACuB,GAAG,CAAE5C,MAAM,IAAIA,MAAM,CAACO,IAAI,CAAC,IAAK,CAAC,EAAE,KAAK,CAAC;QAC1DsQ,MAAI,CAACtQ,IAAI,CAAC,CAAC2Z,WAAW,GAAG3Z,IAAI,KAAK,KAAK,GAAGhM,CAAC,CAACoN,GAAG,CAAC,GAAGA,GAAG;MACxD,CAAC,CAAC;IACJ;EAAC;IAAAoN,GAAA;IAAA5Y,KAAA,EAED,SAAA2oC,SAASA,CAAA,EAAG;MACV,IAAI,CAACrD,aAAa,CAACvhB,WAAW,GAAG,EAAE;MACnC,IAAI,CAACuhB,aAAa,CAACe,KAAK,CAACuC,UAAU,GAAG,aAAa;IACrD;EAAC;IAAAhwB,GAAA;IAAA5Y,KAAA,EAED,SAAA6oC,YAAYA,CAACnhC,SAAS,EAAE;MACtB,IAAI,CAACihC,SAAS,CAAC,CAAC;MAChB,IAAI,CAACrD,aAAa,CAACe,KAAK,CAACuC,UAAU,GAAG,OAAO;MAC7C,IAAI,OAAOlhC,SAAS,aAAU,CAAC8Y,IAAI,KAAK,UAAU,EAAE;QAClD9Y,SAAS,aAAU,CAAC8Y,IAAI,CAAC,IAAI,CAAC8kB,aAAa,CAAC;MAC9C;IACF;EAAC;IAAA1sB,GAAA;IAAA5Y,KAAA,EAED,SAAAmlB,UAAUA,CAAC1W,MAAM,EAAEiP,MAAM,EAAE;MACzB,IAAMorB,aAAa,GAAG,IAAI,CAACxD,aAAa,CAACyD,aAAa,QAAA/lC,MAAA,CAAQyL,MAAM,MAAG,CAAC;MACxE,IAAI,CAACq6B,aAAa,EAAE;QAClB;MACF;MACA,OAAO,OAAOprB,MAAM,KAAK,UAAU,GAAIorB,aAAa,CAAC/kB,WAAW,GAAGrG,MAAM,GAAIA,MAAM,CAACorB,aAAa,CAAC;IACpG;EAAC;IAAAlwB,GAAA;IAAA5Y,KAAA,EAED,SAAAuqB,mBAAmBA,CAAC9b,MAAM,EAAEiP,MAAM,EAAE;MAClC,IAAMorB,aAAa,GAAG,IAAI,CAACvD,aAAa,CAACwD,aAAa,QAAA/lC,MAAA,CAAQyL,MAAM,MAAG,CAAC;MACxE,IAAI,CAACq6B,aAAa,EAAE;QAClB;MACF;MACA,IAAME,cAAc,GAAGF,aAAa,CAACC,aAAa,CAAC,cAAc,CAAC;MAClE,IAAI,CAACC,cAAc,EAAE;QACnB;MACF;MACA,OAAO,OAAOtrB,MAAM,KAAK,UAAU,GAAIsrB,cAAc,CAACjlB,WAAW,GAAGrG,MAAM,GAAIA,MAAM,CAACsrB,cAAc,CAAC;IACtG;EAAC;IAAApwB,GAAA;IAAA5Y,KAAA,EAED,SAAA4qB,kBAAkBA,CAACnc,MAAM,EAAEzO,KAAK,EAAE;MAChC,IAAMygB,OAAO,GAAG,IAAI,CAAC8kB,aAAa,CAACwD,aAAa,QAAA/lC,MAAA,CAAQyL,MAAM,aAAU,CAAC;MACzE,IAAI,CAACgS,OAAO,EAAE;QACZ;MACF;MACAA,OAAO,CAAC4lB,KAAK,CAACI,OAAO,GAAGzmC,KAAK,GAAG,OAAO,GAAG,MAAM;IAClD;EAAC;IAAA4Y,GAAA;IAAA5Y,KAAA,EAED,SAAAwhB,YAAYA,CAAA,EAAmB;MAAA,IAAlB9Z,SAAS,GAAArG,SAAA,CAAA1B,MAAA,QAAA0B,SAAA,QAAAyL,SAAA,GAAAzL,SAAA,MAAG,IAAI;MAC3B,IAAAuoB,cAAA,GAEI,IAAI,CADNlhB,OAAO;QAAI2K,QAAQ,GAAAuW,cAAA,CAARvW,QAAQ;QAAExJ,MAAM,GAAA+f,cAAA,CAAN/f,MAAM;MAG7B,IAAI,CAAC8+B,SAAS,CAAC,CAAC;MAChB,IAAI,CAACpD,aAAa,CAACxhB,WAAW,GAAG,EAAE;MACnC,IAAI,CAACrc,SAAS,GAAGA,SAAS;MAC1B,IAAI2L,QAAQ,CAACwO,aAAa,EAAE;QAC1BxO,QAAQ,CAAC41B,mBAAmB,CAAC,CAAC;MAChC;MACA,IAAIvhC,SAAS,IAAIA,SAAS,aAAU,EAAE;QACpC,IAAI,CAACmhC,YAAY,CAACnhC,SAAS,CAAC;QAC5B,IAAIA,SAAS,CAAC8M,MAAM,KAAK,UAAU,EAAE;UACnC,IAAI,CAAC9M,SAAS,CAACqW,OAAO,EAAE;YACtBmrB,aAAa,CAACxhC,SAAS,EAAE,IAAI,CAAC69B,aAAa,EAAE,EAAE,CAAC;UAClD,CAAC,MAAM,IAAI79B,SAAS,CAAC6d,UAAU,EAAE;YAC/B2jB,aAAa,CAACxhC,SAAS,EAAE,IAAI,CAAC69B,aAAa,EAAE,CAC3C;cACEthB,IAAI,EAAE,sCAAsC;cAC5CphB,EAAE,KAAAG,MAAA,CAAKK,IAAI,YAAS;cACpB8lC,OAAO,EAAE,SAATA,OAAOA,CAAEzhC,SAAS,EAAI;gBACpB0X,uBAAK,CAAC5G,IAAI,CAAC,MAAM,CAAC;gBAClB9Q,SAAS,CAACyjB,gBAAgB,CAAC,CAAC;cAC9B;YACF,CAAC,CACF,CAAC;UACJ,CAAC,MAAM;YACL+d,aAAa,CAACxhC,SAAS,EAAE,IAAI,CAAC69B,aAAa,EAAE79B,SAAS,aAAU,CAAC0Z,IAAI,IAAI,EAAE,CAAC;UAC9E;QACF,CAAC,MAAM;UACL8nB,aAAa,CAACxhC,SAAS,EAAE,IAAI,CAAC69B,aAAa,EAAE79B,SAAS,aAAU,CAAC0Z,IAAI,IAAI,EAAE,CAAC;QAC9E;MACF;MACA,SAAS8nB,aAAaA,CAACxhC,SAAS,EAAE+Y,OAAO,EAAEW,IAAI,EAAEnO,MAAM,EAAE;QACvDmO,IAAI,CACD/Z,MAAM,CAAC,UAAA+hC,GAAG;UAAA,OAAI,CAACA,GAAG,CAACC,IAAI,IAAI,CAACD,GAAG,CAACC,IAAI,CAAC,CAAC;QAAA,EAAC,CACvCl/B,OAAO,CAAC,UAACi/B,GAAG,EAAErmC,KAAK,EAAK;UACvB,IAAMslC,GAAG,GAAGxiC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;UACzCuiC,GAAG,CAAClvB,SAAS,GAAG,oBAAoB;UACpCkvB,GAAG,CAACxlC,EAAE,GAAGumC,GAAG,CAACvmC,EAAE,WAAAG,MAAA,CAAWD,KAAK,CAAE;UACjC,IAAI,OAAOqmC,GAAG,CAACE,QAAQ,KAAK,UAAU,EAAE;YACtCF,GAAG,CAACE,QAAQ,CAAC5hC,SAAS,EAAE2gC,GAAG,CAAC;UAC9B,CAAC,MAAM;YACL,IAAMK,GAAG,GAAG7iC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;YACzC4iC,GAAG,CAACl6B,GAAG,GAAG,OAAO46B,GAAG,CAACnlB,IAAI,KAAK,UAAU,GAAGmlB,GAAG,CAACnlB,IAAI,CAAC,CAAC,GAAGmlB,GAAG,CAACnlB,IAAI;YAChEykB,GAAG,CAACvvB,SAAS,GAAG,KAAK;YACrBkvB,GAAG,CAAChvB,WAAW,CAACqvB,GAAG,CAAC;UACtB;UAEA,IAAIU,GAAG,CAACpgB,QAAQ,EAAE;YAChBqf,GAAG,CAAC5D,gBAAgB,CAAC,WAAW,EAAE,YAAM;cACtCrlB,uBAAK,CAAC5G,IAAI,CAAC,MAAM,CAAC;cAClBiI,OAAO,CAACsD,WAAW,GAAG,EAAE;cACxB1Q,QAAQ,CAAC41B,mBAAmB,CAAC,CAAC;cAC9BC,aAAa,CAACxhC,SAAS,EAAE+Y,OAAO,EAAE2oB,GAAG,CAACpgB,QAAQ,EAAE5H,IAAI,CAAC;YACvD,CAAC,CAAC;UACJ,CAAC,MAAM,IAAI,OAAOgoB,GAAG,CAACD,OAAO,KAAK,UAAU,EAAE;YAC5Cd,GAAG,CAAC5D,gBAAgB,CAAC,WAAW,EAAE,UAAA/iB,GAAG,EAAI;cACvCtC,uBAAK,CAAC5G,IAAI,CAAC,MAAM,CAAC;cAClB4wB,GAAG,CAACD,OAAO,CAACzhC,SAAS,EAAEga,GAAG,CAAC;YAC7B,CAAC,CAAC;UACJ;UACAjB,OAAO,CAACpH,WAAW,CAACgvB,GAAG,CAAC;QAC1B,CAAC,CAAC;QACJ,IAAIp1B,MAAM,IAAIvL,SAAS,CAACuY,QAAQ,EAAE;UAChC,IAAMspB,IAAI,GAAG1jC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;UAC1CyjC,IAAI,CAACpwB,SAAS,GAAG,oBAAoB;UACrC,IAAMuvB,GAAG,GAAG7iC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;UACzC4iC,GAAG,CAACvvB,SAAS,GAAG,KAAK;UACrBowB,IAAI,CAAC1mC,EAAE,GAAG,kBAAkB;UAC5B6lC,GAAG,CAACl6B,GAAG,GAAG,sCAAsC;UAChD,IAAIyE,MAAM,EAAE;YACVs2B,IAAI,CAAC9E,gBAAgB,CAAC,WAAW,EAAE,YAAM;cACvCrlB,uBAAK,CAAC5G,IAAI,CAAC,MAAM,CAAC;cAClBiI,OAAO,CAACsD,WAAW,GAAG,EAAE;cACxB1Q,QAAQ,CAAC41B,mBAAmB,CAAC,CAAC;cAC9BC,aAAa,CAACxhC,SAAS,EAAE+Y,OAAO,EAAExN,MAAM,CAAC;YAC3C,CAAC,CAAC;UACJ,CAAC,MAAM;YACLs2B,IAAI,CAAC9E,gBAAgB,CAAC,WAAW,EAAE,YAAM;cACvCrlB,uBAAK,CAAC5G,IAAI,CAAC,MAAM,CAAC;cAClBnF,QAAQ,CAAC41B,mBAAmB,CAAC,CAAC;cAC9Bp/B,MAAM,CAACyX,WAAW,CAAC,CAAC;YACtB,CAAC,CAAC;UACJ;UACAioB,IAAI,CAAClwB,WAAW,CAACqvB,GAAG,CAAC;UACrBjoB,OAAO,CAACpH,WAAW,CAACkwB,IAAI,CAAC;QAC3B;MACF;IACF;EAAC;IAAA3wB,GAAA;IAAA5Y,KAAA,EAED,SAAA4lB,aAAaA,CAACviB,IAAI,EAAE;MAAA,IAAA4X,MAAA;MAClB,IACapR,MAAM,GACf,IAAI,CADNnB,OAAO,CAAImB,MAAM;MAEnB,IAAMuY,IAAI,GAAGvY,MAAM,CAACqW,MAAM,CAACsC,KAAK,CAACnf,IAAI,CAAC;MACtC,OAAO;QACLR,EAAE,EAAEQ,IAAI;QACR4gB,IAAI,EAAE,SAANA,IAAIA,CAAA;UAAA,OAAQrhB,WAAW,CAACwf,IAAI,CAAC6B,IAAI,CAAC;QAAA;QAClColB,IAAI,EAAE,SAANA,IAAIA,CAAA;UAAA,OAAQ,CAACjnB,IAAI,CAACxE,UAAU,IAAI,EAAE,EAAE4rB,IAAI,CAAC,UAAAh6B,SAAS;YAAA,OAAI,CAACyN,gBAAgB,CAACzN,SAAS,EAAE3F,MAAM,CAAC;UAAA,EAAC;QAAA;QAC3Fy/B,QAAQ,EAAE,SAAVA,QAAQA,CAAG5hC,SAAS,EAAE+Y,OAAO,EAAK;UAChC,IAAMgpB,GAAG,GAAG5jC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;UACzC2jC,GAAG,CAACtwB,SAAS,GAAG,uBAAuB;UACvC,IAAMgsB,MAAM,GAAGt/B,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;UAC5Cq/B,MAAM,CAACtiC,EAAE,MAAAG,MAAA,CAAMK,IAAI,YAAS;UAC5B8hC,MAAM,CAAChsB,SAAS,GAAG,KAAK;UACxBgsB,MAAM,CAAC32B,GAAG,GAAG,sCAAsC;UACnD,IAAI,CAAC9G,SAAS,CAAC4d,KAAK,CAACje,MAAM,CAAC,UAAAmjB,CAAC;YAAA,OAAIA,CAAC,KAAKnnB,IAAI;UAAA,EAAC,CAAC1D,MAAM,EAAE;YACnDwlC,MAAM,CAACkB,KAAK,CAACI,OAAO,GAAG,MAAM;UAC/B;UACAtB,MAAM,CAACV,gBAAgB,CAAC,WAAW,EAAE,YAAM;YACzCrlB,uBAAK,CAAC5G,IAAI,CAAC,MAAM,CAAC;YAClB,KAAK,IAAI7Z,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+I,SAAS,CAAC4d,KAAK,CAAC3lB,MAAM,EAAEhB,CAAC,EAAE,EAAE;cAC/C,IAAI+I,SAAS,CAAC4d,KAAK,CAAC3mB,CAAC,CAAC,KAAK0E,IAAI,EAAE;gBAC/BuG,UAAU,CAACC,MAAM,EAAEuY,IAAI,CAACtY,IAAI,CAAC;cAC/B;YACF;YACAmR,MAAI,CAACwP,YAAY,CAAC,CAAC;YACnB/iB,SAAS,CAAC4d,KAAK,GAAG5d,SAAS,CAAC4d,KAAK,CAACje,MAAM,CAAC,UAAAmjB,CAAC;cAAA,OAAIA,CAAC,KAAKnnB,IAAI;YAAA,EAAC;YACzD,IAAIqE,SAAS,CAAC4d,KAAK,CAAC,CAAC,CAAC,KAAKjiB,IAAI,EAAE;cAC/B4X,MAAI,CAACsP,mBAAmB,CAAClnB,IAAI,EAAE,EAAE,CAAC;cAClC4X,MAAI,CAAC2P,kBAAkB,CAACvnB,IAAI,EAAE,KAAK,CAAC;YACtC;UACF,CAAC,CAAC;UACF,IAAMqlC,GAAG,GAAG7iC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;UACzC4iC,GAAG,CAACl6B,GAAG,GAAG5L,WAAW,CAACwf,IAAI,CAAC6B,IAAI,CAAC;UAChCykB,GAAG,CAACvvB,SAAS,GAAG,KAAK;UACrBuvB,GAAG,CAACjE,gBAAgB,CAAC,WAAW,EAAE,YAAM;YACtCrlB,uBAAK,CAAC5G,IAAI,CAAC,MAAM,CAAC;YAClB,IAAIjO,SAAS,CAACV,MAAM,EAAEuY,IAAI,CAACtY,IAAI,CAAC,EAAE;cAChC,IAAID,MAAM,CAACsc,UAAU,IAAItc,MAAM,CAAC3L,cAAc,EAAE;gBAC9C+c,MAAI,CAAC6P,WAAW,CAAC,+BAA+B,CAAC;cACnD;cACA7P,MAAI,CAAC2P,kBAAkB,CAACvnB,IAAI,EAAE,IAAI,CAAC;cACnCqE,SAAS,CAAC+d,OAAO,CAACpiB,IAAI,CAAC;YACzB,CAAC,MAAM;cACL4X,MAAI,CAAC6P,WAAW,CAAC7P,MAAI,CAACitB,UAAU,CAAC9lB,IAAI,CAACtY,IAAI,CAAC,CAAC;YAC9C;UACF,CAAC,CAAC;UACF,IAAMwb,KAAK,GAAG5d,SAAS,CAAC4d,KAAK,CAACje,MAAM,CAAC,UAAAie,KAAK;YAAA,OAAIA,KAAK,KAAKjiB,IAAI;UAAA,EAAC,CAAC1D,MAAM;UACpE,IAAM+pC,OAAO,GAAG7jC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;UAC7C4jC,OAAO,CAAC7mC,EAAE,GAAG,SAAS;UACtB6mC,OAAO,CAAC3lB,WAAW,GAAGuB,KAAK,IAAI,EAAE;UACjCokB,OAAO,CAACrD,KAAK,CAACsD,OAAO,GAAG,KAAK;UAC7BD,OAAO,CAACrD,KAAK,CAAC/N,QAAQ,GAAG,UAAU;UACnCmR,GAAG,CAACpwB,WAAW,CAACqvB,GAAG,CAAC;UACpBe,GAAG,CAACpwB,WAAW,CAAC8rB,MAAM,CAAC;UACvB1kB,OAAO,CAACpH,WAAW,CAACowB,GAAG,CAAC;UACxBhpB,OAAO,CAACpH,WAAW,CAACqwB,OAAO,CAAC;QAC9B;MACF,CAAC;IACH;EAAC;IAAA9wB,GAAA;IAAA5Y,KAAA,EAED,SAAAytB,iBAAiBA,CAACpqB,IAAI,EAAE;MAAA,IAAAse,MAAA;MACtB,IAAA0I,cAAA,GAEI,IAAI,CADN3hB,OAAO;QAAI2K,QAAQ,GAAAgX,cAAA,CAARhX,QAAQ;QAAExJ,MAAM,GAAAwgB,cAAA,CAANxgB,MAAM;MAE7B,IAAMqW,MAAM,GAAGrW,MAAM,CAACqW,MAAM,CAACrc,SAAS,CAACR,IAAI,CAAC;MAC5C,OAAO;QACLR,EAAE,EAAEQ,IAAI;QACR4gB,IAAI,EAAE,SAANA,IAAIA,CAAA,EAAQ;UACV,IAAM1gB,MAAM,GAAGH,gBAAgB,CAACC,IAAI,EAAEwG,MAAM,EAAE0V,kBAAM,CAAC;UACrD,OAAO3c,WAAW,CAACW,MAAM,CAAC0gB,IAAI,CAAC;QACjC,CAAC;QACDolB,IAAI,EAAE,SAANA,IAAIA,CAAA;UAAA,OAAQ,CAACnpB,MAAM,CAACtC,UAAU,IAAI,EAAE,EAAE4rB,IAAI,CAAC,UAAAh6B,SAAS;YAAA,OAAI,CAACyN,gBAAgB,CAACzN,SAAS,EAAE3F,MAAM,CAAC;UAAA,EAAC;QAAA;QAC7Fs/B,OAAO,EAAE,SAATA,OAAOA,CAAA,EAAQ;UACb,IAAM5lC,MAAM,GAAGH,gBAAgB,CAACC,IAAI,EAAEwG,MAAM,EAAE0V,kBAAM,CAAC;UACrDlM,QAAQ,CAAC41B,mBAAmB,CAAC,CAAC;UAC9B,IAAI1+B,SAAS,CAACV,MAAM,EAAEqW,MAAM,CAACpW,IAAI,CAAC,EAAE;YAClCuJ,QAAQ,CAACu2B,gBAAgB,CAAA3f,iBAAA,CAAAA,iBAAA,CAAAA,iBAAA,KAAM/J,MAAM,GAAK3c,MAAM;cAAEF,IAAI,EAAJA;YAAI,EAAE,CAAC;UAC3D,CAAC,MAAM;YACLse,MAAI,CAACmJ,WAAW,CAACnJ,MAAI,CAACumB,UAAU,CAAChoB,MAAM,CAACpW,IAAI,CAAC,CAAC;UAChD;QACF;MACF,CAAC;IACH;EAAC;IAAA8O,GAAA;IAAA5Y,KAAA,EAED,SAAA8lB,mBAAmBA,CAACziB,IAAI,EAAE;MAAA,IAAAukB,MAAA;MACxB,IAAAwD,cAAA,GAEI,IAAI,CADN1iB,OAAO;QAAI2K,QAAQ,GAAA+X,cAAA,CAAR/X,QAAQ;QAAExJ,MAAM,GAAAuhB,cAAA,CAANvhB,MAAM;MAE7B,IAAMqW,MAAM,GAAGrW,MAAM,CAAC+hB,KAAK,CAACvoB,IAAI,CAAC;MACjC,OAAO;QACL4gB,IAAI,EAAErhB,WAAW,CAACsd,MAAM,CAAC+D,IAAI,CAAC;QAC9BphB,EAAE,EAAEQ,IAAI;QACRgmC,IAAI,EAAE,SAANA,IAAIA,CAAA;UAAA,OACF,CAACnpB,MAAM,CAACtC,UAAU,IAAI,EAAE,EAAE4rB,IAAI,CAC5B,UAAAh6B,SAAS;YAAA,OAAI3F,MAAM,CAACgc,YAAY,CAAChU,QAAQ,CAACxO,IAAI,CAAC,IAAI,CAAC4Z,gBAAgB,CAACzN,SAAS,EAAE3F,MAAM,CAAC;UAAA,CACzF,CAAC;QAAA;QACHs/B,OAAO,EAAE,SAATA,OAAOA,CAAEzhC,SAAS,EAAI;UACpB2L,QAAQ,CAAC41B,mBAAmB,CAAC,CAAC;UAC9B,IAAI1+B,SAAS,CAACV,MAAM,EAAEqW,MAAM,CAACpW,IAAI,CAAC,EAAE;YAClCpC,SAAS,CAACge,aAAa,CAACriB,IAAI,CAAC;UAC/B,CAAC,MAAM;YACLukB,MAAI,CAACkD,WAAW,CAAClD,MAAI,CAACsgB,UAAU,CAAChoB,MAAM,CAACpW,IAAI,CAAC,CAAC;UAChD;QACF;MACF,CAAC;IACH;EAAC;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5sBgC;AAC0C;AAU9D;AAC8F;AAAA,IAExF+/B,QAAQ,0BAAAlqB,UAAA;EAC3B,SAAAkqB,SAAYnhC,OAAO,EAAE;IAAA,IAAAkR,KAAA;IAAAmG,uBAAA,OAAA8pB,QAAA;IACnBjwB,KAAA,GAAAoG,kBAAA,OAAA6pB,QAAA;IAEAjwB,KAAA,CAAKlR,OAAO,GAAGA,OAAO;IAEtB,IAAQhC,GAAG,GAAcgC,OAAO,CAAxBhC,GAAG;MAAE0hC,OAAO,GAAK1/B,OAAO,CAAnB0/B,OAAO;IAEpBxuB,KAAA,CAAK0hB,gBAAgB,GAAG,IAAI;IAE5B1hB,KAAA,CAAKoI,KAAK,GAAG;MACX3b,CAAC,EAAE,CAAC;MACJhH,CAAC,EAAE,CAAC;MACJ4iB,OAAO,EAAE;IACX,CAAC;IAEDrI,KAAA,CAAKmiB,MAAM,GAAG;MACZ11B,CAAC,EAAE,CAAC;MACJhH,CAAC,EAAE;IACL,CAAC;IAEDua,KAAA,CAAKkwB,YAAY,GAAG,IAAInL,GAAG,CAAC,CAAC;IAE7B/kB,KAAA,CAAK2iB,SAAS,CAACrxB,IAAI,CAACC,KAAK,CAACzE,GAAG,CAACxD,IAAI,GAAG,CAAC,CAAC,EAAEgI,IAAI,CAACC,KAAK,CAACzE,GAAG,CAACxD,IAAI,GAAG,CAAC,CAAC,CAAC;IAElE0W,KAAA,CAAKyqB,gBAAgB;IACrBzqB,KAAA,CAAKmwB,WAAW,GAAG,CAAC,CAAC;IACrBnwB,KAAA,CAAKowB,WAAW;IAChBpwB,KAAA,CAAKqwB,QAAQ,GAAG,CAAC;IACjBrwB,KAAA,CAAKyG,SAAS,GAAG,MAAM;IACvBzG,KAAA,CAAK2G,SAAS,GAAG,KAAK;IACtB3G,KAAA,CAAK0G,UAAU,GAAG,KAAK;IACvB1G,KAAA,CAAKkI,cAAc;IACnBlI,KAAA,CAAKswB,UAAU;IACftwB,KAAA,CAAKuwB,SAAS,GAAG,KAAK;IACtBvwB,KAAA,CAAKwwB,kBAAkB;IAEvBxwB,KAAA,CAAKywB,gBAAgB,GAAG,IAAI5nC,qBAAQ,CAAC,CAAC;IACtCmX,KAAA,CAAK+I,QAAQ,CAAC/I,KAAA,CAAKywB,gBAAgB,CAAC;IAEpCxkC,QAAQ,CAAC4+B,gBAAgB,CAAC,WAAW,EAAE,UAAA/iB,GAAG;MAAA,OAAI9H,KAAA,CAAK0wB,mBAAmB,CAAC5oB,GAAG,CAAC;IAAA,EAAC;IAC5E7b,QAAQ,CAAC4+B,gBAAgB,CAAC,UAAU,EAAE;MAAA,OAAMvf,aAAa,CAACtL,KAAA,CAAKwwB,kBAAkB,CAAC;IAAA,EAAC;IACnFvkC,QAAQ,CAAC4+B,gBAAgB,CAAC,SAAS,EAAE,UAAA/iB,GAAG;MAAA,OAAI9H,KAAA,CAAK2wB,SAAS,CAAC7oB,GAAG,CAAC;IAAA,EAAC;IAChE7b,QAAQ,CAAC4+B,gBAAgB,CAAC,OAAO,EAAE,UAAA/iB,GAAG;MAAA,OAAI9H,KAAA,CAAK4wB,OAAO,CAAC9oB,GAAG,CAAC;IAAA,EAAC;IAC5D0mB,OAAO,CAAC3D,gBAAgB,CAAC,YAAY,EAAE,UAAA/iB,GAAG;MAAA,OAAI9H,KAAA,CAAK6wB,YAAY,CAAC/oB,GAAG,CAAC;IAAA,EAAC;IACrE0mB,OAAO,CAAC3D,gBAAgB,CAAC,UAAU,EAAE,UAAA/iB,GAAG;MAAA,OAAI9H,KAAA,CAAK8wB,UAAU,CAAChpB,GAAG,CAAC;IAAA,EAAC;IACjE0mB,OAAO,CAAC3D,gBAAgB,CAAC,WAAW,EAAE,UAAA/iB,GAAG;MAAA,OAAI9H,KAAA,CAAK+wB,WAAW,CAACjpB,GAAG,CAAC;IAAA,EAAC;IACnE0mB,OAAO,CAAC3D,gBAAgB,CAAC,WAAW,EAAE,UAAA/iB,GAAG;MAAA,OAAI9H,KAAA,CAAKgxB,WAAW,CAAClpB,GAAG,CAAC;IAAA,EAAC;IACnE0mB,OAAO,CAAC3D,gBAAgB,CAAC,WAAW,EAAE,UAAA/iB,GAAG;MAAA,OAAI9H,KAAA,CAAKixB,WAAW,CAACnpB,GAAG,CAAC;IAAA,EAAC;IACnE0mB,OAAO,CAAC3D,gBAAgB,CAAC,SAAS,EAAE,UAAA/iB,GAAG;MAAA,OAAI9H,KAAA,CAAKkxB,SAAS,CAACppB,GAAG,CAAC;IAAA,EAAC;IAAA,OAAA9H,KAAA;EACjE;EAACgJ,iBAAA,CAAAinB,QAAA,EAAAlqB,UAAA;EAAA,OAAAkD,oBAAA,CAAAgnB,QAAA;IAAAjxB,GAAA;IAAA5Y,KAAA,EAED,SAAA4jB,OAAOA,CAAA,EAAG;MAAA,IAAAlJ,MAAA;MACR,IACa0tB,OAAO,GAChB,IAAI,CADN1/B,OAAO,CAAI0/B,OAAO;MAGpBviC,QAAQ,CAACklC,mBAAmB,CAAC,WAAW,EAAE,UAAArpB,GAAG;QAAA,OAAIhH,MAAI,CAAC4vB,mBAAmB,CAAC5oB,GAAG,CAAC;MAAA,EAAC;MAC/E7b,QAAQ,CAACklC,mBAAmB,CAAC,UAAU,EAAE;QAAA,OAAM7lB,aAAa,CAACxK,MAAI,CAAC0vB,kBAAkB,CAAC;MAAA,EAAC;MACtFvkC,QAAQ,CAACklC,mBAAmB,CAAC,SAAS,EAAE,UAAArpB,GAAG;QAAA,OAAIhH,MAAI,CAAC6vB,SAAS,CAAC7oB,GAAG,CAAC;MAAA,EAAC;MACnE7b,QAAQ,CAACklC,mBAAmB,CAAC,OAAO,EAAE,UAAArpB,GAAG;QAAA,OAAIhH,MAAI,CAAC8vB,OAAO,CAAC9oB,GAAG,CAAC;MAAA,EAAC;MAC/D0mB,OAAO,CAAC2C,mBAAmB,CAAC,YAAY,EAAE,UAAArpB,GAAG;QAAA,OAAIhH,MAAI,CAAC+vB,YAAY,CAAC/oB,GAAG,CAAC;MAAA,EAAC;MACxE0mB,OAAO,CAAC2C,mBAAmB,CAAC,UAAU,EAAE,UAAArpB,GAAG;QAAA,OAAIhH,MAAI,CAACgwB,UAAU,CAAChpB,GAAG,CAAC;MAAA,EAAC;MACpE0mB,OAAO,CAAC2C,mBAAmB,CAAC,WAAW,EAAE,UAAArpB,GAAG;QAAA,OAAIhH,MAAI,CAACiwB,WAAW,CAACjpB,GAAG,CAAC;MAAA,EAAC;MACtE0mB,OAAO,CAAC2C,mBAAmB,CAAC,WAAW,EAAE,UAAArpB,GAAG;QAAA,OAAIhH,MAAI,CAACkwB,WAAW,CAAClpB,GAAG,CAAC;MAAA,EAAC;MACtE0mB,OAAO,CAAC2C,mBAAmB,CAAC,WAAW,EAAE,UAAArpB,GAAG;QAAA,OAAIhH,MAAI,CAACmwB,WAAW,CAACnpB,GAAG,CAAC;MAAA,EAAC;MACtE0mB,OAAO,CAAC2C,mBAAmB,CAAC,SAAS,EAAE,UAAArpB,GAAG;QAAA,OAAIhH,MAAI,CAACowB,SAAS,CAACppB,GAAG,CAAC;MAAA,EAAC;IACpE;EAAC;IAAA9I,GAAA;IAAA5Y,KAAA,EAED,SAAAuqC,SAASA,CAAC7oB,GAAG,EAAE;MAAA,IAAAzG,MAAA;MACb,IAAIyG,GAAG,CAAC9I,GAAG,KAAK,QAAQ,IAAI8I,GAAG,CAACspB,OAAO,KAAK,CAAC,EAAE;QAC7C,IACanhC,MAAM,GACf,IAAI,CADNnB,OAAO,CAAImB,MAAM;QAEnB,KAAK,IAAIlL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkL,MAAM,CAACwX,aAAa,CAAC1hB,MAAM,EAAEhB,CAAC,EAAE,EAAE;UACpDkL,MAAM,CAACwX,aAAa,CAAC1iB,CAAC,CAAC,CAACqkB,GAAG,CAAC,CAAC;QAC/B;QACA,IAAInZ,MAAM,CAACgd,gBAAgB,EAAE;UAC3Bhd,MAAM,CAACgd,gBAAgB,CAAC7D,GAAG,CAAC,CAAC;QAC/B;QACA;MACF;MAEA,IAAMioB,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;QAC7B,IAAI,CAAChwB,MAAI,CAAC+uB,WAAW,EAAE;UACrB/uB,MAAI,CAAC+uB,WAAW,GAAGhlB,WAAW,CAAC,YAAM;YACnC,IAAIkmB,OAAM,GAAG,KAAK;YAClB,IAAIlsC,MAAM,CAACke,MAAM,CAACjC,MAAI,CAAC8uB,WAAW,CAAC,CAAC1iC,MAAM,CAACu1B,OAAO,CAAC,CAACj9B,MAAM,GAAG,CAAC,EAAE;cAC9DurC,OAAM,GAAG,IAAI;YACf;YACA,IAAIjwB,MAAI,CAACgvB,QAAQ,GAAG,CAAC,EAAE;cACrBhvB,MAAI,CAACgvB,QAAQ,IAAI,GAAG;YACtB;YACA,IAAIhvB,MAAI,CAAC8uB,WAAW,CAAC,WAAW,CAAC,EAAE;cACjC9uB,MAAI,CAACkwB,UAAU,CAAC,MAAM,EAAElwB,MAAI,CAACgvB,QAAQ,EAAEiB,OAAM,CAAC;YAChD;YACA,IAAIjwB,MAAI,CAAC8uB,WAAW,CAAC,SAAS,CAAC,EAAE;cAC/B9uB,MAAI,CAACkwB,UAAU,CAAC,IAAI,EAAElwB,MAAI,CAACgvB,QAAQ,EAAEiB,OAAM,CAAC;YAC9C;YACA,IAAIjwB,MAAI,CAAC8uB,WAAW,CAAC,WAAW,CAAC,EAAE;cACjC9uB,MAAI,CAACkwB,UAAU,CAAC,MAAM,EAAElwB,MAAI,CAACgvB,QAAQ,EAAEiB,OAAM,CAAC;YAChD;YACA,IAAIjwB,MAAI,CAAC8uB,WAAW,CAAC,YAAY,CAAC,EAAE;cAClC9uB,MAAI,CAACkwB,UAAU,CAAC,OAAO,EAAElwB,MAAI,CAACgvB,QAAQ,EAAEiB,OAAM,CAAC;YACjD;UACF,CAAC,EAAE,CAAC,CAAC;QACP;MACF,CAAC;MACD,IAAI,CAACxpB,GAAG,CAACob,MAAM,EAAE;QACf,IAAI,CAACiN,WAAW,CAACroB,GAAG,CAAC9I,GAAG,CAAC,GAAG,IAAI;MAClC;MACA,IAAMwyB,WAAW,GAAG,CAAC,WAAW,EAAE,YAAY,EAAE,WAAW,EAAE,SAAS,CAAC;MACvE,IAAIA,WAAW,CAACv5B,QAAQ,CAAC6P,GAAG,CAAC9I,GAAG,CAAC,EAAE;QACjCqyB,gBAAgB,CAAC,CAAC;MACpB;IACF;EAAC;IAAAryB,GAAA;IAAA5Y,KAAA,EAED,SAAAwqC,OAAOA,CAAC9oB,GAAG,EAAE;MACX,IAAI,CAACA,GAAG,CAACob,MAAM,EAAE;QACf,OAAO,IAAI,CAACiN,WAAW,CAACroB,GAAG,CAAC9I,GAAG,CAAC;MAClC;MACA,IAAI,CAAC5Z,MAAM,CAACke,MAAM,CAAC,IAAI,CAAC6sB,WAAW,CAAC,CAAC1iC,MAAM,CAACu1B,OAAO,CAAC,CAACj9B,MAAM,EAAE;QAC3DulB,aAAa,CAAC,IAAI,CAAC8kB,WAAW,CAAC;QAC/B,IAAI,CAACA,WAAW,GAAG,IAAI;QACvB,IAAI,CAACC,QAAQ,GAAG,CAAC;MACnB;IACF;EAAC;IAAArxB,GAAA;IAAA5Y,KAAA,EAED,SAAAyqC,YAAYA,CAAC/oB,GAAG,EAAE;MAChB,IAAM2pB,KAAK,GAAG3pB,GAAG,CAAC4pB,OAAO,CAAC,CAAC,CAAC;MAC5B,IAAI5pB,GAAG,CAAC4pB,OAAO,CAAC3rC,MAAM,KAAK,CAAC,EAAE;QAC5B,IAAI,CAACuqC,UAAU,GAAG;UAChB7jC,CAAC,EAAEglC,KAAK,CAACE,KAAK;UACdlsC,CAAC,EAAEgsC,KAAK,CAACG;QACX,CAAC;MACH,CAAC,MAAM;QACL,IAAI,CAACX,WAAW,CAACQ,KAAK,CAAC;MACzB;IACF;EAAC;IAAAzyB,GAAA;IAAA5Y,KAAA,EAED,SAAA2qC,WAAWA,CAACjpB,GAAG,EAAE;MACf,IAAM2pB,KAAK,GAAG3pB,GAAG,CAAC4pB,OAAO,CAAC,CAAC,CAAC;MAC5B,IAAI5pB,GAAG,CAAC4pB,OAAO,CAAC3rC,MAAM,KAAK,CAAC,EAAE;QAC5B,IAAI,CAACqiB,KAAK,CAAC3b,CAAC,GAAGglC,KAAK,CAACE,KAAK;QAC1B,IAAI,CAACvpB,KAAK,CAAC3iB,CAAC,GAAGgsC,KAAK,CAACG,KAAK;QAE1B,IAAI,IAAI,CAACtB,UAAU,EAAE;UACnB,IAAMuB,MAAM,GAAGvgC,IAAI,CAACoB,GAAG,CAAC,IAAI,CAAC0V,KAAK,CAAC3b,CAAC,GAAG,IAAI,CAAC6jC,UAAU,CAAC7jC,CAAC,CAAC,GAAG,CAAC;UAC7D,IAAMqlC,MAAM,GAAGxgC,IAAI,CAACoB,GAAG,CAAC,IAAI,CAAC0V,KAAK,CAAC3iB,CAAC,GAAG,IAAI,CAAC6qC,UAAU,CAAC7qC,CAAC,CAAC,GAAG,CAAC;UAC7D,IAAI,IAAI,CAAC2iB,KAAK,CAAC3b,CAAC,GAAG,IAAI,CAAC6jC,UAAU,CAAC7jC,CAAC,EAAE;YACpC,IAAI,CAAC8kC,UAAU,CAAC,MAAM,EAAEM,MAAM,EAAE,KAAK,CAAC;UACxC;UACA,IAAI,IAAI,CAACzpB,KAAK,CAAC3iB,CAAC,GAAG,IAAI,CAAC6qC,UAAU,CAAC7qC,CAAC,EAAE;YACpC,IAAI,CAAC8rC,UAAU,CAAC,IAAI,EAAEO,MAAM,EAAE,KAAK,CAAC;UACtC;UACA,IAAI,IAAI,CAAC1pB,KAAK,CAAC3iB,CAAC,GAAG,IAAI,CAAC6qC,UAAU,CAAC7qC,CAAC,EAAE;YACpC,IAAI,CAAC8rC,UAAU,CAAC,MAAM,EAAEO,MAAM,EAAE,KAAK,CAAC;UACxC;UACA,IAAI,IAAI,CAAC1pB,KAAK,CAAC3b,CAAC,GAAG,IAAI,CAAC6jC,UAAU,CAAC7jC,CAAC,EAAE;YACpC,IAAI,CAAC8kC,UAAU,CAAC,OAAO,EAAEM,MAAM,EAAE,KAAK,CAAC;UACzC;QACF;QACA,IAAI,CAACvB,UAAU,GAAG;UAChB7jC,CAAC,EAAE,IAAI,CAAC2b,KAAK,CAAC3b,CAAC;UACfhH,CAAC,EAAE,IAAI,CAAC2iB,KAAK,CAAC3iB;QAChB,CAAC;MACH,CAAC,MAAM;QACL,IAAI,CAACurC,WAAW,CAACS,KAAK,CAAC;MACzB;IACF;EAAC;IAAAzyB,GAAA;IAAA5Y,KAAA,EAED,SAAA0qC,UAAUA,CAAChpB,GAAG,EAAE;MACd,IAAM2pB,KAAK,GAAG3pB,GAAG,CAACiqB,cAAc,CAAC,CAAC,CAAC;MACnC,IAAIjqB,GAAG,CAACiqB,cAAc,CAAChsC,MAAM,KAAK,CAAC,EAAE;QACnC,IAAI,CAACmrC,SAAS,CAACO,KAAK,CAAC;MACvB;IACF;EAAC;IAAAzyB,GAAA;IAAA5Y,KAAA,EAED,SAAA6qC,WAAWA,CAACnpB,GAAG,EAAE;MACf,IAAI,CAACM,KAAK,CAAC3b,CAAC,GAAGqb,GAAG,CAAC6pB,KAAK;MACxB,IAAI,CAACvpB,KAAK,CAAC3iB,CAAC,GAAGqiB,GAAG,CAAC8pB,KAAK;MACxB,IAAI,CAAC,IAAI,CAACzpB,YAAY,CAACL,GAAG,CAAC,EAAE;QAC3B;MACF;MACA,IAAI,CAACkqB,YAAY,GAAG;QAClBvlC,CAAC,EAAE,IAAI,CAAC2b,KAAK,CAAC3b,CAAC;QACfhH,CAAC,EAAE,IAAI,CAAC2iB,KAAK,CAAC3iB;MAChB,CAAC;IACH;EAAC;IAAAuZ,GAAA;IAAA5Y,KAAA,EAED,SAAA4qC,WAAWA,CAAClpB,GAAG,EAAE;MACf,IAAAuB,aAAA,GAEI,IAAI,CADNva,OAAO;QAAIhC,GAAG,GAAAuc,aAAA,CAAHvc,GAAG;QAAEmD,MAAM,GAAAoZ,aAAA,CAANpZ,MAAM;QAAE89B,GAAG,GAAA1kB,aAAA,CAAH0kB,GAAG;MAG7B,IAAI,CAAC3lB,KAAK,CAAC3b,CAAC,GAAGqb,GAAG,CAAC6pB,KAAK;MACxB,IAAI,CAACvpB,KAAK,CAAC3iB,CAAC,GAAGqiB,GAAG,CAAC8pB,KAAK;;MAExB;MACA,IAAI,IAAI,CAAC3pB,aAAa,EAAE;QACtB,IAAMzU,GAAG,GAAGhC,0BAAoB,CAC9B,IAAI,CAAC4W,KAAK,CAAC3b,CAAC,GAAGK,GAAG,CAACL,CAAC,EACpB,IAAI,CAAC2b,KAAK,CAAC3iB,CAAC,IAAIsoC,GAAG,CAACC,MAAM,CAAC5hC,MAAM,GAAG2hC,GAAG,CAACC,MAAM,CAAC5hC,MAAM,GAAGU,GAAG,CAACrH,CAAC,GAAG,IAAI,CAAC2iB,KAAK,CAAC3iB,CAAC,GAAGqH,GAAG,CAACrH,CACrF,CAAC;QACD,IAAMV,CAAC,GAAGuM,IAAI,CAACuB,GAAG,CAACvB,IAAI,CAACwB,GAAG,CAACU,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE1G,GAAG,CAACxD,IAAI,CAAC;QACjD,IAAMgK,CAAC,GAAGhC,IAAI,CAACuB,GAAG,CAACvB,IAAI,CAACwB,GAAG,CAACU,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE1G,GAAG,CAACxD,IAAI,CAAC;QACjD,IAAIwD,GAAG,CAAC6I,IAAI,CAAC5Q,CAAC,CAAC,IAAI+H,GAAG,CAAC6I,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,CAAC,EAAE;UACjC,IAAM6C,IAAI,GAAGrJ,GAAG,CAAC6I,IAAI,CAAC5Q,CAAC,CAAC,CAACuO,CAAC,CAAC;UAC3B,IAAI,CAAC2U,aAAa,CAACxb,CAAC,GAAG0J,IAAI,CAAC1J,CAAC,GAAG,IAAI,CAAC01B,MAAM,CAAC11B,CAAC;UAC7C,IAAI,CAACwb,aAAa,CAACxiB,CAAC,GAAG0Q,IAAI,CAAC1Q,CAAC,GAAG,IAAI,CAAC08B,MAAM,CAAC18B,CAAC;UAC7C,IAAIgT,MAAM,GAAG,IAAI;UAEjB,IAAMlG,IAAI,GAAG,IAAI,CAAC0V,aAAa,CAAC3e,IAAI,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC;UAClD,IAAI,IAAI,CAAC2e,aAAa,CAACgqB,YAAY,EAAE;YACnC,IAAIC,kBAAkB,GAAG,CAAC;YAC1B,IAAIC,UAAU,GAAG,CAAC;YAClBx5B,wBAAwB,CAAC5T,CAAC,EAAEuO,CAAC,EAAExG,GAAG,CAAC6I,IAAI,EAAEpD,IAAI,EAAE,UAAA4D,IAAI,EAAI;cACrD,IAAIA,IAAI,CAACgG,QAAQ,IAAIhG,IAAI,CAACa,KAAK,IAAI,CAACb,IAAI,CAAC2D,OAAO,EAAE;gBAChDrB,MAAM,GAAG,KAAK;gBACd;cACF;cACA,IAAItC,IAAI,CAACupB,WAAW,EAAE;gBACpBwS,kBAAkB,EAAE;cACtB,CAAC,MAAM,IAAI/7B,IAAI,CAACe,QAAQ,KAAK,OAAO,EAAE;gBACpCi7B,UAAU,EAAE;cACd;YACF,CAAC,CAAC;YACF,IAAID,kBAAkB,GAAG,CAAC,IAAIC,UAAU,GAAG,CAAC,EAAE;cAC5C15B,MAAM,GAAG,KAAK;YAChB;UACF,CAAC,MAAM;YACLE,wBAAwB,CAAC5T,CAAC,EAAEuO,CAAC,EAAExG,GAAG,CAAC6I,IAAI,EAAEpD,IAAI,EAAE,UAAA4D,IAAI,EAAI;cACrD,IAAIA,IAAI,CAACe,QAAQ,KAAK,OAAO,IAAIf,IAAI,CAACa,KAAK,IAAIb,IAAI,CAACgG,QAAQ,IAAIhG,IAAI,CAAC+F,MAAM,IAAI,CAAC/F,IAAI,CAAC2D,OAAO,EAAE;gBAC5FrB,MAAM,GAAG,KAAK;gBACd;cACF;YACF,CAAC,CAAC;UACJ;UACA;UACA,IAAM/M,MAAM,GAAG,IAAI,CAACuc,aAAa,CAACkB,eAAe,CAAC,QAAQ,CAAC;UAC3D,IAAMxd,KAAK,GAAG,IAAI,CAACsc,aAAa,CAACkB,eAAe,CAAC,OAAO,CAAC;UACzD,IAAI1Q,MAAM,EAAE;YACV/M,MAAM,CAACs1B,IAAI,GAAGl+B,WAAW;YACzB,IAAI6I,KAAK,EAAE;cACTA,KAAK,CAACq1B,IAAI,GAAGl+B,WAAW;YAC1B;UACF,CAAC,MAAM;YACL4I,MAAM,CAACs1B,IAAI,GAAG/9B,SAAS;YACvB,IAAI0I,KAAK,EAAE;cACTA,KAAK,CAACq1B,IAAI,GAAG/9B,SAAS;YACxB;UACF;UACA,IAAI,CAACglB,aAAa,CAACxP,MAAM,GAAGA,MAAM;QACpC;QACA;MACF;;MAEA;MACA,IACE,CAAC,IAAI,CAACyP,cAAc,IACpB,IAAI,CAAC8pB,YAAY,IACjB3+B,oBAAc,CAAC,IAAI,CAAC+U,KAAK,CAAC3b,CAAC,EAAE,IAAI,CAAC2b,KAAK,CAAC3iB,CAAC,EAAE,IAAI,CAACusC,YAAY,CAACvlC,CAAC,EAAE,IAAI,CAACulC,YAAY,CAACvsC,CAAC,CAAC,GAAG,CAAC,EACxF;QACA,IAAI,CAACyiB,cAAc,GAAG;UACpBzb,CAAC,EAAE,IAAI,CAACulC,YAAY,CAACvlC,CAAC;UACtBhH,CAAC,EAAE,IAAI,CAACusC,YAAY,CAACvsC,CAAC;UACtB0G,KAAK,EAAE,CAAC;UACRC,MAAM,EAAE,CAAC;UACTgmC,KAAK,EAAE,IAAIvpC,qBAAQ,CAAC;QACtB,CAAC;QACDklC,GAAG,CAACsE,KAAK,CAACtpB,QAAQ,CAAC,IAAI,CAACb,cAAc,CAACkqB,KAAK,CAAC;MAC/C;MAEA,IAAI,IAAI,CAAClqB,cAAc,IAAI,CAAC,IAAI,CAACD,aAAa,EAAE;QAC9C,IAAIhY,MAAM,CAACwX,aAAa,CAAC1hB,MAAM,IAAIkK,MAAM,CAACgd,gBAAgB,EAAE;UAC1Dhd,MAAM,CAACyX,WAAW,CAAC,CAAC;QACtB;QACA,IAAM0qB,KAAK,GAAG,IAAI,CAAClqB,cAAc,CAACkqB,KAAK;QACvCA,KAAK,CAACzoB,KAAK,CAAC,CAAC;QAEb,IAAI,CAACzB,cAAc,CAAC/b,KAAK,GAAG,IAAI,CAACic,KAAK,CAAC3b,CAAC,GAAG,IAAI,CAACyb,cAAc,CAACzb,CAAC;QAChE,IAAI,CAACyb,cAAc,CAAC9b,MAAM,GAAG,IAAI,CAACgc,KAAK,CAAC3iB,CAAC,GAAG,IAAI,CAACyiB,cAAc,CAACziB,CAAC;QAEjE,IAAMgH,CAAC,GAAG6E,IAAI,CAACuB,GAAG,CAAC,IAAI,CAACqV,cAAc,CAACzb,CAAC,EAAE,IAAI,CAACyb,cAAc,CAACzb,CAAC,GAAG,IAAI,CAACyb,cAAc,CAAC/b,KAAK,CAAC;QAC5F,IAAM1G,CAAC,GAAG6L,IAAI,CAACuB,GAAG,CAAC,IAAI,CAACqV,cAAc,CAACziB,CAAC,EAAE,IAAI,CAACyiB,cAAc,CAACziB,CAAC,GAAG,IAAI,CAACyiB,cAAc,CAAC9b,MAAM,CAAC;QAC7F,IAAMxF,CAAC,GAAG0K,IAAI,CAACoB,GAAG,CAAC,IAAI,CAACwV,cAAc,CAAC/b,KAAK,CAAC;QAC7C,IAAMgM,CAAC,GAAG7G,IAAI,CAACoB,GAAG,CAAC,IAAI,CAACwV,cAAc,CAAC9b,MAAM,CAAC;QAE9CgmC,KAAK,CAACnnB,IAAI,CAACxe,CAAC,EAAEhH,CAAC,EAAEmB,CAAC,EAAEuR,CAAC,CAAC,CAACjK,MAAM,CAACpL,WAAW,CAAC;MAC5C;IACF;EAAC;IAAAkc,GAAA;IAAA5Y,KAAA,EAED,SAAA8qC,SAASA,CAACppB,GAAG,EAAE;MACb,IAAA8H,cAAA,GAEI,IAAI,CADN9gB,OAAO;QAAI0Y,IAAI,GAAAoI,cAAA,CAAJpI,IAAI;QAAE1a,GAAG,GAAA8iB,cAAA,CAAH9iB,GAAG;QAAEmD,MAAM,GAAA2f,cAAA,CAAN3f,MAAM;MAE9B,IAAI,CAAC+hC,YAAY,GAAG,IAAI;MACxB5xB,YAAY,CAAC,IAAI,CAACqqB,gBAAgB,CAAC;MACnC,IAAI,CAAC,IAAI,CAACtiB,YAAY,CAACL,GAAG,CAAC,IAAI,IAAI,CAACM,KAAK,CAACC,OAAO,IAAI,IAAI,CAACkoB,SAAS,EAAE;QACnE,IAAI,CAACnoB,KAAK,CAACC,OAAO,GAAG,KAAK;QAC1B;MACF;MACA,CAAApY,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEgd,gBAAgB,KAAIhd,MAAM,CAACyX,WAAW,CAAC,CAAC;MAChD;MACA,IAAI,IAAI,CAACQ,cAAc,EAAE;QACvB,IAAIoqB,cAAc;QAClB,IAAIC,WAAW,GAAG,CAAC;QACnBtiC,MAAM,CAACyX,WAAW,CAAC,CAAC;QACpB;QACA,KAAK,IAAI3iB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkL,MAAM,CAAC2Y,KAAK,CAAC7iB,MAAM,EAAEhB,CAAC,EAAE,EAAE;UAC5C,IAAMyjB,IAAI,GAAGvY,MAAM,CAAC2Y,KAAK,CAAC7jB,CAAC,CAAC;UAC5B,IACEkL,MAAM,CAACwX,aAAa,CAAC1hB,MAAM,GAAG1B,gBAAgB,IAC9CkQ,gBAAgB,CACdiU,IAAI,CAAC/b,CAAC,GAAG,IAAI,CAAC01B,MAAM,CAAC11B,CAAC,EACtB+b,IAAI,CAAC/iB,CAAC,GAAG,IAAI,CAAC08B,MAAM,CAAC18B,CAAC,EACtB,IAAI,CAACyiB,cAAc,CAACzb,CAAC,EACrB,IAAI,CAACyb,cAAc,CAACziB,CAAC,EACrB,IAAI,CAACyiB,cAAc,CAAC/b,KAAK,EACzB,IAAI,CAAC+b,cAAc,CAAC9b,MAAM,EAC1B,IACF,CAAC,EACD;YACAoc,IAAI,CAACb,MAAM,CAAC,CAAC;YACb4qB,WAAW,EAAE;YACb,IAAI/pB,IAAI,CAAC/e,IAAI,KAAK,UAAU,EAAE;cAC5B6oC,cAAc,GAAG9pB,IAAI;YACvB;YACAvY,MAAM,CAACwX,aAAa,CAAC9e,IAAI,CAAC6f,IAAI,CAAC;UACjC;QACF;QACA;QACA,IAAI+pB,WAAW,EAAE;UACf,IAAID,cAAc,EAAE;YAClBriC,MAAM,CAACukB,YAAY,GAAG8d,cAAc;YACpC9qB,IAAI,CAACI,YAAY,CAAC0qB,cAAc,CAAC;UACnC,CAAC,MAAM;YACL;YACAriC,MAAM,CAACukB,YAAY,GAAGvkB,MAAM,CAACwX,aAAa,CAAC,CAAC,CAAC;YAC7CD,IAAI,CAACI,YAAY,CAAC3X,MAAM,CAACwX,aAAa,CAAC,CAAC,CAAC,CAAC;UAC5C;QACF;QACA;QACA,IAAI,IAAI,CAACS,cAAc,EAAE;UACvB,IAAI,CAACA,cAAc,CAACkqB,KAAK,CAACpoB,OAAO,CAAC,IAAI,CAAC;UACvC,IAAI,CAAC9B,cAAc,GAAG,IAAI;QAC5B;QACA;MACF;MACA,IAAI,IAAI,CAACC,YAAY,CAACL,GAAG,CAAC,EAAE;QAC1B,IAAMtU,GAAG,GAAGhC,0BAAoB,CAAC,IAAI,CAAC4W,KAAK,CAAC3b,CAAC,GAAGK,GAAG,CAACL,CAAC,EAAE,IAAI,CAAC2b,KAAK,CAAC3iB,CAAC,GAAGqH,GAAG,CAACrH,CAAC,CAAC;QAC5E,IAAMV,EAAC,GAAGuM,IAAI,CAACuB,GAAG,CAACvB,IAAI,CAACwB,GAAG,CAACU,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE1G,GAAG,CAACxD,IAAI,CAAC;QACjD,IAAMgK,CAAC,GAAGhC,IAAI,CAACuB,GAAG,CAACvB,IAAI,CAACwB,GAAG,CAACU,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE1G,GAAG,CAACxD,IAAI,CAAC;QACjD,IAAIwD,GAAG,CAAC6I,IAAI,CAAC5Q,EAAC,CAAC,IAAI+H,GAAG,CAAC6I,IAAI,CAAC5Q,EAAC,CAAC,CAACuO,CAAC,CAAC,EAAE;UACjC,IAAM6C,IAAI,GAAGrJ,GAAG,CAAC6I,IAAI,CAAC5Q,EAAC,CAAC,CAACuO,CAAC,CAAC;UAC3B,IAAI,CAAC6C,IAAI,CAACa,KAAK,IAAIb,IAAI,CAACjJ,GAAG,KAAKiJ,IAAI,CAAC2D,OAAO,EAAE;YAC5C;UACF;UACA,IAAI,IAAI,CAACmO,aAAa,EAAE;YACtB,IAAI9R,IAAI,CAACgG,QAAQ,IAAIhG,IAAI,CAAC+F,MAAM,EAAE;cAChC;YACF;YACA,IAAI,IAAI,CAAC+L,aAAa,CAACxP,MAAM,EAAE;cAC7B,IAAIxI,MAAM,CAAC8pB,WAAW,CAACh1B,EAAC,EAAEuO,CAAC,EAAE,IAAI,CAAC2U,aAAa,CAACxe,IAAI,CAAC,EAAE;gBACrD,IAAI,CAAC4lC,mBAAmB,CAAC,CAAC;gBAC1B,IAAI7nB,IAAI,CAAC1Z,SAAS,EAAE;kBAClB0Z,IAAI,CAACI,YAAY,CAACJ,IAAI,CAAC1Z,SAAS,CAAC;gBACnC;cACF;YACF;UACF,CAAC,MAAM,IAAImC,MAAM,aAANA,MAAM,eAANA,MAAM,CAAEwX,aAAa,CAAC1hB,MAAM,EAAE;YACvC;YACA,IAAMysC,YAAY,GAAG7sB,kBAAM,CAAC9b,KAAK,CAACC,GAAG,CAAC,OAAO,CAAC;YAC9C,IAAM2oC,OAAO,GAAG,IAAI5sB,2BAAc,CAAC2sB,YAAY,CAAC9zB,UAAU,CAAC,WAAW,CAAC,CAAC;YACxE+zB,OAAO,CAAC90B,cAAc,GAAG,GAAG,GAAGtb,WAAW;YAC1CowC,OAAO,CAAC3e,IAAI,GAAG,KAAK;YACpB2e,OAAO,CAACt0B,MAAM,CAACC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC;YAC5Bq0B,OAAO,CAAChmC,CAAC,GAAG,IAAI,CAAC2b,KAAK,CAAC3b,CAAC;YACxBgmC,OAAO,CAAChtC,CAAC,GAAG,IAAI,CAAC2iB,KAAK,CAAC3iB,CAAC;YACxBgtC,OAAO,CAAC9rB,SAAS,GAAG,KAAK;YACzB8rB,OAAO,CAAC/rB,UAAU,GAAG,KAAK;YAC1B+rB,OAAO,CAAChsB,SAAS,GAAG,MAAM;YAC1BgsB,OAAO,CAACprB,WAAW,GAAG,IAAI;YAC1BorB,OAAO,CAACnb,UAAU,GAAG,YAAM;cACzBmb,OAAO,CAACzoB,OAAO,CAAC,CAAC;YACnB,CAAC;YACDyoB,OAAO,CAAC7zB,IAAI,CAAC,CAAC;YACd,IAAI,CAACmK,QAAQ,CAAC0pB,OAAO,CAAC;YACtB;YACA,IAAI,CAACrG,SAAS,CAACj2B,IAAI,CAAC;UACtB;QACF;MACF;IACF;EAAC;IAAA6I,GAAA;IAAA5Y,KAAA,EAED,SAAAgmC,SAASA,CAACj2B,IAAI,EAAE;MACd,IAAA2Z,cAAA,GAEI,IAAI,CADNhhB,OAAO;QAAImB,MAAM,GAAA6f,cAAA,CAAN7f,MAAM;QAAEnD,GAAG,GAAAgjB,cAAA,CAAHhjB,GAAG;MAExB,IAAM6J,IAAI,GAAGrF,IAAI,CAACuB,GAAG,CAAAnL,KAAA,CAAR4J,IAAI,EAAA+G,0BAAA,CAAQpI,MAAM,CAACwX,aAAa,CAAC3a,GAAG,CAAC,UAAA0b,IAAI;QAAA,OAAIA,IAAI,CAACzjB,CAAC;MAAA,EAAC,EAAC;MAClE,IAAM8R,IAAI,GAAGvF,IAAI,CAACuB,GAAG,CAAAnL,KAAA,CAAR4J,IAAI,EAAA+G,0BAAA,CAAQpI,MAAM,CAACwX,aAAa,CAAC3a,GAAG,CAAC,UAAA0b,IAAI;QAAA,OAAIA,IAAI,CAAClV,CAAC;MAAA,EAAC,EAAC;MAClE,IAAMsD,IAAI,GAAGtF,IAAI,CAACwB,GAAG,CAAApL,KAAA,CAAR4J,IAAI,EAAA+G,0BAAA,CAAQpI,MAAM,CAACwX,aAAa,CAAC3a,GAAG,CAAC,UAAA0b,IAAI;QAAA,OAAIA,IAAI,CAACzjB,CAAC;MAAA,EAAC,EAAC;MAClE,IAAM+R,IAAI,GAAGxF,IAAI,CAACwB,GAAG,CAAApL,KAAA,CAAR4J,IAAI,EAAA+G,0BAAA,CAAQpI,MAAM,CAACwX,aAAa,CAAC3a,GAAG,CAAC,UAAA0b,IAAI;QAAA,OAAIA,IAAI,CAAClV,CAAC;MAAA,EAAC,EAAC;MAClE,IAAMg1B,OAAO,GAAG3xB,IAAI,GAAGrF,IAAI,CAACG,KAAK,CAAC,CAACmF,IAAI,GAAGD,IAAI,IAAI,CAAC,CAAC;MACpD,IAAM4xB,OAAO,GAAG1xB,IAAI,GAAGvF,IAAI,CAACG,KAAK,CAAC,CAACqF,IAAI,GAAGD,IAAI,IAAI,CAAC,CAAC;MACpD,IAAI8V,eAAe,GAAG,KAAK;MAC3B,IAAI+lB,cAAc,GAAG,KAAK;MAC1B,KAAK,IAAIvtC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8K,MAAM,CAACwX,aAAa,CAAC1hB,MAAM,EAAEZ,CAAC,EAAE,EAAE;QACpD,IAAMqjB,IAAI,GAAGvY,MAAM,CAACwX,aAAa,CAACtiB,CAAC,CAAC;QACpC,IAAMwtC,WAAW,GAAGnqB,IAAI,CAACzjB,CAAC,GAAGujC,OAAO;QACpC,IAAMsK,WAAW,GAAGpqB,IAAI,CAAClV,CAAC,GAAGi1B,OAAO;QACpC,IAAMqF,MAAM,GAAGz3B,IAAI,CAACpR,CAAC,GAAG4tC,WAAW;QACnC,IAAM9E,MAAM,GAAG13B,IAAI,CAAC7C,CAAC,GAAGs/B,WAAW;QACnC,IAAIpqB,IAAI,CAAC/e,IAAI,KAAK,UAAU,EAAE;UAC5BkjB,eAAe,GAAG,IAAI;QACxB,CAAC,MAAM;UACL+lB,cAAc,GAAG,IAAI;QACvB;QACA,IAAI5lC,GAAG,CAAC6I,IAAI,CAACi4B,MAAM,CAAC,IAAI9gC,GAAG,CAAC6I,IAAI,CAACi4B,MAAM,CAAC,CAACC,MAAM,CAAC,EAAE;UAChD59B,MAAM,CAACwX,aAAa,CAACtiB,CAAC,CAAC,CAACujB,MAAM,CAAC5b,GAAG,CAAC6I,IAAI,CAACi4B,MAAM,CAAC,CAACC,MAAM,CAAC,CAAC;QAC1D,CAAC,MAAM;UACL59B,MAAM,CAACwX,aAAa,CAACtiB,CAAC,CAAC,CAACujB,MAAM,CAACvS,IAAI,CAAC;QACtC;MACF;MACA,IAAIu8B,cAAc,EAAE;QAClB,IAAM/pB,KAAK,GAAG3V,gBAAU,CAAC,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;QAC1DwS,uBAAK,CAAC5G,IAAI,CAAC+J,KAAK,CAAC;MACnB,CAAC,MAAM,IAAIgE,eAAe,EAAE;QAC1BnH,uBAAK,CAAC5G,IAAI,CAAC,MAAM,CAAC;MACpB;IACF;EAAC;IAAAI,GAAA;IAAA5Y,KAAA,EAED,SAAA+hB,YAAYA,CAACL,GAAG,EAAE;MAChB,OAAOA,GAAG,CAACjT,MAAM,KAAK,CAACiT,GAAG,CAACjT,MAAM,CAACg+B,OAAO,IAAI/qB,GAAG,CAACjT,MAAM,CAACwI,OAAO,CAAC,OAAO,CAAC,CAAC;IAC3E;EAAC;IAAA2B,GAAA;IAAA5Y,KAAA,EAED,SAAAipC,mBAAmBA,CAAA,EAAG;MACpB,IAAI,CAAC,IAAI,CAACpnB,aAAa,EAAE;QACvB;MACF;MACA,IAAI,CAACrZ,WAAW,CAAC,IAAI,CAACqZ,aAAa,CAAC;MACpC,IAAI,CAACA,aAAa,CAAC+B,OAAO,CAAC,CAAC;MAC5B,IAAI,CAAC/B,aAAa,GAAG,IAAI;IAC3B;EAAC;IAAAjJ,GAAA;IAAA5Y,KAAA,EAED,SAAA4pC,gBAAgBA,CAAC9gB,QAAQ,EAAE;MAAA,IAAAnH,MAAA;MACzB,IACa9X,MAAM,GACf,IAAI,CADNnB,OAAO,CAAImB,MAAM;MAEnB,IAAI,CAACgY,aAAa,GAAG,IAAIxC,sBAAS,CAAC,CAAC;MACpC,IAAM/Z,MAAM,GAAGga,mBAAM,CAACld,IAAI,CAAC2B,UAAU,CAAC+kB,QAAQ,CAACN,MAAM,SAAM,EAAEjJ,kBAAM,CAAC,CAAC;MACrEja,MAAM,CAACqC,KAAK,GAAG,QAAQ;MACvB,IAAI,CAACka,aAAa,CAACc,QAAQ,CAACrd,MAAM,CAAC;MACnCtG,MAAM,CAACkL,IAAI,CAAC4e,QAAQ,CAAC,CAAC3e,OAAO,CAAC,UAAAC,IAAI,EAAI;QACpCuX,MAAI,CAACE,aAAa,CAACzX,IAAI,CAAC,GAAG0e,QAAQ,CAAC1e,IAAI,CAAC;MAC3C,CAAC,CAAC;MACF,IAAI,CAACyX,aAAa,CAACxb,CAAC,GAAG,IAAI,CAAC2b,KAAK,CAAC3b,CAAC;MACnC,IAAI,CAACwb,aAAa,CAACxiB,CAAC,GAAG,IAAI,CAAC2iB,KAAK,CAAC3iB,CAAC;MACnC,IAAI,CAACwiB,aAAa,CAACla,KAAK,GAAG,eAAe;MAC1C,IAAImhB,QAAQ,CAACN,MAAM,CAACjjB,KAAK,EAAE;QACzB,IAAMA,KAAK,GAAG+Z,mBAAM,CAACld,IAAI,CAAC2B,UAAU,CAAC+kB,QAAQ,CAACN,MAAM,CAACjjB,KAAK,EAAEga,kBAAM,CAAC,CAAC;QACpEha,KAAK,CAACoC,KAAK,GAAG,OAAO;QACrBT,iBAAiB,CAAC3B,KAAK,EAAEsE,MAAM,CAACtE,KAAK,CAAC;QACtC,IAAI,CAACsc,aAAa,CAACc,QAAQ,CAACpd,KAAK,CAAC;MACpC,CAAC,MAAM;QACL2B,iBAAiB,CAAC5B,MAAM,EAAEuE,MAAM,CAACtE,KAAK,CAAC;MACzC;MACA,IAAI,CAACod,QAAQ,CAAC,IAAI,CAACd,aAAa,CAAC;IACnC;EAAC;IAAAjJ,GAAA;IAAA5Y,KAAA,EAED,SAAAmrC,UAAUA,CAACuB,GAAG,EAAEC,SAAS,EAAEC,cAAc,EAAE;MACzC;AACJ;AACA;AACA;AACA;AACA;AACA;;MAEI,IAAAhjB,cAAA,GAEI,IAAI,CADNlhB,OAAO;QAAIhC,GAAG,GAAAkjB,cAAA,CAAHljB,GAAG;QAAEihC,GAAG,GAAA/d,cAAA,CAAH+d,GAAG;QAAEvmB,IAAI,GAAAwI,cAAA,CAAJxI,IAAI;MAG3B,IAAMyrB,YAAY,GAAGD,cAAc,GAAG,GAAG,GAAG,CAAC;MAC7C,IAAMz9B,KAAK,GAAG,CAACw9B,SAAS,IAAI,EAAE,IAAIE,YAAY;MAC9C,IAAMC,CAAC,GAAG;QAAEzmC,CAAC,EAAEvK,UAAU,GAAG,CAAC,GAAG,IAAI,CAACigC,MAAM,CAAC11B,CAAC;QAAEhH,CAAC,EAAE,CAAC,IAAI,CAAC08B,MAAM,CAAC18B;MAAE,CAAC;MAClE,IAAM0tC,CAAC,GAAG;QACR1mC,CAAC,EAAEvK,UAAU,GAAG,CAAC,GAAI4K,GAAG,CAACxD,IAAI,GAAGpH,UAAU,GAAI,CAAC,GAAG,IAAI,CAACigC,MAAM,CAAC11B,CAAC;QAC/DhH,CAAC,EAAGqH,GAAG,CAACxD,IAAI,GAAGnH,WAAW,GAAI,CAAC,GAAG,IAAI,CAACggC,MAAM,CAAC18B;MAChD,CAAC;MACD,IAAM2tC,CAAC,GAAG;QACR3mC,CAAC,EAAEvK,UAAU,GAAG,CAAC,GAAI4K,GAAG,CAACxD,IAAI,GAAGpH,UAAU,GAAI,CAAC,GAAG,IAAI,CAACigC,MAAM,CAAC11B,CAAC;QAC/DhH,CAAC,EAAGqH,GAAG,CAACxD,IAAI,GAAGnH,WAAW,GAAI,CAAC,GAAG,IAAI,CAACggC,MAAM,CAAC18B;MAChD,CAAC;MACD,IAAM4tC,CAAC,GAAG;QAAE5mC,CAAC,EAAEvK,UAAU,GAAG,CAAC,GAAG,IAAI,CAACigC,MAAM,CAAC11B,CAAC;QAAEhH,CAAC,EAAEqH,GAAG,CAACxD,IAAI,GAAGnH,WAAW,GAAG,IAAI,CAACggC,MAAM,CAAC18B;MAAE,CAAC;MAC1F,IAAM6tC,YAAY,GAAG;QACnB7mC,CAAC,EAAE,IAAI,CAAC01B,MAAM,CAAC11B,CAAC,GAAGshC,GAAG,CAACC,MAAM,CAAC7hC,KAAK,GAAG,CAAC,GAAG,IAAI,CAACg2B,MAAM,CAAC11B,CAAC;QACvDhH,CAAC,EAAE,IAAI,CAAC08B,MAAM,CAAC18B,CAAC,GAAGsoC,GAAG,CAACC,MAAM,CAAC5hC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC+1B,MAAM,CAAC18B;MACzD,CAAC;MAED,IAAIqtC,GAAG,KAAK,MAAM,EAAE;QAClB,IAAIQ,YAAY,CAAC7mC,CAAC,GAAG,GAAG,GAAG0mC,CAAC,CAAC1mC,CAAC,IAAIsF,sBAAsB,CAACmhC,CAAC,EAAEC,CAAC,EAAEG,YAAY,EAAE,EAAE,CAAC,EAAE;UAChF,IAAI,CAACnR,MAAM,CAAC18B,CAAC,IAAI8P,KAAK,IAAIrT,UAAU,GAAGC,WAAW,CAAC;UACnD,IAAI,CAACggC,MAAM,CAAC11B,CAAC,IAAI8I,KAAK;QACxB,CAAC,MAAM,IAAI+9B,YAAY,CAAC7mC,CAAC,GAAG,GAAG,GAAG0mC,CAAC,CAAC1mC,CAAC,IAAIsF,sBAAsB,CAACohC,CAAC,EAAEE,CAAC,EAAEC,YAAY,EAAE,EAAE,CAAC,EAAE;UACvF,IAAI,CAACnR,MAAM,CAAC18B,CAAC,IAAI8P,KAAK,IAAIrT,UAAU,GAAGC,WAAW,CAAC;UACnD,IAAI,CAACggC,MAAM,CAAC11B,CAAC,IAAI8I,KAAK;QACxB,CAAC,MAAM,IAAI+9B,YAAY,CAAC7mC,CAAC,GAAG,GAAG,GAAG0mC,CAAC,CAAC1mC,CAAC,EAAE;UACrC,IAAI,CAAC01B,MAAM,CAAC11B,CAAC,IAAI8I,KAAK;QACxB;MACF,CAAC,MAAM,IAAIu9B,GAAG,KAAK,OAAO,EAAE;QAC1B,IAAIQ,YAAY,CAAC7mC,CAAC,GAAG,GAAG,GAAG2mC,CAAC,CAAC3mC,CAAC,IAAIsF,sBAAsB,CAACmhC,CAAC,EAAEE,CAAC,EAAEE,YAAY,EAAE,EAAE,CAAC,EAAE;UAChF,IAAI,CAACnR,MAAM,CAAC18B,CAAC,IAAI8P,KAAK,IAAIrT,UAAU,GAAGC,WAAW,CAAC;UACnD,IAAI,CAACggC,MAAM,CAAC11B,CAAC,IAAI8I,KAAK;QACxB,CAAC,MAAM,IAAI+9B,YAAY,CAAC7mC,CAAC,GAAG,GAAG,GAAG2mC,CAAC,CAAC3mC,CAAC,IAAIsF,sBAAsB,CAACqhC,CAAC,EAAEC,CAAC,EAAEC,YAAY,EAAE,EAAE,CAAC,EAAE;UACvF,IAAI,CAACnR,MAAM,CAAC18B,CAAC,IAAI8P,KAAK,IAAIrT,UAAU,GAAGC,WAAW,CAAC;UACnD,IAAI,CAACggC,MAAM,CAAC11B,CAAC,IAAI8I,KAAK;QACxB,CAAC,MAAM,IAAI+9B,YAAY,CAAC7mC,CAAC,GAAG,GAAG,GAAG2mC,CAAC,CAAC3mC,CAAC,EAAE;UACrC,IAAI,CAAC01B,MAAM,CAAC11B,CAAC,IAAI8I,KAAK;QACxB;MACF;MACA,IAAIu9B,GAAG,KAAK,IAAI,EAAE;QAChB,IAAIQ,YAAY,CAAC7tC,CAAC,GAAG,EAAE,GAAGytC,CAAC,CAACztC,CAAC,IAAIsM,sBAAsB,CAACmhC,CAAC,EAAEC,CAAC,EAAEG,YAAY,EAAE,EAAE,CAAC,EAAE;UAC/E,IAAI,CAACnR,MAAM,CAAC18B,CAAC,IAAI8P,KAAK,IAAIrT,UAAU,GAAGC,WAAW,CAAC;UACnD,IAAI,CAACggC,MAAM,CAAC11B,CAAC,IAAI8I,KAAK;QACxB,CAAC,MAAM,IAAI+9B,YAAY,CAAC7tC,CAAC,GAAG,EAAE,GAAGytC,CAAC,CAACztC,CAAC,IAAIsM,sBAAsB,CAACmhC,CAAC,EAAEE,CAAC,EAAEE,YAAY,EAAE,EAAE,CAAC,EAAE;UACtF,IAAI,CAACnR,MAAM,CAAC18B,CAAC,IAAI8P,KAAK,IAAIrT,UAAU,GAAGC,WAAW,CAAC;UACnD,IAAI,CAACggC,MAAM,CAAC11B,CAAC,IAAI8I,KAAK;QACxB,CAAC,MAAM,IAAI+9B,YAAY,CAAC7tC,CAAC,GAAG,EAAE,GAAGytC,CAAC,CAACztC,CAAC,EAAE;UACpC,IAAI,CAAC08B,MAAM,CAAC18B,CAAC,IAAI8P,KAAK;QACxB;MACF,CAAC,MAAM,IAAIu9B,GAAG,KAAK,MAAM,EAAE;QACzB,IAAIQ,YAAY,CAAC7tC,CAAC,GAAG,EAAE,GAAG4tC,CAAC,CAAC5tC,CAAC,IAAIsM,sBAAsB,CAACqhC,CAAC,EAAEC,CAAC,EAAEC,YAAY,EAAE,EAAE,CAAC,EAAE;UAC/E,IAAI,CAACnR,MAAM,CAAC18B,CAAC,IAAI8P,KAAK,IAAIrT,UAAU,GAAGC,WAAW,CAAC;UACnD,IAAI,CAACggC,MAAM,CAAC11B,CAAC,IAAI8I,KAAK;QACxB,CAAC,MAAM,IAAI+9B,YAAY,CAAC7tC,CAAC,GAAG,EAAE,GAAG4tC,CAAC,CAAC5tC,CAAC,IAAIsM,sBAAsB,CAACohC,CAAC,EAAEE,CAAC,EAAEC,YAAY,EAAE,EAAE,CAAC,EAAE;UACtF,IAAI,CAACnR,MAAM,CAAC18B,CAAC,IAAI8P,KAAK,IAAIrT,UAAU,GAAGC,WAAW,CAAC;UACnD,IAAI,CAACggC,MAAM,CAAC11B,CAAC,IAAI8I,KAAK;QACxB,CAAC,MAAM,IAAI+9B,YAAY,CAAC7tC,CAAC,GAAG,GAAG,GAAG4tC,CAAC,CAAC5tC,CAAC,EAAE;UACrC,IAAI,CAAC08B,MAAM,CAAC18B,CAAC,IAAI8P,KAAK;QACxB;MACF;MAEAiS,IAAI,CAACwlB,mBAAmB,CAAC,CAAC;MAC1BlgC,GAAG,CAACm1B,aAAa,CAAC,CAAC,IAAI,CAACE,MAAM,CAAC11B,CAAC,EAAE,CAAC,IAAI,CAAC01B,MAAM,CAAC18B,CAAC,CAAC;MACjD,IAAI,CAAC8tC,kBAAkB,CAAC,CAAC;IAC3B;EAAC;IAAAv0B,GAAA;IAAA5Y,KAAA,EAED,SAAAsqC,mBAAmBA,CAAC5oB,GAAG,EAAE;MAAA,IAAAkG,MAAA;MACvB1C,aAAa,CAAC,IAAI,CAACklB,kBAAkB,CAAC;MACtC,IAAMsC,GAAG,GAAG,EAAE;MACd,IAAM1qB,KAAK,GAAG;QACZ3b,CAAC,EAAEqb,GAAG,CAAC6pB,KAAK;QACZlsC,CAAC,EAAEqiB,GAAG,CAAC8pB;MACT,CAAC;MACD,IAAM4B,IAAI,GAAG,CAAC;MACd,IAAMC,QAAQ,GAAG,EAAE;MAEnB,IAAMC,KAAK,GAAG;QACZl/B,IAAI,EAAE,CAAC,CAAC,GAAGi/B,QAAQ,GAAGrrB,KAAK,CAAC3b,CAAC,IAAI+mC,IAAI;QACrCG,KAAK,EAAE,CAACvrB,KAAK,CAAC3b,CAAC,IAAIjK,MAAM,CAACC,UAAU,GAAGgxC,QAAQ,CAAC,IAAID,IAAI;QACxDI,EAAE,EAAE,CAAC,CAAC,GAAGH,QAAQ,GAAGrrB,KAAK,CAAC3iB,CAAC,IAAI+tC,IAAI;QACnCK,IAAI,EAAE,CAACzrB,KAAK,CAAC3iB,CAAC,IAAIjD,MAAM,CAACE,WAAW,GAAG+wC,QAAQ,CAAC,IAAID;MACtD,CAAC;MACD,IAAIprB,KAAK,CAAC3b,CAAC,IAAI,CAAC,IAAI2b,KAAK,CAAC3b,CAAC,IAAI,CAAC,GAAGgnC,QAAQ,IAAIrrB,KAAK,CAAC3iB,CAAC,IAAI,CAAC,IAAI2iB,KAAK,CAAC3iB,CAAC,IAAIjD,MAAM,CAACE,WAAW,EAAE;QAC5FowC,GAAG,CAACnqC,IAAI,CAAC,MAAM,CAAC;MAClB,CAAC,MAAM,IACLyf,KAAK,CAAC3b,CAAC,GAAGjK,MAAM,CAACC,UAAU,GAAGgxC,QAAQ,IACtCrrB,KAAK,CAAC3b,CAAC,IAAIjK,MAAM,CAACC,UAAU,IAC5B2lB,KAAK,CAAC3iB,CAAC,IAAI,CAAC,IACZ2iB,KAAK,CAAC3iB,CAAC,IAAIjD,MAAM,CAACE,WAAW,EAC7B;QACAowC,GAAG,CAACnqC,IAAI,CAAC,OAAO,CAAC;MACnB;MACA,IAAIyf,KAAK,CAAC3b,CAAC,IAAI,CAAC,IAAI2b,KAAK,CAAC3b,CAAC,IAAIjK,MAAM,CAACC,UAAU,IAAI2lB,KAAK,CAAC3iB,CAAC,IAAI,CAAC,IAAI2iB,KAAK,CAAC3iB,CAAC,IAAI,CAAC,GAAGguC,QAAQ,EAAE;QAC3FX,GAAG,CAACnqC,IAAI,CAAC,IAAI,CAAC;MAChB,CAAC,MAAM,IACLyf,KAAK,CAAC3b,CAAC,IAAI,CAAC,IACZ2b,KAAK,CAAC3b,CAAC,IAAIjK,MAAM,CAACC,UAAU,IAC5B2lB,KAAK,CAAC3iB,CAAC,GAAGjD,MAAM,CAACE,WAAW,GAAG+wC,QAAQ,IACvCrrB,KAAK,CAAC3iB,CAAC,IAAIjD,MAAM,CAACE,WAAW,EAC7B;QACAowC,GAAG,CAACnqC,IAAI,CAAC,MAAM,CAAC;MAClB;MACA,IAAImqC,GAAG,CAAC/sC,MAAM,EAAE;QACd,IAAI,CAACyqC,kBAAkB,GAAGplB,WAAW,CAAC,YAAM;UAC1C0nB,GAAG,CAACviC,OAAO,CAAC,UAAAC,IAAI,EAAI;YAClBwd,MAAI,CAACujB,UAAU,CAAC/gC,IAAI,EAAEkjC,KAAK,CAACljC,IAAI,CAAC,CAAC;UACpC,CAAC,CAAC;QACJ,CAAC,EAAE,EAAE,CAAC;MACR;IACF;EAAC;IAAAwO,GAAA;IAAA5Y,KAAA,EAED,SAAAwT,gBAAgBA,CAAC/L,QAAQ,EAAE;MACzB,IACakgC,GAAG,GACZ,IAAI,CADNj/B,OAAO,CAAIi/B,GAAG;MAEhB,OAAOx5B,gBAAgB,CAAC1G,QAAQ,CAACpB,CAAC,EAAEoB,QAAQ,CAACpI,CAAC,EAAE,IAAI,CAAC08B,MAAM,CAAC11B,CAAC,EAAE,IAAI,CAAC01B,MAAM,CAAC18B,CAAC,EAAEsoC,GAAG,CAACC,MAAM,CAAC7hC,KAAK,EAAE4hC,GAAG,CAACC,MAAM,CAAC5hC,MAAM,CAAC;IACpH;EAAC;IAAA4S,GAAA;IAAA5Y,KAAA,EAED,SAAAiuB,eAAeA,CAAC9X,QAAQ,EAAE;MACxB,IAAAkU,cAAA,GAEI,IAAI,CADN3hB,OAAO;QAAIhC,GAAG,GAAA2jB,cAAA,CAAH3jB,GAAG;QAAEihC,GAAG,GAAAtd,cAAA,CAAHsd,GAAG;MAGrB,IAAM+F,WAAW,GAAG;QAClBrnC,CAAC,EAAE6E,IAAI,CAACC,KAAK,CAAC,IAAI,CAAC4wB,MAAM,CAAC11B,CAAC,CAAC;QAC5BhH,CAAC,EAAE6L,IAAI,CAACC,KAAK,CAAC,IAAI,CAAC4wB,MAAM,CAAC18B,CAAC;MAC7B,CAAC;MACD,IAAMsuC,MAAM,GAAG7xC,UAAU;MAEzB,KAAK,IAAI6C,CAAC,GAAG+uC,WAAW,CAACrnC,CAAC,GAAGsnC,MAAM,EAAEhvC,CAAC,IAAI+uC,WAAW,CAACrnC,CAAC,GAAGshC,GAAG,CAACC,MAAM,CAAC7hC,KAAK,GAAG4nC,MAAM,EAAEhvC,CAAC,IAAI7C,UAAU,GAAG,CAAC,EAAE;QACxG,KAAK,IAAIoR,CAAC,GAAGwgC,WAAW,CAACruC,CAAC,GAAGsuC,MAAM,EAAEzgC,CAAC,IAAIwgC,WAAW,CAACruC,CAAC,GAAGsoC,GAAG,CAACC,MAAM,CAAC5hC,MAAM,GAAG2nC,MAAM,EAAEzgC,CAAC,IAAInR,WAAW,GAAG,CAAC,EAAE;UAC1G,IAAA6xC,qBAAA,GAAiCxiC,0BAAoB,CAACzM,CAAC,EAAEuO,CAAC,CAAC;YAAA2gC,sBAAA,GAAApsC,sBAAA,CAAAmsC,qBAAA;YAApDE,UAAU,GAAAD,sBAAA;YAAEE,UAAU,GAAAF,sBAAA;UAC7B,IAAMxnC,CAAC,GAAG6E,IAAI,CAACuB,GAAG,CAACvB,IAAI,CAACwB,GAAG,CAACohC,UAAU,EAAE,CAAC,CAAC,EAAEpnC,GAAG,CAACxD,IAAI,GAAG,CAAC,CAAC,EAAC;UAC1D,IAAM7D,CAAC,GAAG6L,IAAI,CAACuB,GAAG,CAACvB,IAAI,CAACwB,GAAG,CAACqhC,UAAU,EAAE,CAAC,CAAC,EAAErnC,GAAG,CAACxD,IAAI,GAAG,CAAC,CAAC;;UAEzD;UACA,IAAIwD,GAAG,CAAC6I,IAAI,CAAClJ,CAAC,CAAC,IAAIK,GAAG,CAAC6I,IAAI,CAAClJ,CAAC,CAAC,CAAChH,CAAC,CAAC,EAAE;YACjC8W,QAAQ,CAACzP,GAAG,CAAC6I,IAAI,CAAClJ,CAAC,CAAC,CAAChH,CAAC,CAAC,CAAC;UAC1B;QACF;MACF;IACF;EAAC;IAAAuZ,GAAA;IAAA5Y,KAAA,EAED,SAAAmtC,kBAAkBA,CAAA,EAAG;MACnB,IAAA/hB,cAAA,GAAqB,IAAI,CAAC1iB,OAAO;QAAzBhC,GAAG,GAAA0kB,cAAA,CAAH1kB,GAAG;QAAEihC,GAAG,GAAAvc,cAAA,CAAHuc,GAAG;MAChB,IAAMqG,UAAU,GAAG,IAAIrP,GAAG,CAAC,CAAC;MAC5B,IAAMgP,MAAM,GAAG7xC,UAAU,EAAC;;MAE1B,IAAMma,MAAM,GAAG/K,IAAI,CAACC,KAAK,CAAC,IAAI,CAAC4wB,MAAM,CAAC11B,CAAC,GAAGsnC,MAAM,CAAC;MACjD,IAAMM,IAAI,GAAG/iC,IAAI,CAACC,KAAK,CAAC,IAAI,CAAC4wB,MAAM,CAAC11B,CAAC,GAAGshC,GAAG,CAACC,MAAM,CAAC7hC,KAAK,GAAG4nC,MAAM,CAAC;MAClE,IAAMz3B,MAAM,GAAGhL,IAAI,CAACC,KAAK,CAAC,IAAI,CAAC4wB,MAAM,CAAC18B,CAAC,GAAGsuC,MAAM,CAAC;MACjD,IAAMO,IAAI,GAAGhjC,IAAI,CAACC,KAAK,CAAC,IAAI,CAAC4wB,MAAM,CAAC18B,CAAC,GAAGsoC,GAAG,CAACC,MAAM,CAAC5hC,MAAM,GAAG2nC,MAAM,CAAC;MAEnE,KAAK,IAAIhvC,CAAC,GAAGsX,MAAM,EAAEtX,CAAC,IAAIsvC,IAAI,EAAEtvC,CAAC,IAAI7C,UAAU,GAAG,CAAC,EAAE;QACnD,KAAK,IAAIoR,CAAC,GAAGgJ,MAAM,EAAEhJ,CAAC,IAAIghC,IAAI,EAAEhhC,CAAC,IAAInR,WAAW,GAAG,CAAC,EAAE;UAAA,IAAAoyC,WAAA;UACpD,IAAAC,sBAAA,GAAuBhjC,0BAAoB,CAACzM,CAAC,EAAEuO,CAAC,CAAC;YAAAmhC,sBAAA,GAAA5sC,sBAAA,CAAA2sC,sBAAA;YAA1CE,KAAK,GAAAD,sBAAA;YAAEE,KAAK,GAAAF,sBAAA;UACnB,IAAMhoC,CAAC,GAAG6E,IAAI,CAACuB,GAAG,CAACvB,IAAI,CAACwB,GAAG,CAAC4hC,KAAK,EAAE,CAAC,CAAC,EAAE5nC,GAAG,CAACxD,IAAI,GAAG,CAAC,CAAC;UACpD,IAAM7D,CAAC,GAAG6L,IAAI,CAACuB,GAAG,CAACvB,IAAI,CAACwB,GAAG,CAAC6hC,KAAK,EAAE,CAAC,CAAC,EAAE7nC,GAAG,CAACxD,IAAI,GAAG,CAAC,CAAC;UAEpD,IAAM6M,IAAI,IAAAo+B,WAAA,GAAGznC,GAAG,CAAC6I,IAAI,CAAClJ,CAAC,CAAC,cAAA8nC,WAAA,uBAAXA,WAAA,CAAc9uC,CAAC,CAAC;UAC7B,IAAI0Q,IAAI,EAAE;YACRi+B,UAAU,CAAClN,GAAG,CAAC/wB,IAAI,CAAC;UACtB;QACF;MACF;;MAEA;MAAA,IAAAyC,SAAA,GAAAC,kCAAA,CACiB,IAAI,CAACq3B,YAAY;QAAAp3B,KAAA;MAAA;QAAlC,KAAAF,SAAA,CAAAnG,CAAA,MAAAqG,KAAA,GAAAF,SAAA,CAAAjU,CAAA,IAAAwB,IAAA,GAAoC;UAAA,IAA3BgQ,KAAI,GAAA2C,KAAA,CAAA1S,KAAA;UACX,IAAI,CAACguC,UAAU,CAAClnC,GAAG,CAACiJ,KAAI,CAAC,EAAE;YACzBA,KAAI,CAAC2D,OAAO,GAAG,KAAK;YACpB,IAAI3D,KAAI,CAACjJ,GAAG,EAAEiJ,KAAI,CAACjJ,GAAG,CAAC4M,OAAO,GAAG,KAAK;UACxC;QACF;;QAEA;MAAA,SAAAd,GAAA;QAAAJ,SAAA,CAAArU,CAAA,CAAAyU,GAAA;MAAA;QAAAJ,SAAA,CAAArT,CAAA;MAAA;MAAA,IAAAiW,UAAA,GAAA3C,kCAAA,CACiBu7B,UAAU;QAAA34B,MAAA;MAAA;QAA3B,KAAAD,UAAA,CAAA/I,CAAA,MAAAgJ,MAAA,GAAAD,UAAA,CAAA7W,CAAA,IAAAwB,IAAA,GAA6B;UAAA,IAApBgQ,MAAI,GAAAsF,MAAA,CAAArV,KAAA;UACX,IAAI,CAAC,IAAI,CAAC8pC,YAAY,CAAChjC,GAAG,CAACiJ,MAAI,CAAC,EAAE;YAChCA,MAAI,CAAC0pB,aAAa,CAAC,CAAC;UACtB;QACF;MAAC,SAAA7mB,GAAA;QAAAwC,UAAA,CAAAjX,CAAA,CAAAyU,GAAA;MAAA;QAAAwC,UAAA,CAAAjW,CAAA;MAAA;MAED,IAAI,CAAC2qC,YAAY,GAAGkE,UAAU;IAChC;EAAC;IAAAp1B,GAAA;IAAA5Y,KAAA,EAED,SAAAi7B,IAAIA,CAAA,EAAG;MAAA,IAAAuT,iBAAA,EAAAC,aAAA;MACL,IAAA9iB,cAAA,GAEI,IAAI,CADNjjB,OAAO;QAAImB,MAAM,GAAA8hB,cAAA,CAAN9hB,MAAM;QAAEnD,GAAG,GAAAilB,cAAA,CAAHjlB,GAAG;MAExB;MACA,IAAImD,MAAM,aAANA,MAAM,gBAAA2kC,iBAAA,GAAN3kC,MAAM,CAAEhG,SAAS,cAAA2qC,iBAAA,eAAjBA,iBAAA,CAAmB7uC,MAAM,EAAE;QAC7B,IAAI,CAAC48B,SAAS,CAAC1yB,MAAM,CAAChG,SAAS,CAAC,CAAC,CAAC,CAACwC,CAAC,EAAEwD,MAAM,CAAChG,SAAS,CAAC,CAAC,CAAC,CAACxE,CAAC,CAAC;MAC9D,CAAC,MAAM,IAAIwK,MAAM,aAANA,MAAM,gBAAA4kC,aAAA,GAAN5kC,MAAM,CAAE2Y,KAAK,cAAAisB,aAAA,eAAbA,aAAA,CAAe9uC,MAAM,EAAE;QAChC,IAAI,CAAC48B,SAAS,CAAC1yB,MAAM,CAAC2Y,KAAK,CAAC,CAAC,CAAC,CAACnc,CAAC,EAAEwD,MAAM,CAAC2Y,KAAK,CAAC,CAAC,CAAC,CAACnjB,CAAC,CAAC;MACtD,CAAC,MAAM;QACL,IAAI,CAACk9B,SAAS,CAAC71B,GAAG,CAACxD,IAAI,GAAG,CAAC,EAAEwD,GAAG,CAACxD,IAAI,GAAG,CAAC,CAAC;MAC5C;IACF;EAAC;IAAA0V,GAAA;IAAA5Y,KAAA,EAED,SAAAu8B,SAASA,CAACl2B,CAAC,EAAEhH,CAAC,EAAEqvC,MAAM,EAAE;MACtB,IAAAC,cAAA,GAEI,IAAI,CADNjmC,OAAO;QAAIhC,GAAG,GAAAioC,cAAA,CAAHjoC,GAAG;QAAEihC,GAAG,GAAAgH,cAAA,CAAHhH,GAAG;QAAEvmB,IAAI,GAAAutB,cAAA,CAAJvtB,IAAI;MAE3B,IAAI,CAAC2a,MAAM,GAAG;QACZ11B,CAAC,EAAEqoC,MAAM,GAAGroC,CAAC,GAAGA,CAAC,GAAGshC,GAAG,CAACC,MAAM,CAAC7hC,KAAK,GAAG,CAAC;QACxC1G,CAAC,EAAEqvC,MAAM,GAAGrvC,CAAC,GAAGA,CAAC,GAAGsoC,GAAG,CAACC,MAAM,CAAC5hC,MAAM,GAAG;MAC1C,CAAC;MACDob,IAAI,IAAIA,IAAI,CAACwlB,mBAAmB,CAAC,CAAC;MAClClgC,GAAG,CAACm1B,aAAa,CAAC,CAAC,IAAI,CAACE,MAAM,CAAC11B,CAAC,EAAE,CAAC,IAAI,CAAC01B,MAAM,CAAC18B,CAAC,CAAC;MACjD,IAAI,CAAC8tC,kBAAkB,CAAC,CAAC;IAC3B;EAAC;AAAA,EAnrBmC9tB,sBAAS;;;;;;;;;;;;;;;;;;;ACdZ;AACH;AACE;AACQ;AACL;;AAErC;AACA;AACA;AACA;AACA;AAJA,IAMqBuvB,IAAI,0BAAAjvB,UAAA;EACvB,SAAAivB,KAAYjH,GAAG,EAAES,OAAO,EAAE;IAAA,IAAAxuB,KAAA;IAAAmG,mBAAA,OAAA6uB,IAAA;IACxBh1B,KAAA,GAAAoG,cAAA,OAAA4uB,IAAA;IACAh1B,KAAA,CAAKlR,OAAO,GAAG;MACbi/B,GAAG,EAAHA,GAAG;MACHS,OAAO,EAAPA,OAAO;MACPhnB,IAAI,EAAE,IAAI;MACVvX,MAAM,EAAE,IAAI;MACZqZ,OAAO,EAAE,EAAE;MACXxc,GAAG,EAAE,IAAI;MACT2M,QAAQ,EAAE,IAAI;MACdqE,MAAM,EAAE,KAAK;MACbzO,IAAI,EAAE,SAANA,IAAIA,CAAA;QAAA,OAAQ2Q,KAAA,CAAK3Q,IAAI,CAAC,CAAC;MAAA;MACvBy7B,IAAI,EAAE,SAANA,IAAIA,CAAEhjB,GAAG;QAAA,OAAI9H,KAAA,CAAK8qB,IAAI,CAAChjB,GAAG,CAAC;MAAA;MAC3B3H,KAAK,EAAE,SAAPA,KAAKA,CAAA;QAAA,OAAQH,KAAA,CAAKi1B,WAAW,CAAC,IAAI,CAAC;MAAA;MACnC10B,MAAM,EAAE,SAARA,MAAMA,CAAA;QAAA,OAAQP,KAAA,CAAKi1B,WAAW,CAAC,KAAK,CAAC;MAAA;IACvC,CAAC;IACDj1B,KAAA,CAAKtJ,KAAK,CAAC,CAAC;IAAA,OAAAsJ,KAAA;EACd;EAACgJ,aAAA,CAAAgsB,IAAA,EAAAjvB,UAAA;EAAA,OAAAkD,gBAAA,CAAA+rB,IAAA;IAAAh2B,GAAA;IAAA5Y,KAAA,EAED,SAAAsQ,KAAKA,CAAA,EAAG;MAAA,IAAAoK,MAAA;MACN,IAAQhS,OAAO,GAAK,IAAI,CAAhBA,OAAO;MAEfA,OAAO,CAAChC,GAAG,GAAG,IAAID,OAAG,CAACiC,OAAO,CAAC;MAC9BA,OAAO,CAAC2K,QAAQ,GAAG,IAAIw2B,QAAQ,CAACnhC,OAAO,CAAC;MACxCA,OAAO,CAAC0Y,IAAI,GAAG,IAAI8iB,IAAI,CAACx7B,OAAO,CAAC;MAEhCA,OAAO,CAAChC,GAAG,CAACm2B,WAAW,CAAC,CAAC;MAEzBn0B,OAAO,CAACwa,OAAO,GAAGxa,OAAO,CAAChC,GAAG,CAAC42B,eAAe,CAAC,CAAC;MAC/C50B,OAAO,CAACmB,MAAM,GAAGnB,OAAO,CAACwa,OAAO,CAAC,CAAC,CAAC;MACnCxa,OAAO,CAAC0Y,IAAI,CAAC6Z,IAAI,CAAC,CAAC;MACnBvyB,OAAO,CAAChC,GAAG,CAACk3B,YAAY,CAAC,CAAC;MAC1Bl1B,OAAO,CAAChC,GAAG,CAAC02B,UAAU,CAAC,CAAC;MACxB10B,OAAO,CAAC2K,QAAQ,CAAC4nB,IAAI,CAAC,CAAC;MAEvB,IAAI,CAACtY,QAAQ,CAACja,OAAO,CAAChC,GAAG,CAAC;MAC1B,IAAI,CAACic,QAAQ,CAACja,OAAO,CAAC2K,QAAQ,CAAC;MAE/BjX,MAAM,CAACqoC,gBAAgB,CAAC,SAAS,EAAE,UAAA/iB,GAAG,EAAI;QACxC,IAAIA,GAAG,CAAC9I,GAAG,KAAK,GAAG,EAAE;UACnB8B,MAAI,CAAChS,OAAO,CAACgP,MAAM,GAAGhP,OAAO,CAACyR,MAAM,CAAC,CAAC,GAAGzR,OAAO,CAACqR,KAAK,CAAC,CAAC;QAC1D;MACF,CAAC,CAAC;MACF3d,MAAM,CAACqoC,gBAAgB,CAAC,QAAQ,EAAE,YAAM;QACtC,IAAI/7B,OAAO,CAAC2K,QAAQ,EAAE;UACpB3K,OAAO,CAAC2K,QAAQ,CAAC85B,kBAAkB,CAAC,CAAC;QACvC;QACA,IAAIzkC,OAAO,CAAC0Y,IAAI,EAAE;UAChB1Y,OAAO,CAAC0Y,IAAI,CAACwlB,mBAAmB,CAAC,CAAC;QACpC;MACF,CAAC,CAAC;IACJ;EAAC;IAAAhuB,GAAA;IAAA5Y,KAAA,EAED,SAAAiJ,IAAIA,CAAA,EAAG;MACL,IAAM6lC,YAAY,GAAG,SAAfA,YAAYA,CAAGpmC,OAAO,EAAI;QAC9B,IAAMqmC,YAAY,GAAG,SAAfA,YAAYA,CAAGppC,QAAQ;UAAA,OAAAskB,iBAAA,CAAAA,iBAAA,KACxBxR,YAAY,CAAC9S,QAAQ,EAAE,CACxB,OAAO,EACP,GAAG,EACH,GAAG,EACH,UAAU,EACV,MAAM,EACN,QAAQ,EACR,UAAU,EACV,aAAa,EACb,MAAM,EACN,WAAW,CACZ,CAAC;YACFtB,WAAW,EAAE,CAACsB,QAAQ,CAACtB,WAAW,IAAI,EAAE,EAAEvB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;UAAC;QAAA,CACvD;QACF,IAAMksC,UAAU,GAAG,SAAbA,UAAUA,CAAGvS,MAAM;UAAA,IAAAwS,cAAA,EAAAC,eAAA,EAAAC,YAAA,EAAAC,oBAAA;UAAA,OAAAnlB,iBAAA,CAAAA,iBAAA,KACpBxR,YAAY,CAACgkB,MAAM,EAAE,CACtB,OAAO,EACP,MAAM,EACN,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,WAAW,EACX,MAAM,EACN,MAAM,EACN,UAAU,EACV,MAAM,EACN,QAAQ,EACR,UAAU,EACV,QAAQ,EACR,QAAQ,EACR,WAAW,EACX,cAAc,EACd,MAAM,EACN,SAAS,EACT,QAAQ,EACR,aAAa,EACb,UAAU,CACX,CAAC;YACF9yB,YAAY,GAAAslC,cAAA,GAAExS,MAAM,CAACn3B,MAAM,cAAA2pC,cAAA,uBAAbA,cAAA,CAAetlC,YAAY;YACzC+jB,IAAI,GAAAwhB,eAAA,GAAEzS,MAAM,CAACn3B,MAAM,cAAA4pC,eAAA,uBAAbA,eAAA,CAAexhB,IAAI;YACzBZ,IAAI,EAAE2P,MAAM,CAAC3P,IAAI,IAAI,CAAC2P,MAAM,CAAC3P,IAAI,CAACnuB,CAAC,EAAE89B,MAAM,CAAC3P,IAAI,CAACnuB,CAAC,GAAAwwC,YAAA,GAAE1S,MAAM,CAAC3P,IAAI,cAAAqiB,YAAA,uBAAXA,YAAA,CAAaxnC,KAAK,CAAC;YACvEgf,YAAY,EAAE8V,MAAM,CAAC9V,YAAY,IAAI,CAAC8V,MAAM,CAAC9V,YAAY,CAAChoB,CAAC,EAAE89B,MAAM,CAAC9V,YAAY,CAAChoB,CAAC,GAAAywC,oBAAA,GAAE3S,MAAM,CAAC9V,YAAY,cAAAyoB,oBAAA,uBAAnBA,oBAAA,CAAqBznC,KAAK;UAAC;QAAA,CAC/G;QACF,IAAM0nC,QAAQ,GAAG,SAAXA,QAAQA,CAAGjtB,IAAI;UAAA,IAAAktB,YAAA,EAAAC,aAAA,EAAAC,UAAA,EAAAC,kBAAA;UAAA,OAAAxlB,iBAAA,CAAAA,iBAAA,KAChBxR,YAAY,CAAC2J,IAAI,EAAE,CACpB,OAAO,EACP,MAAM,EACN,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,WAAW,EACX,MAAM,EACN,MAAM,EACN,UAAU,EACV,MAAM,EACN,UAAU,EACV,QAAQ,EACR,QAAQ,EACR,SAAS,EACT,aAAa,EACb,WAAW,EACX,cAAc,EACd,MAAM,EACN,SAAS,EACT,QAAQ,EACR,aAAa,CACd,CAAC;YACFzY,YAAY,GAAA2lC,YAAA,GAAEltB,IAAI,CAAC9c,MAAM,cAAAgqC,YAAA,uBAAXA,YAAA,CAAa3lC,YAAY;YACvC+jB,IAAI,GAAA6hB,aAAA,GAAEntB,IAAI,CAAC9c,MAAM,cAAAiqC,aAAA,uBAAXA,aAAA,CAAa7hB,IAAI;YACvBZ,IAAI,EAAE1K,IAAI,CAAC0K,IAAI,IAAI,CAAC1K,IAAI,CAAC0K,IAAI,CAACnuB,CAAC,EAAEyjB,IAAI,CAAC0K,IAAI,CAACnuB,CAAC,GAAA6wC,UAAA,GAAEptB,IAAI,CAAC0K,IAAI,cAAA0iB,UAAA,uBAATA,UAAA,CAAW7nC,KAAK,CAAC;YAC/Dgf,YAAY,EAAEvE,IAAI,CAACuE,YAAY,IAAI,CAACvE,IAAI,CAACuE,YAAY,CAAChoB,CAAC,EAAEyjB,IAAI,CAACuE,YAAY,CAAChoB,CAAC,GAAA8wC,kBAAA,GAAErtB,IAAI,CAACuE,YAAY,cAAA8oB,kBAAA,uBAAjBA,kBAAA,CAAmB9nC,KAAK;UAAC;QAAA,CACvG;QACF,IAAM+nC,YAAY,GAAG,SAAfA,YAAYA,CAAG5mB,QAAQ;UAAA,IAAA6mB,kBAAA;UAAA,OAAA1lB,iBAAA,CAAAA,iBAAA,KACxBxR,YAAY,CAACqQ,QAAQ,EAAE,CACxB,OAAO,EACP,GAAG,EACH,GAAG,EACH,MAAM,EACN,UAAU,EACV,OAAO,EACP,YAAY,EACZ,SAAS,EACT,QAAQ,EACR,aAAa,EACb,SAAS,EACT,WAAW,EACX,UAAU,CACX,CAAC;YACFrK,QAAQ,GAAAkxB,kBAAA,GAAE7mB,QAAQ,CAACrK,QAAQ,cAAAkxB,kBAAA,uBAAjBA,kBAAA,CAAmBC;UAAK;QAAA,CAClC;QACF,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAGhmC,MAAM;UAAA,OAAAogB,iBAAA,CAAAA,iBAAA,KACpBxR,YAAY,CAAC5O,MAAM,EAAE,CACtB,OAAO,EACP,KAAK,EACL,MAAM,EACN,MAAM,EACN,MAAM,EACN,OAAO,EACP,MAAM,EACN,KAAK,EACL,OAAO,EACP,YAAY,EACZ,gBAAgB,EAChB,cAAc,EACd,YAAY,EACZ,UAAU,EACV,UAAU,CACX,CAAC;YACFhG,SAAS,EAAEgG,MAAM,CAAChG,SAAS,CAAC6C,GAAG,CAAC,UAAAoiB,QAAQ;cAAA,OAAI4mB,YAAY,CAAC5mB,QAAQ,CAAC;YAAA,EAAC;YACnEtG,KAAK,EAAE3Y,MAAM,CAAC2Y,KAAK,CAAC9b,GAAG,CAAC,UAAA0b,IAAI;cAAA,OAAIitB,QAAQ,CAACjtB,IAAI,CAAC;YAAA,EAAC;YAC/CsB,OAAO,EAAE7Z,MAAM,CAAC6Z,OAAO,CAAChd,GAAG,CAAC,UAAAopC,MAAM;cAAA,OAAIT,QAAQ,CAACS,MAAM,CAAC;YAAA,EAAC;YACvDn8B,KAAK,EAAE9J,MAAM,CAAC8J,KAAK,CAACjN,GAAG,CAAC,UAAAqpC,IAAI;cAAA,OAC1BA,IAAI,CAACrpC,GAAG,CAAC,UAAAqJ,IAAI;gBAAA,OAAAka,iBAAA,CAAAA,iBAAA,KACRxR,YAAY,CAAC1I,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAC;kBAC3CgE,MAAM,EAAE,CAAChE,IAAI,CAACgE,MAAM,IAAI,EAAE,EAAErN,GAAG,CAAC,UAAA0b,IAAI;oBAAA,OAAIA,IAAI,CAACza,KAAK;kBAAA;gBAAC;cAAA,CACnD,CAAC;YAAA,CACL;UAAC;QAAA,CACD;QACF,IAAMqoC,QAAQ,GAAG,SAAXA,QAAQA,CAAGjgC,IAAI;UAAA,IAAAoxB,SAAA;UAAA,OAAAlX,iBAAA,CAAAA,iBAAA,KAChBxR,YAAY,CAAC1I,IAAI,EAAE,CACpB,GAAG,EACH,MAAM,EACN,QAAQ,EACR,OAAO,EACP,SAAS,EACT,UAAU,EACV,UAAU,EACV,QAAQ,EACR,aAAa,CACd,CAAC;YACFjJ,GAAG,GAAAq6B,SAAA,GAAEpxB,IAAI,CAACjJ,GAAG,cAAAq6B,SAAA,uBAARA,SAAA,CAAUx5B,KAAK;YACpB4xB,UAAU,EAAExpB,IAAI,CAACwpB,UAAU,CAAC7yB,GAAG,CAAC,UAAA2B,IAAA;cAAA,IAAGoyB,YAAY,GAAApyB,IAAA,CAAZoyB,YAAY;gBAAEC,UAAU,GAAAryB,IAAA,CAAVqyB,UAAU;gBAAEC,SAAS,GAAAtyB,IAAA,CAATsyB,SAAS;cAAA,OAAQ;gBAC5EF,YAAY,EAAZA,YAAY;gBACZC,UAAU,EAAVA,UAAU;gBACVC,SAAS,EAATA;cACF,CAAC;YAAA,CAAC;UAAC;QAAA,CACH;QACF,OAAO;UACLoB,MAAM,EAAErzB,OAAO,CAAC2K,QAAQ,CAAC0oB,MAAM;UAC/B7Y,OAAO,EAAExa,OAAO,CAACwa,OAAO,CAACxc,GAAG,CAAC,UAAAmD,MAAM;YAAA,OAAIgmC,UAAU,CAAChmC,MAAM,CAAC;UAAA,EAAC;UAC1DsW,SAAS,EAAEzX,OAAO,CAAChC,GAAG,CAACyZ,SAAS,CAACzZ,GAAG,CAAC,UAAAf,QAAQ;YAAA,OAAIopC,YAAY,CAACppC,QAAQ,CAAC;UAAA,EAAC;UACxEe,GAAG,EAAEgC,OAAO,CAAChC,GAAG,CAAC6I,IAAI,CAAC7I,GAAG,CAAC,UAAAw1B,IAAI;YAAA,OAAIA,IAAI,CAACx1B,GAAG,CAAC,UAAAqJ,IAAI;cAAA,OAAIigC,QAAQ,CAACjgC,IAAI,CAAC;YAAA,EAAC;UAAA,EAAC;UACnE2oB,OAAO,EAAEhwB,OAAO,CAAChC,GAAG,CAACk1B,IAAI,CAACpZ,KAAK,CAAC9b,GAAG,CAAC,UAAA+1B,MAAM;YAAA,OAAIuS,UAAU,CAACvS,MAAM,CAAC;UAAA;QAClE,CAAC;MACH,CAAC;MAED,IAAMwT,IAAI,GAAGnB,YAAY,CAAC,IAAI,CAACpmC,OAAO,CAAC;MACvC,IAAMwnC,OAAO,GAAG,+BAA+B,GAAGC,kBAAkB,CAACpL,IAAI,CAACqL,SAAS,CAACH,IAAI,CAAC,CAAC;MAC1F,IAAMI,kBAAkB,GAAGxqC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACtDuqC,kBAAkB,CAACC,YAAY,CAAC,MAAM,EAAEJ,OAAO,CAAC;MAChDG,kBAAkB,CAACC,YAAY,CAAC,UAAU,UAAAttC,MAAA,CAAU,IAAIiX,IAAI,CAAC,CAAC,CAACs2B,cAAc,CAAC,OAAO,EAAE;QAAEC,QAAQ,EAAE;MAAM,CAAC,CAAC,UAAO,CAAC;MACnH3qC,QAAQ,CAACyT,IAAI,CAACD,WAAW,CAACg3B,kBAAkB,CAAC;MAC7CA,kBAAkB,CAACI,KAAK,CAAC,CAAC;MAC1BJ,kBAAkB,CAAC52B,MAAM,CAAC,CAAC;IAC7B;EAAC;IAAAb,GAAA;IAAA5Y,KAAA,EAED,SAAA0kC,IAAIA,CAACuL,IAAI,EAAE;MACT,IAAI,CAACvnC,OAAO,CAAC2K,QAAQ,CAACuQ,OAAO,CAAC,CAAC;MAC/B,IAAI,CAAClb,OAAO,CAAC0Y,IAAI,CAACwC,OAAO,CAAC,CAAC;MAC3B,IAAI,CAACqY,cAAc,CAAC,CAAC;MACrB,IAAI,CAACvzB,OAAO,GAAAuhB,iBAAA,CAAAA,iBAAA,KACP,IAAI,CAACvhB,OAAO;QACfmB,MAAM,EAAE,IAAI;QACZqZ,OAAO,EAAE,EAAE;QACXxc,GAAG,EAAE,IAAI;QACT2M,QAAQ,EAAE,IAAI;QACdqE,MAAM,EAAE;MAAK,EACd;MACD,IAAQhP,OAAO,GAAK,IAAI,CAAhBA,OAAO;MAEfA,OAAO,CAAChC,GAAG,GAAG,IAAID,OAAG,CAACiC,OAAO,CAAC;MAC9BA,OAAO,CAAC2K,QAAQ,GAAG,IAAIw2B,QAAQ,CAACnhC,OAAO,CAAC;MACxCA,OAAO,CAAC0Y,IAAI,GAAG,IAAI8iB,IAAI,CAACx7B,OAAO,CAAC;MAEhCA,OAAO,CAAChC,GAAG,CAACo1B,gBAAgB,CAACmU,IAAI,CAAC;MAElC,IAAI,CAACttB,QAAQ,CAACja,OAAO,CAAChC,GAAG,CAAC;MAC1B,IAAI,CAACic,QAAQ,CAACja,OAAO,CAAC2K,QAAQ,CAAC;IACjC;EAAC;IAAAuF,GAAA;IAAA5Y,KAAA,EAED,SAAA6uC,WAAWA,CAAC90B,KAAK,EAAE;MACjB,IAAAkJ,aAAA,GAAyB,IAAI,CAACva,OAAO;QAA7BhC,GAAG,GAAAuc,aAAA,CAAHvc,GAAG;QAAEwc,OAAO,GAAAD,aAAA,CAAPC,OAAO;MACpB,IAAInJ,KAAK,EAAE;QACT,IAAM0vB,GAAG,GAAG5jC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;QACzC2jC,GAAG,CAAC5mC,EAAE,GAAG,OAAO;QAChB4mC,GAAG,CAACjF,SAAS,GAAG,OAAO;QACvB3+B,QAAQ,CAACyT,IAAI,CAACD,WAAW,CAACowB,GAAG,CAAC;MAChC,CAAC,MAAM;QAAA,IAAAiH,qBAAA;QACL,CAAAA,qBAAA,GAAA7qC,QAAQ,CAAC2T,cAAc,CAAC,OAAO,CAAC,cAAAk3B,qBAAA,eAAhCA,qBAAA,CAAkCj3B,MAAM,CAAC,CAAC;MAC5C;MACA,KAAK,IAAI9a,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+H,GAAG,CAACk1B,IAAI,CAACpZ,KAAK,CAAC7iB,MAAM,EAAEhB,CAAC,EAAE,EAAE;QAC9Cob,KAAK,GAAGrT,GAAG,CAACk1B,IAAI,CAACpZ,KAAK,CAAC7jB,CAAC,CAAC,CAACob,KAAK,CAAC,CAAC,GAAGrT,GAAG,CAACk1B,IAAI,CAACpZ,KAAK,CAAC7jB,CAAC,CAAC,CAACwb,MAAM,CAAC,CAAC;MAChE;MACA,KAAK,IAAIxb,EAAC,GAAG,CAAC,EAAEA,EAAC,GAAGukB,OAAO,CAACvjB,MAAM,EAAEhB,EAAC,EAAE,EAAE;QACvC,IAAMkL,MAAM,GAAGqZ,OAAO,CAACvkB,EAAC,CAAC;QACzB,KAAK,IAAIuO,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAGrD,MAAM,aAANA,MAAM,gBAAA4kC,aAAA,GAAN5kC,MAAM,CAAE2Y,KAAK,cAAAisB,aAAA,uBAAbA,aAAA,CAAe9uC,MAAM,GAAEuN,CAAC,EAAE,EAAE;UAAA,IAAAuhC,aAAA;UAC9C10B,KAAK,GAAGlQ,MAAM,CAAC2Y,KAAK,CAACtV,CAAC,CAAC,CAAC6M,KAAK,CAAC,CAAC,GAAGlQ,MAAM,CAAC2Y,KAAK,CAACtV,CAAC,CAAC,CAACiN,MAAM,CAAC,CAAC;QAC5D;QACA,KAAK,IAAIjN,EAAC,GAAG,CAAC,EAAEA,EAAC,IAAGrD,MAAM,aAANA,MAAM,gBAAA2kC,iBAAA,GAAN3kC,MAAM,CAAEhG,SAAS,cAAA2qC,iBAAA,uBAAjBA,iBAAA,CAAmB7uC,MAAM,GAAEuN,EAAC,EAAE,EAAE;UAAA,IAAAshC,iBAAA;UAClDz0B,KAAK,GAAGlQ,MAAM,CAAChG,SAAS,CAACqJ,EAAC,CAAC,CAAC6M,KAAK,CAAC,CAAC,GAAGlQ,MAAM,CAAChG,SAAS,CAACqJ,EAAC,CAAC,CAACiN,MAAM,CAAC,CAAC;QACpE;MACF;MACA,IAAI,CAACzR,OAAO,CAACgP,MAAM,GAAGqC,KAAK;IAC7B;EAAC;AAAA,EAxQ+BsF,sBAAS;;;;gCCX3C,uKAAAlhB,CAAA,EAAAC,CAAA,EAAAC,CAAA,wBAAAC,MAAA,GAAAA,MAAA,OAAAC,CAAA,GAAAF,CAAA,CAAAG,QAAA,kBAAAC,CAAA,GAAAJ,CAAA,CAAAK,WAAA,8BAAAC,EAAAN,CAAA,EAAAE,CAAA,EAAAE,CAAA,EAAAE,CAAA,QAAAC,CAAA,GAAAL,CAAA,IAAAA,CAAA,CAAAM,SAAA,YAAAC,SAAA,GAAAP,CAAA,GAAAO,SAAA,EAAAC,CAAA,GAAAC,MAAA,CAAAC,MAAA,CAAAL,CAAA,CAAAC,SAAA,UAAAK,yBAAA,CAAAH,CAAA,uBAAAV,CAAA,EAAAE,CAAA,EAAAE,CAAA,QAAAE,CAAA,EAAAC,CAAA,EAAAG,CAAA,EAAAI,CAAA,MAAAC,CAAA,GAAAX,CAAA,QAAAY,CAAA,OAAAC,CAAA,KAAAF,CAAA,KAAAb,CAAA,KAAAgB,CAAA,EAAApB,CAAA,EAAAqB,CAAA,EAAAC,CAAA,EAAAN,CAAA,EAAAM,CAAA,CAAAC,IAAA,CAAAvB,CAAA,MAAAsB,CAAA,WAAAA,EAAArB,CAAA,EAAAC,CAAA,WAAAM,CAAA,GAAAP,CAAA,EAAAQ,CAAA,MAAAG,CAAA,GAAAZ,CAAA,EAAAmB,CAAA,CAAAf,CAAA,GAAAF,CAAA,EAAAmB,CAAA,gBAAAC,EAAApB,CAAA,EAAAE,CAAA,SAAAK,CAAA,GAAAP,CAAA,EAAAU,CAAA,GAAAR,CAAA,EAAAH,CAAA,OAAAiB,CAAA,IAAAF,CAAA,KAAAV,CAAA,IAAAL,CAAA,GAAAgB,CAAA,CAAAO,MAAA,EAAAvB,CAAA,UAAAK,CAAA,EAAAE,CAAA,GAAAS,CAAA,CAAAhB,CAAA,GAAAqB,CAAA,GAAAH,CAAA,CAAAF,CAAA,EAAAQ,CAAA,GAAAjB,CAAA,KAAAN,CAAA,QAAAI,CAAA,GAAAmB,CAAA,KAAArB,CAAA,MAAAQ,CAAA,GAAAJ,CAAA,EAAAC,CAAA,GAAAD,CAAA,YAAAC,CAAA,WAAAD,CAAA,MAAAA,CAAA,MAAAR,CAAA,IAAAQ,CAAA,OAAAc,CAAA,MAAAhB,CAAA,GAAAJ,CAAA,QAAAoB,CAAA,GAAAd,CAAA,QAAAC,CAAA,MAAAU,CAAA,CAAAC,CAAA,GAAAhB,CAAA,EAAAe,CAAA,CAAAf,CAAA,GAAAI,CAAA,OAAAc,CAAA,GAAAG,CAAA,KAAAnB,CAAA,GAAAJ,CAAA,QAAAM,CAAA,MAAAJ,CAAA,IAAAA,CAAA,GAAAqB,CAAA,MAAAjB,CAAA,MAAAN,CAAA,EAAAM,CAAA,MAAAJ,CAAA,EAAAe,CAAA,CAAAf,CAAA,GAAAqB,CAAA,EAAAhB,CAAA,cAAAH,CAAA,IAAAJ,CAAA,aAAAmB,CAAA,QAAAH,CAAA,OAAAd,CAAA,qBAAAE,CAAA,EAAAW,CAAA,EAAAQ,CAAA,QAAAT,CAAA,YAAAU,SAAA,uCAAAR,CAAA,UAAAD,CAAA,IAAAK,CAAA,CAAAL,CAAA,EAAAQ,CAAA,GAAAhB,CAAA,GAAAQ,CAAA,EAAAL,CAAA,GAAAa,CAAA,GAAAxB,CAAA,GAAAQ,CAAA,OAAAT,CAAA,GAAAY,CAAA,MAAAM,CAAA,KAAAV,CAAA,KAAAC,CAAA,GAAAA,CAAA,QAAAA,CAAA,SAAAU,CAAA,CAAAf,CAAA,QAAAkB,CAAA,CAAAb,CAAA,EAAAG,CAAA,KAAAO,CAAA,CAAAf,CAAA,GAAAQ,CAAA,GAAAO,CAAA,CAAAC,CAAA,GAAAR,CAAA,aAAAI,CAAA,MAAAR,CAAA,QAAAC,CAAA,KAAAH,CAAA,YAAAL,CAAA,GAAAO,CAAA,CAAAF,CAAA,WAAAL,CAAA,GAAAA,CAAA,CAAA0B,IAAA,CAAAnB,CAAA,EAAAI,CAAA,UAAAc,SAAA,2CAAAzB,CAAA,CAAA2B,IAAA,SAAA3B,CAAA,EAAAW,CAAA,GAAAX,CAAA,CAAA4B,KAAA,EAAApB,CAAA,SAAAA,CAAA,oBAAAA,CAAA,KAAAR,CAAA,GAAAO,CAAA,eAAAP,CAAA,CAAA0B,IAAA,CAAAnB,CAAA,GAAAC,CAAA,SAAAG,CAAA,GAAAc,SAAA,uCAAApB,CAAA,gBAAAG,CAAA,OAAAD,CAAA,GAAAR,CAAA,cAAAC,CAAA,IAAAiB,CAAA,GAAAC,CAAA,CAAAf,CAAA,QAAAQ,CAAA,GAAAV,CAAA,CAAAyB,IAAA,CAAAvB,CAAA,EAAAe,CAAA,OAAAE,CAAA,kBAAApB,CAAA,IAAAO,CAAA,GAAAR,CAAA,EAAAS,CAAA,MAAAG,CAAA,GAAAX,CAAA,cAAAe,CAAA,mBAAAa,KAAA,EAAA5B,CAAA,EAAA2B,IAAA,EAAAV,CAAA,SAAAhB,CAAA,EAAAI,CAAA,EAAAE,CAAA,QAAAI,CAAA,QAAAS,CAAA,gBAAAV,UAAA,cAAAmB,kBAAA,cAAAC,2BAAA,KAAA9B,CAAA,GAAAY,MAAA,CAAAmB,cAAA,MAAAvB,CAAA,MAAAL,CAAA,IAAAH,CAAA,CAAAA,CAAA,IAAAG,CAAA,SAAAW,yBAAA,CAAAd,CAAA,OAAAG,CAAA,iCAAAH,CAAA,GAAAW,CAAA,GAAAmB,0BAAA,CAAArB,SAAA,GAAAC,SAAA,CAAAD,SAAA,GAAAG,MAAA,CAAAC,MAAA,CAAAL,CAAA,YAAAO,EAAAhB,CAAA,WAAAa,MAAA,CAAAoB,cAAA,GAAApB,MAAA,CAAAoB,cAAA,CAAAjC,CAAA,EAAA+B,0BAAA,KAAA/B,CAAA,CAAAkC,SAAA,GAAAH,0BAAA,EAAAhB,yBAAA,CAAAf,CAAA,EAAAM,CAAA,yBAAAN,CAAA,CAAAU,SAAA,GAAAG,MAAA,CAAAC,MAAA,CAAAF,CAAA,GAAAZ,CAAA,WAAA8B,iBAAA,CAAApB,SAAA,GAAAqB,0BAAA,EAAAhB,yBAAA,CAAAH,CAAA,iBAAAmB,0BAAA,GAAAhB,yBAAA,CAAAgB,0BAAA,iBAAAD,iBAAA,GAAAA,iBAAA,CAAAK,WAAA,wBAAApB,yBAAA,CAAAgB,0BAAA,EAAAzB,CAAA,wBAAAS,yBAAA,CAAAH,CAAA,GAAAG,yBAAA,CAAAH,CAAA,EAAAN,CAAA,gBAAAS,yBAAA,CAAAH,CAAA,EAAAR,CAAA,iCAAAW,yBAAA,CAAAH,CAAA,8DAAAwB,kBAAA,YAAAA,aAAA,aAAAC,CAAA,EAAA7B,CAAA,EAAA8B,CAAA,EAAAtB,CAAA;AAAA,SAAAD,yBAAAA,CAAAf,CAAA,EAAAE,CAAA,EAAAE,CAAA,EAAAH,CAAA,QAAAO,CAAA,GAAAK,MAAA,CAAA0B,cAAA,QAAA/B,CAAA,uBAAAR,CAAA,IAAAQ,CAAA,QAAAO,yBAAA,YAAAyB,mBAAAxC,CAAA,EAAAE,CAAA,EAAAE,CAAA,EAAAH,CAAA,aAAAK,EAAAJ,CAAA,EAAAE,CAAA,IAAAW,yBAAA,CAAAf,CAAA,EAAAE,CAAA,YAAAF,CAAA,gBAAAyC,OAAA,CAAAvC,CAAA,EAAAE,CAAA,EAAAJ,CAAA,SAAAE,CAAA,GAAAM,CAAA,GAAAA,CAAA,CAAAR,CAAA,EAAAE,CAAA,IAAA2B,KAAA,EAAAzB,CAAA,EAAAsC,UAAA,GAAAzC,CAAA,EAAA0C,YAAA,GAAA1C,CAAA,EAAA2C,QAAA,GAAA3C,CAAA,MAAAD,CAAA,CAAAE,CAAA,IAAAE,CAAA,IAAAE,CAAA,aAAAA,CAAA,cAAAA,CAAA,mBAAAS,yBAAA,CAAAf,CAAA,EAAAE,CAAA,EAAAE,CAAA,EAAAH,CAAA;AAAA,SAAAuyC,cAAAA,CAAAxyC,CAAA,EAAAE,CAAA,QAAAD,CAAA,GAAAY,MAAA,CAAAkL,IAAA,CAAA/L,CAAA,OAAAa,MAAA,CAAA4xC,qBAAA,QAAAnyC,CAAA,GAAAO,MAAA,CAAA4xC,qBAAA,CAAAzyC,CAAA,GAAAE,CAAA,KAAAI,CAAA,GAAAA,CAAA,CAAA4I,MAAA,WAAAhJ,CAAA,WAAAW,MAAA,CAAA6xC,wBAAA,CAAA1yC,CAAA,EAAAE,CAAA,EAAAwC,UAAA,OAAAzC,CAAA,CAAAmE,IAAA,CAAAjB,KAAA,CAAAlD,CAAA,EAAAK,CAAA,YAAAL,CAAA;AAAA,SAAA6rB,mBAAAA,CAAA9rB,CAAA,aAAAE,CAAA,MAAAA,CAAA,GAAAgD,SAAA,CAAA1B,MAAA,EAAAtB,CAAA,UAAAD,CAAA,WAAAiD,SAAA,CAAAhD,CAAA,IAAAgD,SAAA,CAAAhD,CAAA,QAAAA,CAAA,OAAAsyC,cAAA,CAAA3xC,MAAA,CAAAZ,CAAA,OAAA+L,OAAA,WAAA9L,CAAA,IAAAyyC,qBAAA,CAAA3yC,CAAA,EAAAE,CAAA,EAAAD,CAAA,CAAAC,CAAA,SAAAW,MAAA,CAAA+xC,yBAAA,GAAA/xC,MAAA,CAAAgyC,gBAAA,CAAA7yC,CAAA,EAAAa,MAAA,CAAA+xC,yBAAA,CAAA3yC,CAAA,KAAAuyC,cAAA,CAAA3xC,MAAA,CAAAZ,CAAA,GAAA+L,OAAA,WAAA9L,CAAA,IAAAW,MAAA,CAAA0B,cAAA,CAAAvC,CAAA,EAAAE,CAAA,EAAAW,MAAA,CAAA6xC,wBAAA,CAAAzyC,CAAA,EAAAC,CAAA,iBAAAF,CAAA;AAAA,SAAA2yC,qBAAAA,CAAA3yC,CAAA,EAAAE,CAAA,EAAAD,CAAA,YAAAC,CAAA,GAAA4yC,oBAAA,CAAA5yC,CAAA,MAAAF,CAAA,GAAAa,MAAA,CAAA0B,cAAA,CAAAvC,CAAA,EAAAE,CAAA,IAAA2B,KAAA,EAAA5B,CAAA,EAAAyC,UAAA,MAAAC,YAAA,MAAAC,QAAA,UAAA5C,CAAA,CAAAE,CAAA,IAAAD,CAAA,EAAAD,CAAA;AAAA,SAAA6C,yBAAAA,CAAAzC,CAAA,EAAAH,CAAA,EAAAD,CAAA,EAAAE,CAAA,EAAAI,CAAA,EAAAe,CAAA,EAAAZ,CAAA,cAAAD,CAAA,GAAAJ,CAAA,CAAAiB,CAAA,EAAAZ,CAAA,GAAAG,CAAA,GAAAJ,CAAA,CAAAqB,KAAA,WAAAzB,CAAA,gBAAAJ,CAAA,CAAAI,CAAA,KAAAI,CAAA,CAAAoB,IAAA,GAAA3B,CAAA,CAAAW,CAAA,IAAAkC,OAAA,CAAAC,OAAA,CAAAnC,CAAA,EAAAoC,IAAA,CAAA9C,CAAA,EAAAI,CAAA;AAAA,SAAA2C,uBAAAA,CAAA7C,CAAA,6BAAAH,CAAA,SAAAD,CAAA,GAAAkD,SAAA,aAAAJ,OAAA,WAAA5C,CAAA,EAAAI,CAAA,QAAAe,CAAA,GAAAjB,CAAA,CAAA+C,KAAA,CAAAlD,CAAA,EAAAD,CAAA,YAAAoD,MAAAhD,CAAA,IAAAyC,yBAAA,CAAAxB,CAAA,EAAAnB,CAAA,EAAAI,CAAA,EAAA8C,KAAA,EAAAC,MAAA,UAAAjD,CAAA,cAAAiD,OAAAjD,CAAA,IAAAyC,yBAAA,CAAAxB,CAAA,EAAAnB,CAAA,EAAAI,CAAA,EAAA8C,KAAA,EAAAC,MAAA,WAAAjD,CAAA,KAAAgD,KAAA;AAAA,SAAAwe,qBAAAA,CAAAvgB,CAAA,EAAAjB,CAAA,UAAAiB,CAAA,YAAAjB,CAAA,aAAAsB,SAAA;AAAA,SAAAqxC,uBAAAA,CAAA/yC,CAAA,EAAAE,CAAA,aAAAD,CAAA,MAAAA,CAAA,GAAAC,CAAA,CAAAsB,MAAA,EAAAvB,CAAA,UAAAK,CAAA,GAAAJ,CAAA,CAAAD,CAAA,GAAAK,CAAA,CAAAoC,UAAA,GAAApC,CAAA,CAAAoC,UAAA,QAAApC,CAAA,CAAAqC,YAAA,kBAAArC,CAAA,KAAAA,CAAA,CAAAsC,QAAA,QAAA/B,MAAA,CAAA0B,cAAA,CAAAvC,CAAA,EAAA8yC,oBAAA,CAAAxyC,CAAA,CAAAma,GAAA,GAAAna,CAAA;AAAA,SAAAokB,kBAAAA,CAAA1kB,CAAA,EAAAE,CAAA,EAAAD,CAAA,WAAAC,CAAA,IAAA6yC,uBAAA,CAAA/yC,CAAA,CAAAU,SAAA,EAAAR,CAAA,GAAAD,CAAA,IAAA8yC,uBAAA,CAAA/yC,CAAA,EAAAC,CAAA,GAAAY,MAAA,CAAA0B,cAAA,CAAAvC,CAAA,iBAAA4C,QAAA,SAAA5C,CAAA;AAAA,SAAA8yC,oBAAAA,CAAA7yC,CAAA,QAAAO,CAAA,GAAAwyC,kBAAA,CAAA/yC,CAAA,gCAAA2L,aAAA,CAAApL,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAwyC,kBAAAA,CAAA/yC,CAAA,EAAAC,CAAA,oBAAA0L,aAAA,CAAA3L,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAD,CAAA,GAAAC,CAAA,CAAAE,MAAA,CAAA8yC,WAAA,kBAAAjzC,CAAA,QAAAQ,CAAA,GAAAR,CAAA,CAAA2B,IAAA,CAAA1B,CAAA,EAAAC,CAAA,gCAAA0L,aAAA,CAAApL,CAAA,UAAAA,CAAA,YAAAkB,SAAA,yEAAAxB,CAAA,GAAAgzC,MAAA,GAAAt0B,MAAA,EAAA3e,CAAA;AAAA,SAAA4hB,gBAAAA,CAAA5hB,CAAA,EAAAK,CAAA,EAAAN,CAAA,WAAAM,CAAA,GAAA6yC,qBAAA,CAAA7yC,CAAA,GAAA8yC,gCAAA,CAAAnzC,CAAA,EAAAozC,+BAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAjzC,CAAA,EAAAN,CAAA,QAAAmzC,qBAAA,CAAAlzC,CAAA,EAAA6D,WAAA,IAAAxD,CAAA,CAAA6C,KAAA,CAAAlD,CAAA,EAAAD,CAAA;AAAA,SAAAozC,gCAAAA,CAAAnzC,CAAA,EAAAD,CAAA,QAAAA,CAAA,iBAAA4L,aAAA,CAAA5L,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAA0B,SAAA,qEAAA8xC,4BAAA,CAAAvzC,CAAA;AAAA,SAAAuzC,4BAAAA,CAAAxzC,CAAA,mBAAAA,CAAA,YAAAyzC,cAAA,sEAAAzzC,CAAA;AAAA,SAAAqzC,+BAAAA,CAAA,cAAApzC,CAAA,IAAAw+B,OAAA,CAAA/9B,SAAA,CAAAgzC,OAAA,CAAA/xC,IAAA,CAAA2xC,OAAA,CAAAC,SAAA,CAAA9U,OAAA,iCAAAx+B,CAAA,aAAAozC,+BAAA,YAAAA,0BAAA,aAAApzC,CAAA;AAAA,SAAAkzC,qBAAAA,CAAAlzC,CAAA,WAAAkzC,qBAAA,GAAAtyC,MAAA,CAAAoB,cAAA,GAAApB,MAAA,CAAAmB,cAAA,CAAAT,IAAA,eAAAtB,CAAA,WAAAA,CAAA,CAAAiC,SAAA,IAAArB,MAAA,CAAAmB,cAAA,CAAA/B,CAAA,MAAAkzC,qBAAA,CAAAlzC,CAAA;AAAA,SAAAwkB,eAAAA,CAAAxkB,CAAA,EAAAD,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAA0B,SAAA,wDAAAzB,CAAA,CAAAS,SAAA,GAAAG,MAAA,CAAAC,MAAA,CAAAd,CAAA,IAAAA,CAAA,CAAAU,SAAA,IAAAoD,WAAA,IAAAjC,KAAA,EAAA5B,CAAA,EAAA2C,QAAA,MAAAD,YAAA,WAAA9B,MAAA,CAAA0B,cAAA,CAAAtC,CAAA,iBAAA2C,QAAA,SAAA5C,CAAA,IAAA2zC,qBAAA,CAAA1zC,CAAA,EAAAD,CAAA;AAAA,SAAA2zC,qBAAAA,CAAA1zC,CAAA,EAAAD,CAAA,WAAA2zC,qBAAA,GAAA9yC,MAAA,CAAAoB,cAAA,GAAApB,MAAA,CAAAoB,cAAA,CAAAV,IAAA,eAAAtB,CAAA,EAAAD,CAAA,WAAAC,CAAA,CAAAiC,SAAA,GAAAlC,CAAA,EAAAC,CAAA,KAAA0zC,qBAAA,CAAA1zC,CAAA,EAAAD,CAAA;AAD2C;;AAE3C;AACA;AACA;AACA;AACA;AAJA,IAMqB4zC,YAAY,0BAAApyB,UAAA;EAC/B,SAAAoyB,aAAA,EAAc;IAAA,IAAAn4B,KAAA;IAAAmG,qBAAA,OAAAgyB,YAAA;IACZn4B,KAAA,GAAAoG,gBAAA,OAAA+xB,YAAA;IACAn4B,KAAA,CAAK+tB,GAAG;IAER/tB,KAAA,CAAKsR,UAAU,GAAGrlB,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IAC/C8T,KAAA,CAAKsR,UAAU,CAAC/R,SAAS,GAAG,SAAS;IACrCtT,QAAQ,CAACyT,IAAI,CAAC8rB,OAAO,CAACxrB,KAAA,CAAKsR,UAAU,CAAC;IACtCtR,KAAA,CAAK7Z,IAAI,GAAG,YAAM,CAAC,CAAC;IAAA,OAAA6Z,KAAA;EACtB;EAACgJ,eAAA,CAAAmvB,YAAA,EAAApyB,UAAA;EAAA,OAAAkD,kBAAA,CAAAkvB,YAAA;IAAAn5B,GAAA;IAAA5Y,KAAA;MAAA,IAAAgyC,MAAA,GAAA5wC,uBAAA,cAAAb,kBAAA,GAAAE,CAAA,CAED,SAAAwxC,SAAA;QAAA,IAAAv3B,MAAA;QAAA,OAAAna,kBAAA,GAAAC,CAAA,WAAA0xC,SAAA;UAAA,kBAAAA,SAAA,CAAA3zC,CAAA;YAAA;cAAA,OAAA2zC,SAAA,CAAA1yC,CAAA,IACS,IAAIyB,OAAO;gBAAA,IAAAoH,IAAA,GAAAjH,uBAAA,cAAAb,kBAAA,GAAAE,CAAA,CAAC,SAAA6H,QAAMpH,OAAO;kBAAA,IAAAixC,QAAA,EAAAzvB,MAAA;kBAAA,OAAAniB,kBAAA,GAAAC,CAAA,WAAA+H,QAAA;oBAAA,kBAAAA,QAAA,CAAAhK,CAAA;sBAAA;wBAC9BghB,kBAAM,CAAC6yB,SAAS,CAAC,QAAQ,EAAE;0BACzBlyB,MAAM,EAAE,oBAAoB;0BAC5BmyB,KAAK,EAAE,mBAAmB;0BAC1B9sB,UAAU,EAAE;wBACd,CAAC,CAAC;wBAEFhG,kBAAM,CAAC6yB,SAAS,CAAC,WAAW,EAAE;0BAC5B,KAAK,EAAE;wBACT,CAAC,CAAC;wBAEF7yB,kBAAM,CAAC6yB,SAAS,CAAC,OAAO,EAAE;0BACxB,CAAC,EAAE;wBACL,CAAC,CAAC;wBAEF7yB,kBAAM,CAAC6yB,SAAS,CAAC,SAAS,EAAE;0BAC1B,KAAK,EAAE,mCAAmC;0BAC1C,KAAK,EAAE,mCAAmC;0BAC1C,KAAK,EAAE;wBACT,CAAC,CAAC;wBAEF7yB,kBAAM,CAAC6yB,SAAS,CAAC,QAAQ,EAAE;0BACzB,KAAK,EAAE,kCAAkC;0BACzC,KAAK,EAAE;wBACT,CAAC,CAAC;wBAEID,QAAQ,GAAG,CACfwBAED5yB,kBAAM,CAAC6yB,SAAS,CACd,UAAU,EACVD,QAAQ,CAACliC,MAAM,CACb,UAAC0I,GAAG,EAAEhS,CAAC;0BAAA,OAAAsjB,mBAAA,CAAAA,mBAAA,KACFtR,GAAG,OAAAm4B,qBAAA,KACLnqC,CAAC,qBAAA3D,MAAA,CAAsB2D,CAAC;wBAAA,CACzB,EACF,CAAC,CACH,CACF,CAAC;wBAEK+b,MAAM,GAAG,CACbwBAEDnD,kBAAM,CAAC6yB,SAAS,CACd,QAAQ,EACR1vB,MAAM,CAACzS,MAAM,CACX,UAAC0I,GAAG,EAAEhS,CAAC;0BAAA,OAAAsjB,mBAAA,CAAAA,mBAAA,KACFtR,GAAG,OAAAm4B,qBAAA,KACLnqC,CAAC,mBAAA3D,MAAA,CAAoB2D,CAAC;wBAAA,CACvB,EACF,CAAC,CACH,CACF,CAAC;wBAED+T,MAAI,CAACwQ,UAAU,CAACD,SAAS,GAAG,kBAAkB;wBAAA1iB,QAAA,CAAAhK,CAAA;wBAAA,OACxCghB,kBAAM,CAAC+yB,UAAU,CAAC,QAAQ,CAAC;sBAAA;wBACjC53B,MAAI,CAACwQ,UAAU,CAACD,SAAS,GAAG,qBAAqB;wBAAA1iB,QAAA,CAAAhK,CAAA;wBAAA,OAC3CghB,kBAAM,CAAC+yB,UAAU,CAAC,WAAW,CAAC;sBAAA;wBACpC53B,MAAI,CAACwQ,UAAU,CAACD,SAAS,GAAG,iBAAiB;wBAAA1iB,QAAA,CAAAhK,CAAA;wBAAA,OACvCghB,kBAAM,CAAC+yB,UAAU,CAAC,OAAO,CAAC;sBAAA;wBAChC53B,MAAI,CAACwQ,UAAU,CAACD,SAAS,GAAG,mBAAmB;wBAAA1iB,QAAA,CAAAhK,CAAA;wBAAA,OACzCghB,kBAAM,CAAC+yB,UAAU,CAAC,SAAS,CAAC;sBAAA;wBAClC53B,MAAI,CAACwQ,UAAU,CAACD,SAAS,GAAG,kBAAkB;wBAAA1iB,QAAA,CAAAhK,CAAA;wBAAA,OACxCghB,kBAAM,CAAC+yB,UAAU,CAAC,QAAQ,CAAC;sBAAA;wBACjC53B,MAAI,CAACwQ,UAAU,CAACD,SAAS,GAAG,oBAAoB;wBAAA1iB,QAAA,CAAAhK,CAAA;wBAAA,OAC1CghB,kBAAM,CAAC+yB,UAAU,CAAC,UAAU,CAAC;sBAAA;wBACnC53B,MAAI,CAACwQ,UAAU,CAACD,SAAS,GAAG,kBAAkB;wBAAA1iB,QAAA,CAAAhK,CAAA;wBAAA,OACxCghB,kBAAM,CAAC+yB,UAAU,CAAC,QAAQ,CAAC;sBAAA;wBAEjC53B,MAAI,CAACwQ,UAAU,CAACzR,MAAM,CAAC,CAAC;wBAExBvY,OAAO,CAAC,CAAC;sBAAA;wBAAA,OAAAqH,QAAA,CAAA/I,CAAA;oBAAA;kBAAA,GAAA8I,OAAA;gBAAA,CACV;gBAAA,iBAAAiqC,EAAA;kBAAA,OAAAlqC,IAAA,CAAA/G,KAAA,OAAAD,SAAA;gBAAA;cAAA,IAAC;UAAA;QAAA,GAAA4wC,QAAA;MAAA,CACH;MAAA,SAlVK3hC,KAAKA,CAAA;QAAA,OAAA0hC,MAAA,CAAA1wC,KAAA,OAAAD,SAAA;MAAA;MAAA,OAALiP,KAAK;IAAA;EAAA;AAAA,EAX6B+O,sBAAS;;;+BCPnD,uKAAAlhB,CAAA,EAAAC,CAAA,EAAAC,CAAA,wBAAAC,MAAA,GAAAA,MAAA,OAAAC,CAAA,GAAAF,CAAA,CAAAG,QAAA,kBAAAC,CAAA,GAAAJ,CAAA,CAAAK,WAAA,8BAAAC,EAAAN,CAAA,EAAAE,CAAA,EAAAE,CAAA,EAAAE,CAAA,QAAAC,CAAA,GAAAL,CAAA,IAAAA,CAAA,CAAAM,SAAA,YAAAC,SAAA,GAAAP,CAAA,GAAAO,SAAA,EAAAC,CAAA,GAAAC,MAAA,CAAAC,MAAA,CAAAL,CAAA,CAAAC,SAAA,UAAAK,wBAAA,CAAAH,CAAA,uBAAAV,CAAA,EAAAE,CAAA,EAAAE,CAAA,QAAAE,CAAA,EAAAC,CAAA,EAAAG,CAAA,EAAAI,CAAA,MAAAC,CAAA,GAAAX,CAAA,QAAAY,CAAA,OAAAC,CAAA,KAAAF,CAAA,KAAAb,CAAA,KAAAgB,CAAA,EAAApB,CAAA,EAAAqB,CAAA,EAAAC,CAAA,EAAAN,CAAA,EAAAM,CAAA,CAAAC,IAAA,CAAAvB,CAAA,MAAAsB,CAAA,WAAAA,EAAArB,CAAA,EAAAC,CAAA,WAAAM,CAAA,GAAAP,CAAA,EAAAQ,CAAA,MAAAG,CAAA,GAAAZ,CAAA,EAAAmB,CAAA,CAAAf,CAAA,GAAAF,CAAA,EAAAmB,CAAA,gBAAAC,EAAApB,CAAA,EAAAE,CAAA,SAAAK,CAAA,GAAAP,CAAA,EAAAU,CAAA,GAAAR,CAAA,EAAAH,CAAA,OAAAiB,CAAA,IAAAF,CAAA,KAAAV,CAAA,IAAAL,CAAA,GAAAgB,CAAA,CAAAO,MAAA,EAAAvB,CAAA,UAAAK,CAAA,EAAAE,CAAA,GAAAS,CAAA,CAAAhB,CAAA,GAAAqB,CAAA,GAAAH,CAAA,CAAAF,CAAA,EAAAQ,CAAA,GAAAjB,CAAA,KAAAN,CAAA,QAAAI,CAAA,GAAAmB,CAAA,KAAArB,CAAA,MAAAQ,CAAA,GAAAJ,CAAA,EAAAC,CAAA,GAAAD,CAAA,YAAAC,CAAA,WAAAD,CAAA,MAAAA,CAAA,MAAAR,CAAA,IAAAQ,CAAA,OAAAc,CAAA,MAAAhB,CAAA,GAAAJ,CAAA,QAAAoB,CAAA,GAAAd,CAAA,QAAAC,CAAA,MAAAU,CAAA,CAAAC,CAAA,GAAAhB,CAAA,EAAAe,CAAA,CAAAf,CAAA,GAAAI,CAAA,OAAAc,CAAA,GAAAG,CAAA,KAAAnB,CAAA,GAAAJ,CAAA,QAAAM,CAAA,MAAAJ,CAAA,IAAAA,CAAA,GAAAqB,CAAA,MAAAjB,CAAA,MAAAN,CAAA,EAAAM,CAAA,MAAAJ,CAAA,EAAAe,CAAA,CAAAf,CAAA,GAAAqB,CAAA,EAAAhB,CAAA,cAAAH,CAAA,IAAAJ,CAAA,aAAAmB,CAAA,QAAAH,CAAA,OAAAd,CAAA,qBAAAE,CAAA,EAAAW,CAAA,EAAAQ,CAAA,QAAAT,CAAA,YAAAU,SAAA,uCAAAR,CAAA,UAAAD,CAAA,IAAAK,CAAA,CAAAL,CAAA,EAAAQ,CAAA,GAAAhB,CAAA,GAAAQ,CAAA,EAAAL,CAAA,GAAAa,CAAA,GAAAxB,CAAA,GAAAQ,CAAA,OAAAT,CAAA,GAAAY,CAAA,MAAAM,CAAA,KAAAV,CAAA,KAAAC,CAAA,GAAAA,CAAA,QAAAA,CAAA,SAAAU,CAAA,CAAAf,CAAA,QAAAkB,CAAA,CAAAb,CAAA,EAAAG,CAAA,KAAAO,CAAA,CAAAf,CAAA,GAAAQ,CAAA,GAAAO,CAAA,CAAAC,CAAA,GAAAR,CAAA,aAAAI,CAAA,MAAAR,CAAA,QAAAC,CAAA,KAAAH,CAAA,YAAAL,CAAA,GAAAO,CAAA,CAAAF,CAAA,WAAAL,CAAA,GAAAA,CAAA,CAAA0B,IAAA,CAAAnB,CAAA,EAAAI,CAAA,UAAAc,SAAA,2CAAAzB,CAAA,CAAA2B,IAAA,SAAA3B,CAAA,EAAAW,CAAA,GAAAX,CAAA,CAAA4B,KAAA,EAAApB,CAAA,SAAAA,CAAA,oBAAAA,CAAA,KAAAR,CAAA,GAAAO,CAAA,eAAAP,CAAA,CAAA0B,IAAA,CAAAnB,CAAA,GAAAC,CAAA,SAAAG,CAAA,GAAAc,SAAA,uCAAApB,CAAA,gBAAAG,CAAA,OAAAD,CAAA,GAAAR,CAAA,cAAAC,CAAA,IAAAiB,CAAA,GAAAC,CAAA,CAAAf,CAAA,QAAAQ,CAAA,GAAAV,CAAA,CAAAyB,IAAA,CAAAvB,CAAA,EAAAe,CAAA,OAAAE,CAAA,kBAAApB,CAAA,IAAAO,CAAA,GAAAR,CAAA,EAAAS,CAAA,MAAAG,CAAA,GAAAX,CAAA,cAAAe,CAAA,mBAAAa,KAAA,EAAA5B,CAAA,EAAA2B,IAAA,EAAAV,CAAA,SAAAhB,CAAA,EAAAI,CAAA,EAAAE,CAAA,QAAAI,CAAA,QAAAS,CAAA,gBAAAV,UAAA,cAAAmB,kBAAA,cAAAC,2BAAA,KAAA9B,CAAA,GAAAY,MAAA,CAAAmB,cAAA,MAAAvB,CAAA,MAAAL,CAAA,IAAAH,CAAA,CAAAA,CAAA,IAAAG,CAAA,SAAAW,wBAAA,CAAAd,CAAA,OAAAG,CAAA,iCAAAH,CAAA,GAAAW,CAAA,GAAAmB,0BAAA,CAAArB,SAAA,GAAAC,SAAA,CAAAD,SAAA,GAAAG,MAAA,CAAAC,MAAA,CAAAL,CAAA,YAAAO,EAAAhB,CAAA,WAAAa,MAAA,CAAAoB,cAAA,GAAApB,MAAA,CAAAoB,cAAA,CAAAjC,CAAA,EAAA+B,0BAAA,KAAA/B,CAAA,CAAAkC,SAAA,GAAAH,0BAAA,EAAAhB,wBAAA,CAAAf,CAAA,EAAAM,CAAA,yBAAAN,CAAA,CAAAU,SAAA,GAAAG,MAAA,CAAAC,MAAA,CAAAF,CAAA,GAAAZ,CAAA,WAAA8B,iBAAA,CAAApB,SAAA,GAAAqB,0BAAA,EAAAhB,wBAAA,CAAAH,CAAA,iBAAAmB,0BAAA,GAAAhB,wBAAA,CAAAgB,0BAAA,iBAAAD,iBAAA,GAAAA,iBAAA,CAAAK,WAAA,wBAAApB,wBAAA,CAAAgB,0BAAA,EAAAzB,CAAA,wBAAAS,wBAAA,CAAAH,CAAA,GAAAG,wBAAA,CAAAH,CAAA,EAAAN,CAAA,gBAAAS,wBAAA,CAAAH,CAAA,EAAAR,CAAA,iCAAAW,wBAAA,CAAAH,CAAA,8DAAAwB,iBAAA,YAAAA,aAAA,aAAAC,CAAA,EAAA7B,CAAA,EAAA8B,CAAA,EAAAtB,CAAA;AAAA,SAAAD,wBAAAA,CAAAf,CAAA,EAAAE,CAAA,EAAAE,CAAA,EAAAH,CAAA,QAAAO,CAAA,GAAAK,MAAA,CAAA0B,cAAA,QAAA/B,CAAA,uBAAAR,CAAA,IAAAQ,CAAA,QAAAO,wBAAA,YAAAyB,mBAAAxC,CAAA,EAAAE,CAAA,EAAAE,CAAA,EAAAH,CAAA,aAAAK,EAAAJ,CAAA,EAAAE,CAAA,IAAAW,wBAAA,CAAAf,CAAA,EAAAE,CAAA,YAAAF,CAAA,gBAAAyC,OAAA,CAAAvC,CAAA,EAAAE,CAAA,EAAAJ,CAAA,SAAAE,CAAA,GAAAM,CAAA,GAAAA,CAAA,CAAAR,CAAA,EAAAE,CAAA,IAAA2B,KAAA,EAAAzB,CAAA,EAAAsC,UAAA,GAAAzC,CAAA,EAAA0C,YAAA,GAAA1C,CAAA,EAAA2C,QAAA,GAAA3C,CAAA,MAAAD,CAAA,CAAAE,CAAA,IAAAE,CAAA,IAAAE,CAAA,aAAAA,CAAA,cAAAA,CAAA,mBAAAS,wBAAA,CAAAf,CAAA,EAAAE,CAAA,EAAAE,CAAA,EAAAH,CAAA;AAAA,SAAA4C,wBAAAA,CAAAzC,CAAA,EAAAH,CAAA,EAAAD,CAAA,EAAAE,CAAA,EAAAI,CAAA,EAAAe,CAAA,EAAAZ,CAAA,cAAAD,CAAA,GAAAJ,CAAA,CAAAiB,CAAA,EAAAZ,CAAA,GAAAG,CAAA,GAAAJ,CAAA,CAAAqB,KAAA,WAAAzB,CAAA,gBAAAJ,CAAA,CAAAI,CAAA,KAAAI,CAAA,CAAAoB,IAAA,GAAA3B,CAAA,CAAAW,CAAA,IAAAkC,OAAA,CAAAC,OAAA,CAAAnC,CAAA,EAAAoC,IAAA,CAAA9C,CAAA,EAAAI,CAAA;AAAA,SAAA2C,sBAAAA,CAAA7C,CAAA,6BAAAH,CAAA,SAAAD,CAAA,GAAAkD,SAAA,aAAAJ,OAAA,WAAA5C,CAAA,EAAAI,CAAA,QAAAe,CAAA,GAAAjB,CAAA,CAAA+C,KAAA,CAAAlD,CAAA,EAAAD,CAAA,YAAAoD,MAAAhD,CAAA,IAAAyC,wBAAA,CAAAxB,CAAA,EAAAnB,CAAA,EAAAI,CAAA,EAAA8C,KAAA,EAAAC,MAAA,UAAAjD,CAAA,cAAAiD,OAAAjD,CAAA,IAAAyC,wBAAA,CAAAxB,CAAA,EAAAnB,CAAA,EAAAI,CAAA,EAAA8C,KAAA,EAAAC,MAAA,WAAAjD,CAAA,KAAAgD,KAAA;AADqC;AAChB;AACY;AACI;AACpCH,sBAAA,cAAAb,iBAAA,GAAAE,CAAA,CAAC,SAAA6H,QAAA;EAAA,IAAAq/B,GAAA,EAAAS,OAAA,EAAAsK,MAAA,EAAAC,IAAA;EAAA,OAAApyC,iBAAA,GAAAC,CAAA,WAAA+H,QAAA;IAAA,kBAAAA,QAAA,CAAAhK,CAAA;MAAA;QACA;QACMopC,GAAG,GAAG,IAAI6K,wBAAW,CAAC,CAAC,EAE7B;QAAAjqC,QAAA,CAAAhK,CAAA;QAAA,OACMopC,GAAG,CAAC1M,IAAI,CAAC;UACbl1B,KAAK,EAAE3J,MAAM,CAACC,UAAU;UACxB2J,MAAM,EAAE5J,MAAM,CAACE,WAAW;UAC1BssC,UAAU,EAAE,QAAQ;UAAE;UACtBgK,QAAQ,EAAEx2C,MAAM;UAChBy2C,SAAS,EAAE,KAAK;UAAE;UAClBC,UAAU,EAAE12C,MAAM,CAAC22C,gBAAgB,IAAI,CAAC;UACxCC,WAAW,EAAE,IAAI;UAAE;UACnBC,eAAe,EAAE,kBAAkB,CAAE;QACvC,CAAC,CAAC;MAAA;QAEF;QACM7K,OAAO,GAAGviC,QAAQ,CAAC2T,cAAc,CAAC,MAAM,CAAC;QAAA,IAC1C4uB,OAAO;UAAA7/B,QAAA,CAAAhK,CAAA;UAAA;QAAA;QACVyL,OAAO,CAACC,KAAK,CAAC,0BAA0B,CAAC;QAAA,OAAA1B,QAAA,CAAA/I,CAAA;MAAA;QAG3C4oC,OAAO,CAAC/uB,WAAW,CAACsuB,GAAG,CAAC/hC,MAAM,CAAC;;QAE/B;QACM8sC,MAAM,GAAG,IAAID,YAAM,CAAC,CAAC;QAC3B9K,GAAG,CAACsE,KAAK,CAACtpB,QAAQ,CAAC+vB,MAAM,CAAC;QAAAnqC,QAAA,CAAAhK,CAAA;QAAA,OACpBm0C,MAAM,CAACpiC,KAAK,CAAC,CAAC;MAAA;QAEpB;QACMqiC,IAAI,GAAG,IAAI/D,IAAI,CAACjH,GAAG,EAAES,OAAO,CAAC;QACnCT,GAAG,CAACsE,KAAK,CAACzjC,WAAW,CAACkqC,MAAM,CAAC;QAC7B/K,GAAG,CAACsE,KAAK,CAACtpB,QAAQ,CAACgwB,IAAI,CAAC;;QAExB;QACAhL,GAAG,CAACsE,KAAK,CAAC/qB,EAAE,CAAC,aAAa,EAAE,UAAAgyB,KAAK,EAAI;UACnC;QAAA,CACD,CAAC;MAAA;QAAA,OAAA3qC,QAAA,CAAA/I,CAAA;IAAA;EAAA,GAAA8I,OAAA;AAAA,CACH,GAAE,CAAC,C;;;;;;;;;;;;;;AC1CJ;AAC8J;AACjB;AAC7I,8BAA8B,sIAA2B,CAAC,+IAAqC;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,iFAAiF,YAAY,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,OAAO,UAAU,YAAY,WAAW,UAAU,YAAY,aAAa,aAAa,OAAO,KAAK,UAAU,YAAY,WAAW,YAAY,aAAa,aAAa,OAAO,MAAM,YAAY,aAAa,aAAa,aAAa,WAAW,YAAY,aAAa,WAAW,YAAY,MAAM,MAAM,YAAY,MAAM,KAAK,YAAY,MAAM,KAAK,UAAU,UAAU,UAAU,YAAY,WAAW,UAAU,UAAU,YAAY,WAAW,UAAU,YAAY,OAAO,KAAK,UAAU,YAAY,aAAa,WAAW,MAAM,KAAK,UAAU,MAAM,KAAK,YAAY,WAAW,UAAU,UAAU,UAAU,YAAY,aAAa,OAAO,KAAK,YAAY,WAAW,MAAM,KAAK,YAAY,WAAW,UAAU,YAAY,aAAa,aAAa,OAAO,KAAK,YAAY,WAAW,YAAY,WAAW,YAAY,aAAa,aAAa,aAAa,aAAa,OAAO,KAAK,YAAY,WAAW,UAAU,UAAU,YAAY,aAAa,WAAW,UAAU,MAAM,KAAK,YAAY,aAAa,aAAa,aAAa,aAAa,WAAW,YAAY,WAAW,UAAU,MAAM,KAAK,YAAY,WAAW,UAAU,MAAM,KAAK,YAAY,WAAW,UAAU,UAAU,YAAY,aAAa,OAAO,KAAK,UAAU,YAAY,WAAW,MAAM,KAAK,UAAU,UAAU,UAAU,UAAU,UAAU,YAAY,OAAO,KAAK,UAAU,YAAY,WAAW,MAAM,KAAK,YAAY,WAAW,MAAM,KAAK,YAAY,WAAW,YAAY,OAAO,KAAK,UAAU,UAAU,YAAY,aAAa,OAAO,KAAK,YAAY,WAAW,UAAU,UAAU,UAAU,MAAM,KAAK,UAAU,YAAY,aAAa,OAAO,KAAK,UAAU,UAAU,MAAM,KAAK,UAAU,YAAY,aAAa,OAAO,KAAK,YAAY,WAAW,OAAO,KAAK,UAAU,UAAU,YAAY,OAAO,KAAK,UAAU,MAAM,KAAK,YAAY,WAAW,UAAU,YAAY,aAAa,aAAa,OAAO,KAAK,UAAU,UAAU,UAAU,YAAY,OAAO,KAAK,UAAU,YAAY,WAAW,MAAM,KAAK,YAAY,WAAW,UAAU,UAAU,YAAY,aAAa,WAAW,MAAM,KAAK,YAAY,WAAW,UAAU,UAAU,YAAY,aAAa,WAAW,MAAM,MAAM,YAAY,WAAW,UAAU,UAAU,YAAY,OAAO,KAAK,UAAU,UAAU,UAAU,YAAY,WAAW,UAAU,YAAY,aAAa,WAAW,UAAU,YAAY,aAAa,OAAO,KAAK,YAAY,WAAW,UAAU,UAAU,UAAU,YAAY,WAAW,MAAM,KAAK,YAAY,aAAa,aAAa,aAAa,WAAW,UAAU,YAAY,OAAO,KAAK,UAAU,YAAY,WAAW,UAAU,gCAAgC,kCAAkC,uCAAuC,qCAAqC,8BAA8B,4BAA4B,+BAA+B,4CAA4C,gEAAgE,GAAG,sDAAsD,0BAA0B,mBAAmB,oBAAoB,+BAA+B,4BAA4B,iCAAiC,GAAG,UAAU,kBAAkB,qBAAqB,cAAc,8BAA8B,sBAAsB,4BAA4B,GAAG,0BAA0B,gDAAgD,sBAAsB,6CAA6C,uBAAuB,oBAAoB,uBAAuB,kCAAkC,iBAAiB,yBAAyB,GAAG,oCAAoC,gDAAgD,GAAG,eAAe,6BAA6B,GAAG,uBAAuB,iBAAiB,oBAAoB,iBAAiB,uBAAuB,WAAW,YAAY,gBAAgB,wDAAwD,oBAAoB,+DAA+D,GAAG,cAAc,kBAAkB,wBAAwB,4BAA4B,iBAAiB,GAAG,WAAW,YAAY,GAAG,YAAY,uBAAuB,kBAAkB,oBAAoB,aAAa,cAAc,qCAAqC,sBAAsB,GAAG,UAAU,6CAA6C,gBAAgB,GAAG,UAAU,qBAAqB,iBAAiB,gBAAgB,sFAAsF,6CAA6C,uCAAuC,GAAG,aAAa,uBAAuB,WAAW,sBAAsB,kBAAkB,sBAAsB,uCAAuC,6BAA6B,wBAAwB,4BAA4B,GAAG,gBAAgB,uBAAuB,cAAc,kBAAkB,kBAAkB,4CAA4C,6BAA6B,kBAAkB,iBAAiB,GAAG,qBAAqB,uBAAuB,sFAAsF,6CAA6C,uCAAuC,qBAAqB,kBAAkB,2BAA2B,iBAAiB,aAAa,GAAG,2BAA2B,qBAAqB,iBAAiB,gBAAgB,GAAG,4BAA4B,uBAAuB,cAAc,cAAc,kBAAkB,wBAAwB,2BAA2B,GAAG,2BAA2B,kBAAkB,wBAAwB,aAAa,GAAG,qBAAqB,kBAAkB,oBAAoB,aAAa,mBAAmB,mBAAmB,qBAAqB,GAAG,4BAA4B,kBAAkB,2BAA2B,aAAa,GAAG,yBAAyB,uBAAuB,kBAAkB,GAAG,yBAAyB,uBAAuB,aAAa,8DAA8D,GAAG,oBAAoB,gBAAgB,iBAAiB,sBAAsB,0DAA0D,GAAG,2BAA2B,uBAAuB,YAAY,WAAW,gBAAgB,iBAAiB,GAAG,iBAAiB,kBAAkB,wBAAwB,4BAA4B,GAAG,uBAAuB,kBAAkB,cAAc,GAAG,qBAAqB,kBAAkB,wBAAwB,yBAAyB,GAAG,0BAA0B,uBAAuB,oBAAoB,GAAG,eAAe,kBAAkB,aAAa,wBAAwB,GAAG,qBAAqB,gBAAgB,GAAG,uBAAuB,qBAAqB,iBAAiB,gBAAgB,sFAAsF,6CAA6C,uCAAuC,GAAG,cAAc,kBAAkB,oBAAoB,gBAAgB,uBAAuB,GAAG,sBAAsB,mBAAmB,mCAAmC,iBAAiB,GAAG,wBAAwB,uBAAuB,cAAc,cAAc,kBAAkB,wBAAwB,wBAAwB,aAAa,GAAG,mBAAmB,uBAAuB,cAAc,cAAc,kBAAkB,wBAAwB,wBAAwB,aAAa,GAAG,qCAAqC,uBAAuB,cAAc,cAAc,kBAAkB,wBAAwB,GAAG,aAAa,oBAAoB,mBAAmB,aAAa,6BAA6B,kBAAkB,iBAAiB,gCAAgC,mCAAmC,gBAAgB,kBAAkB,wBAAwB,4BAA4B,GAAG,YAAY,uBAAuB,WAAW,YAAY,iBAAiB,kBAAkB,mCAAmC,kBAAkB,GAAG,oBAAoB,6CAA6C,6CAA6C,uCAAuC,uBAAuB,aAAa,cAAc,qCAAqC,GAAG,iBAAiB,kBAAkB,2BAA2B,cAAc,kBAAkB,GAAG,qBAAqB;AACp8Q;AACA,iEAAe,uBAAuB,EAAC","sources":["webpack://rts-game/./app/styles.css?5553","webpack://rts-game/./app/constants/index.js","webpack://rts-game/./app/lib/graphics.js","webpack://rts-game/./app/lib/accounting.js","webpack://rts-game/./app/lib/maths.js","webpack://rts-game/./app/lib/grid.js","webpack://rts-game/./app/lib/extra.js","webpack://rts-game/./app/lib/index.js","webpack://rts-game/./app/classes/resource.js","webpack://rts-game/./app/classes/projectile.js","webpack://rts-game/./app/classes/building.js","webpack://rts-game/./app/classes/unit.js","webpack://rts-game/./app/classes/players/player.js","webpack://rts-game/./app/classes/players/ai.js","webpack://rts-game/./app/classes/animal.js","webpack://rts-game/./app/classes/players/gaia.js","webpack://rts-game/./app/classes/players/human.js","webpack://rts-game/./app/classes/players/index.js","webpack://rts-game/./app/classes/cell.js","webpack://rts-game/./app/classes/map.js","webpack://rts-game/./app/classes/menu.js","webpack://rts-game/./app/classes/controls.js","webpack://rts-game/./app/screens/Game.js","webpack://rts-game/./app/screens/Loader.js","webpack://rts-game/./app/entry.js","webpack://rts-game/./app/styles.css"],"sourcesContent":["\n      import API from \"!../node_modules/.pnpm/style-loader@4.0.0_webpack@5.101.3/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/.pnpm/style-loader@4.0.0_webpack@5.101.3/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/.pnpm/style-loader@4.0.0_webpack@5.101.3/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/.pnpm/style-loader@4.0.0_webpack@5.101.3/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/.pnpm/style-loader@4.0.0_webpack@5.101.3/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/.pnpm/style-loader@4.0.0_webpack@5.101.3/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/.pnpm/css-loader@7.1.2_webpack@5.101.3/node_modules/css-loader/dist/cjs.js!./styles.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/.pnpm/css-loader@7.1.2_webpack@5.101.3/node_modules/css-loader/dist/cjs.js!./styles.css\";\n       export default content && content.locals ? content.locals : undefined;\n","export const CELL_WIDTH = 64\nexport const CELL_HEIGHT = 32\nexport const CELL_DEPTH = 16\n\nexport const ACCELERATOR = 1.5\nexport const STEP_TIME = 20\n\nexport const IS_MOBILE = window.innerWidth <= 800 && window.innerHeight <= 600\nexport const LONG_CLICK_DURATION = 200\n\nexport const WORK_FOOD_TYPES = ['fisher', 'hunter', 'farmer', 'forager']\nexport const LOADING_FOOD_TYPES = ['meat', 'wheat', 'berry', 'fish']\n\nexport const COLOR_WHITE = 0xffffff\nexport const COLOR_BLACK = 0x000000\nexport const COLOR_GREY = 0x808080\nexport const COLOR_RED = 0xff0000\nexport const COLOR_ORANGE = 0xffa500\nexport const COLOR_YELLOW = 0xffff00\nexport const COLOR_GREEN = 0x008000\nexport const COLOR_BLUE = 0x0000ff\nexport const COLOR_INDIGO = 0x4b0082\nexport const COLOR_VIOLET = 0xee82ee\nexport const COLOR_BONE = 0xe2dac2\nexport const COLOR_SHIP_GREY = 0x3c3b3d\nexport const COLOR_FOG = 0x999999\nexport const COLOR_FLASHY_GREEN = 0x00ff00\nexport const COLOR_ARROW = 0xe8e3df\n\nexport const TYPE_ACTION = {\n  Stone: 'minestone',\n  Gold: 'minegold',\n  Berrybush: 'forageberry',\n  Tree: 'chopwood',\n  Fish: 'fishing',\n}\n\nexport const CORPSE_TIME = 120\nexport const RUBBLE_TIME = 120\nexport const MAX_SELECT_UNITS = 10\nexport const POPULATION_MAX = 200\n","import { Graphics } from 'pixi.js'\nimport { Texture } from 'pixi.js'\nimport { COLOR_FLASHY_GREEN } from '../constants'\nimport { MultiColorReplaceFilter } from 'pixi-filters'\n\nexport function getIconPath(name) {\n  const id = name.split('_')[1]\n  const index = name.split('_')[0]\n  return `assets/interface/${id}/${index}_${id}.png`\n}\n\nexport function getBuildingTextureNameWithSize(size) {\n  switch (size) {\n    case 1:\n      return '000_256'\n    case 2:\n      return '000_258'\n    case 3:\n      return '000_261'\n  }\n}\n\nexport function getBuildingRubbleTextureNameWithSize(size) {\n  switch (size) {\n    case 1:\n      return '000_153'\n    case 2:\n      return '000_154'\n    case 3:\n      return '000_155'\n  }\n}\n\nexport function getBuildingAsset(type, owner, assets) {\n  const path = assets.cache.get(owner.civ.toLowerCase()).buildings\n  if (path[owner.age][type]) {\n    return path[owner.age][type]\n  } else if (path[owner.age - 1][type]) {\n    return path[owner.age - 1][type]\n  } else if (path[owner.age - 2][type]) {\n    return path[owner.age - 2][type]\n  } else if (path[0][type]) {\n    return path[0][type]\n  }\n}\n\n/**\n * Retrieve a texture from the assets cache based on its name.\n *\n * @param {string} name - The name of the texture, formatted as 'index_id'.\n * @param {object} assets - The assets object containing the cache of textures.\n * @returns {object} - The requested texture from the spritesheet.\n * @throws {Error} - If the texture cannot be found in the spritesheet.\n */\nexport function getTexture(name, assets) {\n  const [index, id] = name.split('_')\n  const spritesheet = assets.cache.get(id)\n\n  if (!spritesheet || !spritesheet.textures) {\n    throw new Error(`Spritesheet for ID \"${id}\" not found in assets.`)\n  }\n\n  const textureName = `${index}_${id}.png`\n  const texture = spritesheet.textures[textureName]\n\n  if (!texture) {\n    throw new Error(`Texture \"${textureName}\" not found in spritesheet.`)\n  }\n\n  // Set the hit area for the texture\n  texture.hitArea = spritesheet.data.frames[textureName].hitArea\n\n  return texture\n}\n\nexport const colors = ['blue', 'red', 'yellow', 'brown', 'orange', 'green', 'grey', 'cyan']\n\n/**\n * Get the hex color code for a given color name.\n * @param {string} name - The name of the color.\n * @returns {string} The hex color code, or '#ffffff' if the color is not found.\n */\nexport function getHexColor(name) {\n  const colorMap = {\n    blue: '#3f5f9f',\n    red: '#e30b00',\n    yellow: '#c3a31b',\n    brown: '#8b5b37',\n    orange: '#ef6307',\n    green: '#4b6b2b',\n    grey: '#8f8f8f',\n    cyan: '#00837b',\n  }\n  return colorMap[name] || '#ffffff' // Default to white if not found\n}\n\n/**\n * Change the color of a sprite directly by manipulating its texture.\n * @param {object} sprite - The sprite to change the color of.\n * @param {string} color - The new color to apply to the sprite.\n */\nexport function changeSpriteColorDirectly(sprite, color) {\n  if (color === 'blue') {\n    return // Skip processing if color is blue\n  }\n\n  const sourceColors = [0x93bbd7, 0x739bc7, 0x577bb3, 0x3f5f9f, 0x273f8f, 0x17277b, 0x070f67, 0x000057]\n\n  const colors = {\n    red: [0xff8f8f, 0xff5f5f, 0xff2f2f, 0xe30b00, 0xc71700, 0x8f1f00, 0x6f0b07, 0x530b00],\n    yellow: [0xe3e300, 0xdfcf0f, 0xdfcf0f, 0xc3a31b, 0xa37317, 0x876727, 0x6b4b27, 0x4f3723],\n    brown: [0xcfa343, 0xb78b2b, 0xa3734f, 0x8b5b37, 0x734727, 0x5f331b, 0x3f3723, 0x23231f],\n    orange: [0xfb9f1f, 0xf78b17, 0xf3770f, 0xef6307, 0xcf4300, 0x9f3300, 0x872b00, 0x6f2300],\n    green: [0x8b9f4f, 0x7f8b37, 0x637b2f, 0x4b6b2b, 0x375f27, 0x1b431b, 0x133313, 0x0b1b0b],\n    grey: [0xdbdbdb, 0xc7c7c7, 0xb3b3b3, 0x8f8f8f, 0x6b6b6b, 0x474747, 0x373737, 0x232323],\n    cyan: [0x5fd39f, 0x2bbf93, 0x00ab93, 0x00837b, 0x006f6b, 0x004f4f, 0x003f43, 0x002327],\n  }\n\n  const targetColors = colors[color]\n\n  if (!targetColors) {\n    throw new Error('Invalid color selected.') // Throw error for invalid color\n  }\n\n  const baseTexture = sprite.texture.baseTexture.resource\n\n  const canvas = document.createElement('canvas')\n  canvas.width = sprite.texture.width\n  canvas.height = sprite.texture.height\n\n  const ctx = canvas.getContext('2d')\n  ctx.drawImage(\n    baseTexture,\n    sprite.texture.frame.x,\n    sprite.texture.frame.y,\n    sprite.texture.frame.width,\n    sprite.texture.frame.height,\n    0,\n    0,\n    sprite.texture.frame.width,\n    sprite.texture.frame.height\n  )\n\n  const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height)\n  const data = imageData.data\n\n  const sourceColorMap = new Map(sourceColors.map((color, index) => [color, targetColors[index]]))\n\n  for (let i = 0; i < data.length; i += 4) {\n    const r = data[i]\n    const g = data[i + 1]\n    const b = data[i + 2]\n    const rgb = (r << 16) | (g << 8) | b\n\n    if (sourceColorMap.has(rgb)) {\n      const targetColor = sourceColorMap.get(rgb)\n      data[i] = (targetColor >> 16) & 0xff // Red\n      data[i + 1] = (targetColor >> 8) & 0xff // Green\n      data[i + 2] = targetColor & 0xff // Blue\n    }\n  }\n\n  ctx.putImageData(imageData, 0, 0)\n\n  const newTexture = Texture.from(canvas)\n  sprite.texture = newTexture\n}\n\n/**\n * Change the color of a sprite based on the specified color.\n *\n * @param {object} sprite - The sprite object whose color will be changed.\n * @param {string} color - The target color. Supported colors: 'red', 'yellow', 'brown', 'orange', 'green', 'grey', 'cyan'.\n * @returns {void}\n */\nexport function changeSpriteColor(sprite, color) {\n  // Skip color change if the specified color is blue\n  if (color === 'blue') {\n    return\n  }\n\n  // Source colors (Hex)\n  const source = [0x93bbd7, 0x739bc7, 0x577bb3, 0x3f5f9f, 0x273f8f, 0x17277b, 0x070f67, 0x000057]\n\n  // Define color mappings\n  const colors = {\n    red: [0xff8f8f, 0xff5f5f, 0xff2f2f, 0xe30b00, 0xc71700, 0x8f1f00, 0x6f0b07, 0x530b00],\n    yellow: [0xe3e300, 0xdfcf0f, 0xdfcf0f, 0xc3a31b, 0xa37317, 0x876727, 0x6b4b27, 0x4f3723],\n    brown: [0xcfa343, 0xb78b2b, 0xa3734f, 0x8b5b37, 0x734727, 0x5f331b, 0x3f3723, 0x23231f],\n    orange: [0xfb9f1f, 0xf78b17, 0xf3770f, 0xef6307, 0xcf4300, 0x9f3300, 0x872b00, 0x6f2300],\n    green: [0x8b9f4f, 0x7f8b37, 0x637b2f, 0x4b6b2b, 0x375f27, 0x1b431b, 0x133313, 0x0b1b0b],\n    grey: [0xdbdbdb, 0xc7c7c7, 0xb3b3b3, 0x8f8f8f, 0x6b6b6b, 0x474747, 0x373737, 0x232323],\n    cyan: [0x5fd39f, 0x2bbf93, 0x00ab93, 0x00837b, 0x006f6b, 0x004f4f, 0x003f43, 0x002327],\n  }\n\n  // Check if the color is supported\n  if (!colors[color]) {\n    return\n  }\n\n  // Create final color mapping\n  const replacements = []\n  for (let i = 0; i < source.length; i++) {\n    replacements.push([source[i], colors[color][i]])\n  }\n\n  const filter = new MultiColorReplaceFilter({ replacements, tolerance: 0.1 })\n\n  sprite.filters = [filter]\n}\n\n/**\n * Draws a blinking selection around the given instance.\n * @param {object} instance - The instance to draw the selection around.\n */\nexport function drawInstanceBlinkingSelection(instance) {\n  const selection = new Graphics()\n  selection.label = 'selection'\n  selection.zIndex = 3\n\n  // Define the path for the selection\n  const path = [-32 * instance.size, 0, 0, -16 * instance.size, 32 * instance.size, 0, 0, 16 * instance.size]\n  selection.poly(path)\n  selection.stroke(COLOR_FLASHY_GREEN)\n  instance.addChildAt(selection, 0)\n\n  // Helper function for blinking effect\n  const blink = (alpha, duration) => {\n    return new Promise(resolve => {\n      selection.alpha = alpha\n      setTimeout(resolve, duration)\n    })\n  }\n\n  const blinkSequence = async () => {\n    await blink(1, 500) // Show\n    await blink(0, 300) // Hide\n    await blink(1, 300) // Show\n    await blink(0, 300) // Hide\n    await blink(1, 300) // Show\n    instance.removeChild(selection) // Clean up\n  }\n\n  blinkSequence()\n}\n/**\n * Draw a filled rectangle on the canvas.\n * @param {CanvasRenderingContext2D} context\n * @param {number} x - The x-coordinate of the rectangle's top-left corner.\n * @param {number} y - The y-coordinate of the rectangle's top-left corner.\n * @param {number} width - The width of the rectangle.\n * @param {number} height - The height of the rectangle.\n * @param {string} color - The fill color for the rectangle.\n */\nexport function canvasDrawRectangle(context, x, y, width, height, color) {\n  context.fillStyle = color\n  context.fillRect(x, y, width, height)\n}\n\n/**\n * Draw a stroked rectangle on the canvas.\n * @param {CanvasRenderingContext2D} context\n * @param {number} x - The x-coordinate of the rectangle's top-left corner.\n * @param {number} y - The y-coordinate of the rectangle's top-left corner.\n * @param {number} width - The width of the rectangle.\n * @param {number} height - The height of the rectangle.\n * @param {string} color - The stroke color for the rectangle.\n */\nexport function canvasDrawStrokeRectangle(context, x, y, width, height, color) {\n  context.strokeStyle = color\n  context.strokeRect(x, y, width, height)\n}\n\n/**\n * Draw a diamond shape on the canvas.\n * @param {CanvasRenderingContext2D} context\n * @param {number} x - The x-coordinate of the diamond's center.\n * @param {number} y - The y-coordinate of the diamond's center.\n * @param {number} width - The width of the diamond.\n * @param {number} height - The height of the diamond.\n * @param {string} color - The fill color for the diamond.\n */\nexport function canvasDrawDiamond(context, x, y, width, height, color) {\n  context.save()\n  context.beginPath()\n  context.moveTo(x, y)\n  context.lineTo(x - width / 2, y + height / 2)\n  context.lineTo(x, y + height)\n  context.lineTo(x + width / 2, y + height / 2)\n  context.closePath()\n\n  context.fillStyle = color\n  context.fill()\n  context.restore() // Restore the context state\n}\n\n/**\n * Execute a callback when a sprite reaches a specific frame.\n * @param {object} sprite - The sprite to monitor.\n * @param {number} frame - The target frame to trigger the callback.\n * @param {function} cb - The callback to execute.\n */\nexport function onSpriteLoopAtFrame(sprite, frame, cb) {\n  sprite.onFrameChange = currentFrame => {\n    if (currentFrame === frame) {\n      cb()\n    }\n  }\n}\n","/**\n * Refunds costs to the player's resources.\n * @param {object} player - The player object containing resources.\n * @param {object} cost - An object representing the costs to refund.\n */\nexport function refundCost(player, cost) {\n  if (!player || typeof player !== 'object' || !cost || typeof cost !== 'object') {\n    console.error('Invalid arguments provided to refundCost.')\n    return\n  }\n\n  Object.keys(cost).forEach(prop => {\n    if (typeof cost[prop] === 'number') {\n      player[prop] += cost[prop]\n    } else {\n      console.warn(`Cost for ${prop} is not a number:`, cost[prop])\n    }\n  })\n}\n\n/**\n * Deducts costs from the player's resources.\n * @param {object} player - The player object containing resources.\n * @param {object} cost - An object representing the costs to pay.\n */\nexport function payCost(player, cost) {\n  if (!player || typeof player !== 'object' || !cost || typeof cost !== 'object') {\n    console.error('Invalid arguments provided to payCost.')\n    return\n  }\n\n  Object.keys(cost).forEach(prop => {\n    if (typeof cost[prop] === 'number') {\n      player[prop] -= cost[prop]\n    } else {\n      console.warn(`Cost for ${prop} is not a number:`, cost[prop])\n    }\n  })\n}\n\n/**\n * Checks if the player can afford the given costs.\n * @param {object} player - The player object containing resources.\n * @param {object} cost - An object representing the costs to check.\n * @returns {boolean} - True if the player can afford the costs, false otherwise.\n */\nexport function canAfford(player, cost) {\n  // Validate inputs\n  if (!player || typeof player !== 'object' || !cost || typeof cost !== 'object') {\n    console.error('Invalid arguments provided to canAfford.')\n    return false\n  }\n\n  // Iterate over the cost object\n  for (const prop in cost) {\n    // Check if the cost for the property is a number\n    if (typeof cost[prop] === 'number') {\n      // Early return if player cannot afford the cost\n      if (player[prop] < cost[prop]) {\n        return false\n      }\n    }\n  }\n\n  // If all costs are affordable, return true\n  return true\n}\n","import { CELL_WIDTH, CELL_HEIGHT, CELL_DEPTH } from '../constants'\n\n/**\n * Generate a version 4 UUID.\n * @returns {string} - A random UUID.\n */\nexport function uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const randomValue = crypto.getRandomValues(new Uint8Array(1))[0] & 15 // Get a random value\n    const hexValue = (c === 'x' ? randomValue : (randomValue & 0x3) | 0x8).toString(16) // Adjust for 'y'\n    return hexValue\n  })\n}\n\n/**\n * Format a number with three character\n * @param {number} nbr\n */\nexport function formatNumber(nbr) {\n  return ('00' + nbr).slice(-3)\n}\n\n/**\n * Convert cartesian to isometric\n * @param {number} x\n * @param {number} y\n */\nexport function cartesianToIsometric(x, y) {\n  return [Math.floor(((x - y) * CELL_WIDTH) / 2), Math.floor(((x + y) * CELL_HEIGHT) / 2)]\n}\n\n/**\n * Convert isometric position to cartesian\n * @param {number} x\n * @param {number} y\n */\nexport function isometricToCartesian(x, y) {\n  return [\n    Math.round((x / (CELL_WIDTH / 2) + y / (CELL_HEIGHT / 2)) / 2),\n    Math.round((y / (CELL_HEIGHT / 2) - x / (CELL_WIDTH / 2)) / 2),\n  ]\n}\n\n/**\n * Get percentage with two numbers\n * @param {number} a\n * @param {number} b\n */\nexport function getPercentage(a, b) {\n  return Math.floor((a / b) * 100)\n}\n\n/**\n * Get value of percentage\n * @param {number} a\n * @param {number} b\n */\nexport function getValuePercentage(val, perc) {\n  return Math.floor((perc * val) / 100)\n}\n\n/**\n * Get average between two numbers\n * @param {number} a\n * @param {number} b\n */\nexport function average(a, b) {\n  return (a + b) / 2\n}\n\n/**\n * Check if point is between two points can be used with line thickness\n * @param {object} line1\n * @param {object} line2\n * @param {object} pnt\n * @param {number} lineThickness\n */\n/**\n * Check if a point is within a certain distance from a line segment\n * @param {{x:number, y:number}} line1 - Start point of the line\n * @param {{x:number, y:number}} line2 - End point of the line\n * @param {{x:number, y:number}} pnt - Point to check\n * @param {number} lineThickness - Maximum allowed distance from the line\n * @returns {boolean}\n */\nexport function pointIsBetweenTwoPoint(line1, line2, pnt, lineThickness) {\n  const dx = line2.x - line1.x\n  const dy = line2.y - line1.y\n  const L2 = dx * dx + dy * dy\n  if (L2 === 0) {\n    // line1 == line2\n    const dist = Math.hypot(line1.x - pnt.x, line1.y - pnt.y)\n    return dist <= lineThickness\n  }\n\n  // Projection parameter\n  const r = ((pnt.x - line1.x) * dx + (pnt.y - line1.y) * dy) / L2\n\n  if (r < 0) {\n    return Math.hypot(line1.x - pnt.x, line1.y - pnt.y) <= lineThickness\n  } else if (r > 1) {\n    return Math.hypot(line2.x - pnt.x, line2.y - pnt.y) <= lineThickness\n  } else {\n    // Perpendicular distance from point to line\n    const s = ((line1.y - pnt.y) * dx - (line1.x - pnt.x) * dy) / L2\n    return Math.abs(s) * Math.sqrt(L2) <= lineThickness\n  }\n}\n\n/**\n * Get a random number between two numbers\n * @param {number} min\n * @param {number} max\n */\nexport function randomRange(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min)\n}\n\n/**\n * Get a random item from a array\n * @param {array} array\n */\nexport function randomItem(array = []) {\n  return array[Math.round(Math.random() * (array.length - 1))]\n}\n\n/**\n * Get distance between two instances, can use iso (x, y) or cartesian (i, j)\n * @param {object} a\n * @param {object} b\n * @param {boolean} useCartesian\n */\nexport function instancesDistance(a, b, useCartesian = true) {\n  return useCartesian ? pointsDistance(a.i, a.j, b.i, b.j) : pointsDistance(a.x, a.y, b.x, b.y)\n}\n\n/**\n * Get the instance zIndex according to his position\n * @param {object} instance\n */\nexport function getInstanceZIndex(instance) {\n  const pos = isometricToCartesian(instance.x, instance.y + instance.z * CELL_DEPTH)\n  return pos[0] + pos[1]\n}\n\n/**\n * Get the difference between two number\n * @param {number} a\n * @param {number} b\n */\nexport function diff(a, b) {\n  return Math.abs(a - b)\n}\n\n/**\n * Get degree of instance according to a point\n * @param {object} instance\n * @param {number} x\n * @param {number} y\n */\nexport function getInstanceDegree(instance, x, y) {\n  return getPointsDegree(instance.x, instance.y, x, y)\n}\n\n/**\n * Get the degree from one point to another.\n * @param {number} x1 - The x-coordinate of the first point.\n * @param {number} y1 - The y-coordinate of the first point.\n * @param {number} x2 - The x-coordinate of the second point.\n * @param {number} y2 - The y-coordinate of the second point.\n * @returns {number} - The angle in degrees from the first point to the second.\n */\nexport function getPointsDegree(x1, y1, x2, y2) {\n  const tX = x2 - x1\n  const tY = y2 - y1\n  return Math.round((Math.atan2(tY, tX) * 180) / Math.PI + 180)\n}\n\n/**\n * Convert degrees to radians.\n * @param {number} degrees - The angle in degrees.\n * @returns {number} - The angle in radians.\n */\nexport function degreesToRadians(degrees) {\n  return degrees * (Math.PI / 180)\n}\n\n/**\n * Get distance between two points\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n */\nexport function pointsDistance(x1, y1, x2, y2) {\n  let a = x1 - x2\n  let b = y1 - y2\n  return Math.floor(Math.sqrt(a * a + b * b))\n}\n\n/**\n * Check if point is in a rectangle or not\n * @param {number} x\n * @param {number} y\n * @param {number} left\n * @param {number} top\n * @param {number} width\n * @param {number} height\n */\nexport function pointInRectangle(x, y, left, top, width, height, allDirection = false) {\n  return allDirection\n    ? (x > left && x < left + width && y > top && y < top + height) ||\n        (x < left && x > left + width && y < top && y > top + height) ||\n        (x > left && x < left + width && y < top && y > top + height) ||\n        (x < left && x > left + width && y > top && y < top + height)\n    : x > left && x < left + width && y > top && y < top + height\n}\n\n/**\n * Check if two instance are on diagonal axes\n * @param {object} instance\n * @param {object} instance\n */\nexport function cellIsDiag(src, target) {\n  return Math.abs(target.i - src.i) === Math.abs(target.j - src.j)\n}\n\nexport function degreeToDirection(degree) {\n  if (degree > 67.5 && degree < 112.5) {\n    return 'north'\n  } else if (degree > 247.5 && degree < 292.5) {\n    return 'south'\n  } else if (degree > 337.5 || degree < 22.5) {\n    return 'west'\n  } else if (degree >= 22.5 && degree <= 67.5) {\n    return 'northwest'\n  } else if (degree >= 292.5 && degree <= 337.5) {\n    return 'southwest'\n  } else if (degree > 157.5 && degree < 202.5) {\n    return 'est'\n  } else if (degree > 112.5 && degree < 157.5) {\n    return 'northest'\n  } else if (degree > 202.5 && degree < 247.5) {\n    return 'southest'\n  }\n}\n","import { ACCELERATOR } from '../constants'\nimport * as exports from './maths'\nObject.entries(exports).forEach(([name, exported]) => (window[name] = exported))\n\n/**\n * Check if two instances are in contact.\n *\n * @param {object} a - The first instance. Should have properties like `x`, `y`, and `size`.\n * @param {object} b - The second instance. Should have properties like `x`, `y`, `size`, and `isDestroyed`.\n * @returns {boolean} - True if instance `a` is in contact with instance `b`, false otherwise.\n */\nexport function instanceContactInstance(a, b) {\n  // Check if the distance between instances is less than or equal to (b.size - 1) and b is not destroyed\n  return Math.floor(instancesDistance(a, b)) <= (b.size - 1 || 1) && !b.isDestroyed\n}\n\n/**\n * Move an instance towards a specific point (x, y) at a given speed.\n *\n * @param {object} instance - The instance to move. Should have properties like `x`, `y`, and `degree`.\n * @param {number} x - The target x-coordinate to move towards.\n * @param {number} y - The target y-coordinate to move towards.\n * @param {number} speed - The speed at which the instance should move.\n */\nexport function moveTowardPoint(instance, x, y, speed) {\n  const dist = pointsDistance(x, y, instance.x, instance.y)\n\n  if (dist === 0) return // Prevent division by zero\n\n  // Calculate the direction vector from the instance to the target point\n  const tX = x - instance.x\n  const tY = y - instance.y\n\n  // Calculate the velocity based on the speed and distance\n  const velX = (tX / dist) * (speed * ACCELERATOR)\n  const velY = (tY / dist) * (speed * ACCELERATOR)\n\n  // Update the instance's degree (rotation) to face the target point\n  instance.degree = getInstanceDegree(instance, x, y)\n\n  // Update the instance's position by adding the velocity components\n  instance.x += velX\n  instance.y += velY\n}\n\n/**\n * Get the first free cell coordinate around a point\n * @param {number} x - The x-coordinate of the starting point\n * @param {number} y - The y-coordinate of the starting point\n * @param {number} size - The starting search radius\n * @param {object} grid - The grid to search in\n * @param {function} condition - A function to test if a cell is free\n * @returns {object|null} - The coordinates of the first free cell or null if none found\n */\nexport function getFreeCellAroundPoint(x, y, size, grid, condition) {\n  const maxDistance = 50\n\n  for (let distance = size; distance < maxDistance; distance++) {\n    const cells = getCellsAroundPoint(x, y, grid, distance, condition)\n    if (cells.length > 0) {\n      return randomItem(cells)\n    }\n  }\n\n  return null\n}\n\n/**\n * Get the closest available path for an instance to a destination\n * @param {object} instance - The instance seeking a path\n * @param {object} target - The target object to reach\n * @param {object} map - The map containing grid information\n * @returns {Array} - The shortest path to a free cell or an empty array if none found\n */\nexport function getInstanceClosestFreeCellPath(instance, target, map) {\n  const size = target.size || (target.has && target.has.size) || 1\n  const paths = []\n\n  // Get cells around the target based on size\n  const distance = size === 3 ? 2 : 1\n  getCellsAroundPoint(target.i, target.j, map.grid, distance, cell => {\n    const path = getInstancePath(instance, cell.i, cell.j, map)\n    if (path.length) {\n      paths.push(path)\n    }\n  })\n\n  // Return the shortest path if available\n  return paths.length\n    ? paths.reduce((shortest, current) => (current.length < shortest.length ? current : shortest))\n    : []\n}\n\n/**\n * Get the shortest path for a instance to a destination\n * @param {object} instance\n * @param {number} x\n * @param {number} y\n * @param {object} map\n */\nexport function getInstancePath(instance, x, y, map) {\n  const maxZone = 10\n  const end = map.grid[x][y]\n  const start = map.grid[instance.i][instance.j]\n  let minX = Math.max(Math.min(start.i, end.i) - maxZone, 0)\n  let maxX = Math.min(Math.max(start.i, end.i) + maxZone, map.size)\n  let minY = Math.max(Math.min(start.j, end.j) - maxZone, 0)\n  let maxY = Math.min(Math.max(start.j, end.j) + maxZone, map.size)\n\n  function isCellReachable(cell) {\n    if (cell.solid) {\n      return false\n    }\n    const allowWaterCellCategory = instance.category === 'Boat'\n    return allowWaterCellCategory ? cell.category === 'Water' : cell.category !== 'Water'\n  }\n\n  let cloneGrid = []\n  for (var i = minX; i <= maxX; i++) {\n    for (var j = minY; j <= maxY; j++) {\n      if (cloneGrid[i] == null) {\n        cloneGrid[i] = []\n      }\n      cloneGrid[i][j] = {\n        i,\n        j,\n        x: map.grid[i][j].x,\n        y: map.grid[i][j].y,\n        z: map.grid[i][j].z,\n        solid: map.grid[i][j].solid,\n        category: map.grid[i][j].category,\n      }\n    }\n  }\n  let isFinish = false\n  let path = []\n  let openCells = []\n  let closedCells = []\n  const cloneEnd = cloneGrid[end.i][end.j]\n  const cloneStart = cloneGrid[start.i][start.j]\n  openCells.push(cloneStart)\n  while (!isFinish) {\n    if (openCells.length > 0) {\n      // find the lowest f in open cells\n      let lowestF = 0\n      for (let i = 0; i < openCells.length; i++) {\n        if (openCells[i].f < openCells[lowestF].f) {\n          lowestF = i\n        }\n\n        if (openCells[i].f == openCells[lowestF].f) {\n          if (openCells[i].g > openCells[lowestF].g) {\n            lowestF = i\n          }\n        }\n      }\n      let current = openCells[lowestF]\n      if (current === cloneEnd) {\n        // reached the end cell\n        isFinish = true\n      }\n      // calculate path\n      path = [cloneEnd]\n      let temp = current\n\n      while (temp.previous) {\n        path.push(temp.previous)\n        temp = temp.previous\n      }\n      openCells.splice(openCells.indexOf(current), 1)\n      closedCells.push(current)\n      // check neighbours\n      getCellsAroundPoint(current.i, current.j, cloneGrid, 1, neighbour => {\n        const validDiag =\n          !cellIsDiag(current, neighbour) ||\n          (isCellReachable(cloneGrid[current.i][neighbour.j]) && isCellReachable(cloneGrid[neighbour.i][current.j]))\n        if (!closedCells.includes(neighbour) && isCellReachable(neighbour) && validDiag) {\n          let tempG = current.g + instancesDistance(neighbour, current)\n          if (!openCells.includes(neighbour)) {\n            openCells.push(neighbour)\n            neighbour.g = tempG\n            neighbour.h = instancesDistance(neighbour, cloneEnd)\n            neighbour.f = neighbour.g + neighbour.h\n            neighbour.previous = current\n          }\n        }\n      })\n    } else {\n      // no solution\n      path = []\n      isFinish = true\n    }\n  }\n  path.pop()\n  return [...path]\n}\n\n/**\n * Find a sized zone in the grid that meets a condition.\n *\n * This function searches within a given zone in the grid for a region of the specified `size`,\n * and checks whether all cells within that region meet a specified condition.\n *\n * @param {object} zone - An object containing the boundaries of the search area (minX, maxX, minY, maxY).\n * @param {object[][]} grid - A 2D grid representing the map.\n * @param {number} size - The size of the area to check around each grid point.\n * @param {function} condition - A callback function that evaluates whether a cell is valid.\n * @returns {object|null} The coordinates {i, j} of the first valid zone found, or null if none are found.\n */\nexport function getZoneInGridWithCondition(zone, grid, size, condition) {\n  // Iterate over the specified zone in the grid\n  for (let i = zone.minX; i <= zone.maxX; i++) {\n    if (!grid[i]) continue // Skip if out of bounds\n\n    for (let j = zone.minY; j <= zone.maxY; j++) {\n      const cell = grid[i]?.[j]\n      if (!cell) continue // Skip if cell doesn't exist\n\n      // Assume the area around (i, j) is free initially\n      let isFree = true\n\n      // Check the surrounding cells of size `size` to ensure they all meet the condition\n      const surroundingCells = getPlainCellsAroundPoint(i, j, grid, size)\n      for (const surroundingCell of surroundingCells) {\n        if (!condition(surroundingCell)) {\n          isFree = false\n          break // Exit early if a cell does not meet the condition\n        }\n      }\n\n      // Return the first valid {i, j} coordinates if the area is free\n      if (isFree) {\n        return { i, j }\n      }\n    }\n  }\n\n  // Return null if no valid zone is found\n  return null\n}\n\n/**\n * Finds all instances within the sight range of a given instance that meet a specific condition.\n *\n * @param {object} instance - The instance whose sight is being processed. Should have properties like `i`, `j`, `sight`, and `parent.grid`.\n * @param {function} condition - A callback function that receives an instance and returns `true` if the instance matches the desired condition.\n * @returns {Array} - List of instances that are within the sight range and match the condition.\n */\nexport function findInstancesInSight(instance, condition) {\n  const {\n    i: instX,\n    j: instY,\n    sight,\n    parent: { grid },\n  } = instance\n  let instances = []\n\n  for (let x = Math.max(instX - sight, 0); x <= Math.min(instX + sight, grid.length - 1); x++) {\n    for (let y = Math.max(instY - sight, 0); y <= Math.min(instY + sight, grid[x].length - 1); y++) {\n      // Check if the cell is within the instance's sight range\n      if (pointsDistance(instX, instY, x, y) <= sight) {\n        const cell = grid[x][y]\n\n        // Ensure the cell has an instance and the condition is met\n        if (cell?.has && typeof condition === 'function' && condition(cell.has)) {\n          instances.push(cell.has)\n        }\n      }\n    }\n  }\n\n  return instances\n}\n\n/**\n * Renders cells in the instance's line of sight, updating their visibility and interactions based on the instance's sight.\n *\n * @param {object} instance - The instance whose sight is being processed.\n *                            Must include properties like `i`, `j`, `sight`, `owner`, `parent`, and `context`.\n */\nexport function renderCellOnInstanceSight(instance) {\n  const { player, controls, map } = instance.context\n  const { owner, sight } = instance\n\n  // Check if instance should be visible based on player interaction and sight\n  if (\n    player &&\n    (!map.revealEverything ? !instanceIsInPlayerSight(instance, player) : !controls.instanceInCamera(instance)) &&\n    !owner.isPlayed\n  ) {\n    instance.visible = false\n  } else {\n    instance.visible = true\n  }\n\n  // Process cells around the instance based on its sight\n  getPlainCellsAroundPoint(instance.i, instance.j, owner.views, sight, cell => {\n    const pointDistance = pointsDistance(instance.i, instance.j, cell.i, cell.j)\n    const globalCell = map.grid[cell.i][cell.j]\n\n    if (pointDistance <= sight) {\n      // If the global cell has an instance with sight and a detection function\n      if (\n        globalCell.has &&\n        globalCell.has.sight &&\n        instancesDistance(instance, globalCell.has) <= globalCell.has.sight &&\n        typeof globalCell.has.detect === 'function'\n      ) {\n        globalCell.has.detect(instance)\n      }\n\n      // Add the instance to the cell's viewBy list if not already present\n      if (!cell.viewBy.includes(instance)) {\n        cell.viewBy.push(instance)\n      }\n\n      // Mark the cell as viewed if it hasn't been already\n      if (!cell.viewed) {\n        owner.cellViewed++\n        cell.onViewed()\n        cell.viewed = true\n      }\n\n      // Handle fog removal for the instance's owner (player vs AI)\n      if (owner.isPlayed && !map.revealEverything) {\n        globalCell.removeFog()\n      } else if (owner.type === 'AI') {\n        // Update AI's knowledge of the surroundings (trees, berrybushes, enemy buildings)\n        updateAIKnowledge(globalCell, cell, instance)\n      }\n    }\n  })\n}\n\n/**\n * Updates AI knowledge of trees, berrybushes, and enemy buildings when an AI instance views a global cell.\n *\n * @param {object} globalCell - The cell in the global grid.\n * @param {object} cell - The current local cell being processed.\n * @param {object} instance - The AI instance viewing the cell.\n */\nfunction updateAIKnowledge(globalCell, cell, instance) {\n  const { owner } = instance\n\n  // Sync local cell's \"has\" object with the global cell if different\n  if (globalCell.has && (!cell.has || cell.has.label !== globalCell.has.label)) {\n    cell.has = globalCell.has\n\n    // Detect tree resources and update AI's knowledge\n    if (globalCell.has.type === 'Tree' && globalCell.has.quantity > 0 && !owner.foundedTrees.includes(globalCell.has)) {\n      owner.foundedTrees.push(globalCell.has)\n    }\n\n    // Detect berrybush resources and update AI's knowledge\n    if (\n      globalCell.has.type === 'Berrybush' &&\n      globalCell.has.quantity > 0 &&\n      !owner.foundedBerrybushs.includes(globalCell.has)\n    ) {\n      owner.foundedBerrybushs.push(globalCell.has)\n    }\n\n    // Detect enemy buildings and update AI's knowledge\n    if (\n      globalCell.has.family === 'building' &&\n      globalCell.has.hitPoints > 0 &&\n      globalCell.has.owner.label !== owner.label &&\n      !owner.foundedEnemyBuildings.includes(globalCell.has)\n    ) {\n      owner.foundedEnemyBuildings.push(globalCell.has)\n    }\n  }\n}\n\n/**\n * Clears the cells within the instance's line of sight from the owner's view.\n *\n * This function removes the instance from the `viewBy` list of cells around it, within its line of sight.\n * If a cell is no longer viewed by any instance and meets certain conditions, fog is applied to that cell.\n *\n * @param {object} instance - The instance whose sight is being cleared (must have properties `i`, `j`, `sight`, `owner`, and `parent`).\n */\nexport function clearCellOnInstanceSight(instance) {\n  // If the entire map is revealed, skip the process\n  if (instance.parent.revealEverything) return\n\n  const { i: instX, j: instY, sight, owner, parent } = instance\n  const views = owner.views\n\n  // Get cells around the instance within its sight range\n  getPlainCellsAroundPoint(instX, instY, views, sight, cell => {\n    // Check if the cell is within the sight radius based on distance\n    if (pointsDistance(instX, instY, cell.i, cell.j) <= sight) {\n      const idx = cell.viewBy.indexOf(instance)\n\n      // If the instance is in the viewBy array, remove it\n      if (idx !== -1) {\n        cell.viewBy.splice(idx, 1)\n\n        // If the cell is no longer viewed by any instance, apply fog after a slight delay\n        if (!cell.viewBy.length && owner.isPlayed && !parent.revealEverything) {\n          setTimeout(() => {\n            if (parent && !cell.viewBy.length) {\n              parent.grid[cell.i][cell.j].setFog()\n            }\n          }, 30)\n        }\n      }\n    }\n  })\n}\n\n/**\n * Randomly finds a valid position in the grid within a specified zone and size, considering certain conditions.\n *\n * This function attempts to find a valid cell in the grid around the specified zone by randomly generating coordinates\n * and checking if they meet specific conditions, such as avoiding inclined, solid, or border cells.\n *\n * @param {object} zone - The area of the grid to search within (must have properties `minX`, `minY`, `maxX`, `maxY`).\n * @param {object[][]} grid - The grid representing the map, where each cell contains coordinates and attributes.\n * @param {number} size - The size of the instance for which we are finding space.\n * @param {function} condition - A function that returns true if the cell meets the conditions, false otherwise.\n * @param {number} attempts - The number of random attempts to find a valid cell.\n * @returns {object|null} The position {i, j} of a valid cell or null if no valid cell is found.\n */\nexport function getRandomZoneInGridWithCondition(zone, grid, size, condition, attempts = 100) {\n  for (let attempt = 0; attempt < attempts; attempt++) {\n    // Generate random coordinates within the zone\n    const randomX = Math.floor(Math.random() * (zone.maxX - zone.minX + 1)) + zone.minX\n    const randomY = Math.floor(Math.random() * (zone.maxY - zone.minY + 1)) + zone.minY\n\n    const cell = grid[randomX]?.[randomY]\n    if (!cell) continue // Skip if cell doesn't exist\n\n    // Assume the area around (randomX, randomY) is free initially\n    let isFree = true\n\n    // Check the surrounding cells of size `size` to ensure they all meet the condition\n    const surroundingCells = getPlainCellsAroundPoint(randomX, randomY, grid, size)\n    for (const surroundingCell of surroundingCells) {\n      if (!condition(surroundingCell)) {\n        isFree = false\n        break // Exit early if a cell does not meet the condition\n      }\n    }\n\n    // If the area is free, return the valid cell\n    if (isFree) {\n      return { i: randomX, j: randomY }\n    }\n  }\n\n  // Return null if no valid cells found after all attempts\n  return null\n}\n\n/**\n * Find a valid position in the grid around an instance within a specified space range.\n *\n * This function searches for a position around a given instance within the grid, considering a range of space,\n * the size of the object, and additional conditions like avoiding inclined, solid, or border cells. It can\n * use either a random zone search or a fixed zone search depending on the `random` parameter.\n *\n * @param {object} instance - The instance around which to search (must have properties `i`, `j`, and `parent` grid).\n * @param {object[][]} grid - The grid representing the map, where each cell contains coordinates and attributes.\n * @param {number[]} space - An array [minSpace, maxSpace] that defines the distance range to search within.\n * @param {number} size - The size of the instance for which we are finding space.\n * @param {boolean} [allowInclined=false] - Whether to allow inclined cells in the search.\n * @param {function} [extraCondition] - An optional callback for extra conditions that a valid cell must meet.\n * @param {boolean} [random=true] - If `true`, uses `getRandomZoneInGridWithCondition`; otherwise, uses `getZoneInGridWithCondition`.\n * @returns {object|null} The position {i, j} of a valid cell or null if no valid cell is found.\n */\nexport function getPositionInGridAroundInstance(\n  instance,\n  grid,\n  space,\n  size,\n  allowInclined = false,\n  extraCondition,\n  random = true\n) {\n  const [minSpace, maxSpace] = space\n\n  // Define the search zone based on instance's position and maxSpace\n  const zone = {\n    minX: Math.max(instance.i - maxSpace, 0),\n    minY: Math.max(instance.j - maxSpace, 0),\n    maxX: Math.min(instance.i + maxSpace, instance.parent.size - 1),\n    maxY: Math.min(instance.j + maxSpace, instance.parent.size - 1),\n  }\n\n  // Condition to check if the cell is valid based on space, solid, inclined, etc.\n  const cellCondition = cell => {\n    const distance = instancesDistance(instance, cell, true)\n    return (\n      distance >= minSpace && // Ensure it's at least the minimum distance away\n      distance <= maxSpace && // Ensure it's within the maximum distance\n      !cell.solid && // Ensure the cell is not solid\n      !cell.border && // Ensure the cell is not at the border\n      (allowInclined || !cell.inclined) && // Check inclined condition\n      (!extraCondition || extraCondition(cell)) // Apply any additional conditions\n    )\n  }\n\n  // Use either the random zone search or fixed zone search based on the 'random' flag\n  let pos\n  if (random) {\n    pos = getRandomZoneInGridWithCondition(zone, grid, size, cellCondition)\n  } else {\n    pos = getZoneInGridWithCondition(zone, grid, size, cellCondition)\n  }\n\n  // Return the found position or null if none is found\n  return pos || null\n}\n\n/**\n * Instance is in a player sight\n * @param {object} instance\n * @param {object} player\n */\nexport function instanceIsInPlayerSight(instance, player) {\n  const dist = instance.size === 3 ? 1 : 0\n  let isInSight = false // Flag to track if the instance is in player sight\n\n  player?.views &&\n    getPlainCellsAroundPoint(instance.i, instance.j, player.views, dist, cell => {\n      if (cell.viewBy.length > 0) {\n        isInSight = true // Set the flag if the condition is met\n      }\n    })\n\n  return isInSight // Return the flag\n}\n\n/**\n * Get all the coordinates around a point within a maximum distance.\n *\n * @param {number} startX - The X coordinate of the center point.\n * @param {number} startY - The Y coordinate of the center point.\n * @param {number} dist - The maximum distance from the center point.\n * @param {object[][]} grid - 2D array representing the grid.\n * @param {function} [callback] - Optional callback function to filter cells. If provided, it should return true for valid cells.\n * @returns {object[]} - Array of valid cells around the point within the distance.\n */\nexport function getPlainCellsAroundPoint(startX, startY, grid, dist = 0, callback) {\n  const result = []\n\n  // Handle single-cell case\n  if (dist === 0) {\n    const row = grid[startX]\n    if (row) {\n      const cell = row[startY]\n      if (cell && (!callback || callback(cell))) result.push(cell)\n    }\n    return result\n  }\n\n  const minX = Math.max(startX - dist, 0)\n  const maxX = Math.min(startX + dist, grid.length - 1)\n\n  for (let i = minX; i <= maxX; i++) {\n    const row = grid[i]\n    if (!row) continue\n    const minY = Math.max(startY - dist, 0)\n    const maxY = Math.min(startY + dist, row.length - 1)\n\n    for (let j = minY; j <= maxY; j++) {\n      const cell = row[j]\n      if (cell && (!callback || callback(cell))) result.push(cell)\n    }\n  }\n\n  return result\n}\n\n/**\n * Get the coordinates around a point within a Manhattan distance\n * @param {number} startX\n * @param {number} startY\n * @param {Array} grid\n * @param {number} dist\n * @param {Function} callback\n * @returns {Array} Array of cells that match the criteria\n */\n/**\n * Get the coordinates around a point within a Manhattan distance (safe for irregular grids)\n * @param {number} startX\n * @param {number} startY\n * @param {Array} grid\n * @param {number} dist\n * @param {Function} callback\n * @returns {Array} Array of cells that match the criteria\n */\nexport function getCellsAroundPoint(startX, startY, grid, dist, callback) {\n  const result = []\n\n  // Special case: distance 0\n  const startCell = grid[startX]?.[startY]\n  if (dist === 0) {\n    if (startCell && (!callback || callback(startCell))) result.push(startCell)\n    return result\n  }\n\n  // Iterate over Manhattan distance\n  for (let dx = -dist; dx <= dist; dx++) {\n    const x = startX + dx\n    if (!grid[x]) continue // Skip if row does not exist\n\n    const dyMax = dist - Math.abs(dx)\n    for (let dy = -dyMax; dy <= dyMax; dy++) {\n      const y = startY + dy\n      const row = grid[x]\n      if (!row || !row[y]) continue // Skip if cell does not exist\n\n      const cell = row[y]\n      if (!callback || callback(cell)) result.push(cell)\n    }\n  }\n\n  return result\n}\n\n/**\n * Get the closest instance to a given instance.\n *\n * @param {object} instance - The reference instance. Should have properties like `x`, `y`.\n * @param {Array<object>} instances - The array of other instances to check. Each should have properties like `x`, `y`.\n * @returns {object|boolean} - The closest instance or false if no instances are found.\n */\nexport function getClosestInstance(instance, instances) {\n  let closestInstance = null\n  let closestDistance = Infinity\n\n  // Iterate through the instances to find the one with the minimum distance to the reference instance\n  for (const targetInstance of instances) {\n    const distance = instancesDistance(instance, targetInstance)\n\n    if (distance < closestDistance) {\n      closestDistance = distance\n      closestInstance = targetInstance\n    }\n  }\n\n  // Return the closest instance, or false if no valid instance was found\n  return closestInstance || false\n}\n\n/**\n * Get the closest instance with a valid path.\n *\n * This function calculates the closest instance that can be reached by a valid path\n * from the given `instance`. It checks all provided `instances` and computes the path\n * to each of them, then returns the instance with the shortest valid path.\n *\n * @param {object} instance - The current instance trying to reach other instances.\n * @param {Array<object>} instances - An array of target instances to find the closest reachable one.\n * @returns {object|null} The closest instance with its path or null if no valid path is found.\n */\nexport function getClosestInstanceWithPath(instance, instances) {\n  let closest = null\n\n  for (const target of instances) {\n    const path = getInstanceClosestFreeCellPath(instance, target, instance.parent)\n\n    // If a valid path exists, compare its length to the current closest\n    if (path.length && (!closest || path.length < closest.path.length)) {\n      closest = {\n        instance: target,\n        path,\n      }\n    }\n  }\n\n  return closest\n}\n","import { instanceIsInPlayerSight } from './grid'\nimport { degreeToDirection, uuidv4 } from './maths'\n\nexport function setUnitTexture(sheet, instance, ACCELERATOR) {\n  const animationSpeed = {\n    standingSheet: 0.15,\n    corpseSheet: 0,\n  }\n  const { paused } = instance.context\n  if (paused) {\n    return\n  }\n  const sheetToReset = ['actionSheet', 'dyingSheet', 'corpseSheet']\n  // Sheet don't exist we just block the current sheet\n  if (!instance[sheet]) {\n    if (instance.currentSheet !== 'walkingSheet' && instance.walkingSheet) {\n      instance.sprite.textures = [instance.walkingSheet.textures[Object.keys(instance.walkingSheet.textures)[0]]]\n    } else {\n      instance.sprite.textures = [instance.sprite.textures[instance.sprite.currentFrame]]\n    }\n    instance.currentSheet = 'walkingSheet'\n    instance.sprite.stop()\n    instance.sprite.anchor.set(\n      instance.sprite.textures[instance.sprite.currentFrame].defaultAnchor.x,\n      instance.sprite.textures[instance.sprite.currentFrame].defaultAnchor.y\n    )\n    return\n  }\n  // Reset action loop\n  if (!sheetToReset.includes(sheet)) {\n    instance.sprite.onLoop = null\n    instance.sprite.onFrameChange = null\n  }\n  const goto = instance.currentSheet === sheet && instance.sprite.currentFrame\n  instance.currentSheet = sheet\n  const direction = degreeToDirection(instance.degree)\n  switch (direction) {\n    case 'southest':\n      instance.sprite.scale.x = -1\n      instance.sprite.textures = instance[sheet].animations['southwest']\n      break\n    case 'northest':\n      instance.sprite.scale.x = -1\n      instance.sprite.textures = instance[sheet].animations['northwest']\n      break\n    case 'est':\n      instance.sprite.scale.x = -1\n      instance.sprite.textures = instance[sheet].animations['west']\n      break\n    default:\n      instance.sprite.scale.x = 1\n      instance.sprite.textures = instance[sheet].animations[direction]\n  }\n  instance.sprite.animationSpeed = (instance[sheet].data.animationSpeed ?? animationSpeed[sheet] ?? 0.3) * ACCELERATOR\n  goto && goto < instance.sprite.textures.length ? instance.sprite.gotoAndPlay(goto) : instance.sprite.play()\n}\n\n/**\n * Filters an object by the specified keys.\n * @param {object} obj - The object to filter.\n * @param {Array<string>} keys - The keys to retain in the new object.\n * @returns {object} - The filtered object.\n */\nexport function filterObject(obj, keys) {\n  if (typeof obj !== 'object' || obj === null) {\n    throw new Error('Expected an object to filter.')\n  }\n  return keys.reduce((acc, key) => {\n    if (obj.hasOwnProperty(key)) {\n      acc[key] = obj[key]\n    }\n    return acc\n  }, {})\n}\n\n/**\n * Modal constructor for displaying content in a modal dialog.\n * @param {HTMLElement} content - The content to display inside the modal.\n */\nexport var Modal = function (content) {\n  if (!(content instanceof HTMLElement)) {\n    throw new Error('Content must be an HTML element.')\n  }\n\n  const id = uuidv4()\n\n  this.open = () => {\n    const modal = document.createElement('div')\n    modal.id = id\n    modal.className = 'modal'\n\n    const modalContent = document.createElement('div')\n    modalContent.className = 'modal-content'\n    modalContent.appendChild(content)\n\n    modal.appendChild(modalContent)\n    document.body.appendChild(modal)\n    return modal\n  }\n\n  this.close = () => {\n    const modal = document.getElementById(id)\n    if (modal) {\n      modal.remove()\n    }\n  }\n\n  this.open()\n}\n\n/**\n * Custom timeout implementation with pause and resume functionality.\n * @param {function} callback - The function to execute after the delay.\n * @param {number} delay - The delay in milliseconds.\n */\nexport var CustomTimeout = function (callback, delay) {\n  if (typeof callback !== 'function' || typeof delay !== 'number') {\n    throw new Error('Invalid arguments for CustomTimeout.')\n  }\n\n  let timerId,\n    start,\n    remaining = delay\n\n  this.pause = () => {\n    window.clearTimeout(timerId)\n    timerId = null\n    remaining -= Date.now() - start\n    return remaining\n  }\n\n  this.resume = () => {\n    if (timerId) {\n      return // Already running\n    }\n\n    start = Date.now()\n    timerId = window.setTimeout(callback, remaining)\n  }\n\n  this.reset = () => {\n    this.pause()\n    remaining = delay\n    this.resume()\n  }\n\n  this.resume() // Start the timer immediately\n}\n\n/**\n * Throttles a function to ensure it only executes once within a specified time frame.\n * @param {Function} callback - The function to throttle.\n * @param {number} wait - The time frame in milliseconds to throttle calls.\n * @param {boolean} [immediate=false] - If true, trigger the function on the leading edge instead of the trailing.\n * @returns {Function} - The throttled function.\n */\nexport function throttle(callback, wait, immediate = false) {\n  if (typeof callback !== 'function' || typeof wait !== 'number') {\n    throw new Error('Invalid arguments: callback must be a function and wait must be a number.')\n  }\n\n  let timeout = null\n  let initialCall = true\n\n  return function (...args) {\n    const callNow = immediate && initialCall\n\n    const next = () => {\n      callback.apply(this, args)\n      timeout = null\n    }\n\n    if (callNow) {\n      initialCall = false\n      next()\n    }\n\n    if (!timeout) {\n      timeout = setTimeout(next, wait)\n    }\n  }\n}\n\n/**\n * Debounces a function to ensure it only executes after a specified delay.\n * @param {Function} callback - The function to debounce.\n * @param {number} wait - The delay in milliseconds before the function can be called again.\n * @returns {Function} - The debounced function.\n */\nexport const debounce = (callback, wait) => {\n  if (typeof callback !== 'function' || typeof wait !== 'number') {\n    throw new Error('Invalid arguments: callback must be a function and wait must be a number.')\n  }\n\n  let timeoutId = null\n  return function (...args) {\n    window.clearTimeout(timeoutId)\n    timeoutId = window.setTimeout(() => {\n      callback.apply(this, args)\n    }, wait)\n  }\n}\n\n/**\n * Maps loading types to their corresponding work roles.\n * @param {string} loadingType - The type of resource being loaded.\n * @returns {string} - The corresponding work role for the loading type.\n */\nexport function getWorkWithLoadingType(loadingType) {\n  const workMapping = {\n    wheat: 'farmer',\n    wood: 'woodcutter',\n    berry: 'forager',\n    stone: 'stoneminer',\n    gold: 'goldminer',\n    meat: 'hunter',\n    fish: 'fisher',\n  }\n\n  return workMapping[loadingType] || 'default' // Fallback to 'default' if loadingType is not found\n}\n\n/**\n * Capitalizes the first letter of a string.\n * @param {string} string - The input string to capitalize.\n * @returns {string} - The string with the first letter capitalized.\n */\nexport function capitalizeFirstLetter(string) {\n  if (typeof string !== 'string') {\n    throw new TypeError('Expected a string')\n  }\n\n  return string.length > 0 ? string.charAt(0).toUpperCase() + string.slice(1) : ''\n}\n\n/**\n * Calculates the damage dealt by a source to a target.\n * @param {object} source - The attacking unit with attack attributes.\n * @param {object} target - The defending unit with armor attributes.\n * @returns {number} The calculated damage, at least 1.\n */\nexport function getDamage(source, target) {\n  const meleeAttack = source.meleeAttack || 0\n  const pierceAttack = source.pierceAttack || 0\n  const meleeArmor = target.meleeArmor || 0\n  const pierceArmor = target.pierceArmor || 0\n\n  // Calculate damage considering armor\n  return Math.max(1, Math.max(0, meleeAttack - meleeArmor) + Math.max(0, pierceAttack - pierceArmor))\n}\n\n/**\n * Calculates the remaining hit points of a target after taking damage.\n * @param {object} source - The attacking unit (for damage calculation).\n * @param {object} target - The defending unit with hit points.\n * @param {number} [defaultDamage] - An optional damage value.\n * @returns {number} The remaining hit points of the target, at least 0.\n */\nexport function getHitPointsWithDamage(source, target, defaultDamage) {\n  const damage = defaultDamage || getDamage(source, target)\n  return Math.max(0, target.hitPoints - damage)\n}\n\n/**\n * Updates a nested property in an object based on the specified operation.\n * @param {Object} target - The object to be updated.\n * @param {Object} operation - An object describing the update operation.\n * @param {string} operation.key - The key representing the path to the property.\n * @param {string} operation.op - The operation to perform ('*' or '+').\n * @param {number} operation.value - The value to use in the operation.\n */\nexport const updateObject = (target, operation) => {\n  if (typeof target !== 'object' || target === null) {\n    throw new Error('Target must be a non-null object.')\n  }\n\n  if (!operation || !operation.key || !operation.op || typeof operation.value !== 'number') {\n    throw new Error('Invalid operation: key, op, and value are required.')\n  }\n\n  function setToValue(obj, value, path) {\n    const keys = path.split('.')\n    for (let i = 0; i < keys.length - 1; i++) {\n      if (!obj[keys[i]]) {\n        throw new Error(`Path not found: ${keys.slice(0, i + 1).join('.')}`)\n      }\n      obj = obj[keys[i]]\n    }\n    obj[keys[keys.length - 1]] = value\n  }\n\n  const keys = operation.key.split('.')\n  let result = target\n\n  // Navigate to the specified path\n  for (const key of keys) {\n    if (result[key] === undefined) {\n      throw new Error(`Key not found: ${operation.key}`)\n    }\n    result = result[key]\n  }\n\n  switch (operation.op) {\n    case '*':\n      setToValue(target, result * Number(operation.value), operation.key)\n      break\n    case '+':\n      setToValue(target, result + Number(operation.value), operation.key)\n      break\n    default:\n      throw new Error(`Invalid operation: ${operation.op}`)\n  }\n}\n\nexport const canUpdateMinimap = (instance, player) => {\n  return instance.owner.isPlayed || (player.label !== instance.owner.label && instanceIsInPlayerSight(instance, player))\n}\n\n/**\n * Checks if a given condition is valid based on specified values.\n * @param {Object} condition - The condition object containing operation, key, and value.\n * @param {Object} values - The values to evaluate against.\n * @returns {boolean} - True if the condition is valid, false otherwise.\n */\nexport const isValidCondition = (condition, values) => {\n  if (!condition) {\n    return true // No condition means it's always valid\n  }\n\n  const { op, key, value } = condition\n  const expectedValue = values[key]\n\n  if (expectedValue === undefined) {\n    throw new Error(`Key not found in values: ${key}`)\n  }\n\n  switch (op) {\n    case '=':\n    case '!=': {\n      const result = Array.isArray(value) ? arraysEqual(value, expectedValue) : value === expectedValue\n\n      return op === '!=' ? !result : result\n    }\n    case '<':\n      return expectedValue < value\n    case '<=':\n      return expectedValue <= value\n    case '>=':\n      return expectedValue >= value\n    case '>':\n      return expectedValue > value\n    case 'includes':\n      return expectedValue.includes(value)\n    case 'notincludes':\n      return !expectedValue.includes(value)\n    default:\n      throw new Error(`Invalid condition operation provided: ${op}`)\n  }\n}\n\n/**\n * Compares two arrays for equality, disregarding order.\n * @param {Array} a - The first array.\n * @param {Array} b - The second array.\n * @returns {boolean} - True if arrays are equal, false otherwise.\n */\nconst arraysEqual = (a, b) => {\n  if (!Array.isArray(a) || !Array.isArray(b)) return false\n  if (a.length !== b.length) return false\n\n  const sortedA = a.slice().sort()\n  const sortedB = b.slice().sort()\n\n  return sortedA.every((val, index) => val === sortedB[index])\n}\n\nexport const getActionCondition = (source, target, action, props) => {\n  if (!action) {\n    return false\n  }\n  const conditions = {\n    delivery: props =>\n      source.loading > 0 &&\n      target.hitPoints > 0 &&\n      target.isBuilt &&\n      (!props || props.buildingTypes.includes(target.type)),\n    takemeat: () =>\n      source.type === 'Villager' &&\n      target.family === 'animal' &&\n      target.quantity > 0 &&\n      target.isDead &&\n      !target.isDestroyed,\n    fishing: () =>\n      target.category === 'Fish' &&\n      target.allowAction.includes(source.type) &&\n      target.quantity > 0 &&\n      !target.isDestroyed,\n    hunt: () =>\n      source.type === 'Villager' &&\n      target.family === 'animal' &&\n      target.quantity > 0 &&\n      target.hitPoints > 0 &&\n      !target.isDead,\n    chopwood: () => source.type === 'Villager' && target.type === 'Tree' && target.quantity > 0 && !target.isDead,\n    farm: () =>\n      source.type === 'Villager' &&\n      target.type === 'Farm' &&\n      target.hitPoints > 0 &&\n      target.owner?.label === source.owner.label &&\n      target.quantity > 0 &&\n      (!target.isUsedBy || target.isUsedBy === source) &&\n      !target.isDead,\n    forageberry: () =>\n      source.type === 'Villager' && target.type === 'Berrybush' && target.quantity > 0 && !target.isDead,\n    minestone: () => source.type === 'Villager' && target.type === 'Stone' && target.quantity > 0 && !target.isDead,\n    minegold: () => source.type === 'Villager' && target.type === 'Gold' && target.quantity > 0 && !target.isDead,\n    build: () =>\n      source.type === 'Villager' &&\n      target.owner?.label === source.owner.label &&\n      target.family === 'building' &&\n      target.hitPoints > 0 &&\n      (!target.isBuilt || target.hitPoints < target.totalHitPoints) &&\n      !target.isDead,\n    attack: () =>\n      target &&\n      target.owner?.label !== source.owner.label &&\n      ['building', 'unit', 'animal'].includes(target.family) &&\n      target.hitPoints > 0 &&\n      !target.isDead,\n    heal: () =>\n      target &&\n      target.owner?.label === source.owner.label &&\n      target.family === 'unit' &&\n      target.hitPoints > 0 &&\n      target.hitPoints < target.totalHitPoints &&\n      !target.isDead,\n  }\n  return target && target !== source && source.hitPoints > 0 && !source.isDead && conditions[action](props)\n}\n","export * from './graphics'\nexport * from './accounting'\nexport * from './maths'\nexport * from './extra'\nexport * from './grid'\n","import { sound } from '@pixi/sound'\nimport { Container, Graphics, Sprite, Assets, Polygon, AnimatedSprite } from 'pixi.js'\nimport {\n  getInstanceZIndex,\n  instanceIsInPlayerSight,\n  getIconPath,\n  randomItem,\n  drawInstanceBlinkingSelection,\n  getActionCondition,\n  uuidv4,\n} from '../lib'\nimport { TYPE_ACTION, CELL_WIDTH, CELL_HEIGHT, COLOR_WHITE } from '../constants'\n\nexport class Resource extends Container {\n  constructor(options, context) {\n    super()\n\n    this.context = context\n\n    const {\n      context: { map },\n    } = this\n\n    this.label = uuidv4()\n    this.family = 'resource'\n\n    this.selected = false\n    this.isDead = false\n    this.isDestroyed = false\n    this.size = 1\n\n    Object.keys(options).forEach(prop => {\n      this[prop] = options[prop]\n    })\n    const config = Assets.cache.get('config')\n    Object.keys(config.resources[this.type]).forEach(prop => {\n      this[prop] = config.resources[this.type][prop]\n    })\n\n    this.quantity = this.quantity ?? this.totalQuantity\n    this.hitPoints = this.hitPoints ?? this.totalHitPoints\n    this.x = map.grid[this.i][this.j].x\n    this.y = map.grid[this.i][this.j].y\n    this.z = map.grid[this.i][this.j].z\n    this.zIndex = getInstanceZIndex(this)\n    this.visible = false\n\n    // Set solid zone\n    const cell = map.grid[this.i][this.j]\n    cell.solid = true\n    cell.has = this\n\n    this.eventMode = 'auto'\n    this.allowClick = false\n    this.allowMove = false\n\n    this.interface = {\n      info: element => {\n        const data = config.resources[this.type]\n        this.setDefaultInterface(element, data)\n      },\n    }\n    if (this.isAnimated) {\n      const spritesheetJump = Assets.cache.get(this.assets)\n      this.sprite = new AnimatedSprite(spritesheetJump.animations.jump)\n      this.sprite.play()\n      this.sprite.animationSpeed = 0.2\n    } else {\n      this.textureName =\n        this.textureName || randomItem(Array.isArray(this.assets) ? this.assets : this.assets[cell.type])\n      const resourceName = this.textureName.split('_')[1]\n      const textureFile = this.textureName + '.png'\n      const spritesheet = Assets.cache.get(resourceName)\n      const texture = spritesheet.textures[textureFile]\n      this.sprite = Sprite.from(texture)\n      this.sprite.hitArea =\n        spritesheet.data.frames[textureFile].hitArea && new Polygon(spritesheet.data.frames[textureFile].hitArea)\n    }\n\n    this.sprite.updateAnchor = true\n    this.sprite.label = 'sprite'\n    if (this.sprite) {\n      this.sprite.allowMove = false\n      this.sprite.eventMode = 'static'\n      this.sprite.roundPixels = true\n\n      this.sprite.on('pointertap', () => {\n        const {\n          context: { player, menu },\n        } = this\n        if (!player.selectedUnits.length && (instanceIsInPlayerSight(this, player) || map.revealEverything)) {\n          player.unselectAll()\n          this.select()\n          menu.setBottombar(this)\n          player.selectedOther = this\n        }\n      })\n      this.sprite.on('pointerup', evt => {\n        const {\n          context: { player, controls },\n        } = this\n        const action = TYPE_ACTION[this.category || this.type]\n        if (controls.mouseBuilding || controls.mouseRectangle || !controls.isMouseInApp(evt)) {\n          return\n        }\n        controls.mouse.prevent = true\n        // Send Villager to forage the berry\n        let hasVillager = false\n        let hasOther = false\n        for (let i = 0; i < player.selectedUnits.length; i++) {\n          const unit = player.selectedUnits[i]\n          if (getActionCondition(unit, this, action)) {\n            hasVillager = true\n            const sendToFunc = `sendTo${this.category || this.type}`\n            typeof unit[sendToFunc] === 'function' ? unit[sendToFunc](this) : unit.sendTo(this)\n          } else {\n            hasOther = true\n            unit.sendTo(this)\n          }\n        }\n        if (hasVillager) {\n          drawInstanceBlinkingSelection(this)\n        }\n        if (hasOther) {\n          const voice = randomItem(['5075', '5076', '5128', '5164'])\n          voice && sound.play(voice)\n        } else if (hasVillager) {\n          const voice = Assets.cache.get('config').units.Villager.sounds[action]\n          voice && sound.play(voice)\n        }\n      })\n\n      this.addChild(this.sprite)\n    }\n  }\n\n  select() {\n    if (this.selected) {\n      return\n    }\n    this.selected = true\n    const selection = new Graphics()\n    selection.label = 'selection'\n    selection.zIndex = 3\n    const path = [-32 * this.size, 0, 0, -16 * this.size, 32 * this.size, 0, 0, 16 * this.size]\n    selection.poly(path)\n    selection.stroke(COLOR_WHITE)\n    this.addChildAt(selection, 0)\n  }\n\n  unselect() {\n    if (!this.selected) {\n      return\n    }\n    this.selected = false\n    const selection = this.getChildByLabel('selection')\n    if (selection) {\n      this.removeChild(selection)\n    }\n  }\n\n  die(immediate) {\n    if (this.isDead) {\n      return\n    }\n    const {\n      context: { player, players, map, menu },\n    } = this\n    if (this.selected && player.selectedOther === this) {\n      player.unselectAll()\n    }\n    const listName = 'founded' + this.type + 's'\n    for (let i = 0; i < players.length; i++) {\n      if (players[i].type === 'AI') {\n        const list = players[i][listName]\n        if (list) {\n          const index = list.indexOf(this)\n          list.splice(index, 1)\n        }\n      }\n    }\n    // Remove from map resources\n    let index = map.resources.indexOf(this)\n    if (index >= 0) {\n      map.resources.splice(index, 1)\n    }\n    menu.updateResourcesMiniMap()\n    this.isDead = true\n    if (this.type === 'Tree' && !immediate) {\n      this.onTreeDie()\n    } else {\n      this.clear()\n    }\n  }\n\n  setCuttedTreeTexture() {\n    const { sprite } = this\n    const spritesheet = Assets.cache.get('636')\n    this.textureName = `00${randomRange(0, 3)}_636.png`\n    const texture = spritesheet.textures[this.textureName]\n    sprite.texture = texture\n    const points = [-CELL_WIDTH / 2, 0, 0, -CELL_HEIGHT / 2, CELL_WIDTH / 2, 0, 0, CELL_HEIGHT / 2]\n    sprite.hitArea = new Polygon(points)\n    sprite.anchor.set(texture.defaultAnchor.x, texture.defaultAnchor.y)\n  }\n\n  onTreeDie() {\n    const {\n      context: { map },\n    } = this\n    const spritesheet = Assets.cache.get('623')\n    this.textureName = `00${randomRange(0, 3)}_623.png`\n    const texture = spritesheet.textures[this.textureName]\n    const { sprite } = this\n    sprite.texture = texture\n    sprite.eventMode = 'none'\n    this.zIndex--\n    if (map.grid[this.i][this.j].has === this) {\n      map.grid[this.i][this.j].has = null\n      map.grid[this.i][this.j].corpses.push(this)\n      map.grid[this.i][this.j].solid = false\n    }\n  }\n\n  clear() {\n    if (this.isDestroyed) {\n      return\n    }\n    const {\n      context: { map },\n    } = this\n    this.isDestroyed = true\n    if (map.grid[this.i][this.j].has === this) {\n      map.grid[this.i][this.j].has = null\n      map.grid[this.i][this.j].solid = false\n    }\n    const corpseIndex = map.grid[this.i][this.j].corpses.indexOf(this)\n    corpseIndex >= 0 && map.grid[this.i][this.j].corpses.splice(corpseIndex, 1)\n    map.removeChild(this)\n    this.destroy({ child: true, texture: true })\n  }\n\n  setDefaultInterface(element, data) {\n    const {\n      context: { menu },\n    } = this\n    const typeDiv = document.createElement('div')\n    typeDiv.id = 'type'\n    typeDiv.textContent = this.type\n    element.appendChild(typeDiv)\n\n    const iconImg = document.createElement('img')\n    iconImg.id = 'icon'\n    iconImg.src = getIconPath(data.icon)\n    element.appendChild(iconImg)\n\n    if (this.hitPoints) {\n      const hitPointsDiv = document.createElement('div')\n      hitPointsDiv.id = 'hitPoints'\n      hitPointsDiv.textContent = this.hitPoints + '/' + this.totalHitPoints\n      element.appendChild(hitPointsDiv)\n    }\n    if (this.quantity) {\n      const quantityDiv = document.createElement('div')\n\n      quantityDiv.id = 'quantity'\n      quantityDiv.className = 'resource-quantity'\n\n      let iconToUse\n      switch (this.type) {\n        case 'Tree':\n          iconToUse = menu.infoIcons['wood']\n          break\n        case 'Salmon':\n        case 'Berrybush':\n          iconToUse = menu.infoIcons['food']\n          break\n        case 'Stone':\n          iconToUse = menu.infoIcons['stone']\n          break\n        case 'Gold':\n          iconToUse = menu.infoIcons['gold']\n          break\n      }\n      const smallIconImg = document.createElement('img')\n      smallIconImg.src = iconToUse\n      smallIconImg.className = 'resource-quantity-icon'\n      const textDiv = document.createElement('div')\n      textDiv.id = 'quantity-text'\n      textDiv.textContent = this.quantity\n      quantityDiv.appendChild(smallIconImg)\n      quantityDiv.appendChild(textDiv)\n      element.appendChild(quantityDiv)\n    }\n  }\n}\n","import { Container, Graphics } from 'pixi.js'\nimport {\n  degreesToRadians,\n  getHitPointsWithDamage,\n  moveTowardPoint,\n  pointsDistance,\n  instancesDistance,\n  average,\n  randomItem,\n  uuidv4,\n} from '../lib'\nimport { COLOR_ARROW, STEP_TIME } from '../constants'\nimport { sound } from '@pixi/sound'\n\nexport class Projectile extends Container {\n  constructor(options, context) {\n    super()\n\n    this.context = context\n    this.label = uuidv4()\n    this.family = 'projectile'\n\n    Object.keys(options).forEach(prop => {\n      this[prop] = options[prop]\n    })\n    Object.keys(this.owner.owner.config.projectiles[this.type]).forEach(prop => {\n      this[prop] = this.owner.owner.config.projectiles[this.type][prop]\n    })\n\n    this.x = this.owner.x\n    this.y = this.owner.y - this.owner.sprite.height / 2\n    const { x: targetX, y: targetY } = this.destination || this.target\n\n    this.owner.visible &&\n      this.sounds.start &&\n      sound.play(Array.isArray(this.sounds.start) ? randomItem(this.sounds.start) : this.sounds.start)\n\n    this.distance = instancesDistance(this, this.target, false)\n    const degree = this.degree || getPointsDegree(this.x, this.y, targetX, targetY)\n    const sprite = new Graphics()\n    sprite.rect(1, 1, this.size, 1)\n    sprite.fill(COLOR_ARROW)\n    sprite.rotation = degreesToRadians(degree)\n    sprite.label = 'sprite'\n    sprite.allowMove = false\n    sprite.eventMode = 'none'\n    sprite.allowClick = false\n    sprite.roundPixels = true\n    this.addChild(sprite)\n\n    const interval = setInterval(() => {\n      if (pointsDistance(this.x, this.y, targetX, targetY) <= Math.max(this.speed, this.size)) {\n        if (\n          pointsDistance(targetX, targetY, this.target.x, this.target.y) <=\n          average(this.target.width, this.target.height)\n        ) {\n          this.onHit(this.target)\n        }\n        clearInterval(interval)\n        this.die()\n        return\n      }\n      moveTowardPoint(this, targetX, targetY, this.speed)\n    }, STEP_TIME)\n  }\n\n  onHit(instance) {\n    const {\n      context: { menu, player },\n    } = this\n    instance.hitPoints = getHitPointsWithDamage(this.owner, instance, this.damage)\n    if (instance.selected && player.selectedOther === instance) {\n      menu.updateInfo('hitPoints', instance.hitPoints + '/' + instance.totalHitPoints)\n    }\n    if (instance.hitPoints <= 0) {\n      instance.die()\n    } else {\n      typeof instance.isAttacked === 'function' && instance.isAttacked(this.owner)\n    }\n  }\n\n  die() {\n    this.isDead = true\n    this.destroy({ child: true, texture: true })\n  }\n}\n","import { sound } from '@pixi/sound'\nimport { Container, Assets, Sprite, AnimatedSprite, Graphics } from 'pixi.js'\nimport { ACCELERATOR, COLOR_WHITE, POPULATION_MAX, RUBBLE_TIME } from '../constants'\nimport {\n  getTexture,\n  getInstanceZIndex,\n  getPlainCellsAroundPoint,\n  getPercentage,\n  renderCellOnInstanceSight,\n  getFreeCellAroundPoint,\n  getIconPath,\n  canAfford,\n  drawInstanceBlinkingSelection,\n  payCost,\n  instanceIsInPlayerSight,\n  clearCellOnInstanceSight,\n  getActionCondition,\n  capitalizeFirstLetter,\n  refundCost,\n  getBuildingAsset,\n  getBuildingRubbleTextureNameWithSize,\n  instancesDistance,\n  getBuildingTextureNameWithSize,\n  uuidv4,\n  canUpdateMinimap,\n  CustomTimeout,\n  changeSpriteColorDirectly,\n} from '../lib'\nimport { Projectile } from './projectile'\nimport { Polygon } from 'pixi.js'\n\nexport class Building extends Container {\n  constructor(options, context) {\n    super()\n\n    this.context = context\n\n    const { map, controls } = context\n\n    this.label = uuidv4()\n    this.family = 'building'\n    this.selected = false\n    this.queue = []\n    this.technology = null\n    this.loading = null\n    this.isDead = false\n    this.isDestroyed = false\n    this.timeout\n    this.isUsedBy = null\n\n    Object.keys(options).forEach(prop => {\n      this[prop] = options[prop]\n    })\n    Object.keys(this.owner.config.buildings[this.type]).forEach(prop => {\n      this[prop] = this.owner.config.buildings[this.type][prop]\n    })\n\n    this.interval\n    this.attackInterval\n\n    if (this.queue.length) {\n      this.buyUnit(this.queue[0], true, true)\n    } else if (this.technology) {\n      this.buyTechnology(this.technology.type, true, true)\n    }\n\n    this.quantity = this.quantity ?? this.totalQuantity\n    this.hitPoints = this.hitPoints ?? (this.isBuilt ? this.totalHitPoints : 1)\n\n    this.x = map.grid[this.i][this.j].x\n    this.y = map.grid[this.i][this.j].y\n    this.z = map.grid[this.i][this.j].z\n    this.zIndex = getInstanceZIndex(this)\n    this.visible = map.revealEverything && controls.instanceInCamera(this) ? true : false\n    let spriteSheet = getBuildingTextureNameWithSize(this.size)\n    if (this.type === 'House' && this.owner.age === 0) {\n      spriteSheet = '000_489'\n    } else if (this.type === 'Dock') {\n      spriteSheet = '000_356'\n    }\n    const texture = getTexture(spriteSheet, Assets)\n    this.sprite = Sprite.from(texture)\n    this.sprite.updateAnchor = true\n    this.sprite.label = 'sprite'\n    this.sprite.hitArea = texture.hitArea\n      ? new Polygon(texture.hitArea)\n      : new Polygon([-32 * this.size, 0, 0, -16 * this.size, 32 * this.size, 0, 0, 16 * this.size])\n    const units = (this.units || []).map(key => context.menu.getUnitButton(key))\n    const technologies = (this.technologies || []).map(key => context.menu.getTechnologyButton(key))\n    this.interface = {\n      info: element => {\n        const assets = getBuildingAsset(this.type, this.owner, Assets)\n        this.setDefaultInterface(element, assets)\n        if (this.displayPopulation && this.owner.isPlayed && this.isBuilt) {\n          const populationDiv = document.createElement('div')\n          populationDiv.id = 'population'\n\n          const populationIcon = document.createElement('img')\n          const populationSpan = document.createElement('span')\n          populationSpan.id = 'population-text'\n          populationSpan.textContent = this.owner.population + '/' + Math.min(POPULATION_MAX, this.owner.POPULATION_MAX)\n\n          populationIcon.src = getIconPath('004_50731')\n          populationDiv.appendChild(populationIcon)\n          populationDiv.appendChild(populationSpan)\n          element.appendChild(populationDiv)\n        }\n        element.appendChild(this.getLoadingElement())\n      },\n      menu: this.owner.isPlayed || map.devMode ? [...units, ...technologies] : [],\n    }\n\n    // Set solid zone\n    const dist = this.size === 3 ? 1 : 0\n    getPlainCellsAroundPoint(this.i, this.j, map.grid, dist, cell => {\n      const set = cell.getChildByLabel('set')\n      if (set) {\n        cell.removeChild(set)\n      }\n      for (let i = 0; i < cell.corpses.length; i++) {\n        typeof cell.corpses[i].clear === 'function' && cell.corpses[i].clear()\n      }\n      cell.has = this\n      cell.solid = true\n      this.owner.views[cell.i][cell.j].viewBy.push(this)\n      if (this.owner.isPlayed && !map.revealEverything) {\n        cell.removeFog()\n      }\n    })\n\n    this.allowMove = false\n    if (this.sprite) {\n      this.sprite.allowMove = false\n      this.sprite.eventMode = 'static'\n      this.sprite.roundPixels = true\n\n      this.sprite.on('pointertap', evt => {\n        const {\n          context: { controls, player, menu },\n        } = this\n        if (controls.mouseBuilding || controls.mouseRectangle || !controls.isMouseInApp(evt)) {\n          return\n        }\n        let hasSentVillager = false\n        let hasSentOther = false\n        controls.mouse.prevent = true\n        if (this.owner.isPlayed) {\n          // Send Villager to build the building\n          if (!this.isBuilt) {\n            for (let i = 0; i < player.selectedUnits.length; i++) {\n              const unit = player.selectedUnits[i]\n              if (unit.type === 'Villager') {\n                if (getActionCondition(unit, this, 'build')) {\n                  hasSentVillager = true\n                  unit.sendToBuilding(this)\n                }\n              } else {\n                unit.sendTo(this)\n                hasSentOther = true\n              }\n            }\n            if (hasSentVillager) {\n              drawInstanceBlinkingSelection(this)\n            }\n            if (hasSentOther) {\n              const voice = randomItem(['5075', '5076', '5128', '5164'])\n              sound.play(voice)\n              return\n            } else if (hasSentVillager) {\n              const voice = Assets.cache.get('config').units.Villager.sounds.build\n              sound.play(voice)\n              return\n            }\n          } else if (player.selectedUnits) {\n            // Send Villager to give loading of resources\n            for (let i = 0; i < player.selectedUnits.length; i++) {\n              const unit = player.selectedUnits[i]\n              const accept =\n                unit.category === 'Boat'\n                  ? this.type === 'Dock'\n                  : this.type === 'TownCenter' || (this.accept && this.accept.includes(unit.loadingType))\n              if (unit.type === 'Villager' && getActionCondition(unit, this, 'build')) {\n                hasSentVillager = true\n                unit.previousDest = null\n                unit.sendToBuilding(this)\n              } else if (unit.type === 'Villager' && getActionCondition(unit, this, 'farm')) {\n                hasSentVillager = true\n                unit.sendToFarm(this)\n              } else if (accept && getActionCondition(unit, this, 'delivery', { buildingTypes: [this.type] })) {\n                hasSentVillager = true\n                unit.previousDest = null\n                unit.sendTo(this, 'delivery')\n              }\n            }\n            if (hasSentVillager) {\n              drawInstanceBlinkingSelection(this)\n            }\n            if (hasSentVillager) {\n              const voice = Assets.cache.get('config').units.Villager.sounds.build\n              sound.play(voice)\n              return\n            }\n          }\n          if (this.owner.selectedBuilding !== this) {\n            this.owner.unselectAll()\n            this.select()\n            menu.setBottombar(this)\n            this.owner.selectedBuilding = this\n          }\n        } else if (player.selectedUnits.length) {\n          drawInstanceBlinkingSelection(this)\n          for (let i = 0; i < player.selectedUnits.length; i++) {\n            const playerUnit = player.selectedUnits[i]\n            if (playerUnit.type === 'Villager') {\n              playerUnit.sendToAttack(this)\n            } else {\n              playerUnit.sendTo(this, 'attack')\n            }\n          }\n        } else if (instanceIsInPlayerSight(this, player) || map.revealEverything) {\n          player.unselectAll()\n          this.select()\n          menu.setBottombar(this)\n          player.selectedOther = this\n        }\n      })\n\n      this.addChild(this.sprite)\n    }\n\n    if (this.isBuilt) {\n      renderCellOnInstanceSight(this)\n      this.finalTexture()\n      this.onBuilt()\n    }\n  }\n\n  attackAction(target) {\n    const {\n      context: { map },\n    } = this\n\n    this.startAttackInterval(() => {\n      if (getActionCondition(this, target, 'attack') && instancesDistance(this, target) <= this.range) {\n        if (target.hitPoints <= 0) {\n          target.die()\n        } else {\n          const projectile = new Projectile(\n            {\n              owner: this,\n              type: this.projectile,\n              target,\n            },\n            this.context\n          )\n          map.addChild(projectile)\n        }\n      } else {\n        this.stopAttackInterval()\n      }\n    }, this.rateOfFire)\n  }\n\n  startInterval(callback, time) {\n    const finalCb = () => {\n      const { paused } = this.context\n      if (paused) {\n        return\n      }\n      callback()\n    }\n    this.stopInterval()\n    this.interval = setInterval(finalCb, (time * 1000) / 100 / ACCELERATOR)\n  }\n\n  stopInterval() {\n    if (this.interval) {\n      clearInterval(this.interval)\n      this.interval = null\n    }\n  }\n\n  startAttackInterval(callback, time) {\n    const finalCb = () => {\n      const { paused } = this.context\n      if (paused) {\n        return\n      }\n      callback()\n    }\n    this.stopAttackInterval()\n    finalCb()\n    this.attackInterval = setInterval(finalCb, time * 1000)\n  }\n\n  stopAttackInterval() {\n    if (this.attackInterval) {\n      clearInterval(this.attackInterval)\n      this.attackInterval = null\n    }\n  }\n\n  pause() {\n    this.timeout?.pause()\n  }\n\n  resume() {\n    this.timeout?.resume()\n  }\n\n  startTimeout(cb, time) {\n    this.stopTimeout()\n    this.timeout = new CustomTimeout(() => cb(), (time * 1000) / ACCELERATOR)\n  }\n\n  stopTimeout() {\n    if (this.timeout) {\n      clearInterval(this.timeout)\n      this.timeout = null\n    }\n  }\n\n  isAttacked(instance) {\n    if (this.isDead) {\n      return\n    }\n    if (this.range && getActionCondition(this, instance, 'attack') && instancesDistance(this, instance) <= this.range) {\n      this.attackAction(instance)\n    }\n    this.updateHitPoints('attack')\n  }\n\n  updateTexture() {\n    const {\n      context: { menu },\n    } = this\n    const percentage = getPercentage(this.hitPoints, this.totalHitPoints)\n    const buildSpritesheetId = this.sprite.texture.label.split('_')[1].split('.')[0]\n    const buildSpritesheet = Assets.cache.get(buildSpritesheetId)\n\n    if (percentage >= 25 && percentage < 50) {\n      const textureName = `001_${buildSpritesheetId}.png`\n      this.sprite.texture = buildSpritesheet.textures[textureName]\n    } else if (percentage >= 50 && percentage < 75) {\n      const textureName = `002_${buildSpritesheetId}.png`\n      this.sprite.texture = buildSpritesheet.textures[textureName]\n    } else if (percentage >= 75 && percentage < 99) {\n      const textureName = `003_${buildSpritesheetId}.png`\n      this.sprite.texture = buildSpritesheet.textures[textureName]\n    } else if (percentage >= 100) {\n      this.finalTexture()\n      if (!this.isBuilt) {\n        if (this.owner.isPlayed && this.sounds && this.sounds.create) {\n          sound.play(this.sounds.create)\n        }\n        this.onBuilt()\n      }\n      this.isBuilt = true\n      if (!this.owner.hasBuilt.includes(this.type)) {\n        this.owner.hasBuilt.push(this.type)\n      }\n      if (this.owner.isPlayed && this.selected) {\n        menu.setBottombar(this)\n      }\n      renderCellOnInstanceSight(this)\n    }\n  }\n\n  onBuilt() {\n    const {\n      context: { menu },\n    } = this\n    if (this.increasePopulation) {\n      // Increase player population and continue all unit creation that was paused\n      this.owner.POPULATION_MAX += this.increasePopulation\n      // Update bottombar with POPULATION_MAX if house selected\n      if (this.owner.isPlayed && this.owner.selectedBuilding && this.owner.selectedBuilding.displayPopulation) {\n        menu.updateInfo(\n          'population-text',\n          this.owner.population + '/' + Math.min(POPULATION_MAX, this.owner.POPULATION_MAX)\n        )\n      }\n    }\n    if (this.owner.isPlayed && this.selected) {\n      menu.setBottombar(this)\n    }\n  }\n\n  finalTexture() {\n    const assets = getBuildingAsset(this.type, this.owner, Assets)\n\n    const texture = getTexture(assets.images.final, Assets)\n    this.sprite.texture = texture\n    this.sprite.hitArea = texture.hitArea\n      ? new Polygon(texture.hitArea)\n      : new Polygon([-32 * this.size, 0, 0, -16 * this.size, 32 * this.size, 0, 0, 16 * this.size])\n    this.sprite.anchor.set(texture.defaultAnchor.x, texture.defaultAnchor.y)\n\n    const color = this.getChildByLabel('color')\n    if (color) {\n      color.destroy()\n    }\n\n    if (assets.images.color) {\n      const spriteColor = Sprite.from(getTexture(assets.images.color, Assets))\n      spriteColor.label = 'color'\n      changeSpriteColorDirectly(spriteColor, this.owner.color)\n      this.addChild(spriteColor)\n    } else {\n      changeSpriteColorDirectly(this.sprite, this.owner.color)\n    }\n\n    if (this.type === 'House') {\n      if (this.owner.age === 0) {\n        const spritesheetFire = Assets.cache.get('347')\n        const spriteFire = new AnimatedSprite(spritesheetFire.animations['fire'])\n        spriteFire.label = 'deco'\n        spriteFire.allowMove = false\n        spriteFire.allowClick = false\n        spriteFire.eventMode = 'none'\n        spriteFire.roundPixels = true\n        spriteFire.x = 10\n        spriteFire.y = 5\n        spriteFire.play()\n        spriteFire.animationSpeed = 0.2 * ACCELERATOR\n        this.addChild(spriteFire)\n      } else {\n        const fire = this.getChildByLabel('deco')\n        if (fire) {\n          fire.destroy()\n        }\n      }\n    }\n  }\n\n  detect(instance) {\n    if (\n      this.range &&\n      instance.label !== 'animal' &&\n      !this.attackInterval &&\n      getActionCondition(this, instance, 'attack') &&\n      instancesDistance(this, instance) <= this.range\n    ) {\n      this.attackAction(instance)\n    }\n  }\n\n  updateHitPoints(action) {\n    if (this.hitPoints > this.totalHitPoints) {\n      this.hitPoints = this.totalHitPoints\n    }\n    const percentage = getPercentage(this.hitPoints, this.totalHitPoints)\n\n    if (this.hitPoints <= 0) {\n      this.die()\n    }\n    if (action === 'build' && !this.isBuilt) {\n      this.updateTexture()\n    } else if ((action === 'attack' && this.isBuilt) || (action === 'build' && this.isBuilt)) {\n      if (percentage > 0 && percentage < 25) {\n        generateFire(this, '450')\n      }\n      if (percentage >= 25 && percentage < 50) {\n        generateFire(this, '452')\n      }\n      if (percentage >= 50 && percentage < 75) {\n        generateFire(this, '347')\n      }\n      if (percentage >= 75) {\n        const fire = this.getChildByLabel('fire')\n        if (fire) {\n          this.removeChild(fire)\n        }\n      }\n    }\n    function generateFire(building, spriteId) {\n      const fire = building.getChildByLabel('fire')\n      const spritesheetFire = Assets.cache.get(spriteId)\n      if (fire) {\n        for (let i = 0; i < fire.children.length; i++) {\n          fire.children[i].textures = spritesheetFire.animations['fire']\n          fire.children[i].play()\n        }\n      } else {\n        const newFire = new Container()\n        newFire.label = 'fire'\n        newFire.allowMove = false\n        newFire.allowClick = false\n        newFire.eventMode = 'none'\n        let poses = [[0, 0]]\n        if (building.size === 3) {\n          poses = [\n            [0, -32],\n            [-64, 0],\n            [0, 32],\n            [64, 0],\n          ]\n        }\n        for (let i = 0; i < poses.length; i++) {\n          const spriteFire = new AnimatedSprite(spritesheetFire.animations['fire'])\n          spriteFire.allowMove = false\n          spriteFire.allowClick = false\n          spriteFire.eventMode = 'none'\n          spriteFire.roundPixels = true\n          spriteFire.x = poses[i][0]\n          spriteFire.y = poses[i][1]\n          spriteFire.play()\n          spriteFire.animationSpeed = 0.2 * ACCELERATOR\n          newFire.addChild(spriteFire)\n        }\n        building.addChild(newFire)\n      }\n    }\n  }\n\n  die() {\n    if (this.isDead) {\n      return\n    }\n    const {\n      context: { map, player, players, menu },\n    } = this\n    this.stopInterval()\n    this.isDead = true\n    if (this.selected && player) {\n      player.unselectAll()\n    }\n\n    // Remove from player buildings\n    const index = this.owner.buildings.indexOf(this)\n    if (index >= 0) {\n      this.owner.buildings.splice(index, 1)\n    }\n    // Remove from view of others players\n    for (let i = 0; i < players.length; i++) {\n      if (players[i].type === 'AI') {\n        const list = players[i].foundedEnemyBuildings\n        list.splice(list.indexOf(this), 1)\n      }\n    }\n    const color = this.getChildByLabel('color')\n    color && color.destroy()\n    const deco = this.getChildByLabel('deco')\n    deco && deco.destroy()\n    const fire = this.getChildByLabel('fire')\n    fire && fire.destroy()\n\n    let rubbleSheet = getBuildingRubbleTextureNameWithSize(this.size, Assets)\n    if (this.type === 'Farm') {\n      rubbleSheet = '000_239'\n    }\n    this.sprite.texture = getTexture(rubbleSheet, Assets)\n    this.sprite.allowMove = false\n    this.sprite.eventMode = 'none'\n    this.sprite.allowClick = false\n    this.zIndex--\n    if (this.type === 'Farm') {\n      changeSpriteColorDirectly(this.sprite, this.owner.color)\n    }\n    // Remove solid zone\n    clearCellOnInstanceSight(this)\n    const dist = this.size === 3 ? 1 : 0\n    getPlainCellsAroundPoint(this.i, this.j, map.grid, dist, cell => {\n      if (cell.has === this) {\n        cell.has = null\n        cell.solid = false\n        cell.corpses.push(this)\n      }\n    })\n    this.startTimeout(() => this.clear(), RUBBLE_TIME)\n    canUpdateMinimap(this, player) && menu.updatePlayerMiniMapEvt(this.owner)\n  }\n\n  clear() {\n    if (this.isDestroyed) {\n      return\n    }\n    const {\n      context: { map },\n    } = this\n    const dist = this.size === 3 ? 1 : 0\n    getPlainCellsAroundPoint(this.i, this.j, map.grid, dist, cell => {\n      const index = cell.corpses.indexOf(this)\n      if (index >= 0) {\n        cell.corpses.splice(index, 1)\n      }\n    })\n    this.isDestroyed = true\n    this.destroy({ child: true, texture: true })\n  }\n\n  select() {\n    if (this.selected) {\n      return\n    }\n    const {\n      context: { menu, player },\n    } = this\n\n    if (this.owner.isPlayed && this.sounds && this.sounds.create) {\n      sound.play(this.sounds.create)\n    }\n\n    this.selected = true\n    const selection = new Graphics()\n    selection.label = 'selection'\n    selection.zIndex = 3\n    const path = [-32 * this.size, 0, 0, -16 * this.size, 32 * this.size, 0, 0, 16 * this.size]\n    selection.poly(path)\n    selection.stroke(COLOR_WHITE)\n    if (this.loading && this.owner.isPlayed) {\n      this.updateInterfaceLoading()\n    }\n    this.addChildAt(selection, 0)\n    canUpdateMinimap(this, player) && menu.updatePlayerMiniMapEvt(this.owner)\n  }\n\n  unselect() {\n    if (!this.selected) {\n      return\n    }\n    const {\n      context: { menu, player },\n    } = this\n\n    this.selected = false\n    const selection = this.getChildByLabel('selection')\n    if (selection) {\n      this.removeChild(selection)\n    }\n    canUpdateMinimap(this, player) && menu.updatePlayerMiniMapEvt(this.owner)\n  }\n\n  placeUnit(type) {\n    const {\n      context: { map, menu },\n    } = this\n    let spawnCell\n    const config = this.owner.config.units[type]\n    if (config.category === 'Boat') {\n      spawnCell = getFreeCellAroundPoint(\n        this.i,\n        this.j,\n        this.size,\n        map.grid,\n        cell => cell.category === 'Water' && !cell.solid\n      )\n    } else {\n      spawnCell = getFreeCellAroundPoint(\n        this.i,\n        this.j,\n        this.size,\n        map.grid,\n        cell => cell.category !== 'Water' && !cell.solid\n      )\n    }\n    if (!spawnCell) {\n      return\n    }\n    this.owner.population++\n\n    const extra = (this.owner.getUnitExtraOptions && this.owner.getUnitExtraOptions(type)) || {}\n    this.owner.createUnit({ i: spawnCell.i, j: spawnCell.j, type, ...extra })\n\n    if (this.owner.isPlayed && this.owner.selectedBuilding && this.owner.selectedBuilding.displayPopulation) {\n      menu.updateInfo(\n        'population-text',\n        this.owner.population + '/' + Math.min(POPULATION_MAX, this.owner.POPULATION_MAX)\n      )\n    }\n  }\n\n  buyUnit(type, alreadyPaid = false, force = false, extra) {\n    const {\n      context: { menu, map },\n    } = this\n    let success = false\n    const unit = this.owner.config.units[type]\n    if (this.isBuilt && !this.isDead && (canAfford(this.owner, unit.cost) || alreadyPaid)) {\n      if (!alreadyPaid) {\n        if (this.owner.type === 'AI') {\n          if (!this.queue.length && this.loading === null) {\n            payCost(this.owner, unit.cost)\n            this.queue.push(type)\n            success = true\n          }\n        } else {\n          payCost(this.owner, unit.cost)\n          this.queue.push(type)\n          if (this.selected && this.owner.isPlayed) {\n            menu.updateButtonContent(type, this.queue.filter(q => q === type).length)\n          }\n          this.owner.isPlayed && menu.updateTopbar()\n          success = true\n        }\n      }\n      if ((this.loading === null && this.queue[0]) || force) {\n        let hasShowedMessage = false\n        this.loading = force ? this.loading : 0\n        if (this.selected && this.owner.isPlayed) {\n          this.updateInterfaceLoading()\n        }\n        this.startInterval(() => {\n          if (this.queue[0] !== type) {\n            this.stopInterval()\n            this.loading = null\n            if (this.queue.length) {\n              this.buyUnit(this.queue[0], true)\n            }\n            hasShowedMessage = false\n            if (this.selected && this.owner.isPlayed) {\n              const still = this.queue.filter(q => q === type).length\n              menu.updateButtonContent(type, still || '')\n              if (still === 0) {\n                menu.toggleButtonCancel(type, false)\n              }\n              this.updateInterfaceLoading()\n            }\n          } else if (this.loading >= 100 || map.devMode) {\n            this.stopInterval()\n            this.placeUnit(type, extra)\n            this.loading = null\n            this.queue.shift()\n            if (this.queue.length) {\n              this.buyUnit(this.queue[0], true)\n            }\n            hasShowedMessage = false\n            if (this.selected && this.owner.isPlayed) {\n              const still = this.queue.filter(q => q === type).length\n              menu.updateButtonContent(type, still || '')\n              if (still === 0) {\n                menu.toggleButtonCancel(type, false)\n              }\n              this.updateInterfaceLoading()\n            }\n          } else if (this.loading < 100) {\n            if (this.owner.population < Math.min(POPULATION_MAX, this.owner.POPULATION_MAX)) {\n              this.loading += 1\n            } else if (this.owner.isPlayed && !hasShowedMessage) {\n              menu.showMessage('You need to build more houses')\n              hasShowedMessage = true\n            }\n            if (this.selected && this.owner.isPlayed) {\n              this.updateInterfaceLoading()\n            }\n          }\n        }, unit.trainingTime)\n      }\n      return success\n    }\n  }\n\n  updateInterfaceLoading() {\n    const {\n      context: { menu },\n    } = this\n    if (this.owner.isPlayed && this.owner.selectedBuilding === this) {\n      if (this.loading === 1) {\n        menu.updateInfo('loading', element => (element.innerHTML = this.getLoadingElement().innerHTML))\n      } else if (this.loading > 1) {\n        menu.updateInfo('loading-text', this.loading + '%')\n      } else {\n        menu.updateInfo('loading', element => (element.innerHTML = ''))\n      }\n    }\n  }\n\n  getLoadingElement() {\n    const loadingDiv = document.createElement('div')\n    loadingDiv.className = 'building-loading'\n    loadingDiv.id = 'loading'\n\n    if (this.loading && this.owner.isPlayed) {\n      const iconImg = document.createElement('img')\n      iconImg.className = 'building-loading-icon'\n      iconImg.src = getIconPath('009_50731')\n      const textDiv = document.createElement('div')\n      textDiv.id = 'loading-text'\n      textDiv.textContent = this.loading + '%'\n      loadingDiv.appendChild(iconImg)\n      loadingDiv.appendChild(textDiv)\n    }\n    return loadingDiv\n  }\n\n  cancelTechnology() {\n    const {\n      context: { player, menu },\n    } = this\n    this.stopInterval()\n    refundCost(player, this.technology.cost)\n    this.technology = null\n    this.loading = null\n    if (this.owner.isPlayed) {\n      menu.updateBottombar()\n      menu.updateTopbar()\n    }\n  }\n\n  upgrade(type) {\n    const data = this.owner.config.buildings[type]\n    this.type = type\n    this.hitPoints = data.totalHitPoints - (this.totalHitPoints - this.hitPoints)\n    for (const [key, value] of Object.entries(data)) {\n      this[key] = value\n    }\n    const assets = getBuildingAsset(this.type, this.owner, Assets)\n    this.sprite.texture = getTexture(assets.images.final, Assets)\n    this.sprite.anchor.set(this.sprite.texture.defaultAnchor.x, this.sprite.texture.defaultAnchor.y)\n    const color = this.getChildByLabel('color')\n    color?.destroy()\n    if (assets.images.color) {\n      const spriteColor = Sprite.from(getTexture(assets.images.color, Assets))\n      spriteColor.label = 'color'\n      changeSpriteColorDirectly(spriteColor, this.owner.color)\n      this.addChild(spriteColor)\n    } else {\n      changeSpriteColorDirectly(this.sprite, this.owner.color)\n    }\n  }\n\n  buyTechnology(type, alreadyPaid, force) {\n    const {\n      context: { menu, map },\n    } = this\n    let success = false\n    const config = this.owner.techs[type]\n    if (\n      !this.queue.length &&\n      this.isBuilt &&\n      (force || this.loading === null) &&\n      !this.isDead &&\n      (alreadyPaid || canAfford(this.owner, config.cost))\n    ) {\n      !alreadyPaid && payCost(this.owner, config.cost)\n      success = true\n      if (this.owner.isPlayed) {\n        menu.updateTopbar()\n      }\n      this.loading = force ? this.loading : 0\n\n      this.technology = { config, type }\n      if (this.selected && this.owner.selectedBuilding === this) {\n        menu.setBottombar(this)\n      }\n      this.startInterval(() => {\n        const { config, type } = this.technology\n        if (this.loading >= 100 || map.devMode) {\n          this.stopInterval()\n          this.loading = null\n          this.technology = null\n          if (Array.isArray(this.owner[config.key])) {\n            this.owner[config.key].push(config.value || type)\n          } else {\n            this.owner[config.key] = config.value || type\n          }\n          if (config.action) {\n            switch (config.action.type) {\n              case 'upgradeUnit':\n                for (let i = 0; i < this.owner.units.length; i++) {\n                  const unit = this.owner.units[i]\n                  if (unit.type === config.action.source) {\n                    unit.upgrade(config.action.target)\n                  }\n                }\n                break\n              case 'upgradeBuilding':\n                for (let i = 0; i < this.owner.buildings.length; i++) {\n                  const building = this.owner.buildings[i]\n                  if (building.type === config.action.source) {\n                    building.upgrade(technconfigology.action.target)\n                  }\n                }\n                break\n              case 'improve':\n                this.owner.updateConfig(config.action.operations)\n                break\n            }\n          }\n          const functionName = `on${capitalizeFirstLetter(config.key)}Change`\n          typeof this.owner[functionName] === 'function' && this.owner[functionName](config.value)\n          if (this.owner.isPlayed) {\n            menu.updateBottombar()\n            menu.updateTopbar()\n          }\n        } else if (this.loading < 100) {\n          this.loading += 1\n          if (this.owner.isPlayed && this.owner.selectedBuilding === this) {\n            this.updateInterfaceLoading()\n          }\n        }\n      }, config.researchTime)\n    }\n    return success\n  }\n\n  setDefaultInterface(element, data) {\n    const {\n      context: { menu },\n    } = this\n\n    const civDiv = document.createElement('div')\n    civDiv.id = 'civ'\n    civDiv.textContent = this.owner.civ\n    element.appendChild(civDiv)\n\n    const typeDiv = document.createElement('div')\n    typeDiv.id = 'type'\n    typeDiv.textContent = this.type\n    element.appendChild(typeDiv)\n\n    const iconImg = document.createElement('img')\n    iconImg.id = 'icon'\n    iconImg.src = getIconPath(data.icon)\n    element.appendChild(iconImg)\n\n    if (this.owner && this.owner.isPlayed) {\n      const hitPointsDiv = document.createElement('div')\n      hitPointsDiv.id = 'hitPoints'\n      hitPointsDiv.textContent = this.hitPoints + '/' + this.totalHitPoints\n      element.appendChild(hitPointsDiv)\n\n      if (this.isBuilt && this.quantity) {\n        const quantityDiv = document.createElement('div')\n        quantityDiv.id = 'quantity'\n        quantityDiv.className = 'resource-quantity'\n        const smallIconImg = document.createElement('img')\n        smallIconImg.src = menu.icons['food']\n        smallIconImg.className = 'resource-quantity-icon'\n        const textDiv = document.createElement('div')\n        textDiv.id = 'quantity-text'\n        textDiv.textContent = this.quantity\n        quantityDiv.appendChild(smallIconImg)\n        quantityDiv.appendChild(textDiv)\n        element.appendChild(quantityDiv)\n      }\n    }\n  }\n}\n","import { sound } from '@pixi/sound'\nimport { Container, Assets, AnimatedSprite, Graphics } from 'pixi.js'\nimport {\n  ACCELERATOR,\n  STEP_TIME,\n  CORPSE_TIME,\n  LOADING_FOOD_TYPES,\n  MAX_SELECT_UNITS,\n  TYPE_ACTION,\n  POPULATION_MAX,\n  WORK_FOOD_TYPES,\n  COLOR_WHITE,\n} from '../constants'\nimport {\n  getInstanceZIndex,\n  randomRange,\n  renderCellOnInstanceSight,\n  getIconPath,\n  getInstancePath,\n  instancesDistance,\n  moveTowardPoint,\n  clearCellOnInstanceSight,\n  getInstanceClosestFreeCellPath,\n  instanceContactInstance,\n  getInstanceDegree,\n  changeSpriteColor,\n  findInstancesInSight,\n  getClosestInstanceWithPath,\n  getCellsAroundPoint,\n  drawInstanceBlinkingSelection,\n  instanceIsInPlayerSight,\n  degreeToDirection,\n  onSpriteLoopAtFrame,\n  getActionCondition,\n  randomItem,\n  getHitPointsWithDamage,\n  getClosestInstance,\n  throttle,\n  getFreeCellAroundPoint,\n  uuidv4,\n  canUpdateMinimap,\n  getWorkWithLoadingType,\n  setUnitTexture,\n} from '../lib'\nimport { Projectile } from './projectile'\n\nfunction getActionSheet(work, action, Assets, unit) {\n  if (!work) {\n    return\n  }\n  const actionSheet = action === 'takemeat' ? 'harvestSheet' : 'actionSheet'\n  return Assets.cache.get(unit.allAssets[work][actionSheet])\n}\n\nexport class Unit extends Container {\n  constructor(options, context) {\n    super()\n\n    this.context = context\n\n    const {\n      context: { map, menu },\n    } = this\n    this.label = uuidv4()\n    this.family = 'unit'\n\n    this.dest = null\n    this.realDest = null\n    this.previousDest = null\n    this.path = []\n    this.selected = false\n    this.degree = randomRange(1, 360)\n    this.currentFrame = randomRange(0, 4)\n    this.action = null\n    this.loading = 0\n    this.loadingType = null\n    this.currentSheet = 'standingSheet'\n    this.inactif = true\n    this.isDead = false\n    this.isDestroyed = false\n    this.x = null\n    this.y = null\n    this.z = null\n\n    Object.keys(options).forEach(prop => {\n      this[prop] = options[prop]\n    })\n    Object.keys(this.owner.config.units[this.type]).forEach(prop => {\n      this[prop] = this.owner.config.units[this.type][prop]\n    })\n    this.size = 1\n    this.visible = false\n    this.x = this.x ?? map.grid[this.i][this.j].x\n    this.y = this.y ?? map.grid[this.i][this.j].y\n    this.z = this.z ?? map.grid[this.i][this.j].z\n    this.zIndex = getInstanceZIndex(this)\n    this.quantity = this.quantity ?? this.totalQuantity\n    this.hitPoints = this.hitPoints ?? this.totalHitPoints\n\n    this.currentCell = map.grid[this.i][this.j]\n    if (this.currentSheet === 'corpseSheet') {\n      this.owner.corpses.push(this)\n      map.grid[this.i][this.j].corpses.push(this)\n    } else if (!this.isDead) {\n      this.currentCell.has = this\n      this.currentCell.solid = true\n      this.owner.units.push(this)\n    }\n    switch (this.type) {\n      case 'Villager':\n        this.work = this.work || null\n        break\n      case 'Priest':\n        this.work = 'healer'\n        break\n      default:\n        this.work = 'attacker'\n    }\n\n    if (this.assets) {\n      for (const [key, value] of Object.entries(this.assets)) {\n        this[key] = Assets.cache.get(value)\n      }\n    } else if (this.allAssets) {\n      for (const [key, value] of Object.entries(this.allAssets.default)) {\n        this[key] = Assets.cache.get(value)\n      }\n    }\n\n    if (this.owner.isPlayed && map.ready) {\n      sound.play((this.sounds && this.sounds.create) || 5144)\n    }\n\n    this.interface = {\n      info: element => {\n        const data = this.owner.config.units[this.type]\n        this.setDefaultInterface(element, data)\n        if (this.showLoading && this.owner.isPlayed) {\n          element.appendChild(this.getLoadingElement())\n        }\n      },\n      menu:\n        this.showBuildings && this.owner.isPlayed\n          ? [\n              {\n                icon: 'assets/interface/50721/002_50721.png',\n                children: Object.keys(this.owner.config.buildings).map(key => menu.getBuildingButton(key)),\n              },\n            ]\n          : [],\n    }\n\n    this.allowMove = false\n    this.eventMode = 'static'\n    this.actionSheet = this.actionSheet || getActionSheet(this.work, this.action, Assets, this)\n    this.sprite = new AnimatedSprite(this['standingSheet'].animations['south'])\n    this.sprite.label = 'sprite'\n    this.sprite.allowMove = false\n    this.sprite.eventMode = 'auto'\n    this.sprite.allowClick = false\n    this.sprite.roundPixels = true\n    this.sprite.loop = this.loop ?? true\n    if (this.isDead) {\n      this.currentSheet === 'corpseSheet' ? this.decompose() : this.death()\n    } else if (this.loading > 0) {\n      this.walkingSheet = Assets.cache.get(this.allAssets[getWorkWithLoadingType(this.loadingType)].loadedSheet)\n      this.standingSheet = Assets.cache.get(this.allAssets[getWorkWithLoadingType(this.loadingType)].standingSheet)\n    }\n    this.setTextures(this.currentSheet)\n\n    this.sprite.currentFrame = Math.min(this.currentFrame, this.sprite.textures.length - 1)\n    this.sprite.updateAnchor = true\n    this.addChild(this.sprite)\n\n    this.sendTo = this.owner.isPlayed ? throttle(this.sendToEvt, 100, true) : this.sendToEvt\n\n    this.on('pointerdown', evt => {\n      const {\n        context: { controls, player },\n      } = this\n      if (controls.mouseBuilding || controls.mouseRectangle || !controls.isMouseInApp(evt)) {\n        return\n      }\n      if (controls.clicked) {\n        if (this.owner.isPlayed) {\n          controls.getCellOnCamera(cell => {\n            if (\n              player.selectedUnits.length < MAX_SELECT_UNITS &&\n              cell.has &&\n              cell.has.owner &&\n              cell.has.owner.label === this.owner.label &&\n              cell.has.type === this.type\n            ) {\n              cell.has.select()\n              player.selectedUnits.push(cell.has)\n            }\n          })\n        }\n        controls.doubleClicked = true\n      }\n      controls.clicked = false\n    })\n    this.on('pointerup', evt => {\n      const {\n        context: { controls, player, menu },\n      } = this\n      if (controls.doubleClicked || controls.mouseBuilding || controls.mouseRectangle || !controls.isMouseInApp(evt)) {\n        return\n      }\n\n      controls.mouse.prevent = true\n      controls.clicked = true\n      controls.double = setTimeout(() => {\n        controls.clicked = false\n        controls.doubleClicked = false\n      }, 600)\n\n      if (this.owner.isPlayed) {\n        let hasSentHealer = false\n        if (player.selectedUnits.length) {\n          for (let i = 0; i < player.selectedUnits.length; i++) {\n            const playerUnit = player.selectedUnits[i]\n            if (playerUnit.work === 'healer' && this.getActionCondition(playerUnit, 'heal')) {\n              hasSentHealer = true\n              playerUnit.sendTo(this, 'heal')\n            }\n          }\n        }\n        if (hasSentHealer) {\n          drawInstanceBlinkingSelection(this)\n        } else if (player.selectedUnit !== this) {\n          this.owner.unselectAll()\n          this.select()\n          menu.setBottombar(this)\n          player.selectedUnit = this\n          player.selectedUnits = [this]\n        }\n      } else {\n        let hasSentAttacker = false\n        if (player.selectedUnits.length) {\n          for (let i = 0; i < player.selectedUnits.length; i++) {\n            const playerUnit = player.selectedUnits[i]\n            if (this.getActionCondition(playerUnit, 'attack'))\n              if (playerUnit.type === 'Villager') {\n                hasSentAttacker = true\n                playerUnit.sendToAttack(this)\n              } else if (playerUnit.work === 'attacker') {\n                hasSentAttacker = true\n                playerUnit.sendTo(this, 'attack')\n              }\n          }\n        }\n        if (hasSentAttacker) {\n          drawInstanceBlinkingSelection(this)\n        } else if ((player.selectedOther !== this && instanceIsInPlayerSight(this, player)) || map.revealEverything) {\n          player.unselectAll()\n          this.select()\n          menu.setBottombar(this)\n          player.selectedOther = this\n        }\n      }\n    })\n\n    changeSpriteColor(this.sprite, this.owner.color)\n\n    this.interval = null\n\n    renderCellOnInstanceSight(this)\n  }\n\n  pause() {\n    this.sprite?.stop()\n  }\n\n  resume() {\n    this.sprite?.play()\n  }\n\n  select() {\n    if (this.selected) return\n\n    const {\n      context: { menu, player },\n    } = this\n\n    this.selected = true\n\n    const selection = new Graphics()\n    selection.label = 'selection'\n    selection.zIndex = 3\n\n    // Diamond shape\n    const path = [-32 * 0.5, 0, 0, -16 * 0.5, 32 * 0.5, 0, 0, 16 * 0.5]\n    selection.poly(path)\n    selection.stroke(COLOR_WHITE)\n\n    this.addChildAt(selection, 0)\n\n    if (canUpdateMinimap(this, player)) {\n      menu.updatePlayerMiniMapEvt(this.owner)\n    }\n  }\n\n  unselect() {\n    if (!this.selected) {\n      return\n    }\n    const {\n      context: { menu, player },\n    } = this\n\n    this.selected = false\n    const selection = this.getChildByLabel('selection')\n    if (selection) {\n      this.removeChild(selection)\n    }\n    canUpdateMinimap(this, player) && menu.updatePlayerMiniMapEvt(this.owner)\n  }\n\n  hasPath() {\n    return this.path.length > 0\n  }\n\n  setDest(dest) {\n    if (!dest) {\n      this.stop()\n      return\n    }\n    this.handleSetDest && this.handleSetDest(dest, this)\n    this.dest = dest\n    this.realDest = {\n      i: dest.i,\n      j: dest.j,\n      x: dest.x,\n      y: dest.y,\n      label: dest.label,\n    }\n  }\n\n  setPath(path) {\n    if (!path.length) {\n      this.stop()\n      return\n    }\n    this.setTextures('walkingSheet')\n    this.inactif = false\n    this.path = path\n    this.startInterval(() => this.step(), STEP_TIME)\n  }\n\n  handleChangeDest() {\n    if (this.dest && this.dest.isUsedBy === this) {\n      this.dest.isUsedBy = null\n    }\n  }\n\n  sendToEvt(dest, action) {\n    const {\n      context: { map },\n    } = this\n    this.handleChangeDest()\n    this.stopInterval()\n    let path = []\n    // No instance we cancel the destination\n    if (!dest || this.isDead) {\n      return\n    }\n    // Unit is already beside our target\n    if (\n      this.isUnitAtDest(action, dest) &&\n      (!map.grid[this.i][this.j].solid ||\n        (map.grid[this.i][this.j].solid && map.grid[this.i][this.j].has?.label === this.label))\n    ) {\n      this.setDest(dest)\n      this.action = action\n      this.degree = getInstanceDegree(this, dest.x, dest.y)\n      this.getAction(action)\n      return\n    }\n    // Set unit path\n    if (map.grid[dest.i] && map.grid[dest.i][dest.j]) {\n      const allowWaterCellCategory = this.category === 'Boat'\n      if (map.grid[dest.i][dest.j].solid) {\n        path = getInstanceClosestFreeCellPath(this, dest, map)\n        if (!path.length && this.work) {\n          this.action = action\n          this.affectNewDest()\n          return\n        }\n      } else if (!allowWaterCellCategory && dest.category === 'Water') {\n        const cell = getFreeCellAroundPoint(\n          dest.i,\n          dest.j,\n          1,\n          map.grid,\n          cell => cell.category !== 'Water' && !cell.solid\n        )\n        this.sendToEvt(cell)\n        return\n      }\n    }\n    if (!path.length) {\n      path = getInstancePath(this, dest.i, dest.j, map)\n    }\n    // Unit found a path, set the action and play walking animation\n    if (path.length) {\n      this.setDest(dest)\n      this.action = action\n      this.setPath(path)\n    } else {\n      this.stop()\n    }\n  }\n\n  getActionCondition(target, action = this.action, props) {\n    return getActionCondition(this, target, action, props)\n  }\n\n  goBackToPrevious() {\n    const {\n      context: { map },\n    } = this\n\n    if (!this.previousDest) {\n      this.stop()\n      return\n    }\n    const dest = this.previousDest\n    const type = dest.category || dest.type\n    this.previousDest = null\n    if (dest.family === 'animal') {\n      if (this.getActionCondition(dest, 'takemeat')) {\n        this.sendToTakeMeat(dest)\n      } else {\n        this.sendTo(map.grid[dest.i][dest.j], 'hunt')\n      }\n    } else if (dest.family === 'building') {\n      if (this.getActionCondition(dest, 'build')) {\n        this.sendToBuilding(dest)\n      } else if (this.getActionCondition(dest, 'farm')) {\n        this.sendToFarm(dest)\n      } else {\n        this.sendTo(map.grid[dest.i][dest.j], 'build')\n      }\n    } else if (TYPE_ACTION[type]) {\n      if (this.getActionCondition(dest, TYPE_ACTION[type])) {\n        const sendToFunc = `sendTo${type}`\n        typeof this[sendToFunc] === 'function' ? this[sendToFunc](dest) : this.stop()\n      } else {\n        this.sendTo(map.grid[dest.i][dest.j], TYPE_ACTION[type])\n      }\n    } else {\n      this.sendTo(map.grid[dest.i][dest.j])\n    }\n  }\n\n  getAction(name) {\n    const {\n      context: { menu, player, map },\n    } = this\n    this.sprite.onLoop = null\n    this.sprite.onFrameChange = null\n    switch (name) {\n      case 'delivery':\n        if (!this.getActionCondition(this.dest, this.action)) {\n          this.stop()\n          return\n        }\n        this.owner[LOADING_FOOD_TYPES.includes(this.loadingType) ? 'food' : this.loadingType] += this.loading\n        this.owner.isPlayed && menu.updateTopbar()\n        this.loading = 0\n        this.updateInterfaceLoading()\n        if (this.allAssets && this.allAssets[this.work]) {\n          this.standingSheet = Assets.cache.get(this.allAssets[this.work].standingSheet)\n          this.walkingSheet = Assets.cache.get(this.allAssets[this.work].walkingSheet)\n        }\n\n        if (this.previousDest) {\n          this.goBackToPrevious()\n        } else {\n          this.stop()\n        }\n        break\n      case 'farm':\n        if (!this.getActionCondition(this.dest)) {\n          this.affectNewDest()\n          return\n        }\n        this.dest.isUsedBy = this\n        this.setTextures('actionSheet')\n        this.startInterval(\n          () => {\n            if (!this.getActionCondition(this.dest)) {\n              if (this.dest.quantity <= 0) {\n                this.dest.die()\n              }\n              this.affectNewDest()\n              return\n            }\n            this.dest.isUsedBy = this\n            // Villager is full we send him delivery first\n            if (this.loading === this.loadingMax[this.loadingType] || !this.dest) {\n              this.sendToDelivery()\n              this.dest.isUsedBy = null\n              return\n            }\n            // Villager farm the farm\n            this.loading++\n            this.loadingType = 'wheat'\n            this.updateInterfaceLoading()\n\n            this.visible && sound.play('5178')\n            this.dest.quantity = Math.max(this.dest.quantity - 1, 0)\n            if (this.dest.selected) {\n              menu.updateInfo('quantity-text', this.dest.quantity)\n            }\n            // Destroy farm if it out of quantity\n            if (this.dest.quantity <= 0) {\n              this.dest.die()\n              this.affectNewDest()\n            }\n            // Set the walking with berrybush animation\n            if (this.loading > 0) {\n              if (this.allAssets[this.work]) {\n                this.walkingSheet = Assets.cache.get(this.allAssets[this.work].loadedSheet)\n              }\n              this.standingSheet = null\n            }\n          },\n          (1 / this.gatheringRate[this.work]) * 1000,\n          false\n        )\n        break\n      case 'chopwood':\n        if (!this.getActionCondition(this.dest)) {\n          this.affectNewDest()\n          return\n        }\n        this.setTextures('actionSheet')\n        this.startInterval(\n          () => {\n            if (!this.getActionCondition(this.dest)) {\n              if (this.dest.quantity <= 0) {\n                this.dest.die()\n              }\n              this.affectNewDest()\n              return\n            }\n            // Villager is full we send him delivery first\n            if (this.loading === this.loadingMax[this.loadingType] || !this.dest) {\n              this.sendToDelivery()\n              return\n            }\n\n            this.visible && sound.play('5048')\n\n            // Tree destination is still alive we cut him until it's dead\n            if (this.dest.hitPoints > 0) {\n              this.dest.hitPoints = Math.max(this.dest.hitPoints - 1, 0)\n\n              if (this.dest.selected) {\n                menu.updateInfo(\n                  'hitPoints',\n                  this.dest.hitPoints > 0 ? this.dest.hitPoints + '/' + this.dest.totalHitPoints : ''\n                )\n              }\n              if (this.dest.hitPoints <= 0) {\n                // Set cutted tree texture\n                this.dest.hitPoints = 0\n                this.dest.setCuttedTreeTexture()\n              }\n            } else {\n              // Villager cut the stump\n              this.loading++\n              this.loadingType = 'wood'\n              this.updateInterfaceLoading()\n\n              this.dest.quantity = Math.max(this.dest.quantity - 1, 0)\n              if (this.dest.selected) {\n                menu.updateInfo('quantity-text', this.dest.quantity)\n              }\n              // Destroy tree if stump out of quantity\n              if (this.dest.quantity <= 0) {\n                this.dest.die()\n                this.affectNewDest()\n              }\n              // Set the walking with wood animation\n              if (this.loading > 0) {\n                if (this.allAssets[this.work]) {\n                  this.walkingSheet = Assets.cache.get(this.allAssets[this.work].loadedSheet)\n                }\n                this.standingSheet = null\n              }\n            }\n          },\n          (1 / this.gatheringRate[this.work]) * 1000,\n          false\n        )\n        break\n      case 'forageberry':\n        if (!this.getActionCondition(this.dest)) {\n          this.affectNewDest()\n          return\n        }\n        this.setTextures('actionSheet')\n        this.startInterval(\n          () => {\n            if (!this.getActionCondition(this.dest)) {\n              if (this.dest.quantity <= 0) {\n                this.dest.die()\n              }\n              this.affectNewDest()\n              return\n            }\n            // Villager is full we send him delivery first\n            if (this.loading === this.loadingMax[this.loadingType] || !this.dest) {\n              this.sendToDelivery()\n              return\n            }\n            // Villager forage the berrybush\n            this.loading++\n            this.loadingType = 'berry'\n            this.updateInterfaceLoading()\n\n            this.visible && sound.play('5085')\n\n            this.dest.quantity = Math.max(this.dest.quantity - 1, 0)\n            if (this.dest.selected) {\n              menu.updateInfo('quantity-text', this.dest.quantity)\n            }\n            // Destroy berrybush if it out of quantity\n            if (this.dest.quantity <= 0) {\n              this.dest.die()\n              this.affectNewDest()\n            }\n            // Set the walking with berrybush animation\n            if (this.loading > 0) {\n              if (this.allAssets[this.work]) {\n                this.walkingSheet = Assets.cache.get(this.allAssets[this.work].loadedSheet)\n              }\n              this.standingSheet = null\n            }\n          },\n          (1 / this.gatheringRate[this.work]) * 1000,\n          false\n        )\n        break\n      case 'minestone':\n        if (!this.getActionCondition(this.dest)) {\n          this.affectNewDest()\n          return\n        }\n        this.setTextures('actionSheet')\n        this.startInterval(\n          () => {\n            if (!this.getActionCondition(this.dest)) {\n              if (this.dest.quantity <= 0) {\n                this.dest.die()\n              }\n              this.affectNewDest()\n              return\n            }\n            // Villager is full we send him delivery first\n            if (this.loading === this.loadingMax[this.loadingType] || !this.dest) {\n              this.sendToDelivery()\n              return\n            }\n            // Villager mine the stone\n            this.loading++\n            this.loadingType = 'stone'\n            this.updateInterfaceLoading()\n\n            this.visible && sound.play('5159')\n\n            this.dest.quantity = Math.max(this.dest.quantity - 1, 0)\n            if (this.dest.selected) {\n              menu.updateInfo('quantity-text', this.dest.quantity)\n            }\n            // Destroy stone if it out of quantity\n            if (this.dest.quantity <= 0) {\n              this.dest.die()\n              this.affectNewDest()\n            }\n            // Set the walking with stone animation\n            if (this.loading > 0) {\n              if (this.allAssets[this.work]) {\n                this.walkingSheet = Assets.cache.get(this.allAssets[this.work].loadedSheet)\n              }\n              this.standingSheet = null\n            }\n          },\n          (1 / this.gatheringRate[this.work]) * 1000,\n          false\n        )\n        break\n      case 'minegold':\n        if (!this.getActionCondition(this.dest)) {\n          this.affectNewDest()\n          return\n        }\n        this.setTextures('actionSheet')\n        this.startInterval(\n          () => {\n            if (!this.getActionCondition(this.dest)) {\n              this.affectNewDest()\n              return\n            }\n            // Villager is full we send him delivery first\n            if (this.loading === this.loadingMax[this.loadingType] || !this.dest) {\n              this.sendToDelivery()\n              return\n            }\n            // Villager mine the gold\n            this.loading++\n            this.loadingType = 'gold'\n            this.updateInterfaceLoading()\n\n            this.visible && sound.play('5159')\n            this.dest.quantity = Math.max(this.dest.quantity - 1, 0)\n            if (this.dest.selected) {\n              menu.updateInfo('quantity-text', this.dest.quantity)\n            }\n            // Destroy gold if it out of quantity\n            if (this.dest.quantity <= 0) {\n              this.dest.die()\n              this.affectNewDest()\n            }\n            // Set the walking with gold animation\n            if (this.loading > 0) {\n              if (this.allAssets[this.work]) {\n                this.walkingSheet = Assets.cache.get(this.allAssets[this.work].loadedSheet)\n              }\n              this.standingSheet = null\n            }\n          },\n          (1 / this.gatheringRate[this.work]) * 1000,\n          false\n        )\n        break\n      case 'build':\n        if (!this.getActionCondition(this.dest)) {\n          this.affectNewDest()\n          return\n        }\n        this.setTextures('actionSheet')\n        this.startInterval(\n          () => {\n            if (!this.getActionCondition(this.dest)) {\n              if (this.dest.type === 'Farm' && !this.dest.isUsedBy) {\n                this.sendToFarm(this.dest)\n              }\n              this.affectNewDest()\n              return\n            }\n            if (this.dest.hitPoints < this.dest.totalHitPoints) {\n              this.visible && sound.play('5107')\n              this.dest.hitPoints = Math.min(\n                Math.round(this.dest.hitPoints + this.dest.totalHitPoints / this.dest.constructionTime),\n                this.dest.totalHitPoints\n              )\n              if (this.dest.selected && this.owner.isPlayed) {\n                menu.updateInfo('hitPoints', this.dest.hitPoints + '/' + this.dest.totalHitPoints)\n              }\n              this.dest.updateHitPoints(this.action)\n            } else {\n              if (!this.dest.isBuilt) {\n                this.depst.updateHitPoints(this.action)\n                this.dest.isBuilt = true\n                if (this.dest.type === 'Farm' && !this.dest.isUsedBy) {\n                  this.sendToFarm(this.dest)\n                }\n              }\n              this.affectNewDest()\n            }\n          },\n          1000,\n          false\n        )\n        break\n      case 'attack':\n        if (!this.getActionCondition(this.dest)) {\n          this.affectNewDest()\n          return\n        }\n        this.setTextures('actionSheet')\n        if (this.range && this.type !== 'Villager') {\n          this.sprite.onLoop = () => {\n            if (!this.getActionCondition(this.dest)) {\n              if (this.dest && this.dest.hitPoints <= 0) {\n                this.dest.die()\n              }\n              this.affectNewDest()\n              return\n            }\n            if (!this.isUnitAtDest(this.action, this.dest)) {\n              this.stop()\n              return\n            }\n            if (this.destHasMoved()) {\n              this.realDest.i = this.dest.i\n              this.realDest.j = this.dest.j\n              this.realDest.x = this.dest.x\n              this.realDest.y = this.dest.y\n              const oldDeg = this.degree\n              this.degree = getInstanceDegree(this, this.dest.x, this.dest.y)\n              if (degreeToDirection(oldDeg) !== degreeToDirection(this.degree)) {\n                this.setTextures('actionSheet')\n              }\n            }\n          }\n          onSpriteLoopAtFrame(this.sprite, 6, () => {\n            const projectile = new Projectile(\n              {\n                owner: this,\n                target: this.dest,\n                type: this.projectile,\n                destination: this.realDest,\n              },\n              this.context\n            )\n            map.addChild(projectile)\n          })\n        } else {\n          this.startInterval(\n            () => {\n              if (!this.getActionCondition(this.dest)) {\n                if (this.dest && this.dest.hitPoints <= 0) {\n                  this.dest.die()\n                }\n                this.affectNewDest()\n                return\n              }\n              if (this.destHasMoved()) {\n                this.realDest.i = this.dest.i\n                this.realDest.j = this.dest.j\n                this.realDest.x = this.dest.x\n                this.realDest.y = this.dest.y\n                const oldDeg = this.degree\n                this.degree = getInstanceDegree(this, this.dest.x, this.dest.y)\n                if (degreeToDirection(oldDeg) !== degreeToDirection(this.degree)) {\n                  this.setTextures('actionSheet')\n                }\n              }\n              if (!this.isUnitAtDest(this.action, this.dest)) {\n                this.sendTo(this.dest, 'attack')\n                return\n              }\n              if (this.sounds && this.sounds.hit) {\n                this.visible &&\n                  sound.play(Array.isArray(this.sounds.hit) ? randomItem(this.sounds.hit) : this.sounds.hit)\n              }\n              if (this.dest.hitPoints > 0) {\n                this.dest.hitPoints = getHitPointsWithDamage(this, this.dest)\n                if (\n                  this.dest.selected &&\n                  (player.selectedUnit === this.dest ||\n                    player.selectedBuilding === this.dest ||\n                    player.selectedOther === this.dest)\n                ) {\n                  menu.updateInfo('hitPoints', this.dest.hitPoints + '/' + this.dest.totalHitPoints)\n                }\n                this.dest.isAttacked(this)\n                if (this.dest.hitPoints <= 0) {\n                  this.dest.die()\n                  this.affectNewDest()\n                }\n              }\n            },\n            this.rateOfFire * 1000,\n            false\n          )\n        }\n        break\n      case 'heal':\n        if (!this.getActionCondition(this.dest)) {\n          this.affectNewDest()\n          return\n        }\n        this.setTextures('actionSheet')\n        this.sprite.onLoop = () => {\n          if (!this.getActionCondition(this.dest)) {\n            this.affectNewDest()\n            return\n          }\n          if (this.destHasMoved()) {\n            this.realDest.i = this.dest.i\n            this.realDest.j = this.dest.j\n            this.realDest.x = this.dest.x\n            this.realDest.y = this.dest.y\n            const oldDeg = this.degree\n            this.degree = getInstanceDegree(this, this.dest.x, this.dest.y)\n            if (degreeToDirection(oldDeg) !== degreeToDirection(this.degree)) {\n              this.setTextures('actionSheet')\n            }\n          }\n          if (!this.isUnitAtDest(this.action, this.dest)) {\n            this.sendTo(this.dest, 'heal')\n            return\n          }\n          if (this.dest.hitPoints < this.dest.totalHitPoints) {\n            this.dest.hitPoints = Math.min(this.dest.hitPoints + this.healing, this.dest.totalHitPoints)\n            if (this.dest.selected && player.selectedUnit === this.dest) {\n              menu.updateInfo('hitPoints', this.dest.hitPoints + '/' + this.dest.totalHitPoints)\n            }\n          }\n        }\n        break\n      case 'takemeat':\n        if (!this.getActionCondition(this.dest)) {\n          this.affectNewDest()\n          return\n        }\n        this.setTextures('actionSheet')\n        this.startInterval(\n          () => {\n            if (!this.getActionCondition(this.dest)) {\n              this.affectNewDest()\n              return\n            }\n            // Villager is full we send him delivery first\n            if (this.loading === this.loadingMax[this.loadingType] || !this.dest) {\n              this.sendToDelivery()\n              return\n            }\n            // Villager take meat\n            this.visible && sound.play('5178')\n\n            this.loading++\n            this.loadingType = 'meat'\n            this.updateInterfaceLoading()\n\n            this.dest.quantity = Math.max(this.dest.quantity - 1, 0)\n            this.dest.updateTexture()\n            if (this.dest.selected && this.owner.isPlayed) {\n              menu.updateInfo('quantity-text', this.dest.quantity)\n            }\n            // Set the walking with meat animation\n            if (this.loading > 0) {\n              if (this.allAssets[this.work]) {\n                this.walkingSheet = Assets.cache.get(this.allAssets[this.work].loadedSheet)\n              }\n              this.standingSheet = null\n            }\n            // Destroy corps if it out of quantity\n            if (this.dest.quantity <= 0) {\n              this.affectNewDest()\n            }\n          },\n          (1 / this.gatheringRate[this.work]) * 1000,\n          false\n        )\n        break\n      case 'fishing':\n        if (!this.getActionCondition(this.dest)) {\n          this.affectNewDest()\n          return\n        }\n        this.setTextures('actionSheet')\n        this.startInterval(\n          () => {\n            if (!this.getActionCondition(this.dest)) {\n              this.affectNewDest()\n              return\n            }\n            // Villager is full we send him delivery first\n            if (this.loading === this.loadingMax[this.loadingType] || !this.dest) {\n              this.sendToDelivery()\n              return\n            }\n            // Villager fish\n            this.loading++\n            this.loadingType = 'fish'\n            this.updateInterfaceLoading()\n\n            this.dest.quantity = Math.max(this.dest.quantity - 1, 0)\n            if (this.dest.selected && this.owner.isPlayed) {\n              menu.updateInfo('quantity-text', this.dest.quantity)\n            }\n            // Set the walking with meat animation\n            if (this.loading > 0) {\n              if (this.allAssets && this.allAssets[this.work]) {\n                this.walkingSheet = Assets.cache.get(this.allAssets[this.work].loadedSheet)\n              }\n              this.standingSheet = null\n            }\n            // Destroy corps if it out of quantity\n            if (this.dest.quantity <= 0) {\n              this.affectNewDest()\n            }\n          },\n          (1 / this.gatheringRate[this.work]) * 1000,\n          false\n        )\n        if (this.category !== 'Boat') {\n          onSpriteLoopAtFrame(this.sprite, 6, () => {\n            this.visible && sound.play('5125')\n          })\n        }\n        break\n      case 'hunt':\n        if (!this.getActionCondition(this.dest)) {\n          this.affectNewDest()\n          return\n        }\n        if (this.dest.isDead) {\n          this.previousDest ? this.goBackToPrevious() : this.sendToTakeMeat(this.dest)\n        }\n        this.setTextures('actionSheet')\n        this.sprite.onLoop = () => {\n          if (!this.getActionCondition(this.dest)) {\n            if (this.dest && this.dest.hitPoints <= 0) {\n              this.dest.die()\n              this.previousDest ? this.goBackToPrevious() : this.sendToTakeMeat(this.dest)\n              return\n            }\n            this.affectNewDest()\n            return\n          }\n          if (!this.isUnitAtDest(this.action, this.dest)) {\n            this.stop()\n            return\n          }\n          if (this.destHasMoved()) {\n            this.realDest.i = this.dest.i\n            this.realDest.j = this.dest.j\n            this.realDest.x = this.dest.x\n            this.realDest.y = this.dest.y\n            const oldDeg = this.degree\n            this.degree = getInstanceDegree(this, this.dest.x, this.dest.y)\n            if (degreeToDirection(oldDeg) !== degreeToDirection(this.degree)) {\n              this.setTextures('actionSheet')\n            }\n          }\n        }\n        onSpriteLoopAtFrame(this.sprite, 6, () => {\n          const projectile = new Projectile(\n            {\n              owner: this,\n              target: this.dest,\n              type: 'Spear',\n              destination: this.realDest,\n              damage: 4,\n            },\n            this.context\n          )\n          map.addChild(projectile)\n        })\n        break\n      default:\n        this.stop()\n    }\n  }\n\n  detect(instance) {\n    if (\n      this.work === 'attacker' &&\n      instance &&\n      instance.family === 'unit' &&\n      !this.path.length &&\n      !this.dest &&\n      this.getActionCondition(instance, 'attack')\n    ) {\n      this.sendTo(instance, 'attack')\n    }\n  }\n\n  handleAffectNewDestHunter() {\n    const firstTargets = findInstancesInSight(this, instance => this.getActionCondition(instance, 'takemeat'))\n    if (firstTargets.length) {\n      const target = getClosestInstanceWithPath(this, firstTargets)\n      if (target) {\n        if (this.action !== 'takemeat') {\n          this.action = 'takemeat'\n          if (this.allAssets[this.work]) {\n            this.actionSheet = Assets.cache.get(this.allAssets[this.work].harvestSheet)\n          }\n        }\n        if (instanceContactInstance(this, target)) {\n          this.degree = getInstanceDegree(this, target.x, target.y)\n          this.getAction(this.action)\n          return true\n        }\n        this.setDest(target.instance)\n        this.setPath(target.path)\n        return true\n      }\n    }\n    const secondTargets = findInstancesInSight(this, instance => this.getActionCondition(instance, 'hunt'))\n    if (secondTargets.length) {\n      const target = getClosestInstanceWithPath(this, secondTargets)\n      if (target) {\n        if (this.action !== 'hunt') {\n          this.action = 'hunt'\n          if (this.allAssets[this.work]) {\n            this.actionSheet = Assets.cache.get(this.allAssets[this.work].actionSheet)\n          }\n        }\n        if (instanceContactInstance(this, target)) {\n          this.degree = getInstanceDegree(this, target.x, target.y)\n          this.getAction(this.action)\n          return true\n        }\n        this.setDest(target.instance)\n        this.setPath(target.path)\n        return true\n      }\n    }\n    return false\n  }\n\n  upgrade(type) {\n    const data = this.owner.config.units[type]\n    this.type = type\n    this.hitPoints = data.totalHitPoints - (this.totalHitPoints - this.hitPoints)\n    for (const [key, value] of Object.entries(data)) {\n      this[key] = value\n    }\n    for (const [key, value] of Object.entries(this.assets)) {\n      this[key] = Assets.cache.get(value)\n    }\n    if (this.action && !this.path.length) {\n      this.getAction(this.action)\n    } else {\n      this.setTextures(this.currentSheet)\n    }\n  }\n\n  affectNewDest() {\n    this.stopInterval()\n    if (this.previousDest && this.work !== 'delivery') {\n      this.goBackToPrevious()\n      return\n    }\n    let handleSuccess = false\n    if (this.type === 'Villager' && (this.action === 'takemeat' || this.action === 'hunt')) {\n      handleSuccess = this.handleAffectNewDestHunter()\n    } else if (!this.dest || this.dest.label !== 'animal') {\n      const targets = findInstancesInSight(this, instance => this.getActionCondition(instance))\n      if (targets.length) {\n        const target = getClosestInstanceWithPath(this, targets)\n        if (target) {\n          if (instanceContactInstance(this, target)) {\n            this.degree = getInstanceDegree(this, target.x, target.y)\n            this.getAction(this.action)\n            return\n          }\n          this.setDest(target.instance)\n          this.setPath(target.path)\n          return\n        }\n      }\n    }\n    if (!handleSuccess) {\n      const notDeliveryWork = ['builder', 'attacker', 'healer']\n      if (this.loading && !notDeliveryWork.includes(this.work)) {\n        this.sendToDelivery()\n      } else {\n        this.stop()\n      }\n    }\n  }\n\n  isUnitAtDest(action, dest) {\n    if (!action) {\n      return false\n    }\n    if (!dest) {\n      this.affectNewDest()\n      return false\n    }\n    if ((this.type !== 'Villager' || action === 'hunt') && this.range && instancesDistance(this, dest) <= this.range) {\n      return true\n    }\n    return instanceContactInstance(this, dest)\n  }\n\n  destHasMoved() {\n    return (\n      (this.dest.i !== this.realDest.i || this.dest.j !== this.realDest.j) &&\n      instancesDistance(this, this.dest) <= this.sight\n    )\n  }\n\n  moveToPath() {\n    const {\n      context: { map },\n    } = this\n    const next = this.path[this.path.length - 1]\n    const nextCell = map.grid[next.i][next.j]\n    if (!this.dest || this.dest.isDestroyed) {\n      this.affectNewDest()\n      return\n    }\n    // Collision with another walking unit, we block the mouvement\n    if (\n      nextCell.has &&\n      nextCell.has.family === 'unit' &&\n      nextCell.has.label !== this.label &&\n      nextCell.has.hasPath() &&\n      instancesDistance(this, nextCell.has) <= 1 &&\n      nextCell.has.sprite.playing\n    ) {\n      this.sprite.stop()\n      return\n    }\n    if (nextCell.solid && this.dest) {\n      this.sendTo(this.dest, this.action)\n      return\n    }\n\n    if (!this.sprite.playing) {\n      this.sprite.play()\n    }\n\n    this.zIndex = getInstanceZIndex(this)\n    if (instancesDistance(this, nextCell, false) <= this.speed) {\n      clearCellOnInstanceSight(this)\n      this.z = nextCell.z\n      this.i = nextCell.i\n      this.j = nextCell.j\n      if (this.currentCell.has === this) {\n        this.currentCell.has = null\n        this.currentCell.solid = false\n      }\n      this.currentCell = map.grid[this.i][this.j]\n      if (this.currentCell.has === null) {\n        this.currentCell.has = this\n        this.currentCell.solid = true\n      }\n      renderCellOnInstanceSight(this)\n      this.path.pop()\n\n      // Destination moved\n      if (this.destHasMoved()) {\n        this.sendTo(this.dest, this.action)\n        return\n      }\n      if (this.isUnitAtDest(this.action, this.dest)) {\n        this.path = []\n        this.stopInterval()\n        this.degree = getInstanceDegree(this, this.dest.x, this.dest.y)\n        this.getAction(this.action)\n        return\n      }\n\n      if (!this.path.length) {\n        this.stop()\n      }\n    } else {\n      const {\n        context: { menu, player },\n      } = this\n      // Move to next\n      const oldDeg = this.degree\n      let speed = this.speed\n      if (this.loading > 0) {\n        speed *= 0.8\n      }\n      moveTowardPoint(this, nextCell.x, nextCell.y, this.speed)\n      canUpdateMinimap(this, player) && menu.updatePlayerMiniMap(this.owner)\n      if (degreeToDirection(oldDeg) !== degreeToDirection(this.degree)) {\n        // Change animation according to degree\n        this.setTextures('walkingSheet')\n      }\n    }\n  }\n\n  isAttacked(instance) {\n    if (!instance || this.dest === instance || this.isDead) {\n      return\n    }\n    const currentDest = this.dest\n    if (this.type === 'Villager') {\n      if (instance.family === 'animal') {\n        this.sendToHunt(instance)\n      } else {\n        this.sendToAttack(instance)\n      }\n    } else {\n      this.sendTo(instance, 'attack')\n    }\n    this.previousDest = currentDest\n  }\n\n  stop() {\n    if (this.currentCell.has.label !== this.label && this.currentCell.solid) {\n      this.sendTo(this.currentCell)\n      return\n    }\n    this.handleChangeDest()\n    this.inactif = true\n    this.action = null\n    this.dest = null\n    this.realDest = null\n    this.currentCell.has = this\n    this.currentCell.solid = true\n    this.path = []\n    this.stopInterval()\n    this.setTextures('standingSheet')\n  }\n\n  startInterval(callback, time, immediate = true) {\n    const finalCb = () => {\n      const { paused } = this.context\n      if (paused) {\n        return\n      }\n      callback()\n    }\n    if (this.isDead) {\n      return\n    }\n    this.stopInterval()\n    immediate && finalCb()\n    this.interval = setInterval(finalCb, time)\n  }\n\n  stopInterval() {\n    if (this.interval) {\n      clearInterval(this.interval)\n      this.interval = null\n    }\n  }\n\n  step() {\n    if (this.hitPoints <= 0) {\n      this.die()\n    } else if (this.hasPath()) {\n      this.moveToPath()\n    }\n  }\n\n  explore() {\n    const {\n      context: { map },\n    } = this\n    let dest\n    for (let i = 3; i < 50; i++) {\n      getCellsAroundPoint(this.i, this.j, map.grid, i, cell => {\n        if (!this.owner.views[cell.i][cell.j].viewed && !cell.solid) {\n          dest = this.owner.views[cell.i][cell.j]\n          return\n        }\n      })\n      if (dest) {\n        this.sendTo(dest)\n        break\n      }\n    }\n  }\n\n  runaway(instance) {\n    const {\n      context: { map },\n    } = this\n    let dest = null\n    getCellsAroundPoint(this.i, this.j, map.grid, this.sight, cell => {\n      if (\n        !cell.solid &&\n        (!dest ||\n          pointsDistance(cell.i, cell.j, instance.i, instance.j) >\n            pointsDistance(dest.i, dest.j, instance.i, instance.j))\n      ) {\n        dest = this.owner.views[cell.i][cell.j]\n        return\n      }\n    })\n    if (dest) {\n      this.sendTo(dest)\n    } else {\n      this.stop()\n    }\n  }\n\n  decompose() {\n    const {\n      context: { map },\n    } = this\n    this.setTextures('corpseSheet')\n    this.sprite.animationSpeed = (1 / (CORPSE_TIME * 1000)) * ACCELERATOR\n    if (map.grid[this.i][this.j].has === this) {\n      map.grid[this.i][this.j].has = null\n      map.grid[this.i][this.j].corpses.push(this)\n      map.grid[this.i][this.j].solid = false\n    }\n    this.sprite.onComplete = () => {\n      //this.clear()\n    }\n  }\n\n  death() {\n    this.setTextures('dyingSheet')\n    this.zIndex--\n    this.sprite.loop = false\n    this.sprite.onComplete = () => {\n      clearCellOnInstanceSight(this)\n      // Remove from player units\n      let index = this.owner.corpses.indexOf(this)\n      if (index < 0) {\n        this.owner.corpses.push(this)\n      }\n      this.decompose()\n    }\n  }\n\n  die() {\n    if (this.isDead) {\n      return\n    }\n    const {\n      context: { player, menu },\n    } = this\n\n    this.sounds &&\n      this.sounds.die &&\n      this.visible &&\n      sound.play(Array.isArray(this.sounds.die) ? randomItem(this.sounds.die) : this.sounds.die)\n\n    this.stopInterval()\n    if (this.selected && player.selectedOther === this) {\n      player.unselectUnit(this)\n    }\n    if (this.dest && this.dest.isUsedBy === this) {\n      this.dest.isUsedBy = null\n    }\n    this.hitPoints = 0\n    this.path = []\n    this.action = null\n    this.eventMode = 'none'\n    this.isDead = true\n    this.unselect()\n    if (this.owner) {\n      this.owner.population--\n      if (this.owner.isPlayed && this.owner.selectedBuilding && this.owner.selectedBuilding.displayPopulation) {\n        menu.updateInfo(\n          'population-text',\n          this.owner.population + '/' + Math.min(POPULATION_MAX, this.owner.POPULATION_MAX)\n        )\n      }\n      // Remove from player units\n      let index = this.owner.units.indexOf(this)\n      if (index >= 0) {\n        this.owner.units.splice(index, 1)\n      }\n      // Update from player selected unit\n      if (this.owner.selectedUnit === this) {\n        menu.updateInfo('hitPoints', this.hitPoints + '/' + this.totalHitPoints)\n      }\n    }\n    this.death()\n    canUpdateMinimap(this, player) && menu.updatePlayerMiniMapEvt(this.owner)\n  }\n\n  clear() {\n    const {\n      context: { map },\n    } = this\n    this.isDestroyed = true\n    // Remove from player units\n    let index = this.owner.corpses.indexOf(this)\n    if (index >= 0) {\n      this.owner.corpses.splice(index, 1)\n    }\n    // Remove from map corpses\n    const corpsesIndex = map.grid[this.i][this.j].corpses.indexOf(this)\n    if (index >= 0) {\n      map.grid[this.i][this.j].corpses.splice(corpsesIndex, 1)\n    }\n    map.removeChild(this)\n    this.destroy({ child: true, texture: true })\n  }\n\n  setTextures(sheet) {\n    setUnitTexture(sheet, this, ACCELERATOR)\n  }\n\n  updateInterfaceLoading() {\n    const {\n      context: { menu },\n    } = this\n    if (this.selected && this.owner.isPlayed && this.owner.selectedUnit === this) {\n      if (this.loading === 1) {\n        menu.updateInfo('loading', element => (element.innerHTML = this.getLoadingElement().innerHTML))\n      } else if (this.loading > 1) {\n        menu.updateInfo('loading-text', this.loading)\n      } else {\n        menu.updateInfo('loading', element => (element.innerHTML = ''))\n      }\n    }\n  }\n\n  getLoadingElement() {\n    const {\n      context: { menu },\n    } = this\n    const loadingDiv = document.createElement('div')\n    loadingDiv.className = 'unit-loading'\n    loadingDiv.id = 'loading'\n\n    if (this.loading) {\n      const iconImg = document.createElement('img')\n      iconImg.className = 'unit-loading-icon'\n      iconImg.src = menu.infoIcons[LOADING_FOOD_TYPES.includes(this.loadingType) ? 'food' : this.loadingType]\n      const textDiv = document.createElement('div')\n      textDiv.id = 'loading-text'\n      textDiv.textContent = this.loading\n      loadingDiv.appendChild(iconImg)\n      loadingDiv.appendChild(textDiv)\n    }\n    return loadingDiv\n  }\n\n  commonSendTo(target, work, action, keepPrevious) {\n    const {\n      context: { menu },\n    } = this\n    const workFromLoading = getWorkWithLoadingType(this.loadingType)\n    if (\n      work !== 'builder' &&\n      work !== workFromLoading &&\n      !(WORK_FOOD_TYPES.includes(work) && WORK_FOOD_TYPES.includes(workFromLoading))\n    ) {\n      this.loading = 0\n      this.loadingType = null\n      this.updateInterfaceLoading()\n    }\n    if (this.work !== work || this.action !== action) {\n      this.work = work\n      this.owner.isPlayed && this.owner.selectedUnit === this && menu.updateInfo('type', this.work)\n      if (this.allAssets && this.allAssets[work]) {\n        this.actionSheet = getActionSheet(work, action, Assets, this)\n        if (!this.loading) {\n          this.standingSheet = Assets.cache.get(this.allAssets[work]['standingSheet'])\n          this.walkingSheet = Assets.cache.get(this.allAssets[work]['walkingSheet'])\n          this.dyingSheet = Assets.cache.get(this.allAssets[work]['dyingSheet'])\n          this.corpseSheet = Assets.cache.get(this.allAssets[work]['corpseSheet'])\n        }\n      }\n    }\n    this.previousDest = keepPrevious ? this.previousDest : null\n    return this.sendTo(target, action)\n  }\n\n  sendToDelivery() {\n    const {\n      context: { map },\n    } = this\n    let buildingTypes = []\n    if (this.category === 'Boat') {\n      buildingTypes = ['Dock']\n    } else {\n      buildingTypes = ['TownCenter']\n      const buildings = {\n        Granary: this.owner.config.buildings.Granary,\n        StoragePit: this.owner.config.buildings.StoragePit,\n      }\n      for (const [key, value] of Object.entries(buildings)) {\n        if (value.accept && value.accept.includes(this.loadingType)) {\n          buildingTypes.push(key)\n          break\n        }\n      }\n    }\n\n    const targets = this.owner.buildings.filter(building =>\n      getActionCondition(this, building, 'delivery', { buildingTypes })\n    )\n    const target = getClosestInstance(this, targets)\n    if (this.dest) {\n      this.previousDest = this.dest\n    } else {\n      this.previousDest = map.grid[this.i][this.j]\n    }\n    this.sendTo(target, 'delivery')\n  }\n\n  sendToFish(target) {\n    return this.commonSendTo(target, 'fisher', 'fishing')\n  }\n\n  sendToAttack(target) {\n    return this.commonSendTo(target, 'attacker', 'attack', { resource: 'attack' })\n  }\n\n  sendToTakeMeat(target) {\n    return this.commonSendTo(target, 'hunter', 'takemeat', { actionSheet: 'harvestSheet' })\n  }\n\n  sendToHunt(target) {\n    return this.commonSendTo(target, 'hunter', 'hunt')\n  }\n\n  sendToBuilding(target) {\n    return this.commonSendTo(target, 'builder', 'build')\n  }\n\n  sendToFarm(target) {\n    return this.commonSendTo(target, 'farmer', 'farm')\n  }\n\n  sendToTree(target) {\n    return this.commonSendTo(target, 'woodcutter', 'chopwood')\n  }\n\n  sendToBerrybush(target) {\n    return this.commonSendTo(target, 'forager', 'forageberry')\n  }\n\n  sendToStone(target) {\n    return this.commonSendTo(target, 'stoneminer', 'minestone')\n  }\n\n  sendToGold(target) {\n    return this.commonSendTo(target, 'goldminer', 'minegold')\n  }\n\n  setDefaultInterface(element, data) {\n    const civDiv = document.createElement('div')\n    civDiv.id = 'civ'\n    civDiv.textContent = this.owner.civ\n    element.appendChild(civDiv)\n\n    const typeDiv = document.createElement('div')\n    typeDiv.id = 'type'\n    typeDiv.textContent = this.type === 'Villager' ? this.work || this.type : this.type\n    element.appendChild(typeDiv)\n\n    const iconImg = document.createElement('img')\n    iconImg.id = 'icon'\n    iconImg.src = getIconPath(data.icon)\n    element.appendChild(iconImg)\n\n    const hitPointsDiv = document.createElement('div')\n    hitPointsDiv.id = 'hitPoints'\n    hitPointsDiv.textContent = this.hitPoints + '/' + this.totalHitPoints\n    element.appendChild(hitPointsDiv)\n\n    const infosDiv = document.createElement('div')\n    infosDiv.id = 'infos'\n\n    const infos = [\n      ['meleeAttack', '007_50731'],\n      ['pierceAttack', '006_50731'],\n      ['meleeArmor', '008_50731'],\n      ['pierceArmor', '010_50731'],\n    ]\n\n    for (let i = 0; i < infos.length; i++) {\n      const info = infos[i]\n      if (data[info[0]]) {\n        const infoDiv = document.createElement('div')\n        infoDiv.id = 'info'\n\n        const attackImg = document.createElement('img')\n        attackImg.src = getIconPath(info[1])\n        const attackDiv = document.createElement('div')\n        attackDiv.id = info[0]\n        attackDiv.textContent = data[info[0]]\n        infoDiv.appendChild(attackImg)\n        infoDiv.appendChild(attackDiv)\n        infosDiv.appendChild(infoDiv)\n      }\n    }\n\n    element.appendChild(infosDiv)\n  }\n}\n","import { Assets } from 'pixi.js'\nimport {\n  canAfford,\n  drawInstanceBlinkingSelection,\n  payCost,\n  uuidv4,\n  getHexColor,\n  updateObject,\n  getActionCondition,\n  canUpdateMinimap,\n  isValidCondition,\n} from '../../lib'\nimport { sound } from '@pixi/sound'\nimport { Building } from '../building'\nimport { Unit } from '../unit'\nimport { POPULATION_MAX } from '../../constants'\n\nexport class Player {\n  constructor(options, context) {\n    this.family = 'player'\n    this.context = context\n\n    const { map } = context\n    this.label = uuidv4()\n    this.parent = map\n\n    this.wood = map.devMode ? 10000 : 200\n    this.food = map.devMode ? 10000 : 200\n    this.stone = map.devMode ? 10000 : 150\n    this.gold = map.devMode ? 10000 : 0\n    this.corpses = []\n    this.units = []\n    this.buildings = []\n    this.population = 0\n    this.technologies = []\n    this.cellViewed = 0\n    this.age = 0\n    Object.keys(options).forEach(prop => {\n      this[prop] = options[prop]\n    })\n\n    this.POPULATION_MAX = this.POPULATION_MAX || map.devMode ? POPULATION_MAX : 0\n\n    this.colorHex = getHexColor(this.color)\n    this.config = { ...Assets.cache.get('config') }\n    this.techs = { ...Assets.cache.get('technology') }\n    this.hasBuilt = this.hasBuilt || map.devMode ? Object.keys(this.config.buildings).map(key => key) : []\n    const cloneGrid = []\n    for (let i = 0; i <= map.size; i++) {\n      for (let j = 0; j <= map.size; j++) {\n        if (cloneGrid[i] == null) {\n          cloneGrid[i] = []\n        }\n        cloneGrid[i][j] = {\n          i,\n          j,\n          viewBy: this.views?.[i][j].viewBy ?? [],\n          onViewed: () => {\n            const {\n              context: { menu, map },\n            } = this\n            if (this.isPlayed && !map.revealEverything) {\n              menu.updateTerrainMiniMap(i, j)\n            }\n          },\n          viewed: this.views?.[i][j].viewed ?? ((this.isPlayed && this.type === 'Human' && map.revealTerrain) || false),\n        }\n      }\n    }\n    this.views = cloneGrid\n  }\n\n  spawnBuilding(options) {\n    const building = this.createBuilding(options)\n    if (this.isPlayed) {\n      let hasSentVillager = false\n      let hasSentOther = false\n\n      for (let i = 0; i < this.selectedUnits.length; i++) {\n        const unit = this.selectedUnits[i]\n        if (unit.type === 'Villager') {\n          if (getActionCondition(unit, building, 'build')) {\n            hasSentVillager = true\n            unit.sendToBuilding(building)\n          }\n        } else {\n          unit.sendTo(building)\n          hasSentOther = true\n        }\n      }\n      if (hasSentVillager) {\n        drawInstanceBlinkingSelection(building)\n      }\n      if (hasSentOther) {\n        const voice = randomItem(['5075', '5076', '5128', '5164'])\n        sound.play(voice)\n        return\n      } else if (hasSentVillager) {\n        const voice = this.config.units.Villager.sounds.build\n        sound.play(voice)\n        return\n      }\n    }\n\n    return building\n  }\n\n  onAgeChange() {\n    const {\n      context: { players, menu },\n    } = this\n    if (this.isPlayed) {\n      sound.play('5169')\n    }\n    for (let i = 0; i < this.buildings.length; i++) {\n      const building = this.buildings[i]\n      if (building.isBuilt && !building.isDead) {\n        building.finalTexture()\n      }\n    }\n    for (let i = 0; i < players.length; i++) {\n      const player = players[i]\n      if (player.type === 'Human') {\n        if (player.selectedUnit && player.selectedUnit.owner.label === this.label) {\n          menu.setBottombar(player.selectedUnit)\n        } else if (player.selectedBuilding && player.selectedBuilding.owner.label === this.label) {\n          menu.setBottombar(player.selectedBuilding)\n        } else if (player.selectedOther && player.selectedOther.owner.label === this.label) {\n          menu.setBottombar(player.selectedOther)\n        }\n      }\n    }\n  }\n\n  otherPlayers() {\n    const {\n      context: { players },\n    } = this\n    const others = [...players]\n    others.splice(players.indexOf(this), 1)\n    return others\n  }\n\n  updateConfig(operations) {\n    for (let i = 0; i < operations.length; i++) {\n      const operation = operations[i]\n      const types = Array.isArray(operation.type) ? operation.type : [operation.type]\n      for (let j = 0; j < types.length; j++) {\n        const type = types[j]\n        if (Object.keys(this.config.buildings).includes(type)) {\n          this.config.buildings[type] && updateObject(this.config.buildings[type], operation)\n        } else if (Object.keys(this.config.units).includes(type)) {\n          this.config.units[type] && updateObject(this.config.units[type], operation)\n        }\n      }\n    }\n  }\n\n  buyBuilding(i, j, type) {\n    const {\n      context: { menu, map },\n    } = this\n    const config = this.config.buildings[type]\n    if (\n      canAfford(this, config.cost) &&\n      (!config.conditions || config.conditions.every(condition => isValidCondition(condition, this)))\n    ) {\n      this.spawnBuilding({ i, j, type, isBuilt: map.devMode })\n      payCost(this, config.cost)\n      this.isPlayed && menu.updateTopbar()\n      return true\n    }\n    return false\n  }\n\n  createUnit(options) {\n    const { context } = this\n    let unit = context.map.addChild(new Unit({ ...options, owner: this }, context))\n    canUpdateMinimap(unit, context.player) && context.menu.updatePlayerMiniMapEvt(this)\n    return unit\n  }\n\n  createBuilding(options) {\n    const { context } = this\n    const building = context.map.addChild(new Building({ ...options, owner: this }, context))\n    this.buildings.push(building)\n    canUpdateMinimap(building, context.player) && context.menu.updatePlayerMiniMapEvt(this)\n    return building\n  }\n}\n","import { Player } from './player'\n\nimport {\n  getValuePercentage,\n  getPositionInGridAroundInstance,\n  getClosestInstance,\n  instancesDistance,\n  getCellsAroundPoint,\n  canAfford,\n} from '../../lib'\n\nconst styleLogInfo1 = 'background: #00ff00; color: #ffff00'\nconst styleLogInfo2 = 'background: #222; color: #ff0000'\n\nexport class AI extends Player {\n  constructor({ ...props }, context) {\n    super({ ...props, isPlayed: false, type: 'AI' }, context)\n    this.foundedTrees = []\n    this.foundedBerrybushs = []\n    this.foundedGolds = []\n    this.foundedStones = []\n    this.foundedEnemyBuildings = []\n    this.interval = setInterval(() => this.step(), 4000)\n    this.selectedUnits = []\n    this.selectedUnit = null\n    this.selectedBuilding = null\n    this.selectedOther = null\n    this.distSpread = 1\n    this.cellViewed = 0\n\n    this.nextAge = {\n      1: 'ToolAge',\n      2: 'BronzeAge',\n      3: 'IronAge',\n    }\n    this.maxVillagerPerAge = {\n      0: 16,\n      1: 24,\n      2: 40,\n      3: 50,\n    }\n    this.villageTargetPercentageByAge = {\n      0: {\n        wood: 40,\n        food: 60,\n        gold: 0,\n        stone: 0,\n      },\n      1: {\n        wood: 45,\n        food: 45,\n        gold: 10,\n        stone: 0,\n      },\n      2: {\n        wood: 35,\n        food: 35,\n        gold: 20,\n        stone: 10,\n      },\n      3: {\n        wood: 30,\n        food: 30,\n        gold: 25,\n        stone: 15,\n      },\n    }\n    this.maxBuildingByAge = {\n      0: {\n        StoragePit: 1,\n        Granary: 1,\n        Barracks: 1,\n        Market: 1,\n      },\n      1: {\n        StoragePit: 2,\n        Granary: 2,\n        Farm: 4,\n        Barracks: 1,\n        Market: 1,\n      },\n      2: {\n        StoragePit: 3,\n        Granary: 3,\n        Farm: 6,\n        Barracks: 2,\n        Market: 1,\n      },\n      3: {\n        StoragePit: 4,\n        Granary: 4,\n        Farm: 10,\n        Barracks: 2,\n        Market: 1,\n      },\n    }\n  }\n\n  hasNotReachBuildingLimit(buildingType, buildings) {\n    return (\n      !this.maxBuildingByAge[this.age][buildingType] || buildings.length < this.maxBuildingByAge[this.age][buildingType]\n    )\n  }\n\n  buildingsByTypes(types) {\n    return this.buildings.filter(b => types.includes(b.type))\n  }\n\n  getUnitExtraOptions(type) {\n    const me = this\n    return {\n      handleSetDest: target => {\n        const { map } = me.context\n        if (type === 'Villager' && target.family === 'resource') {\n          const buildingType = target.type === 'Berrybush' ? 'Granary' : 'StoragePit'\n          const buildings = me.buildingsByTypes([buildingType])\n          if (\n            canAfford(me, me.config.buildings[buildingType]) &&\n            me.hasNotReachBuildingLimit(buildingType, buildings)\n          ) {\n            const closestBuilding = getClosestInstance(target, [...buildings, ...me.buildingsByTypes(['TownCenter'])])\n            if (!closestBuilding || instancesDistance(closestBuilding, target) > 5) {\n              const pos = getPositionInGridAroundInstance(target, map.grid, [1, 5], 1)\n              if (pos && me.buyBuilding(pos.i, pos.j, buildingType)) {\n                console.log(`Building ${buildingType} at:`, pos)\n              }\n            }\n          }\n        }\n      },\n    }\n  }\n\n  step() {\n    const { map, paused } = this.context\n    if (paused) {\n      return\n    }\n\n    const maxVillagers = this.maxVillagerPerAge[this.age]\n    const maxVillagersOnConstruction = 4\n    const maxClubmans = 10\n    const howManyVillagerBeforeBuyingABarracks = 10\n    const howManySoldiersBeforeAttack = 5\n\n    console.log('%c ----Step started', styleLogInfo1)\n\n    console.log(\n      `%c Age: ${this.age}, Wood: ${this.wood}, Food: ${this.food}, Stone: ${this.stone}, Gold: ${this.gold}, Population: ${this.population}/${this.POPULATION_MAX}`,\n      styleLogInfo2\n    )\n\n    const filterUnitsByType = (type, condition = unit => unit.hitPoints > 0) =>\n      this.units.filter(unit => unit.type === type && condition(unit))\n\n    const villagers = filterUnitsByType('Villager')\n    const clubmans = filterUnitsByType('Clubman')\n\n    console.log(\n      `%c Villagers: ${villagers.length}/${maxVillagers}, Clubmans: ${clubmans.length}/${maxClubmans}`,\n      styleLogInfo2\n    )\n\n    const towncenters = this.buildingsByTypes(['TownCenter'])\n    const storagepits = this.buildingsByTypes(['StoragePit'])\n    const houses = this.buildingsByTypes(['House'])\n    const granarys = this.buildingsByTypes(['Granary'])\n    const barracks = this.buildingsByTypes(['Barracks'])\n    const markets = this.buildingsByTypes(['Market'])\n    const farms = this.buildingsByTypes(['Farm'])\n    const emptyFarms = farms.filter(({ isUsedBy }) => !isUsedBy)\n\n    console.log(\n      `%c Towncenters: ${towncenters.length}, Houses: ${houses.length}, StoragePits: ${storagepits.length}, Granaries: ${granarys.length}, Barracks: ${barracks.length}, Markets: ${markets}`,\n      styleLogInfo2\n    )\n\n    const notBuiltBuildings = this.buildings.filter(\n      b => !b.isBuilt || (b.hitPoints > 0 && b.hitPoints < b.totalHitPoints)\n    )\n    const notBuiltHouses = notBuiltBuildings.filter(b => b.type === 'House')\n\n    const villagersByWork = works => villagers.filter(v => !v.inactif && works.includes(v.work))\n    const inactifVillagers = villagers.filter(v => v.inactif && v.action !== 'attack')\n\n    const villagersOnWood = villagersByWork(['woodcutter'])\n    const villagersOnFood = villagersByWork(['forager', 'farmer', 'hunter'])\n    const villagersOnGold = villagersByWork(['goldminer'])\n    const villagersOnStone = villagersByWork(['stoneminer'])\n    const builderVillagers = villagersByWork(['builder'])\n\n    const maxVillagersOnWood = getValuePercentage(villagers.length, this.villageTargetPercentageByAge[this.age]['wood'])\n    const maxVillagersOnFood = getValuePercentage(villagers.length, this.villageTargetPercentageByAge[this.age]['food'])\n    const maxVillagersOnGold = getValuePercentage(villagers.length, this.villageTargetPercentageByAge[this.age]['gold'])\n    const maxVillagersOnStone = getValuePercentage(\n      villagers.length,\n      this.villageTargetPercentageByAge[this.age]['stone']\n    )\n\n    console.log(\n      `%c Villagers on Wood: ${villagersOnWood.length}/${maxVillagersOnWood}, Villagers on Food: ${villagersOnFood.length}/${maxVillagersOnFood}, Villagers on Stone: ${villagersOnStone.length}/${maxVillagersOnStone}, Villagers on Gold: ${villagersOnGold.length}/${maxVillagersOnGold}, Builder Villagers: ${builderVillagers.length}`,\n      styleLogInfo2\n    )\n\n    const inactifClubmans = clubmans.filter(c => c.inactif && c.action !== 'attack' && c.assault)\n    const waitingClubmans = clubmans.filter(c => c.inactif && c.action !== 'attack' && !c.assault)\n\n    console.log(\n      `%c Inactif Clubmans: ${inactifClubmans.length}, Waiting Clubmans: ${waitingClubmans.length}`,\n      styleLogInfo2\n    )\n\n    // Player losing condition\n    if (!this.buildings.length && !this.units.length) {\n      console.log('Player has no buildings and units. Dying...')\n      this.die()\n      return\n    }\n\n    // Cell Viewing Logic\n    if (this.cellViewed <= map.totalCells) {\n      getCellsAroundPoint(this.i, this.j, this.views, this.distSpread, cell => {\n        const globalCell = map.grid[cell.i][cell.j]\n        cell.has = globalCell.has\n        if (globalCell.has) {\n          const { has } = globalCell\n          if (has.quantity > 0) {\n            if (has.type === 'Tree' && !this.foundedTrees.includes(has)) {\n              this.foundedTrees.push(has)\n            }\n            if (has.type === 'Berrybush' && !this.foundedBerrybushs.includes(has)) {\n              this.foundedBerrybushs.push(has)\n            }\n            if (has.type === 'Stone' && !this.foundedStones.includes(has)) {\n              this.foundedStones.push(has)\n            }\n            if (has.type === 'Gold' && !this.foundedGolds.includes(has)) {\n              this.foundedGolds.push(has)\n            }\n          }\n          if (\n            has.family === 'building' &&\n            has.owner.label !== this.label &&\n            !this.foundedEnemyBuildings.includes(has)\n          ) {\n            this.foundedEnemyBuildings.push(has)\n          }\n        }\n        if (!cell.viewed) {\n          this.cellViewed++\n          cell.viewed = true\n        }\n      })\n      this.distSpread++\n    }\n\n    // Utility function to assign villagers to resources\n    const assignVillagersToResource = (villagers, resourceList, maxVillagers, actionCallback) => {\n      if (resourceList.length) {\n        if (villagers.length < maxVillagers) {\n          for (let i = 0; i < Math.min(maxVillagers, inactifVillagers.length); i++) {\n            const resource = getClosestInstance(inactifVillagers[i], resourceList)\n            actionCallback(inactifVillagers[i], resource)\n          }\n        } else {\n          for (let i = 0; i < villagers.length - maxVillagers; i++) {\n            villagers[i].stop()\n          }\n        }\n      } else {\n        for (let i = 0; i < villagers.length; i++) {\n          villagers[i].stop()\n        }\n      }\n    }\n\n    // Food Gathering Logic\n    assignVillagersToResource(villagersOnFood, this.foundedBerrybushs, maxVillagersOnFood, (villager, bush) => {\n      villager.sendToBerrybush(bush)\n    })\n\n    // Wood Gathering Logic\n    assignVillagersToResource(villagersOnWood, this.foundedTrees, maxVillagersOnWood, (villager, tree) => {\n      villager.sendToTree(tree)\n    })\n\n    // Stone Gathering Logic\n    assignVillagersToResource(villagersOnStone, this.foundedStones, maxVillagersOnStone, (villager, stone) => {\n      villager.sendToStone(stone)\n    })\n\n    // Gold Gathering Logic\n    assignVillagersToResource(villagersOnGold, this.foundedGolds, maxVillagersOnGold, (villager, gold) => {\n      villager.sendToGold(gold)\n    })\n\n    for (let i = 0; i < emptyFarms.length; i++) {\n      const villager = getClosestInstance(emptyFarms[i], inactifVillagers)\n      villager && villager.sendToFarm(emptyFarms[i])\n    }\n\n    // Construction Logic\n    if (notBuiltBuildings.length) {\n      for (const building of notBuiltBuildings) {\n        if (builderVillagers.length >= maxVillagersOnConstruction) break\n        const availableVillagers = villagers.filter(v => v.work !== 'builder' || v.inactif)\n        const villager = getClosestInstance(building, availableVillagers)\n        if (villager) {\n          console.log('Villager sent to build:', building)\n          villager.sendToBuilding(building)\n        }\n      }\n    }\n\n    // Attack Logic\n    const sendToAttack = (clubmans, target) => {\n      console.log('Sending clubmans to attack:', target)\n      clubmans.forEach(clubman => clubman.sendTo(target, 'attack'))\n    }\n\n    if (waitingClubmans.length >= howManySoldiersBeforeAttack) {\n      const target =\n        this.foundedEnemyBuildings[0] ||\n        map.grid[randomRange(0, map.grid.length - 1)][randomRange(0, map.grid[0].length - 1)]\n      console.log('Clubman attack target:', target)\n      sendToAttack(waitingClubmans, target)\n    }\n\n    if (inactifClubmans.length && this.foundedEnemyBuildings.length) {\n      console.log('Inactif clubmans attacking founded enemy building...')\n      sendToAttack(inactifClubmans, this.foundedEnemyBuildings[0])\n    }\n\n    // Unit Purchasing Logic\n    const buyUnits = (currentCount, maxCount, buildingList, unitType, extra) => {\n      // Calculate how many more units can be bought\n      const unitsNeeded = maxCount - currentCount\n      let unitsBought = 0\n\n      if (unitsNeeded <= 0) {\n        return\n      }\n      // Iterate over the buildings until we reach the needed count\n      for (const building of buildingList) {\n        if (unitsBought >= unitsNeeded) break // Stop if we've bought enough units\n\n        if (building && building.buyUnit(unitType, false, false, extra)) {\n          unitsBought++\n          console.log(`Buying ${unitType} from ${building.type}, Total Bought: ${unitsBought}`)\n        }\n      }\n    }\n\n    buyUnits(villagers.length, maxVillagers, towncenters, 'Villager')\n    buyUnits(clubmans.length, maxClubmans, barracks, 'Clubman')\n\n    // Building Purchasing Logic\n    const buyBuildingIfNeeded = (condition, buildingType, positionCallback) => {\n      const list = {\n        House: houses,\n        Farm: farms,\n        Barracks: barracks,\n        Granary: granarys,\n        StoragePit: storagepits,\n        Market: markets,\n      }\n      const building = this.config.buildings[buildingType]\n      if (\n        condition &&\n        canAfford(this, building.cost) &&\n        this.hasNotReachBuildingLimit(buildingType, list[buildingType])\n      ) {\n        const pos = positionCallback()\n        if (pos && this.buyBuilding(pos.i, pos.j, buildingType)) {\n          console.log(`Buying building: ${buildingType} at position:`, pos)\n        }\n      }\n    }\n\n    // Buy House\n    buyBuildingIfNeeded(this.population + 2 > this.POPULATION_MAX && !notBuiltHouses.length, 'House', () =>\n      getPositionInGridAroundInstance(towncenters[0], map.grid, [6, 10], 0)\n    )\n\n    // Buy Barracks\n    buyBuildingIfNeeded(villagers.length > howManyVillagerBeforeBuyingABarracks, 'Barracks', () =>\n      getPositionInGridAroundInstance(towncenters[0], map.grid, [6, 20], 1, false, cell =>\n        this.otherPlayers().every(\n          player => instancesDistance(cell, player) <= instancesDistance(towncenters[0], player)\n        )\n      )\n    )\n\n    // Buy Markets\n    buyBuildingIfNeeded(markets.length === 0, 'Market', () =>\n      getPositionInGridAroundInstance(towncenters[0], map.grid, [6, 20], 1, false, cell =>\n        this.otherPlayers().every(\n          player => instancesDistance(cell, player) <= instancesDistance(towncenters[0], player)\n        )\n      )\n    )\n\n    // Buy Farm\n    buyBuildingIfNeeded(true, 'Farm', () => {\n      const buildings = [...granarys, ...towncenters] // Combine both granarys and towncenters\n\n      for (const building of buildings) {\n        // Try to find a valid position around each building\n        const position = getPositionInGridAroundInstance(\n          building,\n          map.grid,\n          [2, 10],\n          2,\n          false,\n          cell =>\n            this.otherPlayers().every(player => instancesDistance(cell, player) <= instancesDistance(building, player)),\n          false\n        )\n\n        if (position) {\n          return position // If a valid position is found, return and break the loop\n        }\n      }\n\n      return null // If no valid position is found after looping through all buildings\n    })\n\n    // Unit Purchasing Logic\n    const buyTechnology = (buildingList, technologyType) => {\n      // Iterate over the buildings until we reach the needed count\n      for (const building of buildingList) {\n        if (building && building.buyTechnology(technologyType)) {\n          console.log(`Buying ${technologyType} from ${building.type}`)\n        }\n      }\n    }\n    if (this.nextAge[this.age + 1]) {\n      buyTechnology(towncenters, this.nextAge[this.age + 1])\n    }\n\n    console.log('%c ----Step ended', styleLogInfo1)\n  }\n\n  die() {\n    const {\n      context: { players },\n    } = this\n    clearInterval(this.interval)\n    players.splice(players.indexOf(this), 1)\n  }\n}\n","import { sound } from '@pixi/sound'\nimport { Container, Assets, AnimatedSprite, Graphics } from 'pixi.js'\nimport { ACCELERATOR, STEP_TIME, CORPSE_TIME, COLOR_WHITE } from '../constants'\nimport {\n  getInstanceZIndex,\n  randomRange,\n  renderCellOnInstanceSight,\n  getIconPath,\n  getInstancePath,\n  instancesDistance,\n  moveTowardPoint,\n  clearCellOnInstanceSight,\n  getInstanceClosestFreeCellPath,\n  instanceContactInstance,\n  getInstanceDegree,\n  drawInstanceBlinkingSelection,\n  findInstancesInSight,\n  getClosestInstanceWithPath,\n  getCellsAroundPoint,\n  instanceIsInPlayerSight,\n  getActionCondition,\n  pointsDistance,\n  getHitPointsWithDamage,\n  uuidv4,\n  CustomTimeout,\n  setUnitTexture,\n} from '../lib'\n\nexport class Animal extends Container {\n  constructor(options, context) {\n    super()\n\n    this.context = context\n\n    const {\n      context: { map },\n    } = this\n    this.label = uuidv4()\n    this.family = 'animal'\n\n    this.dest = null\n    this.realDest = null\n    this.previousDest = null\n    this.path = []\n    this.selected = false\n    this.degree = randomRange(1, 360)\n    this.action = null\n    this.currentFrame = 0\n    this.currentSheet = 'standingSheet'\n    this.inactif = true\n    this.isDead = false\n    this.isDestroyed = false\n    this.timeout\n    this.x = null\n    this.y = null\n    this.z = null\n\n    Object.keys(options).forEach(prop => {\n      this[prop] = options[prop]\n    })\n    Object.keys(this.owner.config.animals[this.type]).forEach(prop => {\n      this[prop] = this.owner.config.animals[this.type][prop]\n    })\n\n    this.size = 1\n    this.visible = false\n    this.x = this.x ?? map.grid[this.i][this.j].x\n    this.y = this.y ?? map.grid[this.i][this.j].y\n    this.z = this.z ?? map.grid[this.i][this.j].z\n    this.zIndex = getInstanceZIndex(this)\n\n    this.currentCell = map.grid[this.i][this.j]\n    this.currentCell.has = this\n    this.currentCell.solid = true\n\n    this.hitPoints = this.hitPoints ?? this.totalHitPoints\n    this.quantity = this.quantity ?? this.totalQuantity\n\n    for (const [key, value] of Object.entries(this.assets)) {\n      this[key] = Assets.cache.get(value)\n    }\n\n    this.interface = {\n      info: element => {\n        const data = this.owner.config.animals[this.type]\n        this.setDefaultInterface(element, data)\n      },\n    }\n\n    this.allowMove = false\n    this.eventMode = 'static'\n    this.sprite = new AnimatedSprite(this.standingSheet.animations['south'])\n    this.sprite.label = 'sprite'\n    this.sprite.allowMove = false\n    this.sprite.eventMode = 'auto'\n    this.sprite.allowClick = false\n    this.sprite.roundPixels = true\n    this.sprite.loop = this.loop ?? true\n    if (this.isDead) {\n      this.currentSheet === 'corpseSheet' ? this.decompose() : this.death()\n    } else {\n      this.setTextures(this.currentSheet)\n    }\n    this.sprite.currentFrame = this.currentFrame\n\n    this.on('pointerup', evt => {\n      const {\n        context: { controls, player, menu },\n      } = this\n      if (controls.mouseBuilding || controls.mouseRectangle || !controls.isMouseInApp(evt)) {\n        return\n      }\n      controls.mouse.prevent = true\n      let drawDestinationRectangle = false\n      let hasSentVillager = false\n      let hasSentOther = false\n\n      if (player.selectedUnits.length) {\n        for (let i = 0; i < player.selectedUnits.length; i++) {\n          const playerUnit = player.selectedUnits[i]\n          if (playerUnit.type === 'Villager') {\n            if (getActionCondition(playerUnit, this, 'hunt')) {\n              playerUnit.sendToHunt(this)\n              hasSentVillager = true\n              drawDestinationRectangle = true\n            } else if (getActionCondition(playerUnit, this, 'takemeat')) {\n              playerUnit.sendToTakeMeat(this)\n              hasSentVillager = true\n              drawDestinationRectangle = true\n            }\n          } else if (getActionCondition(playerUnit, this, 'attack')) {\n            playerUnit.sendTo(this, 'attack')\n            drawDestinationRectangle = true\n            hasSentOther = true\n          }\n        }\n      } else if (player.selectedBuilding && player.selectedBuilding.range) {\n        if (\n          getActionCondition(player.selectedBuilding, this, 'attack') &&\n          instancesDistance(player.selectedBuilding, this) <= player.selectedBuilding.range\n        ) {\n          player.selectedBuilding.attackAction(this)\n          drawDestinationRectangle = true\n        }\n      } else if ((instanceIsInPlayerSight(this, player) || map.revealEverything) && this.quantity > 0) {\n        player.unselectAll()\n        this.select()\n        menu.setBottombar(this)\n        player.selectedOther = this\n      }\n\n      if (hasSentOther) {\n        const voice = randomItem(['5075', '5076', '5128', '5164'])\n        sound.play(voice)\n      } else if (hasSentVillager) {\n        const voice = Assets.cache.get('config').units.Villager.sounds.hunt\n        sound.play(voice)\n      }\n      if (drawDestinationRectangle) {\n        drawInstanceBlinkingSelection(this)\n      }\n    })\n\n    this.interval = null\n    this.sprite.updateAnchor = true\n    this.addChild(this.sprite)\n\n    renderCellOnInstanceSight(this)\n  }\n\n  startInterval(callback, time, immediate = true) {\n    const finalCb = () => {\n      const { paused } = this.context\n      if (paused) {\n        return\n      }\n      callback()\n    }\n    this.stopInterval()\n    immediate && finalCb()\n    this.interval = setInterval(finalCb, time)\n  }\n\n  stopInterval() {\n    if (this.interval) {\n      clearInterval(this.interval)\n      this.interval = null\n    }\n  }\n\n  select() {\n    if (this.selected) {\n      return\n    }\n\n    this.selected = true\n    const selection = new Graphics()\n    selection.label = 'selection'\n    selection.zIndex = 3\n    const path = [-32 * 0.5, 0, 0, -16 * 0.5, 32 * 0.5, 0, 0, 16 * 0.5]\n    selection.poly(path)\n    selection.stroke(COLOR_WHITE)\n    this.addChildAt(selection, 0)\n  }\n\n  unselect() {\n    if (!this.selected) {\n      return\n    }\n\n    this.selected = false\n    const selection = this.getChildByLabel('selection')\n    if (selection) {\n      this.removeChild(selection)\n    }\n  }\n\n  hasPath() {\n    return this.path.length > 0\n  }\n\n  setDest(dest) {\n    if (!dest) {\n      this.stop()\n      return\n    }\n    this.dest = dest\n    this.realDest = {\n      i: dest.i,\n      j: dest.j,\n    }\n  }\n\n  pause() {\n    this.timeout?.pause()\n    this.sprite?.stop()\n  }\n\n  resume() {\n    this.timeout?.resume()\n    this.sprite?.play()\n  }\n\n  setPath(path) {\n    if (!path.length) {\n      this.stop()\n      return\n    }\n\n    this.setTextures('walkingSheet')\n    this.inactif = false\n    this.path = path\n    this.startInterval(() => this.step(), STEP_TIME, true)\n  }\n\n  isAnimalAtDest(action, dest) {\n    if (!action) {\n      return false\n    }\n    if (!dest) {\n      this.affectNewDest()\n      return false\n    }\n    return instanceContactInstance(this, dest)\n  }\n\n  sendTo(dest, action) {\n    const {\n      context: { map },\n    } = this\n    this.stopInterval()\n    let path = []\n    // No instance we cancel the destination\n    if (!dest) {\n      this.stop()\n      return\n    }\n    // Animal is already beside our target\n    if (\n      this.isAnimalAtDest(action, dest) &&\n      (!map.grid[this.i][this.j].solid ||\n        (map.grid[this.i][this.j].solid && map.grid[this.i][this.j].has?.label === this.label))\n    ) {\n      this.setDest(dest)\n      this.action = action\n      this.degree = getInstanceDegree(this, dest.x, dest.y)\n      this.getAction(action)\n      return\n    }\n    // Set animal path\n    if (map.grid[dest.i] && map.grid[dest.i][dest.j] && map.grid[dest.i][dest.j].solid) {\n      path = getInstanceClosestFreeCellPath(this, dest, map)\n    } else {\n      path = getInstancePath(this, dest.i, dest.j, map)\n    }\n    // Animal found a path, set the action and play walking animation\n    if (path.length) {\n      this.setDest(dest)\n      this.action = action\n      this.setPath(path)\n    } else {\n      this.stop()\n    }\n  }\n\n  getActionCondition(target) {\n    return getActionCondition(this, target, this.action)\n  }\n\n  getAction(name) {\n    const {\n      context: { menu, player },\n    } = this\n    switch (name) {\n      case 'attack':\n        if (!this.getActionCondition(this.dest)) {\n          this.affectNewDest()\n          return\n        }\n        this.setTextures('actionSheet')\n        this.startInterval(\n          () => {\n            if (!this.getActionCondition(this.dest)) {\n              if (this.dest && this.dest.hitPoints <= 0) {\n                this.dest.die()\n              }\n              this.affectNewDest()\n              return\n            }\n            if (this.destHasMoved()) {\n              this.degree = getInstanceDegree(this, this.dest.x, this.dest.y)\n              this.setTextures('actionSheet')\n            }\n            if (!instanceContactInstance(this, this.dest)) {\n              this.sendTo(this.dest, 'attack')\n              return\n            }\n\n            this.sounds && this.sounds.hit && this.visible && sound.play(this.sounds.hit)\n\n            if (this.dest.hitPoints > 0) {\n              this.dest.hitPoints = getHitPointsWithDamage(this, this.dest)\n              if (\n                this.dest.selected &&\n                player &&\n                (player.selectedUnit === this.dest || player.selectedBuilding === this.dest)\n              ) {\n                menu.updateInfo('hitPoints', this.dest.hitPoints + '/' + this.dest.totalHitPoints)\n              }\n              this.dest.isAttacked(this)\n            }\n\n            if (this.dest.hitPoints <= 0) {\n              this.dest.die()\n              this.affectNewDest()\n            }\n          },\n          this.rateOfFire * 1000,\n          false\n        )\n        break\n      default:\n        this.stop()\n    }\n  }\n\n  affectNewDest() {\n    this.stopInterval()\n    const targets = findInstancesInSight(this, instance => this.getActionCondition(instance))\n    if (targets.length) {\n      const target = getClosestInstanceWithPath(this, targets)\n      if (target) {\n        if (instanceContactInstance(this, target)) {\n          this.degree = getInstanceDegree(this, target.x, target.y)\n          this.getAction(this.action)\n          return\n        }\n        this.setDest(target.instance)\n        this.setPath(target.path)\n        return\n      }\n    }\n    this.stop()\n    return\n  }\n\n  destHasMoved() {\n    return (\n      (this.dest.i !== this.realDest.i || this.dest.j !== this.realDest.j) &&\n      instancesDistance(this, this.dest) <= this.sight\n    )\n  }\n\n  moveToPath() {\n    const {\n      context: { map },\n    } = this\n    const next = this.path[this.path.length - 1]\n    const nextCell = map.grid[next.i][next.j]\n    if (!this.dest || this.dest.isDestroyed) {\n      this.affectNewDest()\n      return\n    }\n    // Collision with another walking unit, we block the mouvement\n    if (\n      nextCell.has &&\n      nextCell.has.family === 'animal' &&\n      nextCell.has.label !== this.label &&\n      nextCell.has.hasPath() &&\n      instancesDistance(this, nextCell.has) <= 1 &&\n      nextCell.has.sprite.playing\n    ) {\n      this.sprite.stop()\n      return\n    }\n    if (nextCell.solid && this.dest) {\n      this.sendTo(this.dest, this.action)\n      return\n    }\n\n    if (!this.sprite.playing) {\n      this.sprite.play()\n    }\n\n    this.zIndex = getInstanceZIndex(this)\n    if (instancesDistance(this, nextCell, false) < this.speed) {\n      clearCellOnInstanceSight(this)\n\n      this.z = nextCell.z\n      this.i = nextCell.i\n      this.j = nextCell.j\n\n      if (this.currentCell.has === this) {\n        this.currentCell.has = null\n        this.currentCell.solid = false\n      }\n      this.currentCell = map.grid[this.i][this.j]\n      if (this.currentCell.has === null) {\n        this.currentCell.has = this\n        this.currentCell.solid = true\n      }\n\n      renderCellOnInstanceSight(this)\n      this.path.pop()\n\n      // Destination moved\n      if (this.destHasMoved()) {\n        this.sendTo(this.dest, this.action)\n        return\n      }\n      if (this.isAnimalAtDest(this.action, this.dest)) {\n        this.path = []\n        this.stopInterval()\n        this.degree = getInstanceDegree(this, this.dest.x, this.dest.y)\n        this.getAction(this.action)\n        return\n      }\n\n      if (!this.path.length) {\n        this.stop()\n      }\n    } else {\n      // Move to next\n      const oldDeg = this.degree\n      moveTowardPoint(this, nextCell.x, nextCell.y, this.speed)\n      if (degreeToDirection(oldDeg) !== degreeToDirection(this.degree)) {\n        // Change animation according to degree\n        this.setTextures('walkingSheet')\n      }\n    }\n  }\n\n  getReaction(instance) {\n    if (this.strategy === 'runaway') {\n      this.runaway(instance)\n    } else {\n      this.sendTo(instance, 'attack')\n    }\n  }\n\n  detect(instance) {\n    if (this.strategy && instance && instance.family === 'unit' && !this.isDead && !this.path.length && !this.dest) {\n      this.getReaction(instance)\n    }\n  }\n\n  isAttacked(instance) {\n    if (!instance || this.dest || this.isDead) {\n      return\n    }\n    this.getReaction(instance)\n  }\n\n  stop() {\n    if (this.currentCell.has.label !== this.label && this.currentCell.solid) {\n      this.sendTo(this.currentCell)\n      return\n    }\n    this.inactif = true\n    this.action = null\n    this.dest = null\n    this.realDest = null\n    this.currentCell.has = this\n    this.currentCell.solid = true\n    this.path = []\n    this.stopInterval()\n    this.setTextures('standingSheet')\n  }\n\n  step() {\n    if (this.hitPoints <= 0) {\n      this.die()\n    } else if (this.hasPath()) {\n      this.moveToPath()\n    }\n  }\n\n  runaway(instance) {\n    const {\n      context: { map },\n    } = this\n    let dest = null\n    getCellsAroundPoint(this.i, this.j, map.grid, this.sight, cell => {\n      if (\n        !cell.solid &&\n        (!dest ||\n          pointsDistance(cell.i, cell.j, instance.i, instance.j) >\n            pointsDistance(dest.i, dest.j, instance.i, instance.j))\n      ) {\n        dest = this.owner.views[cell.i][cell.j]\n        return\n      }\n    })\n    if (dest) {\n      this.sendTo(dest)\n    } else {\n      this.stop()\n    }\n  }\n\n  decompose() {\n    const {\n      context: { player, menu },\n    } = this\n    this.setTextures('corpseSheet')\n    this.sprite.animationSpeed = 0\n    this.startInterval(() => {\n      if (this.quantity > 0) {\n        this.quantity--\n        if (this.selected && player.selectedOther === this) {\n          menu.updateInfo('quantity-text', this.quantity)\n        }\n      }\n      this.updateTexture()\n    }, 5000)\n  }\n\n  death() {\n    this.setTextures('dyingSheet')\n    this.zIndex--\n    this.sprite.loop = false\n    this.sprite.onComplete = () => {\n      this.decompose()\n    }\n  }\n\n  die() {\n    if (this.isDead) {\n      return\n    }\n    if (this.sounds && this.visible) {\n      this.sounds.die && sound.play(this.sounds.die)\n      this.sounds.fall && sound.play(this.sounds.fall)\n    }\n    clearCellOnInstanceSight(this)\n\n    this.owner.population--\n    this.stopInterval()\n    this.isDead = true\n    this.zIndex--\n    this.path = []\n    this.action = null\n    this.death()\n  }\n\n  updateTexture() {\n    const {\n      context: { player, map },\n    } = this\n    const percentage = getPercentage(this.quantity, this.totalQuantity)\n\n    if (percentage > 25 && percentage < 50) {\n      this.sprite.currentFrame = 1\n    } else if (percentage > 0 && percentage <= 25) {\n      this.sprite.currentFrame = 2\n    } else if (percentage <= 0) {\n      this.stopInterval()\n      if (map.grid[this.i][this.j].has === this) {\n        map.grid[this.i][this.j].has = null\n        map.grid[this.i][this.j].corpses.push(this)\n        map.grid[this.i][this.j].solid = false\n      }\n      if (this.selected && player.selectedOther === this) {\n        player.unselectAll()\n      }\n      this.sprite.currentFrame = 3\n      this.timeout = new CustomTimeout(() => {\n        this.clear()\n      }, CORPSE_TIME * 1000)\n    }\n  }\n\n  clear() {\n    const {\n      context: { map },\n    } = this\n    this.isDestroyed = true\n    // Remove from map corpses\n    const corpsesIndex = map.grid[this.i][this.j].corpses.indexOf(this)\n    corpsesIndex >= 0 && map.grid[this.i][this.j].corpses.splice(corpsesIndex, 1)\n    map.removeChild(this)\n    this.destroy({ child: true, texture: true })\n  }\n\n  setTextures(sheet) {\n    setUnitTexture(sheet, this, ACCELERATOR)\n  }\n\n  setDefaultInterface(element, data) {\n    const {\n      context: { menu },\n    } = this\n\n    const civDiv = document.createElement('div')\n    civDiv.id = 'civ'\n    civDiv.textContent = ''\n    element.appendChild(civDiv)\n\n    const typeDiv = document.createElement('div')\n    typeDiv.id = 'type'\n    typeDiv.textContent = this.type\n    element.appendChild(typeDiv)\n\n    const iconImg = document.createElement('img')\n    iconImg.id = 'icon'\n    iconImg.src = getIconPath(data.icon)\n    element.appendChild(iconImg)\n\n    const hitPointsDiv = document.createElement('div')\n    hitPointsDiv.id = 'hitPoints'\n    hitPointsDiv.textContent = this.hitPoints + '/' + this.totalHitPoints\n    element.appendChild(hitPointsDiv)\n\n    const quantityDiv = document.createElement('div')\n    quantityDiv.id = 'quantity'\n    quantityDiv.className = 'resource-quantity'\n    const smallIconImg = document.createElement('img')\n    smallIconImg.src = menu.icons['food']\n    smallIconImg.className = 'resource-quantity-icon'\n    const textDiv = document.createElement('div')\n    textDiv.id = 'quantity-text'\n    textDiv.textContent = this.quantity\n    quantityDiv.appendChild(smallIconImg)\n    quantityDiv.appendChild(textDiv)\n    element.appendChild(quantityDiv)\n  }\n}\n","import { Animal } from '../animal'\nimport { Player } from './player'\n\nexport class Gaia extends Player {\n  constructor(context) {\n    super({ i: 0, j: 0, type: 'Gaia' }, context)\n  }\n  createAnimal(options) {\n    const { context } = this\n    let unit = context.map.addChild(new Animal({ ...options, owner: this }, context))\n    this.units.push(unit)\n    return unit\n  }\n}\n","import { Player } from './player'\n\nexport class Human extends Player {\n  constructor({ ...props }, context) {\n    super({ ...props, type: 'Human' }, context)\n    this.selectedUnits = []\n    this.selectedUnit = null\n    this.selectedBuilding = null\n    this.selectedOther = null\n  }\n\n  unselectUnit(unit) {\n    const {\n      context: { menu },\n    } = this\n    const index = this.selectedUnits.indexOf(unit)\n    this.selectedUnits.splice(index, 1)\n\n    if (!this.selectedUnits.length) {\n      this.selectedUnit = null\n      this.selectedUnits = []\n      menu.setBottombar()\n      return\n    }\n\n    let nextVillager\n    if (this.selectedUnit === unit) {\n      for (let i = 0; i < this.selectedUnits.length; i++) {\n        if (this.selectedUnits[i].type === 'Villager') {\n          nextVillager = this.selectedUnits[i].type\n          break\n        }\n      }\n    }\n    this.selectedUnit = nextVillager || this.selectedUnits[0]\n    menu.setBottombar(this.selectedUnit)\n  }\n\n  unselectAllUnits() {\n    const {\n      context: { menu },\n    } = this\n    for (let i = 0; i < this.selectedUnits.length; i++) {\n      this.selectedUnits[i].unselect()\n    }\n    this.selectedUnit = null\n    this.selectedUnits = []\n    menu.setBottombar()\n  }\n\n  unselectAll() {\n    if (this.selectedBuilding) {\n      this.selectedBuilding.unselect()\n      this.selectedBuilding = null\n    }\n    if (this.selectedOther) {\n      this.selectedOther.unselect()\n      this.selectedOther = null\n    }\n    this.unselectAllUnits()\n  }\n}\n","export * from './ai'\nexport * from './gaia'\nexport * from './human'\n","import { Container, Assets, Sprite } from 'pixi.js'\nimport {\n  randomRange,\n  formatNumber,\n  cartesianToIsometric,\n  getCellsAroundPoint,\n  instanceIsInPlayerSight,\n  instancesDistance,\n  getInstanceZIndex,\n  getBuildingAsset,\n  getTexture,\n  changeSpriteColorDirectly,\n} from '../lib'\nimport { CELL_DEPTH, COLOR_FOG, COLOR_WHITE } from '../constants'\n\nexport class Cell extends Container {\n  constructor(options, context) {\n    super()\n\n    this.context = context\n\n    const {\n      context: { map },\n    } = this\n    this.family = 'cell'\n    this.map = map\n\n    this.solid = false\n    this.visible = false\n    this.zIndex = 0\n    this.inclined = false\n    this.border = false\n    this.waterBorder = false\n    this.z = 0\n    this.viewed = false\n    this.viewBy = []\n    this.has = null\n    this.corpses = []\n    this.fogSprites = []\n\n    Object.keys(options).forEach(prop => {\n      this[prop] = options[prop]\n    })\n    Object.keys(Assets.cache.get('config').cells[this.type]).forEach(prop => {\n      this[prop] = Assets.cache.get('config').cells[this.type][prop]\n    })\n    const pos = cartesianToIsometric(this.i, this.j)\n\n    this.x = pos[0]\n    this.y = pos[1] - this.z * CELL_DEPTH\n\n    const textureName = randomItem(this.assets)\n    const resourceName = textureName.split('_')[1]\n    const textureFile = textureName + '.png'\n    const spritesheet = Assets.cache.get(resourceName)\n    const texture = spritesheet.textures[textureFile]\n    this.sprite = Sprite.from(texture)\n    this.sprite.label = 'sprite'\n    this.sprite.anchor.set(0.5, 0.5)\n    this.sprite.roundPixels = true\n    this.sprite.allowMove = false\n    this.sprite.eventMode = 'none'\n    this.sprite.allowClick = false\n    this.addChild(this.sprite)\n\n    this.fogSprites.forEach(sprite => this.addFogBuilding(...Object.values(sprite)))\n\n    this.eventMode = 'none'\n    this.allowMove = false\n    this.allowClick = false\n  }\n\n  updateVisible() {\n    const {\n      context: { map, player },\n    } = this\n\n    function updateChild(instance) {\n      if (\n        map.revealEverything ||\n        !instance.owner ||\n        instance.owner.isPlayed ||\n        instanceIsInPlayerSight(instance, player)\n      ) {\n        instance.visible = true\n      }\n    }\n\n    if (!map.revealEverything && !player.views[this.i][this.j].viewed) {\n      return\n    }\n    this.visible = true\n    if (this.has) {\n      updateChild(this.has)\n    }\n    if (this.corpses.length) {\n      for (let i = 0; i < this.corpses.length; i++) {\n        updateChild(this.corpses[i])\n      }\n    }\n  }\n\n  setDesertBorder(direction) {\n    const resourceName = '20002'\n    const { sprite: cellSprite } = this\n    const cellSpriteTextureName = cellSprite.texture.label\n    const cellSpriteIndex = cellSpriteTextureName.split('_')[0]\n    let val = {}\n    let index\n    let cpt = 0\n    for (let i = 0; i < 25; i++) {\n      val[i] = []\n      if (i < 9) {\n        val[i].push(0, 1, 2, 3)\n      } else {\n        for (let j = cpt; j < cpt + 4; j++) {\n          val[i].push(j + 4)\n        }\n        cpt += 4\n      }\n    }\n    switch (direction) {\n      case 'west':\n        index = val[cellSpriteIndex * 1][0]\n        break\n      case 'north':\n        index = val[cellSpriteIndex * 1][1]\n        break\n      case 'south':\n        index = val[cellSpriteIndex * 1][2]\n        break\n      case 'est':\n        index = val[cellSpriteIndex * 1][3]\n        break\n    }\n    const spritesheet = Assets.cache.get(resourceName)\n    const texture = spritesheet.textures[formatNumber(index) + '_' + resourceName + '.png']\n    const sprite = Sprite.from(texture)\n    sprite.direction = direction\n    sprite.anchor.set(0.5, 0.5)\n    sprite.type = 'border'\n    this.addChild(sprite)\n  }\n\n  setWaterBorder(resourceName, index) {\n    const { sprite } = this\n    const spritesheet = Assets.cache.get(resourceName)\n    const texture = spritesheet.textures[index + '_' + resourceName + '.png']\n    this.type = 'Desert'\n    this.border = true\n    this.waterBorder = true\n    if (this.has && typeof this.has.die === 'function') {\n      this.has.die(true)\n    }\n    sprite.texture = texture\n  }\n\n  setReliefBorder(index, elevation = 0) {\n    const { sprite } = this\n    const resourceName = sprite.texture.label.split('_')[1].split('.')[0]\n    const spritesheet = Assets.cache.get(resourceName)\n    const texture = spritesheet.textures[index + '_' + resourceName + '.png']\n    if (elevation) {\n      this.y -= elevation\n    }\n    this.inclined = true\n    if (this.has) {\n      this.has.zIndex = getInstanceZIndex(this.has)\n    }\n    sprite.label = 'sprite'\n    sprite.anchor.set(0.5, 0.5)\n    sprite.texture = texture\n  }\n\n  setWater() {\n    const index = formatNumber(randomRange(0, 3))\n    const resourceName = '15002'\n    const spritesheet = Assets.cache.get(resourceName)\n    this.sprite.texture = spritesheet.textures[index + '_' + resourceName + '.png']\n    this.type = 'Water'\n    this.category = 'Water'\n  }\n  fillWaterCellsAroundCell() {\n    const grid = this.parent.grid\n    if (this.type === 'Water' && !this.sprite.texture.label.includes('15002')) {\n      this.setWater()\n    }\n    getCellsAroundPoint(this.i, this.j, grid, 2, cell => {\n      if (cell.type === 'Water' && this.type === 'Water') {\n        const dist = instancesDistance(this, cell)\n        const velX = Math.round((this.i - cell.i) / dist)\n        const velY = Math.round((this.j - cell.j) / dist)\n        if (grid[cell.i + velX] && grid[cell.i + velX][cell.j + velY]) {\n          const target = grid[cell.i + velX][cell.j + velY]\n          const aside = grid[this.i + cell.i - target.i][this.j + cell.j - target.j]\n          if (target.type !== this.type && aside.type !== this.type) {\n            if (Math.floor(instancesDistance(this, cell)) === 2) {\n              cell.setWater()\n              target.setWater()\n            }\n          }\n        }\n      }\n    })\n  }\n\n  fillReliefCellsAroundCell() {\n    const grid = this.parent.grid\n    getCellsAroundPoint(this.i, this.j, grid, 2, cell => {\n      if (cell.z === this.z) {\n        const dist = instancesDistance(this, cell)\n        const velX = Math.round((this.i - cell.i) / dist)\n        const velY = Math.round((this.j - cell.j) / dist)\n        if (grid[cell.i + velX] && grid[cell.i + velX][cell.j + velY]) {\n          const target = grid[cell.i + velX][cell.j + velY]\n          const aside = grid[this.i + cell.i - target.i][this.j + cell.j - target.j]\n          if (target.z <= this.z && target.z !== this.z && aside.z !== this.z) {\n            if (Math.floor(instancesDistance(this, cell)) === 2) {\n              target.setCellLevel(target.z + 1)\n            }\n          }\n        }\n      }\n    })\n  }\n\n  setCellLevel(level, cpt = 1) {\n    if (level === 0) {\n      this.y += CELL_DEPTH\n      this.z = level\n      return\n    }\n    const grid = this.parent.grid\n    getCellsAroundPoint(this.i, this.j, grid, level - cpt, cell => {\n      if (cell.z < cpt) {\n        cell.y -= (cpt - cell.z) * CELL_DEPTH\n        cell.z = cpt\n        cell.fillReliefCellsAroundCell(grid)\n      }\n    })\n    if (cpt + 1 < level) {\n      this.setCellLevel(level, cpt + 1)\n    }\n    if (this.has) {\n      this.has.zIndex = getInstanceZIndex(this.has)\n    }\n  }\n\n  addFogBuilding(textureSheet, colorSheet, colorName) {\n    const sprite = Sprite.from(getTexture(textureSheet, Assets))\n    sprite.label = 'buildingFog'\n    sprite.tint = COLOR_FOG\n    sprite.anchor.set(sprite.texture.defaultAnchor.x, sprite.texture.defaultAnchor.y)\n    this.addChild(sprite)\n    this.fogSprites.push({ sprite, textureSheet, colorSheet, colorName })\n    if (colorSheet) {\n      const spriteColor = Sprite.from(getTexture(colorSheet, Assets))\n      spriteColor.label = 'buildingColorFog'\n      spriteColor.tint = COLOR_FOG\n      changeSpriteColorDirectly(spriteColor, colorName)\n      this.addChild(spriteColor)\n      this.fogSprites.push({ sprite: spriteColor, textureSheet, colorSheet, colorName })\n    } else {\n      changeSpriteColorDirectly(sprite, colorName)\n    }\n    this.zIndex = 100\n  }\n\n  removeFogBuilding(instance) {\n    const { map } = this.context\n    if (instance.owner && !instance.owner.isPlayed && instance.family === 'building') {\n      let i = 0\n      const localCell = map.grid[instance.i][instance.j]\n      while (i < localCell.fogSprites.length) {\n        if (localCell.fogSprites[i]) {\n          localCell.fogSprites[i].sprite?.destroy() // Destroy the sprite\n          localCell.fogSprites.splice(i, 1) // Remove the destroyed sprite from the array\n        } else {\n          i++ // Only increment if no sprite is destroyed, to avoid skipping elements\n        }\n      }\n    }\n  }\n\n  setFogChildren(instance, init) {\n    const { player, map } = this.context\n    if (!instanceIsInPlayerSight(instance, player)) {\n      if (instance.owner && !instance.owner.isPlayed) {\n        if (!init && instance.family === 'building') {\n          const assets = getBuildingAsset(instance.type, instance.owner, Assets)\n          const localCell = map.grid[instance.i][instance.j]\n          localCell.addFogBuilding(assets.images.final, assets.images.color, instance.owner.color)\n        }\n        instance.visible = false\n      } else {\n        for (let i = 0; i < instance.children.length; i++) {\n          if (instance.children[i].tint) {\n            instance.children[i].tint = COLOR_FOG\n          }\n        }\n      }\n    }\n  }\n\n  setFog(init) {\n    if (this.has) {\n      this.setFogChildren(this.has, init)\n    }\n    for (let i = 0; i < this.children.length; i++) {\n      if (this.children[i].tint) {\n        this.children[i].tint = COLOR_FOG\n      }\n    }\n    if (this.corpses.length) {\n      for (let i = 0; i < this.corpses.length; i++) {\n        this.setFogChildren(this.corpses[i], init)\n      }\n    }\n  }\n\n  removeFog() {\n    const {\n      context: { controls },\n    } = this\n    function setRemoveChildren(instance) {\n      if (controls.instanceInCamera(instance)) {\n        instance.visible = true\n      }\n      for (let i = 0; i < instance.children.length; i++) {\n        if (instance.children[i].tint) {\n          instance.children[i].tint = COLOR_WHITE\n        }\n      }\n    }\n    if (!this.visible) {\n      this.visible = true\n    }\n\n    this.zIndex = 0\n    for (let i = 0; i < this.children.length; i++) {\n      if (this.children[i].tint) {\n        this.children[i].tint = COLOR_WHITE\n      }\n    }\n    if (this.has) {\n      this.removeFogBuilding(this.has)\n      setRemoveChildren(this.has)\n    }\n    if (this.corpses.length) {\n      for (let i = 0; i < this.corpses.length; i++) {\n        setRemoveChildren(this.corpses[i])\n      }\n    }\n  }\n}\n","import { Container, Assets, Sprite } from 'pixi.js'\nimport { Resource } from './resource'\nimport { Human, AI, Gaia } from './players'\nimport {\n  randomRange,\n  getZoneInGridWithCondition,\n  randomItem,\n  getPlainCellsAroundPoint,\n  getCellsAroundPoint,\n  colors,\n  renderCellOnInstanceSight,\n} from '../lib'\nimport { CELL_DEPTH } from '../constants'\nimport { Cell } from './cell'\n\n/**\n * \n *  Map size\t      Tiny\t      Small\t    Medium\t    Normal\t    Large\t\n    Player count\t  2\t          3\t        4\t          6\t          8\n    Dimensions\t    120×120\t    144×144 \t168×168\t    200×200\t    220×220\n */\n\nexport default class Map extends Container {\n  constructor(context) {\n    super()\n\n    this.context = context\n    this.size\n    this.reliefRange = [\n      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2,\n      3,\n    ]\n    this.chanceOfRelief = 0.06\n    this.chanceOfSets = 0.02\n\n    this.ready = false\n    this.grid = []\n    this.sortableChildren = true\n\n    this.allTechnologies = false\n    this.noAI = true\n\n    this.devMode = false\n    this.revealEverything = true || this.devMode || false\n    this.revealTerrain = this.devMode || false\n\n    this.x = 0\n    this.y = 0\n    this.startingUnits = 3\n\n    this.playersPos = []\n    this.positionsCount = 2\n    this.gaia = null\n    this.resources = []\n\n    this.eventMode = 'auto'\n    this.allowMove = false\n    this.allowClick = false\n    this.totalCells\n  }\n\n  setCoordinate(x, y) {\n    //this.position.set(-x, -y);\n    this.x = x\n    this.y = y\n  }\n\n  generateFromJSON({ map, players, camera, resources, animals }) {\n    const classMap = {\n      Human,\n      AI,\n    }\n    const { menu, controls } = this.context\n    this.removeChildren()\n    this.size = map.length - 1\n\n    this.gaia = new Gaia(this.context)\n\n    for (let i = 0; i <= this.size; i++) {\n      const line = map[i]\n      for (let j = 0; j <= this.size; j++) {\n        if (!this.grid[i]) {\n          this.grid[i] = []\n        }\n        const cell = line[j]\n        const newCell = new Cell({ i, j, z: cell.z, type: cell.type, fogSprites: cell.fogSprites }, this.context)\n        this.addChild(newCell)\n        this.grid[i][j] = newCell\n        if (!this.revealEverything) {\n          this.grid[i][j].setFog()\n        }\n      }\n    }\n    for (let i = 0; i <= this.size; i++) {\n      for (let j = 0; j <= this.size; j++) {\n        this.grid[i][j].fillWaterCellsAroundCell()\n      }\n    }\n    this.resources = resources.map(resource => this.addChild(new Resource(resource, this.context)))\n\n    this.formatCellsRelief()\n    this.formatCellsWaterBorder()\n    this.formatCellsDesert()\n\n    this.context.players = players.map(player => {\n      const p = new classMap[player.type](\n        {\n          ...player,\n          corpses: [],\n          buildings: [],\n          units: [],\n        },\n        this.context\n      )\n      if (player.isPlayed) {\n        this.context.player = p\n      }\n      return p\n    })\n    controls.setCamera(camera.x, camera.y, true)\n    menu.init()\n    menu.updateResourcesMiniMap()\n\n    this.context.players.forEach((player, index) => {\n      const { buildings, units, corpses } = players[index]\n      player.buildings = buildings.map(building => player.createBuilding(building))\n      player.units = units.map(unit => player.createUnit(unit))\n      player.corpses = corpses.map(unit => player.createUnit(unit))\n    })\n    animals.forEach(animal => this.gaia.createAnimal(animal))\n\n    function getDest(val, map) {\n      if (val) {\n        if (Array.isArray(val)) {\n          return val[2] ? map.getChildByLabel(val[2]) : map.grid[val[0]][val[1]]\n        } else {\n          return map.getChildByLabel(val)\n        }\n      }\n      return null\n    }\n\n    function processUnit(unit, context) {\n      if (unit.previousDest) {\n        unit.previousDest = getDest(unit.previousDest, context)\n      }\n      if (unit.dest && !unit.isDead) {\n        const dest = getDest(unit.dest, context)\n        if (dest) {\n          unit.commonSendTo ? unit.commonSendTo(dest, unit.work, unit.action, true) : unit.sendTo(dest, unit.action)\n        } else {\n          unit.stop()\n        }\n      }\n    }\n\n    this.gaia.units.forEach(animal => processUnit(animal, this))\n\n    this.context.players.forEach(player => {\n      for (let i = 0; i <= this.size; i++) {\n        const line = player.views[i]\n        for (let j = 0; j <= this.size; j++) {\n          const cell = line[j]\n          if (cell.viewed) {\n            cell.onViewed()\n          }\n          cell.viewBy = cell.viewBy.map(name => getDest(name, this)).filter(Boolean)\n          if (player.isPlayed && cell.viewed) {\n            if (!cell.viewBy.length) {\n              this.grid[i][j].setFog(true)\n            } else {\n              this.grid[i][j].removeFog()\n            }\n          }\n        }\n      }\n      player.units.forEach(unit => processUnit(unit, this))\n    })\n\n    this.ready = true\n  }\n\n  generateMap(repeat = 0) {\n    this.removeChildren()\n    this.generateCells()\n\n    switch (this.size) {\n      case 120:\n        this.positionsCount = 2\n        break\n      case 144:\n        this.positionsCount = 3\n        break\n      case 168:\n        this.positionsCount = 4\n        break\n      case 200:\n        this.positionsCount = 4\n        break\n      case 220:\n        this.positionsCount = 4\n        break\n      default:\n        this.positionsCount = 2\n    }\n\n    this.totalCells = Math.pow(this.size, 2)\n\n    this.playersPos = this.findPlayerPlaces()\n\n    if (this.playersPos.length < this.positionsCount) {\n      if (repeat >= 10) {\n        alert('Error while generating the map')\n        return\n      }\n      this.generateMap(repeat + 1)\n      return\n    }\n\n    this.generateResourcesAroundPlayers(this.playersPos)\n  }\n\n  stylishMap() {\n    const {\n      context: { menu, player },\n    } = this\n\n    this.gaia = new Gaia(this.context)\n\n    //this.generateMapRelief()\n    //this.formatCellsRelief()\n\n    this.generateSets()\n\n    if (!this.revealEverything) {\n      for (let i = 0; i <= this.size; i++) {\n        for (let j = 0; j <= this.size; j++) {\n          this.grid[i][j].setFog()\n        }\n      }\n      for (let i = 0; i < player.buildings.length; i++) {\n        const building = player.buildings[i]\n        renderCellOnInstanceSight(building)\n      }\n      for (let i = 0; i < player.units.length; i++) {\n        const unit = player.units[i]\n        renderCellOnInstanceSight(unit)\n      }\n    }\n\n    this.ready = true\n    menu.updateResourcesMiniMap()\n  }\n\n  generatePlayers() {\n    const { context } = this\n\n    const players = []\n    const poses = []\n    const randoms = Array.from(Array(this.playersPos.length).keys())\n\n    for (let i = 0; i < this.playersPos.length; i++) {\n      const pos = randomItem(randoms)\n      poses.push(pos)\n      randoms.splice(randoms.indexOf(pos), 1)\n    }\n\n    for (let i = 0; i < this.positionsCount; i++) {\n      const posI = this.playersPos[poses[i]]?.i\n      const posJ = this.playersPos[poses[i]]?.j\n      if (posI && posJ) {\n        const color = colors[i]\n        if (!i) {\n          players.push(\n            new Human(\n              {\n                i: posI,\n                j: posJ,\n                age: 0,\n                civ: 'Greek',\n                color,\n                isPlayed: true,\n              },\n              context\n            )\n          )\n        } else if (!this.noAI) {\n          players.push(new AI({ i: posI, j: posJ, age: 0, civ: 'Greek', color }, context))\n        }\n      }\n    }\n    return players\n  }\n\n  placePlayers() {\n    const {\n      context: { players },\n    } = this\n\n    // Place a town center\n    for (let i = 0; i < players.length; i++) {\n      const player = players[i]\n      const towncenter = player.spawnBuilding({ i: player.i, j: player.j, type: 'TownCenter', isBuilt: true })\n      for (let i = 0; i < this.startingUnits; i++) {\n        towncenter.placeUnit('Villager')\n      }\n    }\n  }\n\n  generateForestAroundPlayer(\n    player,\n    treeCount,\n    clusterCount = 12,\n    minClusterRadius = 5,\n    maxClusterRadius = 10,\n    safeDistance = 20,\n    clearingProbability = 0.6\n  ) {\n    const { grid } = this\n    const { i: playerI, j: playerJ } = player\n    const gridWidth = grid.length\n    const gridHeight = grid[0].length\n    const forestCells = []\n    const pathCells = new Set()\n\n    // Function to calculate the distance between two points\n    function distance(x1, y1, x2, y2) {\n      return Math.sqrt((x1 - x2) ** 2 + (y1 - y2) ** 2)\n    }\n\n    // Function to create a circle of points within a grid, checking boundaries\n    function createCircle(centerI, centerJ, radius, density = 0.7, edgeNoise = 0) {\n      const circleCells = []\n      for (let x = -radius; x <= radius; x++) {\n        for (let y = -radius; y <= radius; y++) {\n          const distFromCenter = Math.sqrt(x * x + y * y)\n          const noise = Math.random() * edgeNoise - edgeNoise / 2 // Random edge noise\n          if (distFromCenter + noise <= radius) {\n            // If within noisy circle\n            const cellI = centerI + x\n            const cellJ = centerJ + y\n            if (\n              cellI >= 0 &&\n              cellI < gridWidth && // Ensure cell is within grid bounds\n              cellJ >= 0 &&\n              cellJ < gridHeight &&\n              !grid[cellI][cellJ].solid && // Ensure the cell is not solid\n              grid[cellI][cellJ].category !== 'Water' && // Ensure not water\n              grid[cellI][cellJ].type !== 'Border' && // Ensure not border\n              !grid[cellI][cellJ].inclined && // Ensure not inclined\n              Math.random() < density // Tree density control\n            ) {\n              circleCells.push({ i: cellI, j: cellJ })\n            }\n          }\n        }\n      }\n      return circleCells\n    }\n\n    // Create forest clusters\n    for (let cluster = 0; cluster < clusterCount; cluster++) {\n      let clusterCenterI, clusterCenterJ\n      let tries = 0\n      const clusterRadius = Math.floor(Math.random() * (maxClusterRadius - minClusterRadius + 1)) + minClusterRadius // Random radius\n      const clusterDensity = Math.random() * 0.5 + 0.5 // Density between 0.5 and 1\n      const edgeNoise = Math.random() * 2 // Noise for organic shapes\n\n      // Ensure the cluster is far from the player and within bounds\n      do {\n        clusterCenterI = playerI + Math.floor(Math.random() * 60 - 30) // Random offset\n        clusterCenterJ = playerJ + Math.floor(Math.random() * 60 - 30)\n        tries++\n        if (tries > 100) break // Safety exit\n      } while (\n        distance(clusterCenterI, clusterCenterJ, playerI, playerJ) < safeDistance ||\n        clusterCenterI < 0 ||\n        clusterCenterI >= gridWidth ||\n        clusterCenterJ < 0 ||\n        clusterCenterJ >= gridHeight || // Stay within grid bounds\n        grid[clusterCenterI][clusterCenterJ].category === 'Water' || // Avoid water cells\n        grid[clusterCenterI][clusterCenterJ].solid || // Avoid solid cells\n        grid[clusterCenterI][clusterCenterJ].inclined // Avoid inclined cells\n      )\n\n      if (tries <= 100) {\n        const treeCluster = createCircle(clusterCenterI, clusterCenterJ, clusterRadius, clusterDensity, edgeNoise)\n        treeCluster.forEach(cell => forestCells.push(cell))\n      }\n    }\n\n    // Scattered solo trees (20% of total trees)\n    const scatteredTreeCount = Math.floor(treeCount * 0.2)\n    for (let i = 0; i < scatteredTreeCount; i++) {\n      let soloI, soloJ\n      let tries = 0\n\n      do {\n        soloI = playerI + Math.floor(Math.random() * 60 - 30) // Random offset within [-30, 30]\n        soloJ = playerJ + Math.floor(Math.random() * 60 - 30)\n        tries++\n        if (tries > 50) break // Safety exit to avoid infinite loop\n      } while (\n        distance(soloI, soloJ, playerI, playerJ) < safeDistance ||\n        soloI < 0 ||\n        soloI >= gridWidth ||\n        soloJ < 0 ||\n        soloJ >= gridHeight || // Stay within grid bounds\n        grid[soloI][soloJ].category === 'Water' || // Avoid water cells\n        grid[soloI][soloJ].solid || // Avoid solid cells\n        grid[soloI][soloJ].inclined // Avoid inclined cells\n      )\n\n      if (tries <= 50) {\n        forestCells.push({ i: soloI, j: soloJ })\n      }\n    }\n\n    // Generate random clearings based on clearingProbability\n    for (let clearing = 0; clearing < clusterCount; clearing++) {\n      if (Math.random() < clearingProbability) {\n        let clearingCenterI, clearingCenterJ\n        let tries = 0\n        const clearingRadius = Math.floor(Math.random() * 8) + 5 // Random clearing radius between 5 and 13\n        const edgeNoise = Math.random() * 1.5\n\n        do {\n          clearingCenterI = playerI + Math.floor(Math.random() * 60 - 30) // Random offset\n          clearingCenterJ = playerJ + Math.floor(Math.random() * 60 - 30)\n          tries++\n          if (tries > 100) break\n        } while (\n          distance(clearingCenterI, clearingCenterJ, playerI, playerJ) < safeDistance ||\n          clearingCenterI < 0 ||\n          clearingCenterI >= gridWidth ||\n          clearingCenterJ < 0 ||\n          clearingCenterJ >= gridHeight || // Stay within grid bounds\n          grid[clearingCenterI][clearingCenterJ].category === 'Water' || // Avoid water cells\n          grid[clearingCenterI][clearingCenterJ].solid || // Avoid solid cells\n          grid[clearingCenterI][clearingCenterJ].inclined // Avoid inclined cells\n        )\n\n        if (tries <= 100) {\n          const clearingCells = createCircle(clearingCenterI, clearingCenterJ, clearingRadius, 0, edgeNoise)\n          clearingCells.forEach(clearedCell => {\n            const index = forestCells.findIndex(cell => cell.i === clearedCell.i && cell.j === clearedCell.j)\n            if (index > -1) {\n              forestCells.splice(index, 1) // Remove tree from clearing\n            }\n          })\n        }\n      }\n    }\n\n    // Generate diagonal paths\n    const pathLength = 20\n    const pathDirection = Math.random() > 0.5 ? 1 : -1 // Random path direction\n\n    for (let step = 0; step < pathLength; step++) {\n      let offsetX, offsetY\n      let tries = 0\n\n      do {\n        offsetX = step * pathDirection\n        offsetY = step\n        tries++\n        if (tries > 50) break\n      } while (\n        distance(playerI + offsetX, playerJ + offsetY, playerI, playerJ) < safeDistance ||\n        playerI + offsetX < 0 ||\n        playerI + offsetX >= gridWidth ||\n        playerJ + offsetY < 0 ||\n        playerJ + offsetY >= gridHeight\n      )\n\n      if (tries <= 50) {\n        const randOffsetX = Math.random() > 0.5 ? 1 : -1\n        const randOffsetY = Math.random() > 0.5 ? 1 : -1\n        pathCells.add(`${playerI + offsetX + randOffsetX},${playerJ + offsetY + randOffsetY}`)\n      }\n    }\n\n    // Remove path cells from forestCells\n    forestCells.forEach(cell => {\n      if (pathCells.has(`${cell.i},${cell.j}`)) {\n        forestCells.splice(forestCells.indexOf(cell), 1)\n      }\n    })\n\n    // Select and place trees in the forest cells\n    const cellsToPlace = []\n    for (let i = 0; i < treeCount; i++) {\n      if (forestCells.length === 0) break\n      const itemIndex = Math.floor(Math.random() * forestCells.length)\n      const cell = forestCells[itemIndex]\n      cellsToPlace.push(cell)\n      forestCells.splice(itemIndex, 1)\n    }\n\n    // Place the trees in the selected cells\n    for (const cell of cellsToPlace) {\n      // Ensure again that we're not placing trees on Water, Border, or Solid cells\n      if (\n        grid[cell.i][cell.j].category !== 'Water' &&\n        !grid[cell.i][cell.j].waterBorder &&\n        !grid[cell.i][cell.j].solid &&\n        !grid[cell.i][cell.j].inclined\n      ) {\n        let isFree = true\n        getPlainCellsAroundPoint(cell.i, cell.j, grid, 3, cell => {\n          if (['Berrybush', 'Gold', 'Stone'].includes(cell.has?.type)) {\n            isFree = false\n          }\n        })\n        isFree && this.resources.push(this.addChild(new Resource({ i: cell.i, j: cell.j, type: 'Tree' }, this.context)))\n      }\n    }\n  }\n\n  generateResourcesAroundPlayers(playersPos) {\n    for (let i = 0; i < playersPos.length; i++) {\n      this.placeResourceGroup(playersPos[i], 'Berrybush', 8, [7, 14])\n      this.placeResourceGroup(playersPos[i], 'Berrybush', 8, [14, 22])\n      this.placeResourceGroup(playersPos[i], 'Berrybush', 8, [22, 29])\n      this.placeResourceGroup(playersPos[i], 'Stone', 7, [7, 14])\n      this.placeResourceGroup(playersPos[i], 'Stone', 7, [14, 22])\n      this.placeResourceGroup(playersPos[i], 'Stone', 7, [22, 29])\n      this.placeResourceGroup(playersPos[i], 'Gold', 7, [7, 14])\n      this.placeResourceGroup(playersPos[i], 'Gold', 7, [14, 22])\n      this.placeResourceGroup(playersPos[i], 'Gold', 7, [22, 29])\n      this.generateForestAroundPlayer(playersPos[i], this.size * 4)\n    }\n  }\n\n  generateTerrain(gridSize = 120, mapModel = 'plain') {\n    const terrainMap = []\n\n    // Initialize the map with default grass (0)\n    for (let i = 0; i < gridSize; i++) {\n      terrainMap[i] = []\n      for (let j = 0; j < gridSize; j++) {\n        terrainMap[i][j] = 0 // Default to grass\n      }\n    }\n\n    // Helper function to generate terrain clusters around a point\n    function generateTerrainCluster(x, y, radius, type) {\n      for (let i = -radius; i <= radius; i++) {\n        for (let j = -radius; j <= radius; j++) {\n          const nx = x + i\n          const ny = y + j\n          if (nx >= 0 && nx < gridSize && ny >= 0 && ny < gridSize && i * i + j * j <= radius * radius) {\n            terrainMap[nx][ny] = type\n          }\n        }\n      }\n    }\n\n    // Generate water with a smoother, randomized approach\n    function generateWater() {\n      if (mapModel === 'continent') {\n        const edgeSize = 10 // Base edge size for water\n        const roundFactor = 0.15 // Controls the \"smoothness\" of the water edge\n\n        // Loop through the map and set water in a rounded pattern with random noise\n        for (let i = 0; i < gridSize; i++) {\n          for (let j = 0; j < gridSize; j++) {\n            const distFromCenter = Math.abs(i - gridSize / 2) + Math.abs(j - gridSize / 2) // Distance from center\n\n            // Add smooth water around the edges with randomized borders\n            const edgeDist = Math.min(i, j, gridSize - i, gridSize - j)\n            const randomOffset = Math.random() * 5 - 2.5 // Randomize water edge for more natural look\n\n            if (edgeDist < edgeSize + Math.sin(distFromCenter * roundFactor) * 5 + randomOffset) {\n              terrainMap[i][j] = 2 // Water\n            }\n          }\n        }\n      } else if (mapModel === 'lac') {\n        const centerX = Math.floor(gridSize / 2)\n        const centerY = Math.floor(gridSize / 2)\n        const baseRadius = Math.floor(gridSize / 4) // Base radius for the lake\n        const roundFactor = 0.6 // Adjust this for more/less rounding\n\n        // Create a lake with a smoother, randomized border\n        for (let i = -baseRadius; i <= baseRadius; i++) {\n          for (let j = -baseRadius; j <= baseRadius; j++) {\n            const nx = centerX + i\n            const ny = centerY + j\n            const distanceFromCenter = Math.sqrt(i * i + j * j)\n            const noise = Math.sin(distanceFromCenter * roundFactor) * 2 // Create smooth noise\n            const randomOffset = Math.random() * 3 - 1.5 // Add randomness to the lake shape\n\n            if (\n              nx >= 0 &&\n              nx < gridSize &&\n              ny >= 0 &&\n              ny < gridSize &&\n              distanceFromCenter < baseRadius + noise + randomOffset\n            ) {\n              terrainMap[nx][ny] = 2 // Water\n            }\n          }\n        }\n      }\n      // 'plain' model: no water, so do nothing\n    }\n\n    // Generate clusters of desert (1) and jungle (3)\n    function generateLandTerrain() {\n      // Generate desert areas (1)\n      generateClusters(1, 8, 5, 10)\n\n      // Generate jungle areas (3)\n      generateClusters(3, 10, 4, 8)\n    }\n\n    // Generic function to generate clustered terrain types\n    function generateClusters(type, clusterCount, clusterSizeMin, clusterSizeMax) {\n      for (let i = 0; i < clusterCount; i++) {\n        const clusterX = Math.floor(Math.random() * gridSize)\n        const clusterY = Math.floor(Math.random() * gridSize)\n        const radius = Math.floor(Math.random() * (clusterSizeMax - clusterSizeMin)) + clusterSizeMin\n\n        // Ensure we avoid water if generating jungle/desert in the 'lac' or 'continent' models\n        if (type !== 2 && terrainMap[clusterX][clusterY] === 2) {\n          continue // Skip if this area is water\n        }\n\n        generateTerrainCluster(clusterX, clusterY, radius, type)\n      }\n    }\n\n    // Generate water based on the map model\n    generateWater()\n\n    // Generate desert and jungle clusters\n    generateLandTerrain()\n\n    return terrainMap\n  }\n\n  generateCells() {\n    const z = 0\n    const terrain = this.generateTerrain(121)\n    this.size = terrain.length - 1\n\n    // Map terrain numbers to cell types\n    const terrainMap = {\n      0: 'Grass',\n      1: 'Desert',\n      2: 'Water',\n      3: 'Jungle',\n    }\n\n    for (let i = 0; i <= this.size; i++) {\n      if (!this.grid[i]) this.grid[i] = []\n      for (let j = 0; j <= this.size; j++) {\n        const type = terrainMap[terrain[i][j]]\n        const cell = new Cell({ i, j, z, type }, this.context)\n        this.addChild(cell) // ensures cell.parent is set\n        this.grid[i][j] = cell\n      }\n    }\n\n    // Post-processing\n    for (let i = 0; i <= this.size; i++) {\n      for (let j = 0; j <= this.size; j++) {\n        this.grid[i][j].fillWaterCellsAroundCell()\n      }\n    }\n\n    this.formatCellsWaterBorder()\n    this.formatCellsDesert()\n  }\n\n  generateSets() {\n    for (let i = 0; i <= this.size; i++) {\n      for (let j = 0; j <= this.size; j++) {\n        const cell = this.grid[i][j]\n        if (getCellsAroundPoint(i, j, this.grid, 1, neighbour => neighbour.solid).length > 0) {\n          continue\n        }\n        if (!cell.has && !cell.solid && !cell.border && !cell.inclined) {\n          if (cell.category !== 'Water' && Math.random() < 0.03 && i > 1 && j > 1 && i < this.size && j < this.size) {\n            const randomSpritesheet = randomRange(292, 301).toString()\n            const spritesheet = Assets.cache.get(randomSpritesheet)\n            const texture = spritesheet.textures['000_' + randomSpritesheet + '.png']\n            const floor = Sprite.from(texture)\n            floor.label = 'floor'\n            floor.roundPixels = true\n            floor.allowMove = false\n            floor.eventMode = 'none'\n            floor.allowClick = false\n            floor.updateAnchor = true\n            cell.addChild(floor)\n          }\n          if (Math.random() < this.chanceOfSets) {\n            if (cell.category !== 'Water') {\n              const type = randomItem(['tree', 'rock', 'animal'])\n              switch (type) {\n                case 'rock':\n                  const randomSpritesheet = randomRange(531, 534).toString()\n                  const spritesheet = Assets.cache.get(randomSpritesheet)\n                  const texture = spritesheet.textures['000_' + randomSpritesheet + '.png']\n                  const rock = Sprite.from(texture)\n                  rock.label = 'set'\n                  rock.roundPixels = true\n                  rock.allowMove = false\n                  rock.eventMode = 'none'\n                  rock.allowClick = false\n                  rock.updateAnchor = true\n                  cell.addChild(rock)\n                  break\n                case 'animal':\n                  const animals = Assets.cache.get('config').animals\n                  const type = randomItem(Object.keys(animals))\n                  this.gaia.createAnimal({ i, j, type })\n                  break\n              }\n            } else {\n              this.resources.push(this.addChild(new Resource({ i, j, type: 'Salmon' }, this.context)))\n            }\n          }\n        }\n      }\n    }\n  }\n\n  generateMapRelief() {\n    for (let i = 0; i <= this.size; i++) {\n      for (let j = 0; j <= this.size; j++) {\n        const cell = this.grid[i][j]\n        if (Math.random() < this.chanceOfRelief) {\n          const level = randomItem(this.reliefRange)\n          let canGenerate = true\n          if (\n            getPlainCellsAroundPoint(i, j, this.grid, level * 2, cell => {\n              if (cell.category === 'Water' || (cell.has && cell.has.family === 'building')) {\n                canGenerate = false\n              }\n            })\n          );\n          if (canGenerate) {\n            cell.setCellLevel(level)\n          }\n        }\n      }\n    }\n    for (let i = 0; i <= this.size; i++) {\n      for (let j = 0; j <= this.size; j++) {\n        const cell = this.grid[i][j]\n        if (cell.z === 1) {\n          let toRemove = true\n          let cpt = 0\n          if (\n            getCellsAroundPoint(i, j, this.grid, 1, cell => {\n              if (cell.z > 0) {\n                cpt++\n              }\n              if (cpt >= 3) {\n                toRemove = false\n              }\n            })\n          );\n          if (toRemove) {\n            cell.setCellLevel(0)\n          }\n        }\n      }\n    }\n    // Format cell's relief\n    for (let i = 0; i <= this.size; i++) {\n      for (let j = 0; j <= this.size; j++) {\n        const cell = this.grid[i][j]\n        cell.fillReliefCellsAroundCell()\n      }\n    }\n  }\n\n  formatCellsRelief() {\n    for (let i = 0; i <= this.size; i++) {\n      for (let j = 0; j <= this.size; j++) {\n        const cell = this.grid[i][j]\n        // Side\n        if (\n          this.grid[i - 1] &&\n          this.grid[i - 1][j].z - cell.z === 1 &&\n          (!this.grid[i + 1] || this.grid[i + 1][j].z <= cell.z) &&\n          (!this.grid[i][j - 1] || this.grid[i][j - 1].z <= cell.z) &&\n          (!this.grid[i][j + 1] || this.grid[i][j + 1].z <= cell.z)\n        ) {\n          cell.setReliefBorder('014', CELL_DEPTH / 2)\n        } else if (\n          this.grid[i + 1] &&\n          this.grid[i + 1][j].z - cell.z === 1 &&\n          (!this.grid[i - 1] || this.grid[i - 1][j].z <= cell.z) &&\n          (!this.grid[i][j - 1] || this.grid[i][j - 1].z <= cell.z) &&\n          (!this.grid[i][j + 1] || this.grid[i][j + 1].z <= cell.z)\n        ) {\n          cell.setReliefBorder('015', CELL_DEPTH / 2)\n        } else if (\n          this.grid[i][j - 1] &&\n          this.grid[i][j - 1].z - cell.z === 1 &&\n          (!this.grid[i + 1] || this.grid[i + 1][j].z <= cell.z) &&\n          (!this.grid[i][j + 1] || this.grid[i][j + 1].z <= cell.z) &&\n          (!this.grid[i - 1] || this.grid[i - 1][j].z <= cell.z)\n        ) {\n          cell.setReliefBorder('016', CELL_DEPTH / 2)\n        } else if (\n          this.grid[i][j + 1] &&\n          this.grid[i][j + 1].z - cell.z === 1 &&\n          (!this.grid[i + 1] || this.grid[i + 1][j].z <= cell.z) &&\n          (!this.grid[i][j - 1] || this.grid[i][j - 1].z <= cell.z) &&\n          (!this.grid[i - 1] || this.grid[i - 1][j].z <= cell.z)\n        ) {\n          cell.setReliefBorder('013', CELL_DEPTH / 2)\n        } // Corner\n        else if (\n          this.grid[i - 1] &&\n          this.grid[i - 1][j - 1] &&\n          this.grid[i - 1][j - 1].z - cell.z === 1 &&\n          (!this.grid[i][j - 1] || this.grid[i][j - 1].z <= cell.z) &&\n          (!this.grid[i - 1] || this.grid[i - 1][j].z <= cell.z)\n        ) {\n          cell.setReliefBorder('010', CELL_DEPTH / 2)\n        } else if (\n          this.grid[i + 1] &&\n          this.grid[i + 1][j - 1] &&\n          this.grid[i + 1][j - 1].z - cell.z === 1 &&\n          (!this.grid[i][j - 1] || this.grid[i][j - 1].z <= cell.z) &&\n          (!this.grid[i + 1] || this.grid[i + 1][j].z <= cell.z)\n        ) {\n          cell.setReliefBorder('012')\n        } else if (\n          this.grid[i - 1] &&\n          this.grid[i - 1][j + 1] &&\n          this.grid[i - 1][j + 1].z - cell.z === 1 &&\n          (!this.grid[i][j + 1] || this.grid[i][j + 1].z <= cell.z) &&\n          (!this.grid[i - 1] || this.grid[i - 1][j].z <= cell.z)\n        ) {\n          cell.setReliefBorder('011')\n        } else if (\n          this.grid[i + 1] &&\n          this.grid[i + 1][j + 1] &&\n          this.grid[i + 1][j + 1].z - cell.z === 1 &&\n          (!this.grid[i][j + 1] || this.grid[i][j + 1].z <= cell.z) &&\n          (!this.grid[i + 1] || this.grid[i + 1][j].z <= cell.z)\n        ) {\n          cell.setReliefBorder('009', CELL_DEPTH / 2)\n        }\n        // Deep corner\n        else if (\n          this.grid[i][j - 1] &&\n          this.grid[i][j - 1].z - cell.z === 1 &&\n          this.grid[i - 1] &&\n          this.grid[i - 1][j].z - cell.z === 1\n        ) {\n          cell.setReliefBorder('022', CELL_DEPTH / 2)\n        } else if (\n          this.grid[i][j + 1] &&\n          this.grid[i][j + 1].z - cell.z === 1 &&\n          this.grid[i + 1] &&\n          this.grid[i + 1][j].z - cell.z === 1\n        ) {\n          cell.setReliefBorder('021', CELL_DEPTH / 2)\n        } else if (\n          this.grid[i][j - 1] &&\n          this.grid[i][j - 1].z - cell.z === 1 &&\n          this.grid[i + 1] &&\n          this.grid[i + 1][j].z - cell.z === 1\n        ) {\n          cell.setReliefBorder('023', CELL_DEPTH)\n        } else if (\n          this.grid[i][j + 1] &&\n          this.grid[i][j + 1].z - cell.z === 1 &&\n          this.grid[i - 1] &&\n          this.grid[i - 1][j].z - cell.z === 1\n        ) {\n          cell.setReliefBorder('024', CELL_DEPTH)\n        }\n      }\n    }\n  }\n\n  formatCellsWaterBorder() {\n    for (let i = 0; i <= this.size; i++) {\n      for (let j = 0; j <= this.size; j++) {\n        const cell = this.grid[i][j]\n        if (cell.type !== 'Water') {\n          // Side\n          if (\n            this.grid[i - 1] &&\n            this.grid[i - 1][j].type === 'Water' &&\n            (!this.grid[i + 1] || this.grid[i + 1][j].type !== 'Water') &&\n            (!this.grid[i][j - 1] || this.grid[i][j - 1].type !== 'Water') &&\n            (!this.grid[i][j + 1] || this.grid[i][j + 1].type !== 'Water')\n          ) {\n            cell.setWaterBorder('20000', '008')\n          } else if (\n            this.grid[i + 1] &&\n            this.grid[i + 1][j].type === 'Water' &&\n            (!this.grid[i - 1] || this.grid[i - 1][j].type !== 'Water') &&\n            (!this.grid[i][j - 1] || this.grid[i][j - 1].type !== 'Water') &&\n            (!this.grid[i][j + 1] || this.grid[i][j + 1].type !== 'Water')\n          ) {\n            cell.setWaterBorder('20000', '009')\n          } else if (\n            this.grid[i][j - 1] &&\n            this.grid[i][j - 1].type === 'Water' &&\n            (!this.grid[i + 1] || this.grid[i + 1][j].type !== 'Water') &&\n            (!this.grid[i][j + 1] || this.grid[i][j + 1].type !== 'Water') &&\n            (!this.grid[i - 1] || this.grid[i - 1][j].type !== 'Water')\n          ) {\n            cell.setWaterBorder('20000', '011')\n          } else if (\n            this.grid[i][j + 1] &&\n            this.grid[i][j + 1].type === 'Water' &&\n            (!this.grid[i + 1] || this.grid[i + 1][j].type !== 'Water') &&\n            (!this.grid[i][j - 1] || this.grid[i][j - 1].type !== 'Water') &&\n            (!this.grid[i - 1] || this.grid[i - 1][j].type !== 'Water')\n          ) {\n            cell.setWaterBorder('20000', '010')\n          } // Corner\n          else if (\n            this.grid[i - 1] &&\n            this.grid[i - 1][j - 1] &&\n            this.grid[i - 1][j - 1].type === 'Water' &&\n            (!this.grid[i][j - 1] || this.grid[i][j - 1].type !== 'Water') &&\n            (!this.grid[i - 1] || this.grid[i - 1][j].type !== 'Water')\n          ) {\n            cell.setWaterBorder('20000', '005')\n          } else if (\n            this.grid[i + 1] &&\n            this.grid[i + 1][j - 1] &&\n            this.grid[i + 1][j - 1].type === 'Water' &&\n            (!this.grid[i][j - 1] || this.grid[i][j - 1].type !== 'Water') &&\n            (!this.grid[i + 1] || this.grid[i + 1][j].type !== 'Water')\n          ) {\n            cell.setWaterBorder('20000', '007')\n          } else if (\n            this.grid[i - 1] &&\n            this.grid[i - 1][j + 1] &&\n            this.grid[i - 1][j + 1].type === 'Water' &&\n            (!this.grid[i][j + 1] || this.grid[i][j + 1].type !== 'Water') &&\n            (!this.grid[i - 1] || this.grid[i - 1][j].type !== 'Water')\n          ) {\n            cell.setWaterBorder('20000', '004')\n          } else if (\n            this.grid[i + 1] &&\n            this.grid[i + 1][j + 1] &&\n            this.grid[i + 1][j + 1].type === 'Water' &&\n            (!this.grid[i][j + 1] || this.grid[i][j + 1].type !== 'Water') &&\n            (!this.grid[i + 1] || this.grid[i + 1][j].type !== 'Water')\n          ) {\n            cell.setWaterBorder('20000', '006')\n          }\n          // Deep corner\n          else if (\n            this.grid[i][j - 1] &&\n            this.grid[i][j - 1].type === 'Water' &&\n            this.grid[i - 1] &&\n            this.grid[i - 1][j].type === 'Water'\n          ) {\n            cell.setWaterBorder('20000', '001')\n          } else if (\n            this.grid[i][j + 1] &&\n            this.grid[i][j + 1].type === 'Water' &&\n            this.grid[i + 1] &&\n            this.grid[i + 1][j].type === 'Water'\n          ) {\n            cell.setWaterBorder('20000', '002')\n          } else if (\n            this.grid[i][j - 1] &&\n            this.grid[i][j - 1].type === 'Water' &&\n            this.grid[i + 1] &&\n            this.grid[i + 1][j].type === 'Water'\n          ) {\n            cell.setWaterBorder('20000', '003')\n          } else if (\n            this.grid[i][j + 1] &&\n            this.grid[i][j + 1].type === 'Water' &&\n            this.grid[i - 1] &&\n            this.grid[i - 1][j].type === 'Water'\n          ) {\n            cell.setWaterBorder('20000', '000')\n          }\n        }\n      }\n    }\n  }\n  formatCellsDesert() {\n    for (let i = 0; i <= this.size; i++) {\n      for (let j = 0; j <= this.size; j++) {\n        const cell = this.grid[i][j]\n        const typeToFormat = ['Grass', 'Jungle']\n        if (cell.type === 'Desert') {\n          if (this.grid[i - 1] && this.grid[i - 1][j] && typeToFormat.includes(this.grid[i - 1][j].type)) {\n            this.grid[i - 1][j].setDesertBorder('est')\n          }\n          if (this.grid[i + 1] && this.grid[i + 1][j] && typeToFormat.includes(this.grid[i + 1][j].type)) {\n            this.grid[i + 1][j].setDesertBorder('west')\n          }\n          if (this.grid[i][j - 1] && typeToFormat.includes(this.grid[i][j - 1].type)) {\n            this.grid[i][j - 1].setDesertBorder('south')\n          }\n          if (this.grid[i][j + 1] && typeToFormat.includes(this.grid[i][j + 1].type)) {\n            this.grid[i][j + 1].setDesertBorder('north')\n          }\n        }\n      }\n    }\n  }\n  findPlayerPlaces() {\n    const results = []\n    const outBorder = 20\n    const inBorder = Math.floor(this.size / 4)\n    const zones = [\n      {\n        minX: outBorder,\n        minY: this.size / 2 + inBorder,\n        maxX: this.size / 2 - inBorder,\n        maxY: this.size - outBorder,\n      },\n      {\n        minX: outBorder,\n        minY: outBorder,\n        maxX: this.size / 2 - inBorder,\n        maxY: this.size / 2 - inBorder,\n      },\n      {\n        minX: this.size / 2 + inBorder,\n        minY: outBorder,\n        maxX: this.size - outBorder,\n        maxY: this.size / 2 - inBorder,\n      },\n      {\n        minX: this.size / 2 + inBorder,\n        minY: this.size / 2 + inBorder,\n        maxX: this.size - outBorder,\n        maxY: this.size - outBorder,\n      },\n    ]\n    for (let i = 0; i < zones.length; i++) {\n      const pos = getZoneInGridWithCondition(zones[i], this.grid, 5, cell => {\n        return !cell.border && !cell.solid && !cell.inclined\n      })\n      if (pos) {\n        results.push(pos)\n      }\n    }\n    return results\n  }\n\n  placeResourceGroup(player, instance, quantity, range) {\n    const { context, grid } = this\n\n    // Function to get valid cells around a center point within a specific distance\n    function getValidCells(centerI, centerJ, dist) {\n      const cells = []\n      // Check surrounding cells within the specified distance\n      for (let dx = -dist; dx <= dist; dx++) {\n        for (let dy = -dist; dy <= dist; dy++) {\n          const newI = centerI + dx\n          const newJ = centerJ + dy\n\n          // Ensure the new coordinates are within the grid bounds\n          if (grid[newI] && grid[newI][newJ]) {\n            const cell = grid[newI][newJ]\n            let isFree = true\n            getPlainCellsAroundPoint(cell.i, cell.j, grid, 3, cell => {\n              if (['Berrybush', 'Gold', 'Stone'].includes(cell.has?.type)) {\n                isFree = false\n              }\n            })\n            // Check if the cell is valid\n            if (isFree && !cell.solid && cell.category !== 'Water' && !cell.has && !cell.border && !cell.inclined) {\n              cells.push({ i: newI, j: newJ })\n            }\n          }\n        }\n      }\n      return cells\n    }\n\n    // Get a random center point around the player's position within the specified range\n    const randomDistance = randomRange(range[0], range[1])\n    const centerI = player.i + randomItem([-randomDistance, randomDistance])\n    const centerJ = player.j + randomItem([-randomDistance, randomDistance])\n\n    // Gather valid cells around the center point\n    const validCells = getValidCells(centerI, centerJ, 2) // Adjust distance to suit clustering\n\n    // Check if we have enough valid cells to place the required quantity of resources\n    if (validCells.length < quantity) {\n      console.warn('Not enough valid cells found for resource placement.')\n      return // Exit if not enough valid cells found\n    }\n\n    // Randomly select the required number of cells from the valid cells\n    const cellsToPlace = []\n    for (let i = 0; i < quantity; i++) {\n      const itemIndex = Math.floor(Math.random() * validCells.length)\n      const cell = validCells[itemIndex]\n      cellsToPlace.push(cell) // Store the selected cell for placement\n      validCells.splice(itemIndex, 1) // Remove it from valid cells to avoid duplicates\n    }\n\n    // Place resources in the selected cells\n    for (const cell of cellsToPlace) {\n      this.resources.push(this.addChild(new Resource({ i: cell.i, j: cell.j, type: instance }, context)))\n    }\n  }\n}\n","import { Assets } from 'pixi.js'\nimport {\n  getIconPath,\n  canAfford,\n  refundCost,\n  throttle,\n  canvasDrawDiamond,\n  canvasDrawRectangle,\n  canvasDrawStrokeRectangle,\n  isValidCondition,\n  getBuildingAsset,\n  Modal,\n} from '../lib'\nimport { CELL_WIDTH, CELL_HEIGHT, LONG_CLICK_DURATION, IS_MOBILE } from '../constants'\nimport { sound } from '@pixi/sound'\n\nexport default class Menu {\n  constructor(context) {\n    this.context = context\n    this.topbar = document.createElement('div')\n    this.topbar.id = 'topbar'\n    this.topbar.className = 'topbar bar'\n    this.icons = {\n      wood: getIconPath('000_50732'),\n      food: getIconPath('002_50732'),\n      stone: getIconPath('001_50732'),\n      gold: getIconPath('003_50732'),\n    }\n    this.infoIcons = {\n      wood: getIconPath('000_50731'),\n      stone: getIconPath('001_50731'),\n      food: getIconPath('002_50731'),\n      gold: getIconPath('003_50731'),\n    }\n\n    this.longClick = false\n    this.mouseHoldTimeout\n\n    this.resources = document.createElement('div')\n    this.resources.className = 'topbar-resources'\n    ;['wood', 'food', 'stone', 'gold'].forEach(res => {\n      this.setResourceBox(res)\n    })\n\n    this.age = document.createElement('div')\n    this.age.className = 'topbar-age'\n    const options = document.createElement('div')\n    options.className = 'topbar-options'\n    const menu = document.createElement('div')\n    menu.className = 'topbar-options-menu'\n    menu.innerText = 'Menu'\n    menu.addEventListener('pointerdown', () => {\n      this.context.pause()\n      const content = document.createElement('div')\n      content.className = 'modal-menu'\n      const modal = new Modal(content)\n      const save = document.createElement('button')\n      save.innerText = 'Save'\n      save.addEventListener('pointerdown', () => {\n        this.context.save()\n        modal.close()\n        this.context.resume()\n      })\n      const load = document.createElement('div')\n      const input = document.createElement('input')\n      input.type = 'file'\n      input.accept = 'application/JSON'\n      input.addEventListener('change', evt => {\n        var reader = new FileReader()\n        reader.onload = ({ target: { result } }) => {\n          this.context.load(JSON.parse(result))\n          modal.close()\n          this.context.resume()\n        }\n        reader.readAsText(evt.target.files[0])\n      })\n      load.className = 'input-file'\n      load.innerText = 'Load'\n      load.appendChild(input)\n      const cancel = document.createElement('button')\n      cancel.innerText = 'Cancel'\n      cancel.addEventListener('pointerdown', () => {\n        modal.close()\n        this.context.resume()\n      })\n      content.appendChild(save)\n      content.appendChild(load)\n      content.appendChild(cancel)\n    })\n    options.appendChild(menu)\n\n    this.topbar.appendChild(this.resources)\n    this.topbar.appendChild(this.age)\n    this.topbar.appendChild(options)\n    document.body.prepend(this.topbar)\n\n    this.bottombar = document.createElement('div')\n    this.bottombar.className = 'bottombar bar'\n    this.bottombarInfo = document.createElement('div')\n    this.bottombarInfo.className = 'bottombar-info'\n    this.bottombarMenu = document.createElement('div')\n    this.bottombarMenu.className = 'bottombar-menu'\n    const bottombarMapWrap = document.createElement('div')\n    bottombarMapWrap.className = 'bottombar-map-wrap'\n    this.bottombarMap = document.createElement('div')\n    this.bottombarMap.className = 'bottombar-map'\n    this.bottombarMap.addEventListener('pointerdown', evt => {\n      const {\n        context: { controls },\n      } = this\n      this.mouseHoldTimeout = setTimeout(() => {\n        this.longClick = true\n        const minimapFactor = this.getMinimapFactor()\n        const rect = evt.target.getBoundingClientRect()\n        const x = (evt.clientX - rect.left - rect.width / 2) * minimapFactor\n        const y = (evt.clientY - rect.top - 3) * minimapFactor\n        controls.setCamera(x, y)\n      }, LONG_CLICK_DURATION)\n    })\n    this.bottombarMap.addEventListener('pointerup', evt => {\n      const {\n        context: { player, controls, map },\n      } = this\n      clearTimeout(this.mouseHoldTimeout)\n      if (controls.mouseBuilding || controls.mouseRectangle || this.longClick) {\n        this.longClick = false\n        return\n      }\n      this.longClick = false\n      const minimapFactor = this.getMinimapFactor()\n      const rect = evt.target.getBoundingClientRect()\n      const x = (evt.clientX - rect.left - rect.width / 2) * minimapFactor\n      const y = (evt.clientY - rect.top - 3) * minimapFactor\n\n      if (player?.selectedUnits?.length) {\n        const pos = isometricToCartesian(x, y)\n        const i = Math.min(Math.max(pos[0], 0), map.size)\n        const j = Math.min(Math.max(pos[1], 0), map.size)\n        if (map.grid[i] && map.grid[i][j]) {\n          const cell = map.grid[i][j]\n          controls.sendUnits(cell)\n        }\n      } else {\n        controls.setCamera(x, y)\n      }\n    })\n    bottombarMapWrap.appendChild(this.bottombarMap)\n\n    this.terrainMinimap = document.createElement('canvas')\n    this.playersMinimap = []\n    this.resourcesMinimap = document.createElement('canvas')\n    this.cameraMinimap = document.createElement('canvas')\n    this.cameraMinimap.style.zIndex = 1\n\n    this.bottombarMap.appendChild(this.terrainMinimap)\n    this.bottombarMap.appendChild(this.resourcesMinimap)\n    this.bottombarMap.appendChild(this.cameraMinimap)\n    this.bottombar.appendChild(this.bottombarInfo)\n    this.bottombar.appendChild(this.bottombarMenu)\n    this.bottombar.appendChild(bottombarMapWrap)\n    document.body.appendChild(this.bottombar)\n\n    this.toggled = false\n    this.toggle = document.createElement('div')\n    this.toggle.className = 'toggle'\n    this.toggle.innerText = 'x'\n    this.toggle.addEventListener('pointerdown', evt => {\n      evt.preventDefault()\n      if (this.toggled) {\n        this.toggle.innerText = 'x'\n        this.bottombar.style.display = 'grid'\n        this.toggled = false\n      } else {\n        this.bottombar.style.display = 'none'\n        this.toggle.innerText = 'o'\n        this.toggled = true\n      }\n      evt.stopPropagation()\n    })\n    IS_MOBILE && document.body.prepend(this.toggle)\n\n    this.updatePlayerMiniMap = throttle(this.updatePlayerMiniMapEvt, 500)\n    this.updateResourcesMiniMap = throttle(this.updateResourcesMiniMapEvt, 500)\n    this.updateCameraMiniMap = throttle(this.updateCameraMiniMapEvt, 100)\n\n    this.miniMapAlpha = 1.284\n    this.updateTopbar()\n  }\n\n  destroy() {\n    this.bottombar.remove()\n    this.topbar.remove()\n  }\n\n  init() {\n    this.initMiniMap()\n    this.updateTopbar()\n  }\n\n  getMinimapFactor() {\n    const {\n      context: { map },\n    } = this\n    const mapWidth = CELL_WIDTH / 2 + (map.size * CELL_WIDTH) / 2\n    return (mapWidth / 234) * 2\n  }\n\n  initMiniMap() {\n    const {\n      context: { map },\n    } = this\n\n    const context = this.terrainMinimap.getContext('2d')\n    const cameraContext = this.cameraMinimap.getContext('2d')\n    const resourceContext = this.resourcesMinimap.getContext('2d')\n\n    const minimapFactor = this.getMinimapFactor() / this.miniMapAlpha\n    const mapWidth = CELL_WIDTH / 2 + (map.size * CELL_WIDTH) / 2\n    const translate = mapWidth / 2 / minimapFactor\n    context.translate(translate, 0)\n    cameraContext.translate(translate, 0)\n    resourceContext.translate(translate, 0)\n\n    if (map.revealEverything || map.revealTerrain) {\n      this.revealTerrainMinimap()\n    }\n  }\n\n  revealTerrainMinimap() {\n    const {\n      context: { map },\n    } = this\n\n    const canvas = this.terrainMinimap\n    const context = canvas.getContext('2d')\n\n    const minimapFactor = this.getMinimapFactor() / this.miniMapAlpha\n    const mapWidth = CELL_WIDTH / 2 + (map.size * CELL_WIDTH) / 2\n    const translate = mapWidth / 2 / minimapFactor\n\n    context.clearRect(-translate, 0, canvas.width, canvas.height)\n\n    for (let i = 0; i <= map.size; i++) {\n      for (let j = 0; j <= map.size; j++) {\n        const cell = map.grid[i][j]\n        const x = cell.x\n        const y = cell.y\n        canvasDrawDiamond(\n          context,\n          x / minimapFactor + translate,\n          y / minimapFactor,\n          CELL_WIDTH / minimapFactor + 1,\n          CELL_HEIGHT / minimapFactor + 1,\n          cell.color\n        )\n      }\n    }\n  }\n\n  updateTerrainMiniMap(i, j) {\n    const {\n      context: { map },\n    } = this\n\n    const canvas = this.terrainMinimap\n    const context = canvas.getContext('2d')\n\n    const minimapFactor = this.getMinimapFactor() / this.miniMapAlpha\n    const mapWidth = CELL_WIDTH / 2 + (map.size * CELL_WIDTH) / 2\n    const translate = mapWidth / 2 / minimapFactor\n\n    const cell = map.grid[i][j]\n    let color = cell.color\n\n    const x = cell.x\n    const y = cell.y\n    canvasDrawDiamond(\n      context,\n      x / minimapFactor + translate,\n      y / minimapFactor,\n      CELL_WIDTH / minimapFactor + 1,\n      CELL_HEIGHT / minimapFactor + 1,\n      color\n    )\n\n    if (cell.has && cell.has.family === 'resource') {\n      this.updateResourceMiniMap(cell.has)\n    }\n  }\n\n  updateResourceMiniMap(resource) {\n    const {\n      context: { map },\n    } = this\n\n    const canvas = this.resourcesMinimap\n    const context = canvas.getContext('2d')\n\n    const squareSize = 4\n    const minimapFactor = this.getMinimapFactor() / this.miniMapAlpha\n    const mapWidth = CELL_WIDTH / 2 + (map.size * CELL_WIDTH) / 2\n    const translate = mapWidth / 2 / minimapFactor\n\n    const finalX = resource.x / minimapFactor - squareSize / 2\n    const finalY = resource.y / minimapFactor - squareSize / 2\n    canvasDrawRectangle(context, finalX + translate, finalY, squareSize, squareSize, resource.color)\n  }\n\n  updateResourcesMiniMapEvt() {\n    const {\n      context: { map, player },\n    } = this\n\n    const canvas = this.resourcesMinimap\n    const context = canvas.getContext('2d')\n\n    const squareSize = 4\n    const minimapFactor = this.getMinimapFactor() / this.miniMapAlpha\n    const mapWidth = CELL_WIDTH / 2 + (map.size * CELL_WIDTH) / 2\n    const translate = mapWidth / 2 / minimapFactor\n\n    context.clearRect(-translate, 0, canvas.width, canvas.height)\n\n    map.resources.forEach(resource => {\n      const cell = player?.views?.[resource.i]?.[resource.j]\n      if (resource.color && (cell?.viewed || map.revealEverything)) {\n        const finalX = resource.x / minimapFactor - squareSize / 2\n        const finalY = resource.y / minimapFactor - squareSize / 2\n        canvasDrawRectangle(context, finalX + translate, finalY, squareSize, squareSize, resource.color)\n      }\n    })\n  }\n\n  updateCameraMiniMapEvt() {\n    const {\n      context: { app, map, controls },\n    } = this\n\n    const canvas = this.cameraMinimap\n    const context = canvas.getContext('2d')\n\n    const minimapFactor = this.getMinimapFactor() / this.miniMapAlpha\n    const mapWidth = CELL_WIDTH / 2 + (map.size * CELL_WIDTH) / 2\n    const translate = mapWidth / 2 / minimapFactor\n\n    context.clearRect(-translate, 0, canvas.width, canvas.height)\n\n    const x = controls.camera.x / minimapFactor\n    const y = controls.camera.y / minimapFactor\n    const w = app.screen.width / minimapFactor\n    const h = app.screen.height / minimapFactor\n    canvasDrawStrokeRectangle(context, x + translate, y, w, h, 'white')\n  }\n\n  updatePlayerMiniMapEvt(owner) {\n    if (!owner) {\n      return\n    }\n\n    const {\n      context: { map },\n    } = this\n\n    const squareSize = 4\n    const playerMinimap = this.playersMinimap.find(({ id }) => id === `minimap-${owner.label}`)\n    const color = owner.colorHex\n\n    let canvas\n    let context\n\n    const minimapFactor = this.getMinimapFactor() / this.miniMapAlpha\n    const mapWidth = CELL_WIDTH / 2 + (map.size * CELL_WIDTH) / 2\n    const translate = mapWidth / 2 / minimapFactor\n\n    if (playerMinimap) {\n      canvas = playerMinimap.canvas\n      context = playerMinimap.context\n    } else {\n      canvas = document.createElement('canvas')\n      context = canvas.getContext('2d')\n      context.translate(translate, 0)\n      this.playersMinimap.push({\n        id: `minimap-${owner.label}`,\n        canvas,\n        context,\n      })\n      this.bottombarMap.appendChild(canvas)\n    }\n\n    context.clearRect(-translate, 0, canvas.width, canvas.height)\n\n    owner.buildings.forEach(({ x, y, size, selected }) => {\n      const finalSize = squareSize + size\n      const finalX = x / minimapFactor - finalSize / 2\n      const finalY = y / minimapFactor - finalSize / 2\n      canvasDrawRectangle(context, finalX + translate, finalY, finalSize, finalSize, selected ? 'white' : color)\n    })\n\n    owner.units.forEach(({ x, y, selected }) => {\n      const finalX = x / minimapFactor - squareSize / 2\n      const finalY = y / minimapFactor - squareSize / 2\n      canvasDrawRectangle(context, finalX + translate, finalY, squareSize, squareSize, selected ? 'white' : color)\n    })\n  }\n\n  getMessage(cost) {\n    const {\n      context: { player },\n    } = this\n    const resource = Object.keys(cost).find(prop => player[prop] < cost[prop])\n    return `You need more ${resource} !`\n  }\n\n  showMessage(message) {\n    const {\n      context: { gamebox },\n    } = this\n    if (document.getElementById('msg')) {\n      document.getElementById('msg').remove()\n    }\n    const box = document.createElement('div')\n    box.id = 'msg'\n    box.className = 'message'\n    Object.assign(box.style, {\n      bottom: this.bottombar.clientHeight + 5 + 'px',\n    })\n    const msg = document.createElement('span')\n    msg.textContent = message\n    msg.className = 'message-content'\n\n    box.appendChild(msg)\n    gamebox.appendChild(box)\n    setTimeout(() => {\n      box.remove()\n    }, 3000)\n  }\n\n  setResourceBox(name) {\n    const box = document.createElement('div')\n    box.className = 'resource'\n\n    const img = document.createElement('img')\n    img.className = 'resource-content'\n    img.src = this.icons[name]\n\n    this[name] = document.createElement('div')\n    box.appendChild(img)\n    box.appendChild(this[name])\n    this.resources.appendChild(box)\n  }\n\n  updateBottombar() {\n    const {\n      context: { player },\n    } = this\n    if (player.selectedBuilding || player.selectedUnit) {\n      this.setBottombar(player.selectedBuilding || player.selectedUnit)\n    }\n  }\n\n  updateTopbar() {\n    const {\n      context: { player },\n    } = this\n    const t = {\n      0: 'Stone Age',\n      1: 'Tool Age',\n      2: 'Bronze Age',\n      3: 'Iron Age',\n    }\n    ;['wood', 'food', 'stone', 'gold', 'age'].forEach(prop => {\n      const val = Math.min((player && player[prop]) || 0, 99999)\n      this[prop].textContent = prop === 'age' ? t[val] : val\n    })\n  }\n\n  resetInfo() {\n    this.bottombarInfo.textContent = ''\n    this.bottombarInfo.style.background = 'transparent'\n  }\n\n  generateInfo(selection) {\n    this.resetInfo()\n    this.bottombarInfo.style.background = 'black'\n    if (typeof selection.interface.info === 'function') {\n      selection.interface.info(this.bottombarInfo)\n    }\n  }\n\n  updateInfo(target, action) {\n    const targetElement = this.bottombarInfo.querySelector(`[id=${target}]`)\n    if (!targetElement) {\n      return\n    }\n    return typeof action !== 'function' ? (targetElement.textContent = action) : action(targetElement)\n  }\n\n  updateButtonContent(target, action) {\n    const targetElement = this.bottombarMenu.querySelector(`[id=${target}]`)\n    if (!targetElement) {\n      return\n    }\n    const contentElement = targetElement.querySelector('[id=content]')\n    if (!contentElement) {\n      return\n    }\n    return typeof action !== 'function' ? (contentElement.textContent = action) : action(contentElement)\n  }\n\n  toggleButtonCancel(target, value) {\n    const element = this.bottombarMenu.querySelector(`[id=${target}-cancel]`)\n    if (!element) {\n      return\n    }\n    element.style.display = value ? 'block' : 'none'\n  }\n\n  setBottombar(selection = null) {\n    const {\n      context: { controls, player },\n    } = this\n\n    this.resetInfo()\n    this.bottombarMenu.textContent = ''\n    this.selection = selection\n    if (controls.mouseBuilding) {\n      controls.removeMouseBuilding()\n    }\n    if (selection && selection.interface) {\n      this.generateInfo(selection)\n      if (selection.family === 'building') {\n        if (!selection.isBuilt) {\n          setMenuRecurs(selection, this.bottombarMenu, [])\n        } else if (selection.technology) {\n          setMenuRecurs(selection, this.bottombarMenu, [\n            {\n              icon: 'assets/interface/50721/003_50721.png',\n              id: `${type}-cancel`,\n              onClick: selection => {\n                sound.play('5036')\n                selection.cancelTechnology()\n              },\n            },\n          ])\n        } else {\n          setMenuRecurs(selection, this.bottombarMenu, selection.interface.menu || [])\n        }\n      } else {\n        setMenuRecurs(selection, this.bottombarMenu, selection.interface.menu || [])\n      }\n    }\n    function setMenuRecurs(selection, element, menu, parent) {\n      menu\n        .filter(btn => !btn.hide || !btn.hide())\n        .forEach((btn, index) => {\n          const box = document.createElement('div')\n          box.className = 'bottombar-menu-box'\n          box.id = btn.id || `btn-${index}`\n          if (typeof btn.onCreate === 'function') {\n            btn.onCreate(selection, box)\n          } else {\n            const img = document.createElement('img')\n            img.src = typeof btn.icon === 'function' ? btn.icon() : btn.icon\n            img.className = 'img'\n            box.appendChild(img)\n          }\n\n          if (btn.children) {\n            box.addEventListener('pointerup', () => {\n              sound.play('5036')\n              element.textContent = ''\n              controls.removeMouseBuilding()\n              setMenuRecurs(selection, element, btn.children, menu)\n            })\n          } else if (typeof btn.onClick === 'function') {\n            box.addEventListener('pointerup', evt => {\n              sound.play('5036')\n              btn.onClick(selection, evt)\n            })\n          }\n          element.appendChild(box)\n        })\n      if (parent || selection.selected) {\n        const back = document.createElement('div')\n        back.className = 'bottombar-menu-box'\n        const img = document.createElement('img')\n        img.className = 'img'\n        back.id = 'interfaceBackBtn'\n        img.src = 'assets/interface/50721/010_50721.png'\n        if (parent) {\n          back.addEventListener('pointerup', () => {\n            sound.play('5036')\n            element.textContent = ''\n            controls.removeMouseBuilding()\n            setMenuRecurs(selection, element, parent)\n          })\n        } else {\n          back.addEventListener('pointerup', () => {\n            sound.play('5036')\n            controls.removeMouseBuilding()\n            player.unselectAll()\n          })\n        }\n        back.appendChild(img)\n        element.appendChild(back)\n      }\n    }\n  }\n\n  getUnitButton(type) {\n    const {\n      context: { player },\n    } = this\n    const unit = player.config.units[type]\n    return {\n      id: type,\n      icon: () => getIconPath(unit.icon),\n      hide: () => (unit.conditions || []).some(condition => !isValidCondition(condition, player)),\n      onCreate: (selection, element) => {\n        const div = document.createElement('div')\n        div.className = 'bottombar-menu-column'\n        const cancel = document.createElement('img')\n        cancel.id = `${type}-cancel`\n        cancel.className = 'img'\n        cancel.src = 'assets/interface/50721/003_50721.png'\n        if (!selection.queue.filter(q => q === type).length) {\n          cancel.style.display = 'none'\n        }\n        cancel.addEventListener('pointerup', () => {\n          sound.play('5036')\n          for (let i = 0; i < selection.queue.length; i++) {\n            if (selection.queue[i] === type) {\n              refundCost(player, unit.cost)\n            }\n          }\n          this.updateTopbar()\n          selection.queue = selection.queue.filter(q => q !== type)\n          if (selection.queue[0] !== type) {\n            this.updateButtonContent(type, '')\n            this.toggleButtonCancel(type, false)\n          }\n        })\n        const img = document.createElement('img')\n        img.src = getIconPath(unit.icon)\n        img.className = 'img'\n        img.addEventListener('pointerup', () => {\n          sound.play('5036')\n          if (canAfford(player, unit.cost)) {\n            if (player.population >= player.POPULATION_MAX) {\n              this.showMessage('You need to build more houses')\n            }\n            this.toggleButtonCancel(type, true)\n            selection.buyUnit(type)\n          } else {\n            this.showMessage(this.getMessage(unit.cost))\n          }\n        })\n        const queue = selection.queue.filter(queue => queue === type).length\n        const counter = document.createElement('div')\n        counter.id = 'content'\n        counter.textContent = queue || ''\n        counter.style.padding = '1px'\n        counter.style.position = 'absolute'\n        div.appendChild(img)\n        div.appendChild(cancel)\n        element.appendChild(div)\n        element.appendChild(counter)\n      },\n    }\n  }\n\n  getBuildingButton(type) {\n    const {\n      context: { controls, player },\n    } = this\n    const config = player.config.buildings[type]\n    return {\n      id: type,\n      icon: () => {\n        const assets = getBuildingAsset(type, player, Assets)\n        return getIconPath(assets.icon)\n      },\n      hide: () => (config.conditions || []).some(condition => !isValidCondition(condition, player)),\n      onClick: () => {\n        const assets = getBuildingAsset(type, player, Assets)\n        controls.removeMouseBuilding()\n        if (canAfford(player, config.cost)) {\n          controls.setMouseBuilding({ ...config, ...assets, type })\n        } else {\n          this.showMessage(this.getMessage(config.cost))\n        }\n      },\n    }\n  }\n\n  getTechnologyButton(type) {\n    const {\n      context: { controls, player },\n    } = this\n    const config = player.techs[type]\n    return {\n      icon: getIconPath(config.icon),\n      id: type,\n      hide: () =>\n        (config.conditions || []).some(\n          condition => player.technologies.includes(type) || !isValidCondition(condition, player)\n        ),\n      onClick: selection => {\n        controls.removeMouseBuilding()\n        if (canAfford(player, config.cost)) {\n          selection.buyTechnology(type)\n        } else {\n          this.showMessage(this.getMessage(config.cost))\n        }\n      },\n    }\n  }\n}\n","import { sound } from '@pixi/sound'\nimport { Container, Graphics, AnimatedSprite, Assets, Sprite } from 'pixi.js'\nimport {\n  isometricToCartesian,\n  pointIsBetweenTwoPoint,\n  pointsDistance,\n  pointInRectangle,\n  getPlainCellsAroundPoint,\n  changeSpriteColor,\n  getTexture,\n  randomItem,\n} from '../lib'\nimport { COLOR_WHITE, COLOR_RED, CELL_WIDTH, CELL_HEIGHT, MAX_SELECT_UNITS, ACCELERATOR } from '../constants'\n\nexport default class Controls extends Container {\n  constructor(context) {\n    super()\n\n    this.context = context\n\n    const { map, gamebox } = context\n\n    this.sortableChildren = true\n\n    this.mouse = {\n      x: 0,\n      y: 0,\n      prevent: false,\n    }\n\n    this.camera = {\n      x: 0,\n      y: 0,\n    }\n\n    this.visibleCells = new Set()\n\n    this.setCamera(Math.floor(map.size / 2), Math.floor(map.size / 2))\n\n    this.mouseHoldTimeout\n    this.keysPressed = {}\n    this.keyInterval\n    this.keySpeed = 0\n    this.eventMode = 'auto'\n    this.allowMove = false\n    this.allowClick = false\n    this.mouseRectangle\n    this.mouseTouch\n    this.mouseDrag = false\n    this.moveCameraInterval\n\n    this.minimapRectangle = new Graphics()\n    this.addChild(this.minimapRectangle)\n\n    document.addEventListener('mousemove', evt => this.moveCameraWithMouse(evt))\n    document.addEventListener('mouseout', () => clearInterval(this.moveCameraInterval))\n    document.addEventListener('keydown', evt => this.onKeyDown(evt))\n    document.addEventListener('keyup', evt => this.onKeyUp(evt))\n    gamebox.addEventListener('touchstart', evt => this.onTouchStart(evt))\n    gamebox.addEventListener('touchend', evt => this.onTouchEnd(evt))\n    gamebox.addEventListener('touchmove', evt => this.onTouchMove(evt))\n    gamebox.addEventListener('mousemove', evt => this.onMouseMove(evt))\n    gamebox.addEventListener('mousedown', evt => this.onMouseDown(evt))\n    gamebox.addEventListener('mouseup', evt => this.onMouseUp(evt))\n  }\n\n  destroy() {\n    const {\n      context: { gamebox },\n    } = this\n\n    document.removeEventListener('mousemove', evt => this.moveCameraWithMouse(evt))\n    document.removeEventListener('mouseout', () => clearInterval(this.moveCameraInterval))\n    document.removeEventListener('keydown', evt => this.onKeyDown(evt))\n    document.removeEventListener('keyup', evt => this.onKeyUp(evt))\n    gamebox.removeEventListener('touchstart', evt => this.onTouchStart(evt))\n    gamebox.removeEventListener('touchend', evt => this.onTouchEnd(evt))\n    gamebox.removeEventListener('touchmove', evt => this.onTouchMove(evt))\n    gamebox.removeEventListener('mousemove', evt => this.onMouseMove(evt))\n    gamebox.removeEventListener('mousedown', evt => this.onMouseDown(evt))\n    gamebox.removeEventListener('mouseup', evt => this.onMouseUp(evt))\n  }\n\n  onKeyDown(evt) {\n    if (evt.key === 'Delete' || evt.keyCode === 8) {\n      const {\n        context: { player },\n      } = this\n      for (let i = 0; i < player.selectedUnits.length; i++) {\n        player.selectedUnits[i].die()\n      }\n      if (player.selectedBuilding) {\n        player.selectedBuilding.die()\n      }\n      return\n    }\n\n    const handleMoveCamera = () => {\n      if (!this.keyInterval) {\n        this.keyInterval = setInterval(() => {\n          let double = false\n          if (Object.values(this.keysPressed).filter(Boolean).length > 1) {\n            double = true\n          }\n          if (this.keySpeed < 4) {\n            this.keySpeed += 0.2\n          }\n          if (this.keysPressed['ArrowLeft']) {\n            this.moveCamera('left', this.keySpeed, double)\n          }\n          if (this.keysPressed['ArrowUp']) {\n            this.moveCamera('up', this.keySpeed, double)\n          }\n          if (this.keysPressed['ArrowDown']) {\n            this.moveCamera('down', this.keySpeed, double)\n          }\n          if (this.keysPressed['ArrowRight']) {\n            this.moveCamera('right', this.keySpeed, double)\n          }\n        }, 1)\n      }\n    }\n    if (!evt.repeat) {\n      this.keysPressed[evt.key] = true\n    }\n    const controlsMap = ['ArrowLeft', 'ArrowRight', 'ArrowDown', 'ArrowUp']\n    if (controlsMap.includes(evt.key)) {\n      handleMoveCamera()\n    }\n  }\n\n  onKeyUp(evt) {\n    if (!evt.repeat) {\n      delete this.keysPressed[evt.key]\n    }\n    if (!Object.values(this.keysPressed).filter(Boolean).length) {\n      clearInterval(this.keyInterval)\n      this.keyInterval = null\n      this.keySpeed = 0\n    }\n  }\n\n  onTouchStart(evt) {\n    const touch = evt.touches[0]\n    if (evt.touches.length === 2) {\n      this.mouseTouch = {\n        x: touch.pageX,\n        y: touch.pageY,\n      }\n    } else {\n      this.onMouseDown(touch)\n    }\n  }\n\n  onTouchMove(evt) {\n    const touch = evt.touches[0]\n    if (evt.touches.length === 2) {\n      this.mouse.x = touch.pageX\n      this.mouse.y = touch.pageY\n\n      if (this.mouseTouch) {\n        const speedX = Math.abs(this.mouse.x - this.mouseTouch.x) * 2\n        const speedY = Math.abs(this.mouse.y - this.mouseTouch.y) * 2\n        if (this.mouse.x > this.mouseTouch.x) {\n          this.moveCamera('left', speedX, false)\n        }\n        if (this.mouse.y > this.mouseTouch.y) {\n          this.moveCamera('up', speedY, false)\n        }\n        if (this.mouse.y < this.mouseTouch.y) {\n          this.moveCamera('down', speedY, false)\n        }\n        if (this.mouse.x < this.mouseTouch.x) {\n          this.moveCamera('right', speedX, false)\n        }\n      }\n      this.mouseTouch = {\n        x: this.mouse.x,\n        y: this.mouse.y,\n      }\n    } else {\n      this.onMouseMove(touch)\n    }\n  }\n\n  onTouchEnd(evt) {\n    const touch = evt.changedTouches[0]\n    if (evt.changedTouches.length === 1) {\n      this.onMouseUp(touch)\n    }\n  }\n\n  onMouseDown(evt) {\n    this.mouse.x = evt.pageX\n    this.mouse.y = evt.pageY\n    if (!this.isMouseInApp(evt)) {\n      return\n    }\n    this.pointerStart = {\n      x: this.mouse.x,\n      y: this.mouse.y,\n    }\n  }\n\n  onMouseMove(evt) {\n    const {\n      context: { map, player, app },\n    } = this\n\n    this.mouse.x = evt.pageX\n    this.mouse.y = evt.pageY\n\n    // Mouse building to place construction\n    if (this.mouseBuilding) {\n      const pos = isometricToCartesian(\n        this.mouse.x - map.x,\n        this.mouse.y >= app.screen.height ? app.screen.height - map.y : this.mouse.y - map.y\n      )\n      const i = Math.min(Math.max(pos[0], 0), map.size)\n      const j = Math.min(Math.max(pos[1], 0), map.size)\n      if (map.grid[i] && map.grid[i][j]) {\n        const cell = map.grid[i][j]\n        this.mouseBuilding.x = cell.x - this.camera.x\n        this.mouseBuilding.y = cell.y - this.camera.y\n        let isFree = true\n\n        const dist = this.mouseBuilding.size === 3 ? 1 : 0\n        if (this.mouseBuilding.buildOnWater) {\n          let waterBorderedCells = 0\n          let waterCells = 0\n          getPlainCellsAroundPoint(i, j, map.grid, dist, cell => {\n            if (cell.inclined || cell.solid || !cell.visible) {\n              isFree = false\n              return\n            }\n            if (cell.waterBorder) {\n              waterBorderedCells++\n            } else if (cell.category === 'Water') {\n              waterCells++\n            }\n          })\n          if (waterBorderedCells < 2 && waterCells < 4) {\n            isFree = false\n          }\n        } else {\n          getPlainCellsAroundPoint(i, j, map.grid, dist, cell => {\n            if (cell.category === 'Water' || cell.solid || cell.inclined || cell.border || !cell.visible) {\n              isFree = false\n              return\n            }\n          })\n        }\n        // Color image of mouse building depend on buildable or not\n        const sprite = this.mouseBuilding.getChildByLabel('sprite')\n        const color = this.mouseBuilding.getChildByLabel('color')\n        if (isFree) {\n          sprite.tint = COLOR_WHITE\n          if (color) {\n            color.tint = COLOR_WHITE\n          }\n        } else {\n          sprite.tint = COLOR_RED\n          if (color) {\n            color.tint = COLOR_RED\n          }\n        }\n        this.mouseBuilding.isFree = isFree\n      }\n      return\n    }\n\n    // Create and draw mouse selection\n    if (\n      !this.mouseRectangle &&\n      this.pointerStart &&\n      pointsDistance(this.mouse.x, this.mouse.y, this.pointerStart.x, this.pointerStart.y) > 5\n    ) {\n      this.mouseRectangle = {\n        x: this.pointerStart.x,\n        y: this.pointerStart.y,\n        width: 0,\n        height: 0,\n        graph: new Graphics(),\n      }\n      app.stage.addChild(this.mouseRectangle.graph)\n    }\n\n    if (this.mouseRectangle && !this.mouseBuilding) {\n      if (player.selectedUnits.length || player.selectedBuilding) {\n        player.unselectAll()\n      }\n      const graph = this.mouseRectangle.graph\n      graph.clear()\n\n      this.mouseRectangle.width = this.mouse.x - this.mouseRectangle.x\n      this.mouseRectangle.height = this.mouse.y - this.mouseRectangle.y\n\n      const x = Math.min(this.mouseRectangle.x, this.mouseRectangle.x + this.mouseRectangle.width)\n      const y = Math.min(this.mouseRectangle.y, this.mouseRectangle.y + this.mouseRectangle.height)\n      const w = Math.abs(this.mouseRectangle.width)\n      const h = Math.abs(this.mouseRectangle.height)\n\n      graph.rect(x, y, w, h).stroke(COLOR_WHITE)\n    }\n  }\n\n  onMouseUp(evt) {\n    const {\n      context: { menu, map, player },\n    } = this\n    this.pointerStart = null\n    clearTimeout(this.mouseHoldTimeout)\n    if (!this.isMouseInApp(evt) || this.mouse.prevent || this.mouseDrag) {\n      this.mouse.prevent = false\n      return\n    }\n    player?.selectedBuilding && player.unselectAll()\n    // Select units on mouse rectangle\n    if (this.mouseRectangle) {\n      let selectVillager\n      let countSelect = 0\n      player.unselectAll()\n      // Select units inside the rectangle\n      for (let i = 0; i < player.units.length; i++) {\n        const unit = player.units[i]\n        if (\n          player.selectedUnits.length < MAX_SELECT_UNITS &&\n          pointInRectangle(\n            unit.x - this.camera.x,\n            unit.y - this.camera.y,\n            this.mouseRectangle.x,\n            this.mouseRectangle.y,\n            this.mouseRectangle.width,\n            this.mouseRectangle.height,\n            true\n          )\n        ) {\n          unit.select()\n          countSelect++\n          if (unit.type === 'Villager') {\n            selectVillager = unit\n          }\n          player.selectedUnits.push(unit)\n        }\n      }\n      // Set our bottombar\n      if (countSelect) {\n        if (selectVillager) {\n          player.selectedUnit = selectVillager\n          menu.setBottombar(selectVillager)\n        } else {\n          // TODO SELECT UNITS THAT HAVE THE MOST FREQUENCY\n          player.selectedUnit = player.selectedUnits[0]\n          menu.setBottombar(player.selectedUnits[0])\n        }\n      }\n      // Reset mouse selection\n      if (this.mouseRectangle) {\n        this.mouseRectangle.graph.destroy(true)\n        this.mouseRectangle = null\n      }\n      return\n    }\n    if (this.isMouseInApp(evt)) {\n      const pos = isometricToCartesian(this.mouse.x - map.x, this.mouse.y - map.y)\n      const i = Math.min(Math.max(pos[0], 0), map.size)\n      const j = Math.min(Math.max(pos[1], 0), map.size)\n      if (map.grid[i] && map.grid[i][j]) {\n        const cell = map.grid[i][j]\n        if ((cell.solid || cell.has) && cell.visible) {\n          return\n        }\n        if (this.mouseBuilding) {\n          if (cell.inclined || cell.border) {\n            return\n          }\n          if (this.mouseBuilding.isFree) {\n            if (player.buyBuilding(i, j, this.mouseBuilding.type)) {\n              this.removeMouseBuilding()\n              if (menu.selection) {\n                menu.setBottombar(menu.selection)\n              }\n            }\n          }\n        } else if (player?.selectedUnits.length) {\n          // Pointer animation\n          const pointerSheet = Assets.cache.get('50405')\n          const pointer = new AnimatedSprite(pointerSheet.animations['animation'])\n          pointer.animationSpeed = 0.2 * ACCELERATOR\n          pointer.loop = false\n          pointer.anchor.set(0.5, 0.5)\n          pointer.x = this.mouse.x\n          pointer.y = this.mouse.y\n          pointer.allowMove = false\n          pointer.allowClick = false\n          pointer.eventMode = 'auto'\n          pointer.roundPixels = true\n          pointer.onComplete = () => {\n            pointer.destroy()\n          }\n          pointer.play()\n          this.addChild(pointer)\n          // Send units\n          this.sendUnits(cell)\n        }\n      }\n    }\n  }\n\n  sendUnits(cell) {\n    const {\n      context: { player, map },\n    } = this\n    const minX = Math.min(...player.selectedUnits.map(unit => unit.i))\n    const minY = Math.min(...player.selectedUnits.map(unit => unit.j))\n    const maxX = Math.max(...player.selectedUnits.map(unit => unit.i))\n    const maxY = Math.max(...player.selectedUnits.map(unit => unit.j))\n    const centerX = minX + Math.round((maxX - minX) / 2)\n    const centerY = minY + Math.round((maxY - minY) / 2)\n    let hasSentVillager = false\n    let hasSentSoldier = false\n    for (let u = 0; u < player.selectedUnits.length; u++) {\n      const unit = player.selectedUnits[u]\n      const distCenterX = unit.i - centerX\n      const distCenterY = unit.j - centerY\n      const finalX = cell.i + distCenterX\n      const finalY = cell.j + distCenterY\n      if (unit.type === 'Villager') {\n        hasSentVillager = true\n      } else {\n        hasSentSoldier = true\n      }\n      if (map.grid[finalX] && map.grid[finalX][finalY]) {\n        player.selectedUnits[u].sendTo(map.grid[finalX][finalY])\n      } else {\n        player.selectedUnits[u].sendTo(cell)\n      }\n    }\n    if (hasSentSoldier) {\n      const voice = randomItem(['5075', '5076', '5128', '5164'])\n      sound.play(voice)\n    } else if (hasSentVillager) {\n      sound.play('5006')\n    }\n  }\n\n  isMouseInApp(evt) {\n    return evt.target && (!evt.target.tagName || evt.target.closest('#game'))\n  }\n\n  removeMouseBuilding() {\n    if (!this.mouseBuilding) {\n      return\n    }\n    this.removeChild(this.mouseBuilding)\n    this.mouseBuilding.destroy()\n    this.mouseBuilding = null\n  }\n\n  setMouseBuilding(building) {\n    const {\n      context: { player },\n    } = this\n    this.mouseBuilding = new Container()\n    const sprite = Sprite.from(getTexture(building.images.final, Assets))\n    sprite.label = 'sprite'\n    this.mouseBuilding.addChild(sprite)\n    Object.keys(building).forEach(prop => {\n      this.mouseBuilding[prop] = building[prop]\n    })\n    this.mouseBuilding.x = this.mouse.x\n    this.mouseBuilding.y = this.mouse.y\n    this.mouseBuilding.label = 'mouseBuilding'\n    if (building.images.color) {\n      const color = Sprite.from(getTexture(building.images.color, Assets))\n      color.label = 'color'\n      changeSpriteColor(color, player.color)\n      this.mouseBuilding.addChild(color)\n    } else {\n      changeSpriteColor(sprite, player.color)\n    }\n    this.addChild(this.mouseBuilding)\n  }\n\n  moveCamera(dir, moveSpeed, isSpeedDivided) {\n    /**\n     * \t/A\\\n     * /   \\\n     *B     D\n     * \\   /\n     *  \\C/\n     */\n\n    const {\n      context: { map, app, menu },\n    } = this\n\n    const dividedSpeed = isSpeedDivided ? 1.5 : 1\n    const speed = (moveSpeed || 20) / dividedSpeed\n    const A = { x: CELL_WIDTH / 2 - this.camera.x, y: -this.camera.y }\n    const B = {\n      x: CELL_WIDTH / 2 - (map.size * CELL_WIDTH) / 2 - this.camera.x,\n      y: (map.size * CELL_HEIGHT) / 2 - this.camera.y,\n    }\n    const D = {\n      x: CELL_WIDTH / 2 + (map.size * CELL_WIDTH) / 2 - this.camera.x,\n      y: (map.size * CELL_HEIGHT) / 2 - this.camera.y,\n    }\n    const C = { x: CELL_WIDTH / 2 - this.camera.x, y: map.size * CELL_HEIGHT - this.camera.y }\n    const cameraCenter = {\n      x: this.camera.x + app.screen.width / 2 - this.camera.x,\n      y: this.camera.y + app.screen.height / 2 - this.camera.y,\n    }\n\n    if (dir === 'left') {\n      if (cameraCenter.x - 100 > B.x && pointIsBetweenTwoPoint(A, B, cameraCenter, 50)) {\n        this.camera.y += speed / (CELL_WIDTH / CELL_HEIGHT)\n        this.camera.x -= speed\n      } else if (cameraCenter.x - 100 > B.x && pointIsBetweenTwoPoint(B, C, cameraCenter, 50)) {\n        this.camera.y -= speed / (CELL_WIDTH / CELL_HEIGHT)\n        this.camera.x -= speed\n      } else if (cameraCenter.x - 100 > B.x) {\n        this.camera.x -= speed\n      }\n    } else if (dir === 'right') {\n      if (cameraCenter.x + 100 < D.x && pointIsBetweenTwoPoint(A, D, cameraCenter, 50)) {\n        this.camera.y += speed / (CELL_WIDTH / CELL_HEIGHT)\n        this.camera.x += speed\n      } else if (cameraCenter.x + 100 < D.x && pointIsBetweenTwoPoint(D, C, cameraCenter, 50)) {\n        this.camera.y -= speed / (CELL_WIDTH / CELL_HEIGHT)\n        this.camera.x += speed\n      } else if (cameraCenter.x + 100 < D.x) {\n        this.camera.x += speed\n      }\n    }\n    if (dir === 'up') {\n      if (cameraCenter.y - 50 > A.y && pointIsBetweenTwoPoint(A, B, cameraCenter, 50)) {\n        this.camera.y -= speed / (CELL_WIDTH / CELL_HEIGHT)\n        this.camera.x += speed\n      } else if (cameraCenter.y - 50 > A.y && pointIsBetweenTwoPoint(A, D, cameraCenter, 50)) {\n        this.camera.y -= speed / (CELL_WIDTH / CELL_HEIGHT)\n        this.camera.x -= speed\n      } else if (cameraCenter.y - 50 > A.y) {\n        this.camera.y -= speed\n      }\n    } else if (dir === 'down') {\n      if (cameraCenter.y + 50 < C.y && pointIsBetweenTwoPoint(D, C, cameraCenter, 50)) {\n        this.camera.y += speed / (CELL_WIDTH / CELL_HEIGHT)\n        this.camera.x -= speed\n      } else if (cameraCenter.y + 50 < C.y && pointIsBetweenTwoPoint(B, C, cameraCenter, 50)) {\n        this.camera.y += speed / (CELL_WIDTH / CELL_HEIGHT)\n        this.camera.x += speed\n      } else if (cameraCenter.y + 100 < C.y) {\n        this.camera.y += speed\n      }\n    }\n\n    menu.updateCameraMiniMap()\n    map.setCoordinate(-this.camera.x, -this.camera.y)\n    this.updateVisibleCells()\n  }\n\n  moveCameraWithMouse(evt) {\n    clearInterval(this.moveCameraInterval)\n    const dir = []\n    const mouse = {\n      x: evt.pageX,\n      y: evt.pageY,\n    }\n    const coef = 1\n    const moveDist = 10\n\n    const calcs = {\n      left: (0 + moveDist - mouse.x) * coef,\n      right: (mouse.x - (window.innerWidth - moveDist)) * coef,\n      up: (0 + moveDist - mouse.y) * coef,\n      down: (mouse.y - (window.innerHeight - moveDist)) * coef,\n    }\n    if (mouse.x >= 0 && mouse.x <= 0 + moveDist && mouse.y >= 0 && mouse.y <= window.innerHeight) {\n      dir.push('left')\n    } else if (\n      mouse.x > window.innerWidth - moveDist &&\n      mouse.x <= window.innerWidth &&\n      mouse.y >= 0 &&\n      mouse.y <= window.innerHeight\n    ) {\n      dir.push('right')\n    }\n    if (mouse.x >= 0 && mouse.x <= window.innerWidth && mouse.y >= 0 && mouse.y <= 0 + moveDist) {\n      dir.push('up')\n    } else if (\n      mouse.x >= 0 &&\n      mouse.x <= window.innerWidth &&\n      mouse.y > window.innerHeight - moveDist &&\n      mouse.y <= window.innerHeight\n    ) {\n      dir.push('down')\n    }\n    if (dir.length) {\n      this.moveCameraInterval = setInterval(() => {\n        dir.forEach(prop => {\n          this.moveCamera(prop, calcs[prop])\n        })\n      }, 20)\n    }\n  }\n\n  instanceInCamera(instance) {\n    const {\n      context: { app },\n    } = this\n    return pointInRectangle(instance.x, instance.y, this.camera.x, this.camera.y, app.screen.width, app.screen.height)\n  }\n\n  getCellOnCamera(callback) {\n    const {\n      context: { map, app },\n    } = this\n\n    const cameraFloor = {\n      x: Math.floor(this.camera.x),\n      y: Math.floor(this.camera.y),\n    }\n    const margin = CELL_WIDTH\n\n    for (let i = cameraFloor.x - margin; i <= cameraFloor.x + app.screen.width + margin; i += CELL_WIDTH / 2) {\n      for (let j = cameraFloor.y - margin; j <= cameraFloor.y + app.screen.height + margin; j += CELL_HEIGHT / 2) {\n        const [cartesianX, cartesianY] = isometricToCartesian(i, j)\n        const x = Math.min(Math.max(cartesianX, 0), map.size - 1) // Adjust for index bounds\n        const y = Math.min(Math.max(cartesianY, 0), map.size - 1)\n\n        // Ensure the coordinates are within bounds and call the callback\n        if (map.grid[x] && map.grid[x][y]) {\n          callback(map.grid[x][y])\n        }\n      }\n    }\n  }\n\n  updateVisibleCells() {\n    const { map, app } = this.context\n    const newVisible = new Set()\n    const margin = CELL_WIDTH // extra padding for offscreen cells\n\n    const startX = Math.floor(this.camera.x - margin)\n    const endX = Math.floor(this.camera.x + app.screen.width + margin)\n    const startY = Math.floor(this.camera.y - margin)\n    const endY = Math.floor(this.camera.y + app.screen.height + margin)\n\n    for (let i = startX; i <= endX; i += CELL_WIDTH / 2) {\n      for (let j = startY; j <= endY; j += CELL_HEIGHT / 2) {\n        const [cartX, cartY] = isometricToCartesian(i, j)\n        const x = Math.min(Math.max(cartX, 0), map.size - 1)\n        const y = Math.min(Math.max(cartY, 0), map.size - 1)\n\n        const cell = map.grid[x]?.[y]\n        if (cell) {\n          newVisible.add(cell)\n        }\n      }\n    }\n\n    // Hide cells that left the viewport\n    for (let cell of this.visibleCells) {\n      if (!newVisible.has(cell)) {\n        cell.visible = false\n        if (cell.has) cell.has.visible = false\n      }\n    }\n\n    // Show newly visible cells\n    for (let cell of newVisible) {\n      if (!this.visibleCells.has(cell)) {\n        cell.updateVisible()\n      }\n    }\n\n    this.visibleCells = newVisible\n  }\n\n  init() {\n    const {\n      context: { player, map },\n    } = this\n    // Set camera to player building else unit\n    if (player?.buildings?.length) {\n      this.setCamera(player.buildings[0].x, player.buildings[0].y)\n    } else if (player?.units?.length) {\n      this.setCamera(player.units[0].x, player.units[0].y)\n    } else {\n      this.setCamera(map.size / 2, map.size / 2)\n    }\n  }\n\n  setCamera(x, y, direct) {\n    const {\n      context: { map, app, menu },\n    } = this\n    this.camera = {\n      x: direct ? x : x - app.screen.width / 2,\n      y: direct ? y : y - app.screen.height / 2,\n    }\n    menu && menu.updateCameraMiniMap()\n    map.setCoordinate(-this.camera.x, -this.camera.y)\n    this.updateVisibleCells()\n  }\n}\n","import { Container } from 'pixi.js'\nimport Map from '../classes/map'\nimport Menu from '../classes/menu'\nimport Controls from '../classes/controls'\nimport { filterObject } from '../lib'\n\n/**\n * Main Display Object\n * @exports Game\n * @extends Container\n */\n\nexport default class Game extends Container {\n  constructor(app, gamebox) {\n    super()\n    this.context = {\n      app,\n      gamebox,\n      menu: null,\n      player: null,\n      players: [],\n      map: null,\n      controls: null,\n      paused: false,\n      save: () => this.save(),\n      load: evt => this.load(evt),\n      pause: () => this.togglePause(true),\n      resume: () => this.togglePause(false),\n    }\n    this.start()\n  }\n\n  start() {\n    const { context } = this\n\n    context.map = new Map(context)\n    context.controls = new Controls(context)\n    context.menu = new Menu(context)\n\n    context.map.generateMap()\n\n    context.players = context.map.generatePlayers()\n    context.player = context.players[0]\n    context.menu.init()\n    context.map.placePlayers()\n    context.map.stylishMap()\n    context.controls.init()\n\n    this.addChild(context.map)\n    this.addChild(context.controls)\n\n    window.addEventListener('keydown', evt => {\n      if (evt.key === 'p') {\n        this.context.paused ? context.resume() : context.pause()\n      }\n    })\n    window.addEventListener('resize', () => {\n      if (context.controls) {\n        context.controls.updateVisibleCells()\n      }\n      if (context.menu) {\n        context.menu.updateCameraMiniMap()\n      }\n    })\n  }\n\n  save() {\n    const cleanContext = context => {\n      const resourceData = resource => ({\n        ...filterObject(resource, [\n          'label',\n          'i',\n          'j',\n          'selected',\n          'type',\n          'isDead',\n          'quantity',\n          'isDestroyed',\n          'size',\n          'hitPoints',\n        ]),\n        textureName: (resource.textureName || '').split('.')[0],\n      })\n      const animalData = animal => ({\n        ...filterObject(animal, [\n          'label',\n          'type',\n          'i',\n          'j',\n          'x',\n          'y',\n          'z',\n          'hitPoints',\n          'path',\n          'work',\n          'realDest',\n          'path',\n          'zIndex',\n          'selected',\n          'degree',\n          'action',\n          'direction',\n          'currentSheet',\n          'size',\n          'inactif',\n          'isDead',\n          'isDestroyed',\n          'quantity',\n        ]),\n        currentFrame: animal.sprite?.currentFrame,\n        loop: animal.sprite?.loop,\n        dest: animal.dest && [animal.dest.i, animal.dest.i, animal.dest?.label],\n        previousDest: animal.previousDest && [animal.previousDest.i, animal.previousDest.i, animal.previousDest?.label],\n      })\n      const unitData = unit => ({\n        ...filterObject(unit, [\n          'label',\n          'type',\n          'i',\n          'j',\n          'x',\n          'y',\n          'z',\n          'hitPoints',\n          'path',\n          'work',\n          'realDest',\n          'path',\n          'selected',\n          'degree',\n          'action',\n          'loading',\n          'loadingType',\n          'direction',\n          'currentSheet',\n          'size',\n          'inactif',\n          'isDead',\n          'isDestroyed',\n        ]),\n        currentFrame: unit.sprite?.currentFrame,\n        loop: unit.sprite?.loop,\n        dest: unit.dest && [unit.dest.i, unit.dest.i, unit.dest?.label],\n        previousDest: unit.previousDest && [unit.previousDest.i, unit.previousDest.i, unit.previousDest?.label],\n      })\n      const buildingData = building => ({\n        ...filterObject(building, [\n          'label',\n          'i',\n          'j',\n          'type',\n          'selected',\n          'queue',\n          'technology',\n          'loading',\n          'isDead',\n          'isDestroyed',\n          'isBuilt',\n          'hitPoints',\n          'quantity',\n        ]),\n        isUsedBy: building.isUsedBy?.iname,\n      })\n      const playerData = player => ({\n        ...filterObject(player, [\n          'label',\n          'age',\n          'type',\n          'wood',\n          'food',\n          'stone',\n          'gold',\n          'civ',\n          'color',\n          'population',\n          'POPULATION_MAX',\n          'technologies',\n          'cellViewed',\n          'isPlayed',\n          'hasBuilt',\n        ]),\n        buildings: player.buildings.map(building => buildingData(building)),\n        units: player.units.map(unit => unitData(unit)),\n        corpses: player.corpses.map(corpse => unitData(corpse)),\n        views: player.views.map(view =>\n          view.map(cell => ({\n            ...filterObject(cell, ['i', 'j', 'viewed']),\n            viewBy: (cell.viewBy || []).map(unit => unit.label),\n          }))\n        ),\n      })\n      const cellData = cell => ({\n        ...filterObject(cell, [\n          'z',\n          'type',\n          'viewed',\n          'solid',\n          'visible',\n          'category',\n          'inclined',\n          'border',\n          'waterBorder',\n        ]),\n        has: cell.has?.label,\n        fogSprites: cell.fogSprites.map(({ textureSheet, colorSheet, colorName }) => ({\n          textureSheet,\n          colorSheet,\n          colorName,\n        })),\n      })\n      return {\n        camera: context.controls.camera,\n        players: context.players.map(player => playerData(player)),\n        resources: context.map.resources.map(resource => resourceData(resource)),\n        map: context.map.grid.map(line => line.map(cell => cellData(cell))),\n        animals: context.map.gaia.units.map(animal => animalData(animal)),\n      }\n    }\n\n    const json = cleanContext(this.context)\n    const dataStr = 'data:text/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(json))\n    const downloadAnchorNode = document.createElement('a')\n    downloadAnchorNode.setAttribute('href', dataStr)\n    downloadAnchorNode.setAttribute('download', `save_${new Date().toLocaleString('en-GB', { timeZone: 'UTC' })}.json`)\n    document.body.appendChild(downloadAnchorNode)\n    downloadAnchorNode.click()\n    downloadAnchorNode.remove()\n  }\n\n  load(json) {\n    this.context.controls.destroy()\n    this.context.menu.destroy()\n    this.removeChildren()\n    this.context = {\n      ...this.context,\n      player: null,\n      players: [],\n      map: null,\n      controls: null,\n      paused: false,\n    }\n    const { context } = this\n\n    context.map = new Map(context)\n    context.controls = new Controls(context)\n    context.menu = new Menu(context)\n\n    context.map.generateFromJSON(json)\n\n    this.addChild(context.map)\n    this.addChild(context.controls)\n  }\n\n  togglePause(pause) {\n    const { map, players } = this.context\n    if (pause) {\n      const div = document.createElement('div')\n      div.id = 'pause'\n      div.innerText = 'Pause'\n      document.body.appendChild(div)\n    } else {\n      document.getElementById('pause')?.remove()\n    }\n    for (let i = 0; i < map.gaia.units.length; i++) {\n      pause ? map.gaia.units[i].pause() : map.gaia.units[i].resume()\n    }\n    for (let i = 0; i < players.length; i++) {\n      const player = players[i]\n      for (let j = 0; j < player?.units?.length; j++) {\n        pause ? player.units[j].pause() : player.units[j].resume()\n      }\n      for (let j = 0; j < player?.buildings?.length; j++) {\n        pause ? player.buildings[j].pause() : player.buildings[j].resume()\n      }\n    }\n    this.context.paused = pause\n  }\n}\n","import { Assets, Container } from 'pixi.js'\n\n/**\n * Loading Screen\n *\n * @exports LoaderScreen\n */\n\nexport default class LoaderScreen extends Container {\n  constructor() {\n    super()\n    this.app\n\n    this.loadingDiv = document.createElement('div')\n    this.loadingDiv.className = 'loading'\n    document.body.prepend(this.loadingDiv)\n    this.done = () => {}\n  }\n\n  async start() {\n    return new Promise(async resolve => {\n      Assets.addBundle('config', {\n        config: 'assets/config.json',\n        greek: 'assets/greek.json',\n        technology: 'assets/technology.json',\n      })\n\n      Assets.addBundle('interface', {\n        50405: 'assets/interface/50405/texture.json',\n      })\n\n      Assets.addBundle('seeds', {\n        0: 'assets/seeds/0.txt',\n      })\n\n      Assets.addBundle('terrain', {\n        15000: 'assets/terrain/15000/texture.json',\n        15001: 'assets/terrain/15001/texture.json',\n        15002: 'assets/terrain/15002/texture.json',\n      })\n\n      Assets.addBundle('border', {\n        20000: 'assets/border/20000/texture.json',\n        20002: 'assets/border/20002/texture.json',\n      })\n\n      const graphics = [\n        '60',\n        '61',\n        '62',\n        '63',\n        '64',\n        '65',\n        '66',\n        '67',\n        '68',\n        '69',\n        '70',\n        '71',\n        '72',\n        '73',\n        '75',\n        '78',\n        '79',\n        '80',\n        '81',\n        '82',\n        '83',\n        '84',\n        '85',\n        '86',\n        '87',\n        '88',\n        '89',\n        '90',\n        '91',\n        '92',\n        '94',\n        '153',\n        '154',\n        '155',\n        '203',\n        '204',\n        '205',\n        '206',\n        '212',\n        '215',\n        '217',\n        '218',\n        '219',\n        '220',\n        '222',\n        '223',\n        '224',\n        '225',\n        '227',\n        '230',\n        '231',\n        '232',\n        '233',\n        '234',\n        '235',\n        '236',\n        '237',\n        '239',\n        '240',\n        '254',\n        '256',\n        '258',\n        '261',\n        '271',\n        '272',\n        '273',\n        '274',\n        '280',\n        '281',\n        '292',\n        '293',\n        '294',\n        '295',\n        '296',\n        '297',\n        '298',\n        '299',\n        '300',\n        '301',\n        '308',\n        '309',\n        '311',\n        '312',\n        '314',\n        '315',\n        '321',\n        '324',\n        '326',\n        '327',\n        '328',\n        '330',\n        '331',\n        '332',\n        '333',\n        '334',\n        '336',\n        '337',\n        '339',\n        '340',\n        '343',\n        '347',\n        '355',\n        '356',\n        '367',\n        '368',\n        '370',\n        '371',\n        '373',\n        '374',\n        '380',\n        '386',\n        '388',\n        '389',\n        '390',\n        '391',\n        '392',\n        '393',\n        '394',\n        '395',\n        '397',\n        '398',\n        '399',\n        '400',\n        '401',\n        '403',\n        '413',\n        '414',\n        '415',\n        '416',\n        '418',\n        '419',\n        '425',\n        '428',\n        '430',\n        '431',\n        '432',\n        '433',\n        '435',\n        '436',\n        '437',\n        '439',\n        '440',\n        '441',\n        '442',\n        '445',\n        '447',\n        '450',\n        '452',\n        '458',\n        '463',\n        '464',\n        '465',\n        '466',\n        '473',\n        '478',\n        '479',\n        '480',\n        '481',\n        '489',\n        '492',\n        '493',\n        '494',\n        '497',\n        '500',\n        '503',\n        '509',\n        '527',\n        '531',\n        '532',\n        '533',\n        '534',\n        '593',\n        '594',\n        '609',\n        '622',\n        '623',\n        '624',\n        '625',\n        '626',\n        '628',\n        '630',\n        '631',\n        '632',\n        '633',\n        '636',\n        '651',\n        '652',\n        '653',\n        '654',\n        '655',\n        '657',\n        '658',\n        '664',\n        '667',\n        '670',\n        '672',\n        '673',\n        '676',\n        '677',\n        '678',\n        '680',\n        '681',\n        '682',\n        '683',\n        '684',\n        '688',\n      ]\n\n      Assets.addBundle(\n        'graphics',\n        graphics.reduce(\n          (acc, g) => ({\n            ...acc,\n            [g]: `assets/graphics/${g}/texture.json`,\n          }),\n          {}\n        )\n      )\n\n      const sounds = [\n        '5002',\n        '5003',\n        '5005',\n        '5006',\n        '5008',\n        '5009',\n        '5010',\n        '5011',\n        '5012',\n        '5022',\n        '5027',\n        '5036',\n        '5044',\n        '5048',\n        '5054',\n        '5055',\n        '5056',\n        '5057',\n        '5058',\n        '5059',\n        '5060',\n        '5061',\n        '5062',\n        '5063',\n        '5064',\n        '5070',\n        '5075',\n        '5076',\n        '5085',\n        '5096',\n        '5107',\n        '5108',\n        '5118',\n        '5123',\n        '5125',\n        '5126',\n        '5128',\n        '5129',\n        '5132',\n        '5133',\n        '5138',\n        '5139',\n        '5140',\n        '5159',\n        '5142',\n        '5144',\n        '5164',\n        '5166',\n        '5169',\n        '5176',\n        '5178',\n        '5180',\n        '5186',\n        '5196',\n        '5201',\n        '5216',\n        '5217',\n        '5239',\n      ]\n\n      Assets.addBundle(\n        'sounds',\n        sounds.reduce(\n          (acc, g) => ({\n            ...acc,\n            [g]: `assets/sounds/${g}.wav`,\n          }),\n          {}\n        )\n      )\n\n      this.loadingDiv.innerHTML = 'Loading config..'\n      await Assets.loadBundle('config')\n      this.loadingDiv.innerHTML = 'Loading interface..'\n      await Assets.loadBundle('interface')\n      this.loadingDiv.innerHTML = 'Loading seeds..'\n      await Assets.loadBundle('seeds')\n      this.loadingDiv.innerHTML = 'Loading terrain..'\n      await Assets.loadBundle('terrain')\n      this.loadingDiv.innerHTML = 'Loading border..'\n      await Assets.loadBundle('border')\n      this.loadingDiv.innerHTML = 'Loading graphics..'\n      await Assets.loadBundle('graphics')\n      this.loadingDiv.innerHTML = 'Loading sounds..'\n      await Assets.loadBundle('sounds')\n\n      this.loadingDiv.remove()\n\n      resolve()\n    })\n  }\n}\n","import { Application } from 'pixi.js'\nimport './styles.css'\nimport Game from './screens/Game'\nimport Loader from './screens/Loader'\n;(async () => {\n  // Create a new PixiJS application\n  const app = new Application()\n\n  // Initialize the app with background color and auto-resize\n  await app.init({\n    width: window.innerWidth,\n    height: window.innerHeight,\n    background: 0x000000, // black background\n    resizeTo: window,\n    antialias: false, // faster\n    resolution: window.devicePixelRatio || 1,\n    autoDensity: true, // adjusts canvas for resolution\n    powerPreference: 'high-performance', // GPU hint\n  })\n\n  // Append the canvas to your game container\n  const gamebox = document.getElementById('game')\n  if (!gamebox) {\n    console.error('No #game container found')\n    return\n  }\n  gamebox.appendChild(app.canvas)\n\n  // Initialize loader\n  const loader = new Loader()\n  app.stage.addChild(loader)\n  await loader.start()\n\n  // Once assets are loaded, remove loader and start game\n  const game = new Game(app, gamebox)\n  app.stage.removeChild(loader)\n  app.stage.addChild(game)\n\n  // Optional: global pointermove listener\n  app.stage.on('pointermove', event => {\n    // event.data.global.x, event.data.global.y\n  })\n})()\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/.pnpm/css-loader@7.1.2_webpack@5.101.3/node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/.pnpm/css-loader@7.1.2_webpack@5.101.3/node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `:root {\n  --main-primary-color: #1d57a8;\n  --main-background-color: #12171ecf;\n  --main-border-color: transparent;\n  --main-border-radius: 2px;\n  --main-border-size: 0px;\n  --main-border-style: solid;\n  --main-shadow-color: rgba(0, 0, 0, 0.7);\n  --main-box-shadow: var(--main-shadow-color) 0px 0px 3px 0px;\n}\n\nhtml,\nbody,\ninput,\ntextarea,\nselect,\nbutton {\n  border-color: #5e5d5a;\n  color: #e5e0d8;\n  font-size: 12px;\n  text-shadow: 1px 1px black;\n  font-family: sans-serif;\n  -webkit-font-smoothing: none;\n}\n\nbody {\n  height: 100vh;\n  overflow: hidden;\n  margin: 0;\n  -webkit-user-select: none;\n  user-select: none;\n  background-color: black;\n}\n\nbutton,\n.input-file {\n  border: 1px solid var(--main-primary-color);\n  padding: 6px 15px;\n  border-radius: var(--main-border-radius);\n  position: relative;\n  cursor: pointer;\n  text-align: center;\n  background-color: transparent;\n  width: 200px;\n  transition: all 0.2s;\n}\nbutton:hover,\n.input-file:hover {\n  background-color: var(--main-primary-color);\n}\n.input-file {\n  width: calc(100% - 32px);\n}\n.input-file > input {\n  width: 200px;\n  cursor: pointer;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 99;\n  /*Opacity settings for all browsers*/\n  opacity: 0;\n  -moz-opacity: 0;\n  filter: progid:DXImageTransform.Microsoft.Alpha(opacity=0);\n}\n\n.loading {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n}\n\n#game {\n  flex: 1;\n}\n\n#pause {\n  position: absolute;\n  z-index: 1000;\n  font-size: 50px;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  margin-top: -66px;\n}\n\n.bar {\n  background: var(--main-background-color);\n  width: 100%;\n}\n\n.img {\n  object-fit: none;\n  height: 45px;\n  width: 45px;\n  border: var(--main-border-size) var(--main-border-style) var(--main-border-color);\n  border-radius: var(--main-border-radius);\n  box-shadow: var(--main-box-shadow);\n}\n\n.topbar {\n  position: absolute;\n  top: 0;\n  padding: 5px 10px;\n  display: grid;\n  font-weight: bold;\n  grid-template-columns: 33% 33% 33%;\n  width: calc(100% - 20px);\n  align-items: center;\n  justify-content: center;\n}\n\n.bottombar {\n  position: absolute;\n  bottom: 0;\n  display: grid;\n  height: 122px;\n  grid-template-columns: 120px auto 242px;\n  width: calc(100% - 10px);\n  grid-gap: 5px;\n  padding: 5px;\n}\n\n.bottombar-info {\n  position: relative;\n  border: var(--main-border-size) var(--main-border-style) var(--main-border-color);\n  border-radius: var(--main-border-radius);\n  box-shadow: var(--main-box-shadow);\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  padding: 2px;\n  gap: 1px;\n}\n\n.bottombar-info #icon {\n  object-fit: none;\n  height: 45px;\n  width: 45px;\n}\n\n.bottombar-info #infos {\n  position: absolute;\n  left: 45%;\n  top: 30px;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n}\n\n.bottombar-info #info {\n  display: flex;\n  align-items: center;\n  gap: 5px;\n}\n\n.bottombar-menu {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 5px;\n  padding: 5px 0;\n  overflow: auto;\n  max-width: 500px;\n}\n\n.bottombar-menu-column {\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n}\n\n.bottombar-menu-box {\n  position: relative;\n  display: flex;\n}\n\n.bottombar-map-wrap {\n  position: relative;\n  top: 2px;\n  filter: drop-shadow(0px 0px 3px var(--main-shadow-color));\n}\n\n.bottombar-map {\n  width: 100%;\n  height: 100%;\n  background: black;\n  clip-path: polygon(50% 1%, 100% 48%, 50% 96%, 0% 48%);\n}\n\n.bottombar-map canvas {\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n}\n\n.topbar-age {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.topbar-resources {\n  display: flex;\n  gap: 10px;\n}\n\n.topbar-options {\n  display: flex;\n  align-items: center;\n  justify-content: end;\n}\n\n.topbar-options-menu {\n  width: fit-content;\n  cursor: pointer;\n}\n\n.resource {\n  display: flex;\n  gap: 2px;\n  align-items: center;\n}\n\n.resource > div {\n  width: 40px;\n}\n\n.resource-content {\n  object-fit: none;\n  height: 13px;\n  width: 20px;\n  border: var(--main-border-size) var(--main-border-style) var(--main-border-color);\n  border-radius: var(--main-border-radius);\n  box-shadow: var(--main-box-shadow);\n}\n\n.message {\n  z-index: 1000;\n  position: fixed;\n  width: 100%;\n  text-align: center;\n}\n\n.message-content {\n  color: #da2424;\n  background: rgba(0, 0, 0, 0.4);\n  padding: 3px;\n}\n\n.resource-quantity {\n  position: absolute;\n  top: 20px;\n  left: 45%;\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n  gap: 5px;\n}\n\n.unit-loading {\n  position: absolute;\n  top: 52px;\n  left: 45%;\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n  gap: 5px;\n}\n\n.building-loading,\n#population {\n  position: absolute;\n  left: 40%;\n  top: 32px;\n  display: flex;\n  align-items: center;\n}\n\n.toggle {\n  position: fixed;\n  bottom: -119px;\n  right: 0;\n  transform: rotate(64deg);\n  height: 192px;\n  width: 100px;\n  border-top-left-radius: 3px;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 10;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.modal {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 1001;\n}\n\n.modal-content {\n  background: var(--main-background-color);\n  border-radius: var(--main-border-radius);\n  box-shadow: var(--main-box-shadow);\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n.modal-menu {\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding: 10px;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./app/styles.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\":root {\\n  --main-primary-color: #1d57a8;\\n  --main-background-color: #12171ecf;\\n  --main-border-color: transparent;\\n  --main-border-radius: 2px;\\n  --main-border-size: 0px;\\n  --main-border-style: solid;\\n  --main-shadow-color: rgba(0, 0, 0, 0.7);\\n  --main-box-shadow: var(--main-shadow-color) 0px 0px 3px 0px;\\n}\\n\\nhtml,\\nbody,\\ninput,\\ntextarea,\\nselect,\\nbutton {\\n  border-color: #5e5d5a;\\n  color: #e5e0d8;\\n  font-size: 12px;\\n  text-shadow: 1px 1px black;\\n  font-family: sans-serif;\\n  -webkit-font-smoothing: none;\\n}\\n\\nbody {\\n  height: 100vh;\\n  overflow: hidden;\\n  margin: 0;\\n  -webkit-user-select: none;\\n  user-select: none;\\n  background-color: black;\\n}\\n\\nbutton,\\n.input-file {\\n  border: 1px solid var(--main-primary-color);\\n  padding: 6px 15px;\\n  border-radius: var(--main-border-radius);\\n  position: relative;\\n  cursor: pointer;\\n  text-align: center;\\n  background-color: transparent;\\n  width: 200px;\\n  transition: all 0.2s;\\n}\\nbutton:hover,\\n.input-file:hover {\\n  background-color: var(--main-primary-color);\\n}\\n.input-file {\\n  width: calc(100% - 32px);\\n}\\n.input-file > input {\\n  width: 200px;\\n  cursor: pointer;\\n  height: 100%;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  z-index: 99;\\n  /*Opacity settings for all browsers*/\\n  opacity: 0;\\n  -moz-opacity: 0;\\n  filter: progid:DXImageTransform.Microsoft.Alpha(opacity=0);\\n}\\n\\n.loading {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  height: 100%;\\n}\\n\\n#game {\\n  flex: 1;\\n}\\n\\n#pause {\\n  position: absolute;\\n  z-index: 1000;\\n  font-size: 50px;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n  margin-top: -66px;\\n}\\n\\n.bar {\\n  background: var(--main-background-color);\\n  width: 100%;\\n}\\n\\n.img {\\n  object-fit: none;\\n  height: 45px;\\n  width: 45px;\\n  border: var(--main-border-size) var(--main-border-style) var(--main-border-color);\\n  border-radius: var(--main-border-radius);\\n  box-shadow: var(--main-box-shadow);\\n}\\n\\n.topbar {\\n  position: absolute;\\n  top: 0;\\n  padding: 5px 10px;\\n  display: grid;\\n  font-weight: bold;\\n  grid-template-columns: 33% 33% 33%;\\n  width: calc(100% - 20px);\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n.bottombar {\\n  position: absolute;\\n  bottom: 0;\\n  display: grid;\\n  height: 122px;\\n  grid-template-columns: 120px auto 242px;\\n  width: calc(100% - 10px);\\n  grid-gap: 5px;\\n  padding: 5px;\\n}\\n\\n.bottombar-info {\\n  position: relative;\\n  border: var(--main-border-size) var(--main-border-style) var(--main-border-color);\\n  border-radius: var(--main-border-radius);\\n  box-shadow: var(--main-box-shadow);\\n  overflow: hidden;\\n  display: flex;\\n  flex-direction: column;\\n  padding: 2px;\\n  gap: 1px;\\n}\\n\\n.bottombar-info #icon {\\n  object-fit: none;\\n  height: 45px;\\n  width: 45px;\\n}\\n\\n.bottombar-info #infos {\\n  position: absolute;\\n  left: 45%;\\n  top: 30px;\\n  display: flex;\\n  align-items: center;\\n  flex-direction: column;\\n}\\n\\n.bottombar-info #info {\\n  display: flex;\\n  align-items: center;\\n  gap: 5px;\\n}\\n\\n.bottombar-menu {\\n  display: flex;\\n  flex-wrap: wrap;\\n  gap: 5px;\\n  padding: 5px 0;\\n  overflow: auto;\\n  max-width: 500px;\\n}\\n\\n.bottombar-menu-column {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 5px;\\n}\\n\\n.bottombar-menu-box {\\n  position: relative;\\n  display: flex;\\n}\\n\\n.bottombar-map-wrap {\\n  position: relative;\\n  top: 2px;\\n  filter: drop-shadow(0px 0px 3px var(--main-shadow-color));\\n}\\n\\n.bottombar-map {\\n  width: 100%;\\n  height: 100%;\\n  background: black;\\n  clip-path: polygon(50% 1%, 100% 48%, 50% 96%, 0% 48%);\\n}\\n\\n.bottombar-map canvas {\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.topbar-age {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n.topbar-resources {\\n  display: flex;\\n  gap: 10px;\\n}\\n\\n.topbar-options {\\n  display: flex;\\n  align-items: center;\\n  justify-content: end;\\n}\\n\\n.topbar-options-menu {\\n  width: fit-content;\\n  cursor: pointer;\\n}\\n\\n.resource {\\n  display: flex;\\n  gap: 2px;\\n  align-items: center;\\n}\\n\\n.resource > div {\\n  width: 40px;\\n}\\n\\n.resource-content {\\n  object-fit: none;\\n  height: 13px;\\n  width: 20px;\\n  border: var(--main-border-size) var(--main-border-style) var(--main-border-color);\\n  border-radius: var(--main-border-radius);\\n  box-shadow: var(--main-box-shadow);\\n}\\n\\n.message {\\n  z-index: 1000;\\n  position: fixed;\\n  width: 100%;\\n  text-align: center;\\n}\\n\\n.message-content {\\n  color: #da2424;\\n  background: rgba(0, 0, 0, 0.4);\\n  padding: 3px;\\n}\\n\\n.resource-quantity {\\n  position: absolute;\\n  top: 20px;\\n  left: 45%;\\n  display: flex;\\n  align-items: center;\\n  flex-direction: row;\\n  gap: 5px;\\n}\\n\\n.unit-loading {\\n  position: absolute;\\n  top: 52px;\\n  left: 45%;\\n  display: flex;\\n  align-items: center;\\n  flex-direction: row;\\n  gap: 5px;\\n}\\n\\n.building-loading,\\n#population {\\n  position: absolute;\\n  left: 40%;\\n  top: 32px;\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.toggle {\\n  position: fixed;\\n  bottom: -119px;\\n  right: 0;\\n  transform: rotate(64deg);\\n  height: 192px;\\n  width: 100px;\\n  border-top-left-radius: 3px;\\n  background: rgba(0, 0, 0, 0.5);\\n  z-index: 10;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n.modal {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100vw;\\n  height: 100vh;\\n  background: rgba(0, 0, 0, 0.5);\\n  z-index: 1001;\\n}\\n\\n.modal-content {\\n  background: var(--main-background-color);\\n  border-radius: var(--main-border-radius);\\n  box-shadow: var(--main-box-shadow);\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n}\\n\\n.modal-menu {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 10px;\\n  padding: 10px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["CELL_WIDTH","CELL_HEIGHT","CELL_DEPTH","ACCELERATOR","STEP_TIME","IS_MOBILE","window","innerWidth","innerHeight","LONG_CLICK_DURATION","WORK_FOOD_TYPES","LOADING_FOOD_TYPES","COLOR_WHITE","COLOR_BLACK","COLOR_GREY","COLOR_RED","COLOR_ORANGE","COLOR_YELLOW","COLOR_GREEN","COLOR_BLUE","COLOR_INDIGO","COLOR_VIOLET","COLOR_BONE","COLOR_SHIP_GREY","COLOR_FOG","COLOR_FLASHY_GREEN","COLOR_ARROW","TYPE_ACTION","Stone","Gold","Berrybush","Tree","Fish","CORPSE_TIME","RUBBLE_TIME","MAX_SELECT_UNITS","POPULATION_MAX","e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","_regeneratorDefine","_invoke","enumerable","configurable","writable","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","_arrayLikeToArray","toString","slice","constructor","name","Array","from","test","next","push","isArray","Graphics","Texture","MultiColorReplaceFilter","getIconPath","id","split","index","concat","getBuildingTextureNameWithSize","size","getBuildingRubbleTextureNameWithSize","getBuildingAsset","type","owner","assets","path","cache","get","civ","toLowerCase","buildings","age","getTexture","_name$split","_name$split2","spritesheet","textures","Error","textureName","texture","hitArea","data","frames","colors","getHexColor","colorMap","blue","red","yellow","brown","orange","green","grey","cyan","changeSpriteColorDirectly","sprite","color","sourceColors","targetColors","baseTexture","resource","canvas","document","createElement","width","height","ctx","getContext","drawImage","frame","x","imageData","getImageData","sourceColorMap","Map","map","g","b","rgb","has","targetColor","putImageData","newTexture","changeSpriteColor","source","replacements","filter","tolerance","filters","drawInstanceBlinkingSelection","instance","selection","label","zIndex","poly","stroke","addChildAt","blink","alpha","duration","setTimeout","blinkSequence","_ref","_callee","_context","removeChild","canvasDrawRectangle","context","fillStyle","fillRect","canvasDrawStrokeRectangle","strokeStyle","strokeRect","canvasDrawDiamond","save","beginPath","moveTo","lineTo","closePath","fill","restore","onSpriteLoopAtFrame","cb","onFrameChange","currentFrame","refundCost","player","cost","_typeof","console","error","keys","forEach","prop","warn","payCost","canAfford","uuidv4","replace","randomValue","crypto","getRandomValues","Uint8Array","hexValue","formatNumber","nbr","cartesianToIsometric","Math","floor","isometricToCartesian","round","getPercentage","getValuePercentage","val","perc","average","pointIsBetweenTwoPoint","line1","line2","pnt","lineThickness","dx","dy","L2","dist","hypot","s","abs","sqrt","randomRange","min","max","random","randomItem","array","undefined","instancesDistance","useCartesian","pointsDistance","j","getInstanceZIndex","pos","z","diff","getInstanceDegree","getPointsDegree","x1","y1","x2","y2","tX","tY","atan2","PI","degreesToRadians","degrees","pointInRectangle","left","top","allDirection","cellIsDiag","src","target","degreeToDirection","degree","exports","entries","_ref2","exported","instanceContactInstance","isDestroyed","moveTowardPoint","speed","velX","velY","getFreeCellAroundPoint","grid","condition","maxDistance","distance","cells","getCellsAroundPoint","getInstanceClosestFreeCellPath","paths","cell","getInstancePath","reduce","shortest","current","maxZone","end","start","minX","maxX","minY","maxY","isCellReachable","solid","allowWaterCellCategory","category","cloneGrid","isFinish","openCells","closedCells","cloneEnd","cloneStart","_loop","lowestF","temp","previous","splice","indexOf","neighbour","validDiag","includes","tempG","h","pop","_toConsumableArray","getZoneInGridWithCondition","zone","_grid$i","isFree","surroundingCells","getPlainCellsAroundPoint","_iterator","_createForOfIteratorHelper","_step","surroundingCell","err","findInstancesInSight","instX","instY","sight","parent","instances","renderCellOnInstanceSight","_instance$context","controls","revealEverything","instanceIsInPlayerSight","instanceInCamera","isPlayed","visible","views","pointDistance","globalCell","detect","viewBy","viewed","cellViewed","onViewed","removeFog","updateAIKnowledge","quantity","foundedTrees","foundedBerrybushs","family","hitPoints","foundedEnemyBuildings","clearCellOnInstanceSight","idx","setFog","getRandomZoneInGridWithCondition","attempts","attempt","_grid$randomX","randomX","randomY","_iterator2","_step2","getPositionInGridAroundInstance","space","allowInclined","extraCondition","_space","minSpace","maxSpace","cellCondition","border","inclined","isInSight","startX","startY","callback","result","row","_grid$startX","startCell","dyMax","getClosestInstance","closestInstance","closestDistance","Infinity","_iterator3","_step3","targetInstance","getClosestInstanceWithPath","closest","_iterator4","_step4","setUnitTexture","sheet","_instance$sheet$data$","animationSpeed","standingSheet","corpseSheet","paused","sheetToReset","currentSheet","walkingSheet","stop","anchor","set","defaultAnchor","onLoop","goto","direction","scale","animations","gotoAndPlay","play","filterObject","obj","acc","key","hasOwnProperty","Modal","content","HTMLElement","open","modal","className","modalContent","appendChild","body","close","getElementById","remove","CustomTimeout","delay","_this","timerId","remaining","pause","clearTimeout","Date","now","resume","reset","throttle","wait","immediate","timeout","initialCall","_this2","_len","args","_key","callNow","debounce","timeoutId","_this3","_len2","_key2","getWorkWithLoadingType","loadingType","workMapping","wheat","wood","berry","stone","gold","meat","fish","capitalizeFirstLetter","string","charAt","toUpperCase","getDamage","meleeAttack","pierceAttack","meleeArmor","pierceArmor","getHitPointsWithDamage","defaultDamage","damage","updateObject","operation","op","setToValue","join","Number","canUpdateMinimap","isValidCondition","values","expectedValue","arraysEqual","sortedA","sort","sortedB","every","getActionCondition","action","props","conditions","delivery","loading","isBuilt","buildingTypes","takemeat","isDead","fishing","allowAction","hunt","chopwood","farm","_target$owner","isUsedBy","forageberry","minestone","minegold","build","_target$owner2","totalHitPoints","attack","_target$owner3","heal","_target$owner4","sound","Container","Sprite","Assets","Polygon","AnimatedSprite","Resource","_Container","options","_this$quantity","_this$hitPoints","_classCallCheck","_callSuper","selected","config","resources","totalQuantity","eventMode","allowClick","allowMove","info","element","setDefaultInterface","isAnimated","spritesheetJump","jump","resourceName","textureFile","updateAnchor","roundPixels","on","_this3$context","menu","selectedUnits","unselectAll","select","setBottombar","selectedOther","evt","_this4","_this4$context","mouseBuilding","mouseRectangle","isMouseInApp","mouse","prevent","hasVillager","hasOther","unit","sendToFunc","sendTo","voice","units","Villager","sounds","addChild","_inherits","_createClass","unselect","getChildByLabel","die","_this$context","players","listName","list","updateResourcesMiniMap","onTreeDie","clear","setCuttedTreeTexture","points","corpses","corpseIndex","destroy","child","typeDiv","textContent","iconImg","icon","hitPointsDiv","quantityDiv","iconToUse","infoIcons","smallIconImg","textDiv","Projectile","projectiles","destination","targetX","targetY","rect","rotation","interval","setInterval","onHit","clearInterval","updateInfo","isAttacked","Building","queue","technology","attackInterval","buyUnit","buyTechnology","spriteSheet","getUnitButton","technologies","getTechnologyButton","displayPopulation","populationDiv","populationIcon","populationSpan","population","getLoadingElement","devMode","_this2$context","hasSentVillager","hasSentOther","sendToBuilding","accept","previousDest","sendToFarm","selectedBuilding","playerUnit","sendToAttack","finalTexture","onBuilt","attackAction","startAttackInterval","range","projectile","stopAttackInterval","rateOfFire","startInterval","time","finalCb","stopInterval","_this5","_this$timeout","_this$timeout2","startTimeout","stopTimeout","updateHitPoints","updateTexture","percentage","buildSpritesheetId","buildSpritesheet","hasBuilt","increasePopulation","images","spriteColor","spritesheetFire","spriteFire","fire","generateFire","building","spriteId","children","newFire","poses","_this6","deco","rubbleSheet","updatePlayerMiniMapEvt","_this7","_this$context2","updateInterfaceLoading","_this$context3","placeUnit","_this$context4","spawnCell","extra","getUnitExtraOptions","createUnit","_objectSpread","_this8","alreadyPaid","force","_this$context5","success","updateButtonContent","q","updateTopbar","hasShowedMessage","still","toggleButtonCancel","shift","showMessage","trainingTime","_this9","innerHTML","loadingDiv","cancelTechnology","_this$context6","updateBottombar","upgrade","_i4","_Object$entries","_Object$entries$_i","_this0","_this$context7","techs","_this0$technology","technconfigology","updateConfig","operations","functionName","researchTime","civDiv","icons","getActionSheet","work","actionSheet","allAssets","Unit","_this$x","_this$y","_this$z","_this$loop","dest","realDest","inactif","currentCell","_i","_i2","_Object$entries2","_Object$entries2$_i","ready","showLoading","showBuildings","getBuildingButton","loop","decompose","death","loadedSheet","setTextures","sendToEvt","clicked","getCellOnCamera","doubleClicked","hasSentHealer","selectedUnit","hasSentAttacker","_this$sprite","_this$sprite2","hasPath","setDest","handleSetDest","setPath","step","handleChangeDest","_map$grid$this$i$this","isUnitAtDest","getAction","affectNewDest","goBackToPrevious","sendToTakeMeat","loadingMax","sendToDelivery","gatheringRate","constructionTime","depst","destHasMoved","oldDeg","hit","healing","handleAffectNewDestHunter","firstTargets","harvestSheet","secondTargets","_Object$entries3","_Object$entries3$_i","_i5","_Object$entries4","_Object$entries4$_i","handleSuccess","targets","notDeliveryWork","moveToPath","nextCell","playing","updatePlayerMiniMap","currentDest","sendToHunt","explore","runaway","_this1","onComplete","_this10","unselectUnit","corpsesIndex","_this11","commonSendTo","keepPrevious","workFromLoading","dyingSheet","_this12","Granary","StoragePit","_i6","_Object$entries5","_Object$entries5$_i","sendToFish","sendToTree","sendToBerrybush","sendToStone","sendToGold","infosDiv","infos","infoDiv","attackImg","attackDiv","Player","food","colorHex","_loop2","_this$views$i$j$viewB","_this$views","_this$views$i$j$viewe","_this$views2","updateTerrainMiniMap","revealTerrain","spawnBuilding","createBuilding","onAgeChange","otherPlayers","others","types","buyBuilding","styleLogInfo1","styleLogInfo2","AI","_Player","_extends","_objectDestructuringEmpty","foundedGolds","foundedStones","distSpread","nextAge","maxVillagerPerAge","villageTargetPercentageByAge","maxBuildingByAge","Barracks","Market","Farm","hasNotReachBuildingLimit","buildingType","buildingsByTypes","me","closestBuilding","log","maxVillagers","maxVillagersOnConstruction","maxClubmans","howManyVillagerBeforeBuyingABarracks","howManySoldiersBeforeAttack","filterUnitsByType","villagers","clubmans","towncenters","storagepits","houses","granarys","barracks","markets","farms","emptyFarms","notBuiltBuildings","notBuiltHouses","villagersByWork","works","inactifVillagers","villagersOnWood","villagersOnFood","villagersOnGold","villagersOnStone","builderVillagers","maxVillagersOnWood","maxVillagersOnFood","maxVillagersOnGold","maxVillagersOnStone","inactifClubmans","assault","waitingClubmans","totalCells","assignVillagersToResource","resourceList","actionCallback","villager","bush","tree","availableVillagers","clubman","buyUnits","currentCount","maxCount","buildingList","unitType","unitsNeeded","unitsBought","buyBuildingIfNeeded","positionCallback","House","position","_ret","technologyType","Animal","animals","drawDestinationRectangle","isAnimalAtDest","getReaction","strategy","fall","Gaia","createAnimal","Human","nextVillager","unselectAllUnits","Cell","waterBorder","fogSprites","addFogBuilding","updateVisible","updateChild","setDesertBorder","cellSprite","cellSpriteTextureName","cellSpriteIndex","cpt","setWaterBorder","setReliefBorder","elevation","setWater","fillWaterCellsAroundCell","aside","fillReliefCellsAroundCell","setCellLevel","level","textureSheet","colorSheet","colorName","tint","removeFogBuilding","localCell","_localCell$fogSprites","setFogChildren","init","setRemoveChildren","reliefRange","chanceOfRelief","chanceOfSets","sortableChildren","allTechnologies","noAI","startingUnits","playersPos","positionsCount","gaia","setCoordinate","generateFromJSON","camera","classMap","removeChildren","line","newCell","formatCellsRelief","formatCellsWaterBorder","formatCellsDesert","setCamera","_players$index","animal","getDest","processUnit","Boolean","generateMap","repeat","generateCells","pow","findPlayerPlaces","alert","generateResourcesAroundPlayers","stylishMap","generateSets","generatePlayers","randoms","_this$playersPos$pose","_this$playersPos$pose2","posI","posJ","placePlayers","towncenter","generateForestAroundPlayer","treeCount","clusterCount","minClusterRadius","maxClusterRadius","safeDistance","clearingProbability","playerI","playerJ","gridWidth","gridHeight","forestCells","pathCells","Set","createCircle","centerI","centerJ","radius","density","edgeNoise","circleCells","distFromCenter","noise","cellI","cellJ","cluster","clusterCenterI","clusterCenterJ","tries","clusterRadius","clusterDensity","treeCluster","scatteredTreeCount","soloI","soloJ","clearing","clearingCenterI","clearingCenterJ","clearingRadius","clearingCells","clearedCell","findIndex","pathLength","pathDirection","offsetX","offsetY","randOffsetX","randOffsetY","add","cellsToPlace","itemIndex","_cellsToPlace","_i8","_cell$has","placeResourceGroup","generateTerrain","gridSize","mapModel","terrainMap","generateTerrainCluster","nx","ny","generateWater","edgeSize","roundFactor","edgeDist","randomOffset","sin","centerX","centerY","baseRadius","distanceFromCenter","generateLandTerrain","generateClusters","clusterSizeMin","clusterSizeMax","clusterX","clusterY","terrain","randomSpritesheet","rock","generateMapRelief","canGenerate","_loop3","toRemove","typeToFormat","results","outBorder","inBorder","zones","getValidCells","_loop4","newI","newJ","_cell$has2","randomDistance","validCells","_i14","_cellsToPlace2","default","Menu","topbar","longClick","mouseHoldTimeout","res","setResourceBox","innerText","addEventListener","load","input","reader","FileReader","onload","JSON","parse","readAsText","files","cancel","prepend","bottombar","bottombarInfo","bottombarMenu","bottombarMapWrap","bottombarMap","minimapFactor","getMinimapFactor","getBoundingClientRect","clientX","clientY","_player$selectedUnits","sendUnits","terrainMinimap","playersMinimap","resourcesMinimap","cameraMinimap","style","toggled","toggle","preventDefault","display","stopPropagation","updateResourcesMiniMapEvt","updateCameraMiniMap","updateCameraMiniMapEvt","miniMapAlpha","initMiniMap","mapWidth","cameraContext","resourceContext","translate","revealTerrainMinimap","clearRect","updateResourceMiniMap","squareSize","finalX","finalY","_player$views","app","screen","playerMinimap","find","_ref3","finalSize","_ref4","getMessage","message","gamebox","box","assign","bottom","clientHeight","msg","img","resetInfo","background","generateInfo","targetElement","querySelector","contentElement","removeMouseBuilding","setMenuRecurs","onClick","btn","hide","onCreate","back","some","div","counter","padding","setMouseBuilding","Controls","visibleCells","keysPressed","keyInterval","keySpeed","mouseTouch","mouseDrag","moveCameraInterval","minimapRectangle","moveCameraWithMouse","onKeyDown","onKeyUp","onTouchStart","onTouchEnd","onTouchMove","onMouseMove","onMouseDown","onMouseUp","removeEventListener","keyCode","handleMoveCamera","double","moveCamera","controlsMap","touch","touches","pageX","pageY","speedX","speedY","changedTouches","pointerStart","buildOnWater","waterBorderedCells","waterCells","graph","stage","selectVillager","countSelect","pointerSheet","pointer","hasSentSoldier","distCenterX","distCenterY","tagName","dir","moveSpeed","isSpeedDivided","dividedSpeed","A","B","D","C","cameraCenter","updateVisibleCells","coef","moveDist","calcs","right","up","down","cameraFloor","margin","_isometricToCartesian","_isometricToCartesian2","cartesianX","cartesianY","newVisible","endX","endY","_map$grid$x","_isometricToCartesian3","_isometricToCartesian4","cartX","cartY","_player$buildings","_player$units","direct","_this$context8","Game","togglePause","cleanContext","resourceData","animalData","_animal$sprite","_animal$sprite2","_animal$dest","_animal$previousDest","unitData","_unit$sprite","_unit$sprite2","_unit$dest","_unit$previousDest","buildingData","_building$isUsedBy","iname","playerData","corpse","view","cellData","json","dataStr","encodeURIComponent","stringify","downloadAnchorNode","setAttribute","toLocaleString","timeZone","click","_document$getElementB","ownKeys","getOwnPropertySymbols","getOwnPropertyDescriptor","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","_defineProperties","_toPrimitive","toPrimitive","String","_getPrototypeOf","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","_assertThisInitialized","ReferenceError","valueOf","_setPrototypeOf","LoaderScreen","_start","_callee2","_context2","graphics","addBundle","greek","loadBundle","_x","Application","Loader","loader","game","resizeTo","antialias","resolution","devicePixelRatio","autoDensity","powerPreference","event"],"sourceRoot":""}