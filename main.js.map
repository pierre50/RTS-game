{"version":3,"file":"main.js","mappings":"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C,QAAA,CAAAzI,CAAA;IAAA;EAAA,GAAAwI,OAAA;AAAA,CACzB,GAAE,CAAC,C;;;;;;;;;;;;;;ACrCJ;AAC8J;AACjB;AAC7I,8BAA8B,sIAA2B,CAAC,+IAAqC;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;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","sources":["webpack://rts-game/./app/styles.css?5553","webpack://rts-game/./app/constants/index.js","webpack://rts-game/./app/lib/graphics.js","webpack://rts-game/./app/lib/accounting.js","webpack://rts-game/./app/lib/maths.js","webpack://rts-game/./app/lib/grid.js","webpack://rts-game/./app/lib/extra.js","webpack://rts-game/./app/lib/index.js","webpack://rts-game/./app/classes/resource.js","webpack://rts-game/./app/classes/projectile.js","webpack://rts-game/./app/classes/building.js","webpack://rts-game/./app/classes/unit.js","webpack://rts-game/./app/classes/players/player.js","webpack://rts-game/./app/classes/players/ai.js","webpack://rts-game/./app/classes/animal.js","webpack://rts-game/./app/classes/players/gaia.js","webpack://rts-game/./app/classes/players/human.js","webpack://rts-game/./app/classes/players/index.js","webpack://rts-game/./app/classes/cell.js","webpack://rts-game/./app/classes/map.js","webpack://rts-game/./app/classes/menu.js","webpack://rts-game/./app/classes/controls.js","webpack://rts-game/./app/screens/Game.js","webpack://rts-game/./app/screens/Loader.js","webpack://rts-game/./app/entry.js","webpack://rts-game/./app/styles.css"],"sourcesContent":["\n      import API from \"!../node_modules/.pnpm/style-loader@4.0.0_webpack@5.101.3/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/.pnpm/style-loader@4.0.0_webpack@5.101.3/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/.pnpm/style-loader@4.0.0_webpack@5.101.3/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/.pnpm/style-loader@4.0.0_webpack@5.101.3/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/.pnpm/style-loader@4.0.0_webpack@5.101.3/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/.pnpm/style-loader@4.0.0_webpack@5.101.3/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/.pnpm/css-loader@7.1.2_webpack@5.101.3/node_modules/css-loader/dist/cjs.js!./styles.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/.pnpm/css-loader@7.1.2_webpack@5.101.3/node_modules/css-loader/dist/cjs.js!./styles.css\";\n       export default content && content.locals ? content.locals : undefined;\n","export const CELL_WIDTH = 64\nexport const CELL_HEIGHT = 32\nexport const CELL_DEPTH = 16\n\nexport const ACCELERATOR = 1.5\nexport const STEP_TIME = 20\n\nexport const IS_MOBILE = window.innerWidth <= 800 && window.innerHeight <= 600\nexport const LONG_CLICK_DURATION = 200\n\nexport const RESOURCE_TYPES = {\n  tree: 'Tree',\n  berrybush: 'Berrybush',\n  stone: 'Stone',\n  gold: 'Gold',\n  salmon: 'Salmon',\n}\n\nexport const BUILDING_TYPES = {\n  house: 'House',\n  dock: 'Dock',\n  townCenter: 'TownCenter',\n  farm: 'Farm',\n  storagePit: 'StoragePit',\n  granary: 'Granary',\n  barracks: 'Barracks',\n  market: 'Market',\n}\n\nexport const UNIT_TYPES = {\n  villager: 'Villager',\n  priest: 'Priest',\n  clubman: 'Clubman',\n}\n\nexport const MENU_INFO_IDS = {\n  loading: 'loading',\n  hitPoints: 'hit-points',\n  population: 'population',\n  populationText: 'population-text',\n  quantity: 'quantity',\n  quantityText: 'quantity-text',\n  loadingText: 'loading-text',\n  type: 'type',\n  civ: 'civ',\n  icon: 'icon',\n}\n\nexport const LABEL_TYPES = {\n  sprite: 'sprite',\n  color: 'color',\n  deco: 'deco',\n  fire: 'fire',\n  selection: 'selection',\n  buildingFog: 'building',\n  mouseBuilding: 'mouseBuilding',\n  floor: 'floor',\n  set: 'set',\n}\n\nexport const SHEET_TYPES = {\n  walking: 'walkingSheet',\n  action: 'actionSheet',\n  standing: 'standingSheet',\n  corpse: 'corpseSheet',\n  dying: 'dyingSheet',\n  harvest: 'harvestSheet',\n}\n\nexport const PLAYER_TYPES = {\n  human: 'Human',\n  ai: 'AI',\n  gaia: 'Gaia',\n}\n\nexport const FAMILY_TYPES = {\n  animal: 'animal',\n  building: 'building',\n  cell: 'cell',\n  projectile: 'projectile',\n  resource: 'resource',\n  unit: 'unit',\n  player: 'player',\n}\n\nexport const WORK_TYPES = {\n  fisher: 'fisher',\n  hunter: 'hunter',\n  farmer: 'farmer',\n  forager: 'forager',\n  woodcutter: 'woodcutter',\n  stoneminer: 'stoneminer',\n  goldminer: 'goldminer',\n  builder: 'builder',\n  attacker: 'attacker',\n  healer: 'healer',\n}\n\nexport const ACTION_TYPES = {\n  delivery: 'delivery',\n  takemeat: 'takemeat',\n  hunt: 'hunt',\n  attack: 'attack',\n  fishing: 'fishing',\n  build: 'build',\n  farm: 'farm',\n  forageberry: 'forageberry',\n  minegold: 'minegold',\n  minestone: 'minestone',\n  chopwood: 'chopwood',\n  heal: 'heal',\n}\n\nexport const LOADING_TYPES = {\n  meat: 'meat',\n  wheat: 'wheat',\n  berry: 'berry',\n  fish: 'fish',\n  stone: 'stone',\n  gold: 'gold',\n  wood: 'wood',\n}\n\nexport const WORK_FOOD_TYPES = [WORK_TYPES.fisher, WORK_TYPES.hunter, WORK_TYPES.farmer, WORK_TYPES.forager]\nexport const LOADING_FOOD_TYPES = [LOADING_TYPES.meat, LOADING_TYPES.wheat, LOADING_TYPES.berry, LOADING_TYPES.fish]\n\nexport const COLOR_WHITE = 0xffffff\nexport const COLOR_BLACK = 0x000000\nexport const COLOR_GREY = 0x808080\nexport const COLOR_RED = 0xff0000\nexport const COLOR_ORANGE = 0xffa500\nexport const COLOR_YELLOW = 0xffff00\nexport const COLOR_GREEN = 0x008000\nexport const COLOR_BLUE = 0x0000ff\nexport const COLOR_INDIGO = 0x4b0082\nexport const COLOR_VIOLET = 0xee82ee\nexport const COLOR_BONE = 0xe2dac2\nexport const COLOR_SHIP_GREY = 0x3c3b3d\nexport const COLOR_FOG = 0x999999\nexport const COLOR_FLASHY_GREEN = 0x00ff00\nexport const COLOR_ARROW = 0xe8e3df\n\nexport const TYPE_ACTION = {\n  Stone: ACTION_TYPES.minestone,\n  Gold: ACTION_TYPES.minegold,\n  Berrybush: ACTION_TYPES.forageberry,\n  Tree: ACTION_TYPES.chopwood,\n  Fish: ACTION_TYPES.fishing,\n}\n\nexport const CORPSE_TIME = 120\nexport const RUBBLE_TIME = 120\nexport const MAX_SELECT_UNITS = 10\nexport const POPULATION_MAX = 200\n","import { Graphics } from 'pixi.js'\nimport { Texture } from 'pixi.js'\nimport { COLOR_FLASHY_GREEN, LABEL_TYPES } from '../constants'\nimport { MultiColorReplaceFilter } from 'pixi-filters'\n\nexport function getIconPath(name) {\n  const id = name.split('_')[1]\n  const index = name.split('_')[0]\n  return `assets/interface/${id}/${index}_${id}.png`\n}\n\nexport function getBuildingTextureNameWithSize(size) {\n  switch (size) {\n    case 1:\n      return '000_256'\n    case 2:\n      return '000_258'\n    case 3:\n      return '000_261'\n  }\n}\n\nexport function getBuildingRubbleTextureNameWithSize(size) {\n  switch (size) {\n    case 1:\n      return '000_153'\n    case 2:\n      return '000_154'\n    case 3:\n      return '000_155'\n  }\n}\n\nexport function getBuildingAsset(type, owner, assets) {\n  const path = assets.cache.get(owner.civ.toLowerCase()).buildings\n  if (path[owner.age][type]) {\n    return path[owner.age][type]\n  } else if (path[owner.age - 1][type]) {\n    return path[owner.age - 1][type]\n  } else if (path[owner.age - 2][type]) {\n    return path[owner.age - 2][type]\n  } else if (path[0][type]) {\n    return path[0][type]\n  }\n}\n\n/**\n * Retrieve a texture from the assets cache based on its name.\n *\n * @param {string} name - The name of the texture, formatted as 'index_id'.\n * @param {object} assets - The assets object containing the cache of textures.\n * @returns {object} - The requested texture from the spritesheet.\n * @throws {Error} - If the texture cannot be found in the spritesheet.\n */\nexport function getTexture(name, assets) {\n  const [index, id] = name.split('_')\n  const spritesheet = assets.cache.get(id)\n\n  if (!spritesheet || !spritesheet.textures) {\n    throw new Error(`Spritesheet for ID \"${id}\" not found in assets.`)\n  }\n\n  const textureName = `${index}_${id}.png`\n  const texture = spritesheet.textures[textureName]\n\n  if (!texture) {\n    throw new Error(`Texture \"${textureName}\" not found in spritesheet.`)\n  }\n\n  // Set the hit area for the texture\n  texture.hitArea = spritesheet.data.frames[textureName].hitArea\n\n  return texture\n}\n\nexport const colors = ['blue', 'red', 'yellow', 'brown', 'orange', 'green', 'grey', 'cyan']\n\n/**\n * Get the hex color code for a given color name.\n * @param {string} name - The name of the color.\n * @returns {string} The hex color code, or '#ffffff' if the color is not found.\n */\nexport function getHexColor(name) {\n  const colorMap = {\n    blue: '#3f5f9f',\n    red: '#e30b00',\n    yellow: '#c3a31b',\n    brown: '#8b5b37',\n    orange: '#ef6307',\n    green: '#4b6b2b',\n    grey: '#8f8f8f',\n    cyan: '#00837b',\n  }\n  return colorMap[name] || '#ffffff' // Default to white if not found\n}\n\n/**\n * Change the color of a sprite directly by manipulating its texture.\n * @param {object} sprite - The sprite to change the color of.\n * @param {string} color - The new color to apply to the sprite.\n */\nexport function changeSpriteColorDirectly(sprite, color) {\n  if (color === 'blue') {\n    return // Skip processing if color is blue\n  }\n\n  const sourceColors = [0x93bbd7, 0x739bc7, 0x577bb3, 0x3f5f9f, 0x273f8f, 0x17277b, 0x070f67, 0x000057]\n\n  const colors = {\n    red: [0xff8f8f, 0xff5f5f, 0xff2f2f, 0xe30b00, 0xc71700, 0x8f1f00, 0x6f0b07, 0x530b00],\n    yellow: [0xe3e300, 0xdfcf0f, 0xdfcf0f, 0xc3a31b, 0xa37317, 0x876727, 0x6b4b27, 0x4f3723],\n    brown: [0xcfa343, 0xb78b2b, 0xa3734f, 0x8b5b37, 0x734727, 0x5f331b, 0x3f3723, 0x23231f],\n    orange: [0xfb9f1f, 0xf78b17, 0xf3770f, 0xef6307, 0xcf4300, 0x9f3300, 0x872b00, 0x6f2300],\n    green: [0x8b9f4f, 0x7f8b37, 0x637b2f, 0x4b6b2b, 0x375f27, 0x1b431b, 0x133313, 0x0b1b0b],\n    grey: [0xdbdbdb, 0xc7c7c7, 0xb3b3b3, 0x8f8f8f, 0x6b6b6b, 0x474747, 0x373737, 0x232323],\n    cyan: [0x5fd39f, 0x2bbf93, 0x00ab93, 0x00837b, 0x006f6b, 0x004f4f, 0x003f43, 0x002327],\n  }\n\n  const targetColors = colors[color]\n\n  if (!targetColors) {\n    throw new Error('Invalid color selected.') // Throw error for invalid color\n  }\n\n  const baseTexture = sprite.texture.baseTexture.resource\n\n  const canvas = document.createElement('canvas')\n  canvas.width = sprite.texture.width\n  canvas.height = sprite.texture.height\n\n  const ctx = canvas.getContext('2d')\n  ctx.drawImage(\n    baseTexture,\n    sprite.texture.frame.x,\n    sprite.texture.frame.y,\n    sprite.texture.frame.width,\n    sprite.texture.frame.height,\n    0,\n    0,\n    sprite.texture.frame.width,\n    sprite.texture.frame.height\n  )\n\n  const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height)\n  const data = imageData.data\n\n  const sourceColorMap = new Map(sourceColors.map((color, index) => [color, targetColors[index]]))\n\n  for (let i = 0; i < data.length; i += 4) {\n    const r = data[i]\n    const g = data[i + 1]\n    const b = data[i + 2]\n    const rgb = (r << 16) | (g << 8) | b\n\n    if (sourceColorMap.has(rgb)) {\n      const targetColor = sourceColorMap.get(rgb)\n      data[i] = (targetColor >> 16) & 0xff // Red\n      data[i + 1] = (targetColor >> 8) & 0xff // Green\n      data[i + 2] = targetColor & 0xff // Blue\n    }\n  }\n\n  ctx.putImageData(imageData, 0, 0)\n\n  const newTexture = Texture.from(canvas)\n  sprite.texture = newTexture\n}\n\n/**\n * Change the color of a sprite based on the specified color.\n *\n * @param {object} sprite - The sprite object whose color will be changed.\n * @param {string} color - The target color. Supported colors: 'red', 'yellow', 'brown', 'orange', 'green', 'grey', 'cyan'.\n * @returns {void}\n */\nexport function changeSpriteColor(sprite, color) {\n  // Skip color change if the specified color is blue\n  if (color === 'blue') {\n    return\n  }\n\n  // Source colors (Hex)\n  const source = [0x93bbd7, 0x739bc7, 0x577bb3, 0x3f5f9f, 0x273f8f, 0x17277b, 0x070f67, 0x000057]\n\n  // Define color mappings\n  const colors = {\n    red: [0xff8f8f, 0xff5f5f, 0xff2f2f, 0xe30b00, 0xc71700, 0x8f1f00, 0x6f0b07, 0x530b00],\n    yellow: [0xe3e300, 0xdfcf0f, 0xdfcf0f, 0xc3a31b, 0xa37317, 0x876727, 0x6b4b27, 0x4f3723],\n    brown: [0xcfa343, 0xb78b2b, 0xa3734f, 0x8b5b37, 0x734727, 0x5f331b, 0x3f3723, 0x23231f],\n    orange: [0xfb9f1f, 0xf78b17, 0xf3770f, 0xef6307, 0xcf4300, 0x9f3300, 0x872b00, 0x6f2300],\n    green: [0x8b9f4f, 0x7f8b37, 0x637b2f, 0x4b6b2b, 0x375f27, 0x1b431b, 0x133313, 0x0b1b0b],\n    grey: [0xdbdbdb, 0xc7c7c7, 0xb3b3b3, 0x8f8f8f, 0x6b6b6b, 0x474747, 0x373737, 0x232323],\n    cyan: [0x5fd39f, 0x2bbf93, 0x00ab93, 0x00837b, 0x006f6b, 0x004f4f, 0x003f43, 0x002327],\n  }\n\n  // Check if the color is supported\n  if (!colors[color]) {\n    return\n  }\n\n  // Create final color mapping\n  const replacements = []\n  for (let i = 0; i < source.length; i++) {\n    replacements.push([source[i], colors[color][i]])\n  }\n\n  const filter = new MultiColorReplaceFilter({ replacements, tolerance: 0.1 })\n\n  sprite.filters = [filter]\n}\n\n/**\n * Draws a blinking selection around the given instance.\n * @param {object} instance - The instance to draw the selection around.\n */\nexport function drawInstanceBlinkingSelection(instance) {\n  const selection = new Graphics()\n  selection.label = LABEL_TYPES.selection\n  selection.zIndex = 3\n\n  // Define the path for the selection\n  const path = [-32 * instance.size, 0, 0, -16 * instance.size, 32 * instance.size, 0, 0, 16 * instance.size]\n  selection.poly(path)\n  selection.stroke(COLOR_FLASHY_GREEN)\n  instance.addChildAt(selection, 0)\n\n  // Helper function for blinking effect\n  const blink = (alpha, duration) => {\n    return new Promise(resolve => {\n      selection.alpha = alpha\n      setTimeout(resolve, duration)\n    })\n  }\n\n  const blinkSequence = async () => {\n    await blink(1, 500) // Show\n    await blink(0, 300) // Hide\n    await blink(1, 300) // Show\n    await blink(0, 300) // Hide\n    await blink(1, 300) // Show\n    instance.removeChild(selection) // Clean up\n  }\n\n  blinkSequence()\n}\n/**\n * Draw a filled rectangle on the canvas.\n * @param {CanvasRenderingContext2D} context\n * @param {number} x - The x-coordinate of the rectangle's top-left corner.\n * @param {number} y - The y-coordinate of the rectangle's top-left corner.\n * @param {number} width - The width of the rectangle.\n * @param {number} height - The height of the rectangle.\n * @param {string} color - The fill color for the rectangle.\n */\nexport function canvasDrawRectangle(context, x, y, width, height, color) {\n  context.fillStyle = color\n  context.fillRect(x, y, width, height)\n}\n\n/**\n * Draw a stroked rectangle on the canvas.\n * @param {CanvasRenderingContext2D} context\n * @param {number} x - The x-coordinate of the rectangle's top-left corner.\n * @param {number} y - The y-coordinate of the rectangle's top-left corner.\n * @param {number} width - The width of the rectangle.\n * @param {number} height - The height of the rectangle.\n * @param {string} color - The stroke color for the rectangle.\n */\nexport function canvasDrawStrokeRectangle(context, x, y, width, height, color) {\n  context.strokeStyle = color\n  context.strokeRect(x, y, width, height)\n}\n\n/**\n * Draw a diamond shape on the canvas.\n * @param {CanvasRenderingContext2D} context\n * @param {number} x - The x-coordinate of the diamond's center.\n * @param {number} y - The y-coordinate of the diamond's center.\n * @param {number} width - The width of the diamond.\n * @param {number} height - The height of the diamond.\n * @param {string} color - The fill color for the diamond.\n */\nexport function canvasDrawDiamond(context, x, y, width, height, color) {\n  context.save()\n  context.beginPath()\n  context.moveTo(x, y)\n  context.lineTo(x - width / 2, y + height / 2)\n  context.lineTo(x, y + height)\n  context.lineTo(x + width / 2, y + height / 2)\n  context.closePath()\n\n  context.fillStyle = color\n  context.fill()\n  context.restore() // Restore the context state\n}\n\n/**\n * Execute a callback when a sprite reaches a specific frame.\n * @param {object} sprite - The sprite to monitor.\n * @param {number} frame - The target frame to trigger the callback.\n * @param {function} cb - The callback to execute.\n */\nexport function onSpriteLoopAtFrame(sprite, frame, cb) {\n  sprite.onFrameChange = currentFrame => {\n    if (currentFrame === frame) {\n      cb()\n    }\n  }\n}\n","/**\n * Refunds costs to the player's resources.\n * @param {object} player - The player object containing resources.\n * @param {object} cost - An object representing the costs to refund.\n */\nexport function refundCost(player, cost) {\n  if (!player || typeof player !== 'object' || !cost || typeof cost !== 'object') {\n    return\n  }\n\n  Object.keys(cost).forEach(prop => {\n    if (typeof cost[prop] === 'number') {\n      player[prop] += cost[prop]\n    }\n  })\n}\n\n/**\n * Deducts costs from the player's resources.\n * @param {object} player - The player object containing resources.\n * @param {object} cost - An object representing the costs to pay.\n */\nexport function payCost(player, cost) {\n  if (!player || typeof player !== 'object' || !cost || typeof cost !== 'object') {\n    return\n  }\n\n  Object.keys(cost).forEach(prop => {\n    if (typeof cost[prop] === 'number') {\n      player[prop] -= cost[prop]\n    }\n  })\n}\n\n/**\n * Checks if the player can afford the given costs.\n * @param {object} player - The player object containing resources.\n * @param {object} cost - An object representing the costs to check.\n * @returns {boolean} - True if the player can afford the costs, false otherwise.\n */\nexport function canAfford(player, cost) {\n  // Validate inputs\n  if (!player || typeof player !== 'object' || !cost || typeof cost !== 'object') {\n    return false\n  }\n\n  // Iterate over the cost object\n  for (const prop in cost) {\n    // Check if the cost for the property is a number\n    if (typeof cost[prop] === 'number') {\n      // Early return if player cannot afford the cost\n      if (player[prop] < cost[prop]) {\n        return false\n      }\n    }\n  }\n\n  // If all costs are affordable, return true\n  return true\n}\n","import { CELL_WIDTH, CELL_HEIGHT, CELL_DEPTH } from '../constants'\n\n/**\n * Generate a version 4 UUID.\n * @returns {string} - A random UUID.\n */\nexport function uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const randomValue = crypto.getRandomValues(new Uint8Array(1))[0] & 15 // Get a random value\n    const hexValue = (c === 'x' ? randomValue : (randomValue & 0x3) | 0x8).toString(16) // Adjust for 'y'\n    return hexValue\n  })\n}\n\n/**\n * Format a number with three character\n * @param {number} nbr\n */\nexport function formatNumber(nbr) {\n  return ('00' + nbr).slice(-3)\n}\n\n/**\n * Convert cartesian to isometric\n * @param {number} x\n * @param {number} y\n */\nexport function cartesianToIsometric(x, y) {\n  return [Math.floor(((x - y) * CELL_WIDTH) / 2), Math.floor(((x + y) * CELL_HEIGHT) / 2)]\n}\n\n/**\n * Convert isometric position to cartesian\n * @param {number} x\n * @param {number} y\n */\nexport function isometricToCartesian(x, y) {\n  return [\n    Math.round((x / (CELL_WIDTH / 2) + y / (CELL_HEIGHT / 2)) / 2),\n    Math.round((y / (CELL_HEIGHT / 2) - x / (CELL_WIDTH / 2)) / 2),\n  ]\n}\n\n/**\n * Get percentage with two numbers\n * @param {number} a\n * @param {number} b\n */\nexport function getPercentage(a, b) {\n  return Math.floor((a / b) * 100)\n}\n\n/**\n * Get value of percentage\n * @param {number} a\n * @param {number} b\n */\nexport function getValuePercentage(val, perc) {\n  return Math.floor((perc * val) / 100)\n}\n\n/**\n * Get average between two numbers\n * @param {number} a\n * @param {number} b\n */\nexport function average(a, b) {\n  return (a + b) / 2\n}\n\n/**\n * Check if point is between two points can be used with line thickness\n * @param {object} line1\n * @param {object} line2\n * @param {object} pnt\n * @param {number} lineThickness\n */\n/**\n * Check if a point is within a certain distance from a line segment\n * @param {{x:number, y:number}} line1 - Start point of the line\n * @param {{x:number, y:number}} line2 - End point of the line\n * @param {{x:number, y:number}} pnt - Point to check\n * @param {number} lineThickness - Maximum allowed distance from the line\n * @returns {boolean}\n */\nexport function pointIsBetweenTwoPoint(line1, line2, pnt, lineThickness) {\n  const dx = line2.x - line1.x\n  const dy = line2.y - line1.y\n  const L2 = dx * dx + dy * dy\n  if (L2 === 0) {\n    // line1 == line2\n    const dist = Math.hypot(line1.x - pnt.x, line1.y - pnt.y)\n    return dist <= lineThickness\n  }\n\n  // Projection parameter\n  const r = ((pnt.x - line1.x) * dx + (pnt.y - line1.y) * dy) / L2\n\n  if (r < 0) {\n    return Math.hypot(line1.x - pnt.x, line1.y - pnt.y) <= lineThickness\n  } else if (r > 1) {\n    return Math.hypot(line2.x - pnt.x, line2.y - pnt.y) <= lineThickness\n  } else {\n    // Perpendicular distance from point to line\n    const s = ((line1.y - pnt.y) * dx - (line1.x - pnt.x) * dy) / L2\n    return Math.abs(s) * Math.sqrt(L2) <= lineThickness\n  }\n}\n\n/**\n * Get a random number between two numbers\n * @param {number} min\n * @param {number} max\n */\nexport function randomRange(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min)\n}\n\n/**\n * Get a random item from a array\n * @param {array} array\n */\nexport function randomItem(array = []) {\n  return array[Math.round(Math.random() * (array.length - 1))]\n}\n\n/**\n * Get distance between two instances, can use iso (x, y) or cartesian (i, j)\n * @param {object} a\n * @param {object} b\n * @param {boolean} useCartesian\n */\nexport function instancesDistance(a, b, useCartesian = true) {\n  return useCartesian ? pointsDistance(a.i, a.j, b.i, b.j) : pointsDistance(a.x, a.y, b.x, b.y)\n}\n\n/**\n * Get the instance zIndex according to his position\n * @param {object} instance\n */\nexport function getInstanceZIndex(instance) {\n  const pos = isometricToCartesian(instance.x, instance.y + instance.z * CELL_DEPTH)\n  return pos[0] + pos[1]\n}\n\n/**\n * Get the difference between two number\n * @param {number} a\n * @param {number} b\n */\nexport function diff(a, b) {\n  return Math.abs(a - b)\n}\n\n/**\n * Get degree of instance according to a point\n * @param {object} instance\n * @param {number} x\n * @param {number} y\n */\nexport function getInstanceDegree(instance, x, y) {\n  return getPointsDegree(instance.x, instance.y, x, y)\n}\n\n/**\n * Get the degree from one point to another.\n * @param {number} x1 - The x-coordinate of the first point.\n * @param {number} y1 - The y-coordinate of the first point.\n * @param {number} x2 - The x-coordinate of the second point.\n * @param {number} y2 - The y-coordinate of the second point.\n * @returns {number} - The angle in degrees from the first point to the second.\n */\nexport function getPointsDegree(x1, y1, x2, y2) {\n  const tX = x2 - x1\n  const tY = y2 - y1\n  return Math.round((Math.atan2(tY, tX) * 180) / Math.PI + 180)\n}\n\n/**\n * Convert degrees to radians.\n * @param {number} degrees - The angle in degrees.\n * @returns {number} - The angle in radians.\n */\nexport function degreesToRadians(degrees) {\n  return degrees * (Math.PI / 180)\n}\n\n/**\n * Get distance between two points\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n */\nexport function pointsDistance(x1, y1, x2, y2) {\n  let a = x1 - x2\n  let b = y1 - y2\n  return Math.floor(Math.sqrt(a * a + b * b))\n}\n\n/**\n * Check if point is in a rectangle or not\n * @param {number} x\n * @param {number} y\n * @param {number} left\n * @param {number} top\n * @param {number} width\n * @param {number} height\n */\nexport function pointInRectangle(x, y, left, top, width, height, allDirection = false) {\n  return allDirection\n    ? (x > left && x < left + width && y > top && y < top + height) ||\n        (x < left && x > left + width && y < top && y > top + height) ||\n        (x > left && x < left + width && y < top && y > top + height) ||\n        (x < left && x > left + width && y > top && y < top + height)\n    : x > left && x < left + width && y > top && y < top + height\n}\n\n/**\n * Check if two instance are on diagonal axes\n * @param {object} instance\n * @param {object} instance\n */\nexport function cellIsDiag(src, target) {\n  return Math.abs(target.i - src.i) === Math.abs(target.j - src.j)\n}\n\nexport function degreeToDirection(degree) {\n  if (degree > 67.5 && degree < 112.5) {\n    return 'north'\n  } else if (degree > 247.5 && degree < 292.5) {\n    return 'south'\n  } else if (degree > 337.5 || degree < 22.5) {\n    return 'west'\n  } else if (degree >= 22.5 && degree <= 67.5) {\n    return 'northwest'\n  } else if (degree >= 292.5 && degree <= 337.5) {\n    return 'southwest'\n  } else if (degree > 157.5 && degree < 202.5) {\n    return 'est'\n  } else if (degree > 112.5 && degree < 157.5) {\n    return 'northest'\n  } else if (degree > 202.5 && degree < 247.5) {\n    return 'southest'\n  }\n}\n","import { ACCELERATOR, FAMILY_TYPES, PLAYER_TYPES, RESOURCE_TYPES } from '../constants'\nimport * as exports from './maths'\nObject.entries(exports).forEach(([name, exported]) => (window[name] = exported))\n\n/**\n * Check if two instances are in contact.\n *\n * @param {object} a - The first instance. Should have properties like `x`, `y`, and `size`.\n * @param {object} b - The second instance. Should have properties like `x`, `y`, `size`, and `isDestroyed`.\n * @returns {boolean} - True if instance `a` is in contact with instance `b`, false otherwise.\n */\nexport function instanceContactInstance(a, b) {\n  // Check if the distance between instances is less than or equal to (b.size - 1) and b is not destroyed\n  return Math.floor(instancesDistance(a, b)) <= (b.size - 1 || 1) && !b.isDestroyed\n}\n\n/**\n * Move an instance towards a specific point (x, y) at a given speed.\n *\n * @param {object} instance - The instance to move. Should have properties like `x`, `y`, and `degree`.\n * @param {number} x - The target x-coordinate to move towards.\n * @param {number} y - The target y-coordinate to move towards.\n * @param {number} speed - The speed at which the instance should move.\n */\nexport function moveTowardPoint(instance, x, y, speed) {\n  const dist = pointsDistance(x, y, instance.x, instance.y)\n\n  if (dist === 0) return // Prevent division by zero\n\n  // Calculate the direction vector from the instance to the target point\n  const tX = x - instance.x\n  const tY = y - instance.y\n\n  // Calculate the velocity based on the speed and distance\n  const velX = (tX / dist) * (speed * ACCELERATOR)\n  const velY = (tY / dist) * (speed * ACCELERATOR)\n\n  // Update the instance's degree (rotation) to face the target point\n  instance.degree = getInstanceDegree(instance, x, y)\n\n  // Update the instance's position by adding the velocity components\n  instance.x += velX\n  instance.y += velY\n}\n\n/**\n * Get the first free cell coordinate around a point\n * @param {number} x - The x-coordinate of the starting point\n * @param {number} y - The y-coordinate of the starting point\n * @param {number} size - The starting search radius\n * @param {object} grid - The grid to search in\n * @param {function} condition - A function to test if a cell is free\n * @returns {object|null} - The coordinates of the first free cell or null if none found\n */\nexport function getFreeCellAroundPoint(x, y, size, grid, condition) {\n  const maxDistance = 50\n\n  for (let distance = size; distance < maxDistance; distance++) {\n    const cells = getCellsAroundPoint(x, y, grid, distance, condition)\n    if (cells.length > 0) {\n      return randomItem(cells)\n    }\n  }\n\n  return null\n}\n\n/**\n * Get the closest available path for an instance to a destination\n * @param {object} instance - The instance seeking a path\n * @param {object} target - The target object to reach\n * @param {object} map - The map containing grid information\n * @returns {Array} - The shortest path to a free cell or an empty array if none found\n */\nexport function getInstanceClosestFreeCellPath(instance, target, map) {\n  const size = target.size || (target.has && target.has.size) || 1\n  const paths = []\n\n  // Get cells around the target based on size\n  const distance = size === 3 ? 2 : 1\n  getCellsAroundPoint(target.i, target.j, map.grid, distance, cell => {\n    const path = getInstancePath(instance, cell.i, cell.j, map)\n    if (path.length) {\n      paths.push(path)\n    }\n  })\n\n  // Return the shortest path if available\n  return paths.length\n    ? paths.reduce((shortest, current) => (current.length < shortest.length ? current : shortest))\n    : []\n}\n\n/**\n * Get the shortest path for a instance to a destination\n * @param {object} instance\n * @param {number} x\n * @param {number} y\n * @param {object} map\n */\nexport function getInstancePath(instance, x, y, map) {\n  const maxZone = 10\n  const end = map.grid[x][y]\n  const start = map.grid[instance.i][instance.j]\n  let minX = Math.max(Math.min(start.i, end.i) - maxZone, 0)\n  let maxX = Math.min(Math.max(start.i, end.i) + maxZone, map.size)\n  let minY = Math.max(Math.min(start.j, end.j) - maxZone, 0)\n  let maxY = Math.min(Math.max(start.j, end.j) + maxZone, map.size)\n\n  function isCellReachable(cell) {\n    if (cell.solid) {\n      return false\n    }\n    const allowWaterCellCategory = instance.category === 'Boat'\n    return allowWaterCellCategory ? cell.category === 'Water' : cell.category !== 'Water'\n  }\n\n  let cloneGrid = []\n  for (var i = minX; i <= maxX; i++) {\n    for (var j = minY; j <= maxY; j++) {\n      if (cloneGrid[i] == null) {\n        cloneGrid[i] = []\n      }\n      cloneGrid[i][j] = {\n        i,\n        j,\n        x: map.grid[i][j].x,\n        y: map.grid[i][j].y,\n        z: map.grid[i][j].z,\n        solid: map.grid[i][j].solid,\n        category: map.grid[i][j].category,\n      }\n    }\n  }\n  let isFinish = false\n  let path = []\n  let openCells = []\n  let closedCells = []\n  const cloneEnd = cloneGrid[end.i][end.j]\n  const cloneStart = cloneGrid[start.i][start.j]\n  openCells.push(cloneStart)\n  while (!isFinish) {\n    if (openCells.length > 0) {\n      // find the lowest f in open cells\n      let lowestF = 0\n      for (let i = 0; i < openCells.length; i++) {\n        if (openCells[i].f < openCells[lowestF].f) {\n          lowestF = i\n        }\n\n        if (openCells[i].f == openCells[lowestF].f) {\n          if (openCells[i].g > openCells[lowestF].g) {\n            lowestF = i\n          }\n        }\n      }\n      let current = openCells[lowestF]\n      if (current === cloneEnd) {\n        // reached the end cell\n        isFinish = true\n      }\n      // calculate path\n      path = [cloneEnd]\n      let temp = current\n\n      while (temp.previous) {\n        path.push(temp.previous)\n        temp = temp.previous\n      }\n      openCells.splice(openCells.indexOf(current), 1)\n      closedCells.push(current)\n      // check neighbours\n      getCellsAroundPoint(current.i, current.j, cloneGrid, 1, neighbour => {\n        const validDiag =\n          !cellIsDiag(current, neighbour) ||\n          (isCellReachable(cloneGrid[current.i][neighbour.j]) && isCellReachable(cloneGrid[neighbour.i][current.j]))\n        if (!closedCells.includes(neighbour) && isCellReachable(neighbour) && validDiag) {\n          let tempG = current.g + instancesDistance(neighbour, current)\n          if (!openCells.includes(neighbour)) {\n            openCells.push(neighbour)\n            neighbour.g = tempG\n            neighbour.h = instancesDistance(neighbour, cloneEnd)\n            neighbour.f = neighbour.g + neighbour.h\n            neighbour.previous = current\n          }\n        }\n      })\n    } else {\n      // no solution\n      path = []\n      isFinish = true\n    }\n  }\n  path.pop()\n  return [...path]\n}\n\n/**\n * Find a sized zone in the grid that meets a condition.\n *\n * This function searches within a given zone in the grid for a region of the specified `size`,\n * and checks whether all cells within that region meet a specified condition.\n *\n * @param {object} zone - An object containing the boundaries of the search area (minX, maxX, minY, maxY).\n * @param {object[][]} grid - A 2D grid representing the map.\n * @param {number} size - The size of the area to check around each grid point.\n * @param {function} condition - A callback function that evaluates whether a cell is valid.\n * @returns {object|null} The coordinates {i, j} of the first valid zone found, or null if none are found.\n */\nexport function getZoneInGridWithCondition(zone, grid, size, condition) {\n  // Iterate over the specified zone in the grid\n  for (let i = zone.minX; i <= zone.maxX; i++) {\n    if (!grid[i]) continue // Skip if out of bounds\n\n    for (let j = zone.minY; j <= zone.maxY; j++) {\n      const cell = grid[i]?.[j]\n      if (!cell) continue // Skip if cell doesn't exist\n\n      // Assume the area around (i, j) is free initially\n      let isFree = true\n\n      // Check the surrounding cells of size `size` to ensure they all meet the condition\n      const surroundingCells = getPlainCellsAroundPoint(i, j, grid, size)\n      for (const surroundingCell of surroundingCells) {\n        if (!condition(surroundingCell)) {\n          isFree = false\n          break // Exit early if a cell does not meet the condition\n        }\n      }\n\n      // Return the first valid {i, j} coordinates if the area is free\n      if (isFree) {\n        return { i, j }\n      }\n    }\n  }\n\n  // Return null if no valid zone is found\n  return null\n}\n\n/**\n * Finds all instances within the sight range of a given instance that meet a specific condition.\n *\n * @param {object} instance - The instance whose sight is being processed. Should have properties like `i`, `j`, `sight`, and `parent.grid`.\n * @param {function} condition - A callback function that receives an instance and returns `true` if the instance matches the desired condition.\n * @returns {Array} - List of instances that are within the sight range and match the condition.\n */\nexport function findInstancesInSight(instance, condition) {\n  const {\n    i: instX,\n    j: instY,\n    sight,\n    parent: { grid },\n  } = instance\n  let instances = []\n\n  for (let x = Math.max(instX - sight, 0); x <= Math.min(instX + sight, grid.length - 1); x++) {\n    for (let y = Math.max(instY - sight, 0); y <= Math.min(instY + sight, grid[x].length - 1); y++) {\n      // Check if the cell is within the instance's sight range\n      if (pointsDistance(instX, instY, x, y) <= sight) {\n        const cell = grid[x][y]\n\n        // Ensure the cell has an instance and the condition is met\n        if (cell?.has && typeof condition === 'function' && condition(cell.has)) {\n          instances.push(cell.has)\n        }\n      }\n    }\n  }\n\n  return instances\n}\n\n/**\n * Updates the cells within a instance's line of sight.\n * Handles fog, viewBy, and visibility efficiently by diffing old vs new cells.\n *\n * @param {object} instance - The instance instance with properties i, j, sight, owner, parent, context.\n */\nexport function updateInstanceVisibility(instance) {\n  const { i: cx, j: cy, sight, owner, context, isDead, visibleCells } = instance\n  const map = context.map\n  const player = context.player\n  const sightSq = sight * sight\n  const newVisible = new Set()\n\n  // Collect all cells within sight\n  if (!isDead) {\n    getPlainCellsAroundPoint(cx, cy, owner.views, sight, cell => {\n      const dx = cell.i - cx\n      const dy = cell.j - cy\n      if (dx * dx + dy * dy <= sightSq) {\n        newVisible.add(cell)\n      }\n    })\n  }\n\n  const prevVisible = visibleCells || new Set()\n\n  // Hide cells that left sight\n  for (let cell of prevVisible) {\n    if (!newVisible.has(cell)) {\n      const playerCell = player.views[cell.i][cell.j]\n      const globalCell = map.grid[cell.i][cell.j]\n      const globalIdx = globalCell.viewBy.indexOf(instance)\n      const idx = cell.viewBy.indexOf(instance)\n      if (globalIdx !== -1) {\n        globalCell.viewBy.splice(globalIdx, 1)\n      }\n      if (idx !== -1) {\n        cell.viewBy.splice(idx, 1)\n      }\n\n      if (!playerCell.viewBy.length && !map.revealEverything) {\n        globalCell.setFog()\n      }\n    }\n  }\n\n  // Show new cells\n  for (let cell of newVisible) {\n    if (!prevVisible.has(cell)) {\n      const globalCell = map.grid[cell.i][cell.j]\n\n      globalCell.updateVisible()\n      if (!globalCell.viewBy.includes(instance)) {\n        globalCell.viewBy.push(instance)\n      }\n      if (!cell.viewBy.includes(instance)) {\n        cell.viewBy.push(instance)\n      }\n      if (!cell.viewed) {\n        owner.cellViewed++\n        cell.onViewed?.()\n        cell.viewed = true\n      }\n\n      if (!map.revealEverything && owner.isPlayed) {\n        globalCell.removeFog()\n      } else if (owner.type === PLAYER_TYPES.ai) {\n        // Update AI's knowledge of the surroundings (trees, berrybushes, enemy buildings)\n        updateAIKnowledge(globalCell, cell, instance)\n      }\n\n      // Optional: detect other instances in sight\n      if (globalCell.has && globalCell.has.sight && typeof globalCell.has.detect === 'function') {\n        const distSq = (cx - globalCell.has.i) ** 2 + (cy - globalCell.has.j) ** 2\n        if (distSq <= globalCell.has.sight ** 2) {\n          globalCell.has.detect(instance)\n        }\n      }\n    }\n  }\n\n  instance.visibleCells = newVisible\n}\n\n/**\n * Updates AI knowledge of trees, berrybushes, and enemy buildings when an AI instance views a global cell.\n *\n * @param {object} globalCell - The cell in the global grid.\n * @param {object} cell - The current local cell being processed.\n * @param {object} instance - The AI instance viewing the cell.\n */\nfunction updateAIKnowledge(globalCell, cell, instance) {\n  const { owner } = instance\n\n  // Sync local cell's \"has\" object with the global cell if different\n  if (globalCell.has && (!cell.has || cell.has.label !== globalCell.has.label)) {\n    cell.has = globalCell.has\n\n    // Detect tree resources and update AI's knowledge\n    if (\n      globalCell.has.type === RESOURCE_TYPES.tree &&\n      globalCell.has.quantity > 0 &&\n      !owner.foundedTrees.includes(globalCell.has)\n    ) {\n      owner.foundedTrees.push(globalCell.has)\n    }\n\n    // Detect berrybush resources and update AI's knowledge\n    if (\n      globalCell.has.type === RESOURCE_TYPES.berrybush &&\n      globalCell.has.quantity > 0 &&\n      !owner.foundedBerrybushs.includes(globalCell.has)\n    ) {\n      owner.foundedBerrybushs.push(globalCell.has)\n    }\n\n    // Detect enemy buildings and update AI's knowledge\n    if (\n      globalCell.has.family === FAMILY_TYPES.building &&\n      globalCell.has.hitPoints > 0 &&\n      globalCell.has.owner.label !== owner.label &&\n      !owner.foundedEnemyBuildings.includes(globalCell.has)\n    ) {\n      owner.foundedEnemyBuildings.push(globalCell.has)\n    }\n  }\n}\n\n/**\n * Randomly finds a valid position in the grid within a specified zone and size, considering certain conditions.\n *\n * This function attempts to find a valid cell in the grid around the specified zone by randomly generating coordinates\n * and checking if they meet specific conditions, such as avoiding inclined, solid, or border cells.\n *\n * @param {object} zone - The area of the grid to search within (must have properties `minX`, `minY`, `maxX`, `maxY`).\n * @param {object[][]} grid - The grid representing the map, where each cell contains coordinates and attributes.\n * @param {number} size - The size of the instance for which we are finding space.\n * @param {function} condition - A function that returns true if the cell meets the conditions, false otherwise.\n * @param {number} attempts - The number of random attempts to find a valid cell.\n * @returns {object|null} The position {i, j} of a valid cell or null if no valid cell is found.\n */\nexport function getRandomZoneInGridWithCondition(zone, grid, size, condition, attempts = 100) {\n  for (let attempt = 0; attempt < attempts; attempt++) {\n    // Generate random coordinates within the zone\n    const randomX = Math.floor(Math.random() * (zone.maxX - zone.minX + 1)) + zone.minX\n    const randomY = Math.floor(Math.random() * (zone.maxY - zone.minY + 1)) + zone.minY\n\n    const cell = grid[randomX]?.[randomY]\n    if (!cell) continue // Skip if cell doesn't exist\n\n    // Assume the area around (randomX, randomY) is free initially\n    let isFree = true\n\n    // Check the surrounding cells of size `size` to ensure they all meet the condition\n    const surroundingCells = getPlainCellsAroundPoint(randomX, randomY, grid, size)\n    for (const surroundingCell of surroundingCells) {\n      if (!condition(surroundingCell)) {\n        isFree = false\n        break // Exit early if a cell does not meet the condition\n      }\n    }\n\n    // If the area is free, return the valid cell\n    if (isFree) {\n      return { i: randomX, j: randomY }\n    }\n  }\n\n  // Return null if no valid cells found after all attempts\n  return null\n}\n\n/**\n * Find a valid position in the grid around an instance within a specified space range.\n *\n * This function searches for a position around a given instance within the grid, considering a range of space,\n * the size of the object, and additional conditions like avoiding inclined, solid, or border cells. It can\n * use either a random zone search or a fixed zone search depending on the `random` parameter.\n *\n * @param {object} instance - The instance around which to search (must have properties `i`, `j`, and `parent` grid).\n * @param {object[][]} grid - The grid representing the map, where each cell contains coordinates and attributes.\n * @param {number[]} space - An array [minSpace, maxSpace] that defines the distance range to search within.\n * @param {number} size - The size of the instance for which we are finding space.\n * @param {boolean} [allowInclined=false] - Whether to allow inclined cells in the search.\n * @param {function} [extraCondition] - An optional callback for extra conditions that a valid cell must meet.\n * @param {boolean} [random=true] - If `true`, uses `getRandomZoneInGridWithCondition`; otherwise, uses `getZoneInGridWithCondition`.\n * @returns {object|null} The position {i, j} of a valid cell or null if no valid cell is found.\n */\nexport function getPositionInGridAroundInstance(\n  instance,\n  grid,\n  space,\n  size,\n  allowInclined = false,\n  extraCondition,\n  random = true\n) {\n  const [minSpace, maxSpace] = space\n\n  // Define the search zone based on instance's position and maxSpace\n  const zone = {\n    minX: Math.max(instance.i - maxSpace, 0),\n    minY: Math.max(instance.j - maxSpace, 0),\n    maxX: Math.min(instance.i + maxSpace, instance.parent.size - 1),\n    maxY: Math.min(instance.j + maxSpace, instance.parent.size - 1),\n  }\n\n  // Condition to check if the cell is valid based on space, solid, inclined, etc.\n  const cellCondition = cell => {\n    const distance = instancesDistance(instance, cell, true)\n    return (\n      distance >= minSpace && // Ensure it's at least the minimum distance away\n      distance <= maxSpace && // Ensure it's within the maximum distance\n      !cell.solid && // Ensure the cell is not solid\n      !cell.border && // Ensure the cell is not at the border\n      (allowInclined || !cell.inclined) && // Check inclined condition\n      (!extraCondition || extraCondition(cell)) // Apply any additional conditions\n    )\n  }\n\n  // Use either the random zone search or fixed zone search based on the 'random' flag\n  let pos\n  if (random) {\n    pos = getRandomZoneInGridWithCondition(zone, grid, size, cellCondition)\n  } else {\n    pos = getZoneInGridWithCondition(zone, grid, size, cellCondition)\n  }\n\n  // Return the found position or null if none is found\n  return pos || null\n}\n\n/**\n * Instance is in a player sight\n * @param {object} instance\n * @param {object} player\n */\nexport function instanceIsInPlayerSight(instance, player) {\n  const dist = instance.size === 3 ? 1 : 0\n  let isInSight = false // Flag to track if the instance is in player sight\n\n  player?.views &&\n    getPlainCellsAroundPoint(instance.i, instance.j, player.views, dist, cell => {\n      if (cell.viewBy.length > 0) {\n        isInSight = true // Set the flag if the condition is met\n      }\n    })\n\n  return isInSight // Return the flag\n}\n\n/**\n * Get all the coordinates around a point within a maximum distance.\n *\n * @param {number} startX - The X coordinate of the center point.\n * @param {number} startY - The Y coordinate of the center point.\n * @param {number} dist - The maximum distance from the center point.\n * @param {object[][]} grid - 2D array representing the grid.\n * @param {function} [callback] - Optional callback function to filter cells. If provided, it should return true for valid cells.\n * @returns {object[]} - Array of valid cells around the point within the distance.\n */\nexport function getPlainCellsAroundPoint(startX, startY, grid, dist = 0, callback) {\n  const result = []\n\n  // Handle single-cell case\n  if (dist === 0) {\n    const row = grid[startX]\n    if (row) {\n      const cell = row[startY]\n      if (cell && (!callback || callback(cell))) result.push(cell)\n    }\n    return result\n  }\n\n  const minX = Math.max(startX - dist, 0)\n  const maxX = Math.min(startX + dist, grid.length - 1)\n\n  for (let i = minX; i <= maxX; i++) {\n    const row = grid[i]\n    if (!row) continue\n    const minY = Math.max(startY - dist, 0)\n    const maxY = Math.min(startY + dist, row.length - 1)\n\n    for (let j = minY; j <= maxY; j++) {\n      const cell = row[j]\n      if (cell && (!callback || callback(cell))) result.push(cell)\n    }\n  }\n\n  return result\n}\n\n/**\n * Get the coordinates around a point within a Manhattan distance\n * @param {number} startX\n * @param {number} startY\n * @param {Array} grid\n * @param {number} dist\n * @param {Function} callback\n * @returns {Array} Array of cells that match the criteria\n */\n/**\n * Get the coordinates around a point within a Manhattan distance (safe for irregular grids)\n * @param {number} startX\n * @param {number} startY\n * @param {Array} grid\n * @param {number} dist\n * @param {Function} callback\n * @returns {Array} Array of cells that match the criteria\n */\nexport function getCellsAroundPoint(startX, startY, grid, dist, callback) {\n  const result = []\n\n  // Special case: distance 0\n  const startCell = grid[startX]?.[startY]\n  if (dist === 0) {\n    if (startCell && (!callback || callback(startCell))) result.push(startCell)\n    return result\n  }\n\n  // Iterate over Manhattan distance\n  for (let dx = -dist; dx <= dist; dx++) {\n    const x = startX + dx\n    if (!grid[x]) continue // Skip if row does not exist\n\n    const dyMax = dist - Math.abs(dx)\n    for (let dy = -dyMax; dy <= dyMax; dy++) {\n      const y = startY + dy\n      const row = grid[x]\n      if (!row || !row[y]) continue // Skip if cell does not exist\n\n      const cell = row[y]\n      if (!callback || callback(cell)) result.push(cell)\n    }\n  }\n\n  return result\n}\n\n/**\n * Get the closest instance to a given instance.\n *\n * @param {object} instance - The reference instance. Should have properties like `x`, `y`.\n * @param {Array<object>} instances - The array of other instances to check. Each should have properties like `x`, `y`.\n * @returns {object|boolean} - The closest instance or false if no instances are found.\n */\nexport function getClosestInstance(instance, instances) {\n  let closestInstance = null\n  let closestDistance = Infinity\n\n  // Iterate through the instances to find the one with the minimum distance to the reference instance\n  for (const targetInstance of instances) {\n    const distance = instancesDistance(instance, targetInstance)\n\n    if (distance < closestDistance) {\n      closestDistance = distance\n      closestInstance = targetInstance\n    }\n  }\n\n  // Return the closest instance, or false if no valid instance was found\n  return closestInstance || false\n}\n\n/**\n * Get the closest instance with a valid path.\n *\n * This function calculates the closest instance that can be reached by a valid path\n * from the given `instance`. It checks all provided `instances` and computes the path\n * to each of them, then returns the instance with the shortest valid path.\n *\n * @param {object} instance - The current instance trying to reach other instances.\n * @param {Array<object>} instances - An array of target instances to find the closest reachable one.\n * @returns {object|null} The closest instance with its path or null if no valid path is found.\n */\nexport function getClosestInstanceWithPath(instance, instances) {\n  let closest = null\n\n  for (const target of instances) {\n    const path = getInstanceClosestFreeCellPath(instance, target, instance.parent)\n\n    // If a valid path exists, compare its length to the current closest\n    if (path.length && (!closest || path.length < closest.path.length)) {\n      closest = {\n        instance: target,\n        path,\n      }\n    }\n  }\n\n  return closest\n}\n","import { BUILDING_TYPES, FAMILY_TYPES, RESOURCE_TYPES, SHEET_TYPES, UNIT_TYPES, WORK_TYPES } from '../constants'\nimport { instanceIsInPlayerSight } from './grid'\nimport { degreeToDirection, uuidv4 } from './maths'\n\nexport function setUnitTexture(sheet, instance, ACCELERATOR) {\n  const animationSpeed = {\n    standingSheet: 0.15,\n    corpseSheet: 0,\n  }\n  const { paused } = instance.context\n  if (paused) {\n    return\n  }\n  const sheetToReset = [SHEET_TYPES.action, SHEET_TYPES.dying, SHEET_TYPES.corpse]\n  // Sheet don't exist we just block the current sheet\n  if (!instance[sheet]) {\n    if (instance.currentSheet !== SHEET_TYPES.walking && instance.walkingSheet) {\n      instance.sprite.textures = [instance.walkingSheet.textures[Object.keys(instance.walkingSheet.textures)[0]]]\n    } else {\n      instance.sprite.textures = [instance.sprite.textures[instance.sprite.currentFrame]]\n    }\n    instance.currentSheet = SHEET_TYPES.walking\n    instance.sprite.stop()\n    instance.sprite.anchor.set(\n      instance.sprite.textures[instance.sprite.currentFrame].defaultAnchor.x,\n      instance.sprite.textures[instance.sprite.currentFrame].defaultAnchor.y\n    )\n    return\n  }\n  // Reset action loop\n  if (!sheetToReset.includes(sheet)) {\n    instance.sprite.onLoop = null\n    instance.sprite.onFrameChange = null\n  }\n  const goto = instance.currentSheet === sheet && instance.sprite.currentFrame\n  instance.currentSheet = sheet\n  const direction = degreeToDirection(instance.degree)\n  switch (direction) {\n    case 'southest':\n      instance.sprite.scale.x = -1\n      instance.sprite.textures = instance[sheet].animations['southwest']\n      break\n    case 'northest':\n      instance.sprite.scale.x = -1\n      instance.sprite.textures = instance[sheet].animations['northwest']\n      break\n    case 'est':\n      instance.sprite.scale.x = -1\n      instance.sprite.textures = instance[sheet].animations['west']\n      break\n    default:\n      instance.sprite.scale.x = 1\n      instance.sprite.textures = instance[sheet].animations[direction]\n  }\n  instance.sprite.animationSpeed = (instance[sheet].data.animationSpeed ?? animationSpeed[sheet] ?? 0.3) * ACCELERATOR\n  goto && goto < instance.sprite.textures.length ? instance.sprite.gotoAndPlay(goto) : instance.sprite.play()\n}\n\n/**\n * Filters an object by the specified keys.\n * @param {object} obj - The object to filter.\n * @param {Array<string>} keys - The keys to retain in the new object.\n * @returns {object} - The filtered object.\n */\nexport function filterObject(obj, keys) {\n  if (typeof obj !== 'object' || obj === null) {\n    throw new Error('Expected an object to filter.')\n  }\n  return keys.reduce((acc, key) => {\n    if (obj.hasOwnProperty(key)) {\n      acc[key] = obj[key]\n    }\n    return acc\n  }, {})\n}\n\n/**\n * Modal constructor for displaying content in a modal dialog.\n * @param {HTMLElement} content - The content to display inside the modal.\n */\nexport var Modal = function (content) {\n  if (!(content instanceof HTMLElement)) {\n    throw new Error('Content must be an HTML element.')\n  }\n\n  const id = uuidv4()\n\n  this.open = () => {\n    const modal = document.createElement('div')\n    modal.id = id\n    modal.className = 'modal'\n\n    const modalContent = document.createElement('div')\n    modalContent.className = 'modal-content'\n    modalContent.appendChild(content)\n\n    modal.appendChild(modalContent)\n    document.body.appendChild(modal)\n    return modal\n  }\n\n  this.close = () => {\n    const modal = document.getElementById(id)\n    if (modal) {\n      modal.remove()\n    }\n  }\n\n  this.open()\n}\n\n/**\n * Custom timeout implementation with pause and resume functionality.\n * @param {function} callback - The function to execute after the delay.\n * @param {number} delay - The delay in milliseconds.\n */\nexport var CustomTimeout = function (callback, delay) {\n  if (typeof callback !== 'function' || typeof delay !== 'number') {\n    throw new Error('Invalid arguments for CustomTimeout.')\n  }\n\n  let timerId,\n    start,\n    remaining = delay\n\n  this.pause = () => {\n    window.clearTimeout(timerId)\n    timerId = null\n    remaining -= Date.now() - start\n    return remaining\n  }\n\n  this.resume = () => {\n    if (timerId) {\n      return // Already running\n    }\n\n    start = Date.now()\n    timerId = window.setTimeout(callback, remaining)\n  }\n\n  this.reset = () => {\n    this.pause()\n    remaining = delay\n    this.resume()\n  }\n\n  this.resume() // Start the timer immediately\n}\n\n/**\n * Throttles a function to ensure it only executes once within a specified time frame.\n * @param {Function} callback - The function to throttle.\n * @param {number} wait - The time frame in milliseconds to throttle calls.\n * @param {boolean} [immediate=false] - If true, trigger the function on the leading edge instead of the trailing.\n * @returns {Function} - The throttled function.\n */\nexport function throttle(callback, wait, immediate = false) {\n  if (typeof callback !== 'function' || typeof wait !== 'number') {\n    throw new Error('Invalid arguments: callback must be a function and wait must be a number.')\n  }\n\n  let timeout = null\n  let initialCall = true\n\n  return function (...args) {\n    const callNow = immediate && initialCall\n\n    const next = () => {\n      callback.apply(this, args)\n      timeout = null\n    }\n\n    if (callNow) {\n      initialCall = false\n      next()\n    }\n\n    if (!timeout) {\n      timeout = setTimeout(next, wait)\n    }\n  }\n}\n\n/**\n * Debounces a function to ensure it only executes after a specified delay.\n * @param {Function} callback - The function to debounce.\n * @param {number} wait - The delay in milliseconds before the function can be called again.\n * @returns {Function} - The debounced function.\n */\nexport const debounce = (callback, wait) => {\n  if (typeof callback !== 'function' || typeof wait !== 'number') {\n    throw new Error('Invalid arguments: callback must be a function and wait must be a number.')\n  }\n\n  let timeoutId = null\n  return function (...args) {\n    window.clearTimeout(timeoutId)\n    timeoutId = window.setTimeout(() => {\n      callback.apply(this, args)\n    }, wait)\n  }\n}\n\n/**\n * Maps loading types to their corresponding work roles.\n * @param {string} loadingType - The type of resource being loaded.\n * @returns {string} - The corresponding work role for the loading type.\n */\nexport function getWorkWithLoadingType(loadingType) {\n  const workMapping = {\n    wheat: WORK_TYPES.farmer,\n    wood: WORK_TYPES.woodcutter,\n    berry: WORK_TYPES.forager,\n    stone: WORK_TYPES.stoneminer,\n    gold: WORK_TYPES.goldminer,\n    meat: WORK_TYPES.hunter,\n    fish: WORK_TYPES.fisher,\n  }\n\n  return workMapping[loadingType] || 'default' // Fallback to 'default' if loadingType is not found\n}\n\n/**\n * Capitalizes the first letter of a string.\n * @param {string} string - The input string to capitalize.\n * @returns {string} - The string with the first letter capitalized.\n */\nexport function capitalizeFirstLetter(string) {\n  if (typeof string !== 'string') {\n    throw new TypeError('Expected a string')\n  }\n\n  return string.length > 0 ? string.charAt(0).toUpperCase() + string.slice(1) : ''\n}\n\n/**\n * Calculates the damage dealt by a source to a target.\n * @param {object} source - The attacking unit with attack attributes.\n * @param {object} target - The defending unit with armor attributes.\n * @returns {number} The calculated damage, at least 1.\n */\nexport function getDamage(source, target) {\n  const meleeAttack = source.meleeAttack || 0\n  const pierceAttack = source.pierceAttack || 0\n  const meleeArmor = target.meleeArmor || 0\n  const pierceArmor = target.pierceArmor || 0\n\n  // Calculate damage considering armor\n  return Math.max(1, Math.max(0, meleeAttack - meleeArmor) + Math.max(0, pierceAttack - pierceArmor))\n}\n\n/**\n * Calculates the remaining hit points of a target after taking damage.\n * @param {object} source - The attacking unit (for damage calculation).\n * @param {object} target - The defending unit with hit points.\n * @param {number} [defaultDamage] - An optional damage value.\n * @returns {number} The remaining hit points of the target, at least 0.\n */\nexport function getHitPointsWithDamage(source, target, defaultDamage) {\n  const damage = defaultDamage || getDamage(source, target)\n  return Math.max(0, target.hitPoints - damage)\n}\n\n/**\n * Updates a nested property in an object based on the specified operation.\n * @param {Object} target - The object to be updated.\n * @param {Object} operation - An object describing the update operation.\n * @param {string} operation.key - The key representing the path to the property.\n * @param {string} operation.op - The operation to perform ('*' or '+').\n * @param {number} operation.value - The value to use in the operation.\n */\nexport const updateObject = (target, operation) => {\n  if (typeof target !== 'object' || target === null) {\n    throw new Error('Target must be a non-null object.')\n  }\n\n  if (!operation || !operation.key || !operation.op || typeof operation.value !== 'number') {\n    throw new Error('Invalid operation: key, op, and value are required.')\n  }\n\n  function setToValue(obj, value, path) {\n    const keys = path.split('.')\n    for (let i = 0; i < keys.length - 1; i++) {\n      if (!obj[keys[i]]) {\n        throw new Error(`Path not found: ${keys.slice(0, i + 1).join('.')}`)\n      }\n      obj = obj[keys[i]]\n    }\n    obj[keys[keys.length - 1]] = value\n  }\n\n  const keys = operation.key.split('.')\n  let result = target\n\n  // Navigate to the specified path\n  for (const key of keys) {\n    if (result[key] === undefined) {\n      throw new Error(`Key not found: ${operation.key}`)\n    }\n    result = result[key]\n  }\n\n  switch (operation.op) {\n    case '*':\n      setToValue(target, result * Number(operation.value), operation.key)\n      break\n    case '+':\n      setToValue(target, result + Number(operation.value), operation.key)\n      break\n    default:\n      throw new Error(`Invalid operation: ${operation.op}`)\n  }\n}\n\nexport const canUpdateMinimap = (instance, player) => {\n  return instance.owner.isPlayed || (player.label !== instance.owner.label && instanceIsInPlayerSight(instance, player))\n}\n\n/**\n * Checks if a given condition is valid based on specified values.\n * @param {Object} condition - The condition object containing operation, key, and value.\n * @param {Object} values - The values to evaluate against.\n * @returns {boolean} - True if the condition is valid, false otherwise.\n */\nexport const isValidCondition = (condition, values) => {\n  if (!condition) {\n    return true // No condition means it's always valid\n  }\n\n  const { op, key, value } = condition\n  const expectedValue = values[key]\n\n  if (expectedValue === undefined) {\n    throw new Error(`Key not found in values: ${key}`)\n  }\n\n  switch (op) {\n    case '=':\n    case '!=': {\n      const result = Array.isArray(value) ? arraysEqual(value, expectedValue) : value === expectedValue\n\n      return op === '!=' ? !result : result\n    }\n    case '<':\n      return expectedValue < value\n    case '<=':\n      return expectedValue <= value\n    case '>=':\n      return expectedValue >= value\n    case '>':\n      return expectedValue > value\n    case 'includes':\n      return expectedValue.includes(value)\n    case 'notincludes':\n      return !expectedValue.includes(value)\n    default:\n      throw new Error(`Invalid condition operation provided: ${op}`)\n  }\n}\n\n/**\n * Compares two arrays for equality, disregarding order.\n * @param {Array} a - The first array.\n * @param {Array} b - The second array.\n * @returns {boolean} - True if arrays are equal, false otherwise.\n */\nconst arraysEqual = (a, b) => {\n  if (!Array.isArray(a) || !Array.isArray(b)) return false\n  if (a.length !== b.length) return false\n\n  const sortedA = a.slice().sort()\n  const sortedB = b.slice().sort()\n\n  return sortedA.every((val, index) => val === sortedB[index])\n}\n\nexport const getActionCondition = (source, target, action, props) => {\n  if (!action) {\n    return false\n  }\n  const conditions = {\n    delivery: props =>\n      source.loading > 0 &&\n      target.hitPoints > 0 &&\n      target.isBuilt &&\n      (!props || props.buildingTypes.includes(target.type)),\n    takemeat: () =>\n      source.type === UNIT_TYPES.villager &&\n      target.family === FAMILY_TYPES.animal &&\n      target.quantity > 0 &&\n      target.isDead &&\n      !target.isDestroyed,\n    fishing: () =>\n      target.category === 'Fish' &&\n      target.allowAction.includes(source.type) &&\n      target.quantity > 0 &&\n      !target.isDestroyed,\n    hunt: () =>\n      source.type === UNIT_TYPES.villager &&\n      target.family === FAMILY_TYPES.animal &&\n      target.quantity > 0 &&\n      target.hitPoints > 0 &&\n      !target.isDead,\n    chopwood: () =>\n      source.type === UNIT_TYPES.villager &&\n      target.type === RESOURCE_TYPES.tree &&\n      target.quantity > 0 &&\n      !target.isDead,\n    farm: () =>\n      source.type === UNIT_TYPES.villager &&\n      target.type === BUILDING_TYPES.farm &&\n      target.hitPoints > 0 &&\n      target.owner?.label === source.owner.label &&\n      target.quantity > 0 &&\n      (!target.isUsedBy || target.isUsedBy === source) &&\n      !target.isDead,\n    forageberry: () =>\n      source.type === UNIT_TYPES.villager &&\n      target.type === RESOURCE_TYPES.berrybush &&\n      target.quantity > 0 &&\n      !target.isDead,\n    minestone: () =>\n      source.type === UNIT_TYPES.villager &&\n      target.type === RESOURCE_TYPES.stone &&\n      target.quantity > 0 &&\n      !target.isDead,\n    minegold: () =>\n      source.type === UNIT_TYPES.villager &&\n      target.type === RESOURCE_TYPES.gold &&\n      target.quantity > 0 &&\n      !target.isDead,\n    build: () =>\n      source.type === UNIT_TYPES.villager &&\n      target.owner?.label === source.owner.label &&\n      target.family === FAMILY_TYPES.building &&\n      target.hitPoints > 0 &&\n      (!target.isBuilt || target.hitPoints < target.totalHitPoints) &&\n      !target.isDead,\n    attack: () =>\n      target &&\n      target.owner?.label !== source.owner.label &&\n      [FAMILY_TYPES.building, FAMILY_TYPES.unit, FAMILY_TYPES.animal].includes(target.family) &&\n      target.hitPoints > 0 &&\n      !target.isDead,\n    heal: () =>\n      target &&\n      target.owner?.label === source.owner.label &&\n      target.family === FAMILY_TYPES.unit &&\n      target.hitPoints > 0 &&\n      target.hitPoints < target.totalHitPoints &&\n      !target.isDead,\n  }\n  return target && target !== source && source.hitPoints > 0 && !source.isDead && conditions[action](props)\n}\n","export * from './graphics'\nexport * from './accounting'\nexport * from './maths'\nexport * from './extra'\nexport * from './grid'\n","import { sound } from '@pixi/sound'\nimport { Container, Graphics, Sprite, Assets, Polygon, AnimatedSprite } from 'pixi.js'\nimport {\n  getInstanceZIndex,\n  instanceIsInPlayerSight,\n  getIconPath,\n  randomItem,\n  drawInstanceBlinkingSelection,\n  getActionCondition,\n  uuidv4,\n} from '../lib'\nimport {\n  TYPE_ACTION,\n  CELL_WIDTH,\n  CELL_HEIGHT,\n  COLOR_WHITE,\n  FAMILY_TYPES,\n  PLAYER_TYPES,\n  LABEL_TYPES,\n  MENU_INFO_IDS,\n  RESOURCE_TYPES,\n} from '../constants'\n\nexport class Resource extends Container {\n  constructor(options, context) {\n    super()\n\n    this.context = context\n\n    const {\n      context: { map },\n    } = this\n\n    this.label = uuidv4()\n    this.family = FAMILY_TYPES.resource\n\n    this.selected = false\n    this.isDead = false\n    this.isDestroyed = false\n    this.size = 1\n\n    Object.keys(options).forEach(prop => {\n      this[prop] = options[prop]\n    })\n    const config = Assets.cache.get('config')\n    Object.keys(config.resources[this.type]).forEach(prop => {\n      this[prop] = config.resources[this.type][prop]\n    })\n\n    this.quantity = this.quantity ?? this.totalQuantity\n    this.hitPoints = this.hitPoints ?? this.totalHitPoints\n    this.x = map.grid[this.i][this.j].x\n    this.y = map.grid[this.i][this.j].y\n    this.z = map.grid[this.i][this.j].z\n    this.zIndex = getInstanceZIndex(this)\n    this.visible = false\n\n    // Set solid zone\n    const cell = map.grid[this.i][this.j]\n    cell.solid = true\n    cell.has = this\n\n    this.eventMode = 'auto'\n    this.allowClick = false\n    this.allowMove = false\n\n    this.interface = {\n      info: element => {\n        const data = config.resources[this.type]\n        this.setDefaultInterface(element, data)\n      },\n    }\n    if (this.isAnimated) {\n      const spritesheetJump = Assets.cache.get(this.assets)\n      this.sprite = new AnimatedSprite(spritesheetJump.animations.jump)\n      this.sprite.play()\n      this.sprite.animationSpeed = 0.2\n    } else {\n      this.textureName =\n        this.textureName || randomItem(Array.isArray(this.assets) ? this.assets : this.assets[cell.type])\n      const resourceName = this.textureName.split('_')[1]\n      const textureFile = this.textureName + '.png'\n      const spritesheet = Assets.cache.get(resourceName)\n      const texture = spritesheet.textures[textureFile]\n      this.sprite = Sprite.from(texture)\n      this.sprite.hitArea =\n        spritesheet.data.frames[textureFile].hitArea && new Polygon(spritesheet.data.frames[textureFile].hitArea)\n    }\n\n    this.sprite.updateAnchor = true\n    this.sprite.label = LABEL_TYPES.sprite\n    if (this.sprite) {\n      this.sprite.allowMove = false\n      this.sprite.eventMode = 'static'\n      this.sprite.roundPixels = true\n\n      this.sprite.on('pointertap', () => {\n        const {\n          context: { player, menu },\n        } = this\n        if (!player.selectedUnits.length && (instanceIsInPlayerSight(this, player) || map.revealEverything)) {\n          player.unselectAll()\n          this.select()\n          menu.setBottombar(this)\n          player.selectedOther = this\n        }\n      })\n      this.sprite.on('pointerup', evt => {\n        const {\n          context: { player, controls },\n        } = this\n        const action = TYPE_ACTION[this.category || this.type]\n        if (controls.mouseBuilding || controls.mouseRectangle || !controls.isMouseInApp(evt)) {\n          return\n        }\n        controls.mouse.prevent = true\n        // Send Villager to forage the berry\n        let hasVillager = false\n        let hasOther = false\n        for (let i = 0; i < player.selectedUnits.length; i++) {\n          const unit = player.selectedUnits[i]\n          if (getActionCondition(unit, this, action)) {\n            hasVillager = true\n            const sendToFunc = `sendTo${this.category || this.type}`\n            typeof unit[sendToFunc] === 'function' ? unit[sendToFunc](this) : unit.sendTo(this)\n          } else {\n            hasOther = true\n            unit.sendTo(this)\n          }\n        }\n        if (hasVillager) {\n          drawInstanceBlinkingSelection(this)\n        }\n        if (hasOther) {\n          const voice = randomItem(['5075', '5076', '5128', '5164'])\n          voice && sound.play(voice)\n        } else if (hasVillager) {\n          const voice = Assets.cache.get('config').units.Villager.sounds[action]\n          voice && sound.play(voice)\n        }\n      })\n\n      this.addChild(this.sprite)\n    }\n  }\n\n  select() {\n    if (this.selected) {\n      return\n    }\n    this.selected = true\n    const selection = new Graphics()\n    selection.label = LABEL_TYPES.selection\n    selection.zIndex = 3\n    const path = [-32 * this.size, 0, 0, -16 * this.size, 32 * this.size, 0, 0, 16 * this.size]\n    selection.poly(path)\n    selection.stroke(COLOR_WHITE)\n    this.addChildAt(selection, 0)\n  }\n\n  unselect() {\n    if (!this.selected) {\n      return\n    }\n    this.selected = false\n    const selection = this.getChildByLabel(LABEL_TYPES.selection)\n    if (selection) {\n      this.removeChild(selection)\n    }\n  }\n\n  die(immediate) {\n    if (this.isDead) {\n      return\n    }\n    const {\n      context: { player, players, map, menu },\n    } = this\n    if (this.selected && player.selectedOther === this) {\n      player.unselectAll()\n    }\n    const listName = 'founded' + this.type + 's'\n    for (let i = 0; i < players.length; i++) {\n      if (players[i].type === PLAYER_TYPES.ai) {\n        const list = players[i][listName]\n        if (list) {\n          const index = list.indexOf(this)\n          list.splice(index, 1)\n        }\n      }\n    }\n    // Remove from map resources\n    let index = map.resources.indexOf(this)\n    if (index >= 0) {\n      map.resources.splice(index, 1)\n    }\n    menu.updateResourcesMiniMap()\n    this.isDead = true\n    if (this.type === RESOURCE_TYPES.tree && !immediate) {\n      this.onTreeDie()\n    } else {\n      this.clear()\n    }\n  }\n\n  setCuttedTreeTexture() {\n    const { sprite } = this\n    const spritesheet = Assets.cache.get('636')\n    this.textureName = `00${randomRange(0, 3)}_636.png`\n    const texture = spritesheet.textures[this.textureName]\n    sprite.texture = texture\n    const points = [-CELL_WIDTH / 2, 0, 0, -CELL_HEIGHT / 2, CELL_WIDTH / 2, 0, 0, CELL_HEIGHT / 2]\n    sprite.hitArea = new Polygon(points)\n    sprite.anchor.set(texture.defaultAnchor.x, texture.defaultAnchor.y)\n  }\n\n  onTreeDie() {\n    const {\n      context: { map },\n    } = this\n    const spritesheet = Assets.cache.get('623')\n    this.textureName = `00${randomRange(0, 3)}_623.png`\n    const texture = spritesheet.textures[this.textureName]\n    const { sprite } = this\n    sprite.texture = texture\n    sprite.eventMode = 'none'\n    this.zIndex--\n    if (map.grid[this.i][this.j].has === this) {\n      map.grid[this.i][this.j].has = null\n      map.grid[this.i][this.j].corpses.push(this)\n      map.grid[this.i][this.j].solid = false\n    }\n  }\n\n  clear() {\n    if (this.isDestroyed) {\n      return\n    }\n    const {\n      context: { map },\n    } = this\n    this.isDestroyed = true\n    if (map.grid[this.i][this.j].has === this) {\n      map.grid[this.i][this.j].has = null\n      map.grid[this.i][this.j].solid = false\n    }\n    const corpseIndex = map.grid[this.i][this.j].corpses.indexOf(this)\n    corpseIndex >= 0 && map.grid[this.i][this.j].corpses.splice(corpseIndex, 1)\n    map.removeChild(this)\n    this.destroy({ child: true, texture: true })\n  }\n\n  setDefaultInterface(element, data) {\n    const {\n      context: { menu },\n    } = this\n    const typeDiv = document.createElement('div')\n    typeDiv.id = MENU_INFO_IDS.type\n    typeDiv.textContent = this.type\n    element.appendChild(typeDiv)\n\n    const iconImg = document.createElement('img')\n    iconImg.id = MENU_INFO_IDS.icon\n    iconImg.src = getIconPath(data.icon)\n    element.appendChild(iconImg)\n\n    if (this.hitPoints) {\n      const hitPointsDiv = document.createElement('div')\n      hitPointsDiv.id = MENU_INFO_IDS.hitPoints\n      hitPointsDiv.textContent = this.hitPoints + '/' + this.totalHitPoints\n      element.appendChild(hitPointsDiv)\n    }\n    if (this.quantity) {\n      const quantityDiv = document.createElement('div')\n\n      quantityDiv.id = MENU_INFO_IDS.quantity\n      quantityDiv.className = 'resource-quantity'\n\n      let iconToUse\n      switch (this.type) {\n        case RESOURCE_TYPES.tree:\n          iconToUse = menu.infoIcons['wood']\n          break\n        case RESOURCE_TYPES.salmon:\n        case RESOURCE_TYPES.berrybush:\n          iconToUse = menu.infoIcons['food']\n          break\n        case RESOURCE_TYPES.stone:\n          iconToUse = menu.infoIcons['stone']\n          break\n        case RESOURCE_TYPES.gold:\n          iconToUse = menu.infoIcons['gold']\n          break\n      }\n      const smallIconImg = document.createElement('img')\n      smallIconImg.src = iconToUse\n      smallIconImg.className = 'resource-quantity-icon'\n      const textDiv = document.createElement('div')\n      textDiv.id = MENU_INFO_IDS.quantityText\n      textDiv.textContent = this.quantity\n      quantityDiv.appendChild(smallIconImg)\n      quantityDiv.appendChild(textDiv)\n      element.appendChild(quantityDiv)\n    }\n  }\n}\n","import { Container, Graphics } from 'pixi.js'\nimport {\n  degreesToRadians,\n  getHitPointsWithDamage,\n  moveTowardPoint,\n  pointsDistance,\n  instancesDistance,\n  average,\n  randomItem,\n  uuidv4,\n} from '../lib'\nimport { COLOR_ARROW, FAMILY_TYPES, LABEL_TYPES, MENU_INFO_IDS, STEP_TIME } from '../constants'\nimport { sound } from '@pixi/sound'\n\nexport class Projectile extends Container {\n  constructor(options, context) {\n    super()\n\n    this.context = context\n    this.label = uuidv4()\n    this.family = FAMILY_TYPES.projectile\n\n    Object.keys(options).forEach(prop => {\n      this[prop] = options[prop]\n    })\n    Object.keys(this.owner.owner.config.projectiles[this.type]).forEach(prop => {\n      this[prop] = this.owner.owner.config.projectiles[this.type][prop]\n    })\n\n    this.x = this.owner.x\n    this.y = this.owner.y - this.owner.sprite.height / 2\n    const { x: targetX, y: targetY } = this.destination || this.target\n\n    this.owner.visible &&\n      this.sounds.start &&\n      sound.play(Array.isArray(this.sounds.start) ? randomItem(this.sounds.start) : this.sounds.start)\n\n    this.distance = instancesDistance(this, this.target, false)\n    const degree = this.degree || getPointsDegree(this.x, this.y, targetX, targetY)\n    const sprite = new Graphics()\n    sprite.rect(1, 1, this.size, 1)\n    sprite.fill(COLOR_ARROW)\n    sprite.rotation = degreesToRadians(degree)\n    sprite.label = LABEL_TYPES.sprite\n    sprite.allowMove = false\n    sprite.eventMode = 'none'\n    sprite.allowClick = false\n    sprite.roundPixels = true\n    this.addChild(sprite)\n\n    const interval = setInterval(() => {\n      if (pointsDistance(this.x, this.y, targetX, targetY) <= Math.max(this.speed, this.size)) {\n        if (\n          pointsDistance(targetX, targetY, this.target.x, this.target.y) <=\n          average(this.target.width, this.target.height)\n        ) {\n          this.onHit(this.target)\n        }\n        clearInterval(interval)\n        this.die()\n        return\n      }\n      moveTowardPoint(this, targetX, targetY, this.speed)\n    }, STEP_TIME)\n  }\n\n  onHit(instance) {\n    const {\n      context: { menu, player },\n    } = this\n    instance.hitPoints = getHitPointsWithDamage(this.owner, instance, this.damage)\n    if (instance.selected && player.selectedOther === instance) {\n      menu.updateInfo(MENU_INFO_IDS.hitPoints, instance.hitPoints + '/' + instance.totalHitPoints)\n    }\n    if (instance.hitPoints <= 0) {\n      instance.die()\n    } else {\n      typeof instance.isAttacked === 'function' && instance.isAttacked(this.owner)\n    }\n  }\n\n  die() {\n    this.isDead = true\n    this.destroy({ child: true, texture: true })\n  }\n}\n","import { sound } from '@pixi/sound'\nimport { Container, Assets, Sprite, AnimatedSprite, Graphics } from 'pixi.js'\nimport {\n  ACCELERATOR,\n  ACTION_TYPES,\n  BUILDING_TYPES,\n  COLOR_WHITE,\n  FAMILY_TYPES,\n  LABEL_TYPES,\n  MENU_INFO_IDS,\n  PLAYER_TYPES,\n  POPULATION_MAX,\n  RUBBLE_TIME,\n  UNIT_TYPES,\n} from '../constants'\nimport {\n  getTexture,\n  getInstanceZIndex,\n  getPlainCellsAroundPoint,\n  getPercentage,\n  getFreeCellAroundPoint,\n  getIconPath,\n  canAfford,\n  drawInstanceBlinkingSelection,\n  payCost,\n  instanceIsInPlayerSight,\n  getActionCondition,\n  capitalizeFirstLetter,\n  refundCost,\n  getBuildingAsset,\n  getBuildingRubbleTextureNameWithSize,\n  instancesDistance,\n  getBuildingTextureNameWithSize,\n  uuidv4,\n  canUpdateMinimap,\n  CustomTimeout,\n  changeSpriteColorDirectly,\n  updateInstanceVisibility,\n} from '../lib'\nimport { Projectile } from './projectile'\nimport { Polygon } from 'pixi.js'\n\nexport class Building extends Container {\n  constructor(options, context) {\n    super()\n\n    this.context = context\n\n    const { map, controls } = context\n\n    this.label = uuidv4()\n    this.family = FAMILY_TYPES.building\n    this.selected = false\n    this.queue = []\n    this.technology = null\n    this.loading = null\n    this.isDead = false\n    this.isDestroyed = false\n    this.timeout\n    this.isUsedBy = null\n\n    Object.keys(options).forEach(prop => {\n      this[prop] = options[prop]\n    })\n    Object.keys(this.owner.config.buildings[this.type]).forEach(prop => {\n      this[prop] = this.owner.config.buildings[this.type][prop]\n    })\n\n    this.interval\n    this.attackInterval\n\n    if (this.queue.length) {\n      this.buyUnit(this.queue[0], true, true)\n    } else if (this.technology) {\n      this.buyTechnology(this.technology.type, true, true)\n    }\n\n    this.quantity = this.quantity ?? this.totalQuantity\n    this.hitPoints = this.hitPoints ?? (this.isBuilt ? this.totalHitPoints : 1)\n\n    this.x = map.grid[this.i][this.j].x\n    this.y = map.grid[this.i][this.j].y\n    this.z = map.grid[this.i][this.j].z\n    this.zIndex = getInstanceZIndex(this)\n    this.visible = map.revealEverything && controls.instanceInCamera(this) ? true : false\n    let spriteSheet = getBuildingTextureNameWithSize(this.size)\n    if (this.type === BUILDING_TYPES.house && this.owner.age === 0) {\n      spriteSheet = '000_489'\n    } else if (this.type === BUILDING_TYPES.dock) {\n      spriteSheet = '000_356'\n    }\n    const texture = getTexture(spriteSheet, Assets)\n    this.sprite = Sprite.from(texture)\n    this.sprite.updateAnchor = true\n    this.sprite.label = LABEL_TYPES.sprite\n    this.sprite.hitArea = texture.hitArea\n      ? new Polygon(texture.hitArea)\n      : new Polygon([-32 * this.size, 0, 0, -16 * this.size, 32 * this.size, 0, 0, 16 * this.size])\n    const units = (this.units || []).map(key => context.menu.getUnitButton(key))\n    const technologies = (this.technologies || []).map(key => context.menu.getTechnologyButton(key))\n    this.interface = {\n      info: element => {\n        const assets = getBuildingAsset(this.type, this.owner, Assets)\n        this.setDefaultInterface(element, assets)\n        if (this.displayPopulation && this.owner.isPlayed && this.isBuilt) {\n          const populationDiv = document.createElement('div')\n          populationDiv.id = MENU_INFO_IDS.population\n\n          const populationIcon = document.createElement('img')\n          const populationSpan = document.createElement('span')\n          populationSpan.id = MENU_INFO_IDS.populationText\n          populationSpan.textContent = this.owner.population + '/' + Math.min(POPULATION_MAX, this.owner.population_max)\n\n          populationIcon.src = getIconPath('004_50731')\n          populationDiv.appendChild(populationIcon)\n          populationDiv.appendChild(populationSpan)\n          element.appendChild(populationDiv)\n        }\n        element.appendChild(this.getLoadingElement())\n      },\n      menu: this.owner.isPlayed || map.devMode ? [...units, ...technologies] : [],\n    }\n\n    // Set solid zone\n    const dist = this.size === 3 ? 1 : 0\n    getPlainCellsAroundPoint(this.i, this.j, map.grid, dist, cell => {\n      const set = cell.getChildByLabel(LABEL_TYPES.set)\n      if (set) {\n        cell.removeChild(set)\n      }\n      for (let i = 0; i < cell.corpses.length; i++) {\n        typeof cell.corpses[i].clear === 'function' && cell.corpses[i].clear()\n      }\n      cell.has = this\n      cell.solid = true\n      this.owner.views[cell.i][cell.j].viewBy.push(this)\n      if (this.owner.isPlayed && !map.revealEverything) {\n        cell.removeFog()\n      }\n    })\n\n    this.allowMove = false\n    if (this.sprite) {\n      this.sprite.allowMove = false\n      this.sprite.eventMode = 'static'\n      this.sprite.roundPixels = true\n\n      this.sprite.on('pointertap', evt => {\n        const {\n          context: { controls, player, menu },\n        } = this\n        if (controls.mouseBuilding || controls.mouseRectangle || !controls.isMouseInApp(evt)) {\n          return\n        }\n        let hasSentVillager = false\n        let hasSentOther = false\n        controls.mouse.prevent = true\n        if (this.owner.isPlayed) {\n          // Send Villager to build the building\n          if (!this.isBuilt) {\n            for (let i = 0; i < player.selectedUnits.length; i++) {\n              const unit = player.selectedUnits[i]\n              if (unit.type === UNIT_TYPES.villager) {\n                if (getActionCondition(unit, this, ACTION_TYPES.build)) {\n                  hasSentVillager = true\n                  unit.sendToBuilding(this)\n                }\n              } else {\n                unit.sendTo(this)\n                hasSentOther = true\n              }\n            }\n            if (hasSentVillager) {\n              drawInstanceBlinkingSelection(this)\n            }\n            if (hasSentOther) {\n              const voice = randomItem(['5075', '5076', '5128', '5164'])\n              sound.play(voice)\n              return\n            } else if (hasSentVillager) {\n              const voice = Assets.cache.get('config').units.Villager.sounds.build\n              sound.play(voice)\n              return\n            }\n          } else if (player.selectedUnits) {\n            // Send Villager to give loading of resources\n            for (let i = 0; i < player.selectedUnits.length; i++) {\n              const unit = player.selectedUnits[i]\n              const accept =\n                unit.category === 'Boat'\n                  ? this.type === BUILDING_TYPES.dock\n                  : this.type === BUILDING_TYPES.townCenter || (this.accept && this.accept.includes(unit.loadingType))\n              if (unit.type === UNIT_TYPES.villager && getActionCondition(unit, this, ACTION_TYPES.build)) {\n                hasSentVillager = true\n                unit.previousDest = null\n                unit.sendToBuilding(this)\n              } else if (unit.type === UNIT_TYPES.villager && getActionCondition(unit, this, ACTION_TYPES.farm)) {\n                hasSentVillager = true\n                unit.sendToFarm(this)\n              } else if (\n                accept &&\n                getActionCondition(unit, this, ACTION_TYPES.delivery, { buildingTypes: [this.type] })\n              ) {\n                hasSentVillager = true\n                unit.previousDest = null\n                unit.sendTo(this, ACTION_TYPES.delivery)\n              }\n            }\n            if (hasSentVillager) {\n              drawInstanceBlinkingSelection(this)\n            }\n            if (hasSentVillager) {\n              const voice = Assets.cache.get('config').units.Villager.sounds.build\n              sound.play(voice)\n              return\n            }\n          }\n          if (this.owner.selectedBuilding !== this) {\n            this.owner.unselectAll()\n            this.select()\n            menu.setBottombar(this)\n            this.owner.selectedBuilding = this\n          }\n        } else if (player.selectedUnits.length) {\n          drawInstanceBlinkingSelection(this)\n          for (let i = 0; i < player.selectedUnits.length; i++) {\n            const playerUnit = player.selectedUnits[i]\n            if (playerUnit.type === UNIT_TYPES.villager) {\n              playerUnit.sendToAttack(this)\n            } else {\n              playerUnit.sendTo(this, ACTION_TYPES.attack)\n            }\n          }\n        } else if (instanceIsInPlayerSight(this, player) || map.revealEverything) {\n          player.unselectAll()\n          this.select()\n          menu.setBottombar(this)\n          player.selectedOther = this\n        }\n      })\n\n      this.addChild(this.sprite)\n    }\n\n    if (this.isBuilt) {\n      setTimeout(() => {\n        updateInstanceVisibility(this)\n      })\n      this.finalTexture()\n      this.onBuilt()\n    }\n  }\n\n  attackAction(target) {\n    const {\n      context: { map },\n    } = this\n\n    this.startAttackInterval(() => {\n      if (getActionCondition(this, target, ACTION_TYPES.attack) && instancesDistance(this, target) <= this.range) {\n        if (target.hitPoints <= 0) {\n          target.die()\n        } else {\n          const projectile = new Projectile(\n            {\n              owner: this,\n              type: this.projectile,\n              target,\n            },\n            this.context\n          )\n          map.addChild(projectile)\n        }\n      } else {\n        this.stopAttackInterval()\n      }\n    }, this.rateOfFire)\n  }\n\n  startInterval(callback, time) {\n    const finalCb = () => {\n      const { paused } = this.context\n      if (paused) {\n        return\n      }\n      callback()\n    }\n    this.stopInterval()\n    this.interval = setInterval(finalCb, (time * 1000) / 100 / ACCELERATOR)\n  }\n\n  stopInterval() {\n    if (this.interval) {\n      clearInterval(this.interval)\n      this.interval = null\n    }\n  }\n\n  startAttackInterval(callback, time) {\n    const finalCb = () => {\n      const { paused } = this.context\n      if (paused) {\n        return\n      }\n      callback()\n    }\n    this.stopAttackInterval()\n    finalCb()\n    this.attackInterval = setInterval(finalCb, time * 1000)\n  }\n\n  stopAttackInterval() {\n    if (this.attackInterval) {\n      clearInterval(this.attackInterval)\n      this.attackInterval = null\n    }\n  }\n\n  pause() {\n    this.timeout?.pause()\n  }\n\n  resume() {\n    this.timeout?.resume()\n  }\n\n  startTimeout(cb, time) {\n    this.stopTimeout()\n    this.timeout = new CustomTimeout(() => cb(), (time * 1000) / ACCELERATOR)\n  }\n\n  stopTimeout() {\n    if (this.timeout) {\n      clearInterval(this.timeout)\n      this.timeout = null\n    }\n  }\n\n  isAttacked(instance) {\n    if (this.isDead) {\n      return\n    }\n    if (\n      this.range &&\n      getActionCondition(this, instance, ACTION_TYPES.attack) &&\n      instancesDistance(this, instance) <= this.range\n    ) {\n      this.attackAction(instance)\n    }\n    this.updateHitPoints(ACTION_TYPES.attack)\n  }\n\n  updateTexture() {\n    const {\n      context: { menu },\n    } = this\n    const percentage = getPercentage(this.hitPoints, this.totalHitPoints)\n    const buildSpritesheetId = this.sprite.texture.label.split('_')[1].split('.')[0]\n    const buildSpritesheet = Assets.cache.get(buildSpritesheetId)\n\n    if (percentage >= 25 && percentage < 50) {\n      const textureName = `001_${buildSpritesheetId}.png`\n      this.sprite.texture = buildSpritesheet.textures[textureName]\n    } else if (percentage >= 50 && percentage < 75) {\n      const textureName = `002_${buildSpritesheetId}.png`\n      this.sprite.texture = buildSpritesheet.textures[textureName]\n    } else if (percentage >= 75 && percentage < 99) {\n      const textureName = `003_${buildSpritesheetId}.png`\n      this.sprite.texture = buildSpritesheet.textures[textureName]\n    } else if (percentage >= 100) {\n      this.finalTexture()\n      if (!this.isBuilt) {\n        if (this.owner.isPlayed && this.sounds && this.sounds.create) {\n          sound.play(this.sounds.create)\n        }\n        this.onBuilt()\n      }\n      this.isBuilt = true\n      if (!this.owner.hasBuilt.includes(this.type)) {\n        this.owner.hasBuilt.push(this.type)\n      }\n      if (this.owner.isPlayed && this.selected) {\n        menu.setBottombar(this)\n      }\n      updateInstanceVisibility(this)\n    }\n  }\n\n  onBuilt() {\n    const {\n      context: { menu },\n    } = this\n    if (this.increasePopulation) {\n      // Increase player population and continue all unit creation that was paused\n      this.owner.population_max += this.increasePopulation\n      // Update bottombar with population_max if house selected\n      if (this.owner.isPlayed && this.owner.selectedBuilding && this.owner.selectedBuilding.displayPopulation) {\n        menu.updateInfo(\n          MENU_INFO_IDS.populationText,\n          this.owner.population + '/' + Math.min(POPULATION_MAX, this.owner.population_max)\n        )\n      }\n    }\n    if (this.owner.isPlayed && this.selected) {\n      menu.setBottombar(this)\n    }\n  }\n\n  finalTexture() {\n    const assets = getBuildingAsset(this.type, this.owner, Assets)\n\n    const texture = getTexture(assets.images.final, Assets)\n    this.sprite.texture = texture\n    this.sprite.hitArea = texture.hitArea\n      ? new Polygon(texture.hitArea)\n      : new Polygon([-32 * this.size, 0, 0, -16 * this.size, 32 * this.size, 0, 0, 16 * this.size])\n    this.sprite.anchor.set(texture.defaultAnchor.x, texture.defaultAnchor.y)\n\n    const color = this.getChildByLabel(LABEL_TYPES.color)\n    if (color) {\n      color.destroy()\n    }\n\n    if (assets.images.color) {\n      const spriteColor = Sprite.from(getTexture(assets.images.color, Assets))\n      spriteColor.label = LABEL_TYPES.color\n      changeSpriteColorDirectly(spriteColor, this.owner.color)\n      this.addChild(spriteColor)\n    } else {\n      changeSpriteColorDirectly(this.sprite, this.owner.color)\n    }\n\n    if (this.type === BUILDING_TYPES.house) {\n      if (this.owner.age === 0) {\n        const spritesheetFire = Assets.cache.get('347')\n        const spriteFire = new AnimatedSprite(spritesheetFire.animations['fire'])\n        spriteFire.label = LABEL_TYPES.deco\n        spriteFire.allowMove = false\n        spriteFire.allowClick = false\n        spriteFire.eventMode = 'none'\n        spriteFire.roundPixels = true\n        spriteFire.x = 10\n        spriteFire.y = 5\n        spriteFire.play()\n        spriteFire.animationSpeed = 0.2 * ACCELERATOR\n        this.addChild(spriteFire)\n      } else {\n        const fire = this.getChildByLabel(LABEL_TYPES.deco)\n        if (fire) {\n          fire.destroy()\n        }\n      }\n    }\n  }\n\n  detect(instance) {\n    if (\n      this.range &&\n      instance.family !== FAMILY_TYPES.animal &&\n      !this.attackInterval &&\n      getActionCondition(this, instance, ACTION_TYPES.attack) &&\n      instancesDistance(this, instance) <= this.range\n    ) {\n      this.attackAction(instance)\n    }\n  }\n\n  updateHitPoints(action) {\n    if (this.hitPoints > this.totalHitPoints) {\n      this.hitPoints = this.totalHitPoints\n    }\n    const percentage = getPercentage(this.hitPoints, this.totalHitPoints)\n\n    if (this.hitPoints <= 0) {\n      this.die()\n    }\n    if (action === ACTION_TYPES.build && !this.isBuilt) {\n      this.updateTexture()\n    } else if ((action === ACTION_TYPES.attack && this.isBuilt) || (action === ACTION_TYPES.build && this.isBuilt)) {\n      if (percentage > 0 && percentage < 25) {\n        generateFire(this, '450')\n      }\n      if (percentage >= 25 && percentage < 50) {\n        generateFire(this, '452')\n      }\n      if (percentage >= 50 && percentage < 75) {\n        generateFire(this, '347')\n      }\n      if (percentage >= 75) {\n        const fire = this.getChildByLabel(LABEL_TYPES.fire)\n        if (fire) {\n          this.removeChild(fire)\n        }\n      }\n    }\n    function generateFire(building, spriteId) {\n      const fire = building.getChildByLabel(LABEL_TYPES.fire)\n      const spritesheetFire = Assets.cache.get(spriteId)\n      if (fire) {\n        for (let i = 0; i < fire.children.length; i++) {\n          fire.children[i].textures = spritesheetFire.animations['fire']\n          fire.children[i].play()\n        }\n      } else {\n        const newFire = new Container()\n        newFire.label = LABEL_TYPES.fire\n        newFire.allowMove = false\n        newFire.allowClick = false\n        newFire.eventMode = 'none'\n        let poses = [[0, 0]]\n        if (building.size === 3) {\n          poses = [\n            [0, -32],\n            [-64, 0],\n            [0, 32],\n            [64, 0],\n          ]\n        }\n        for (let i = 0; i < poses.length; i++) {\n          const spriteFire = new AnimatedSprite(spritesheetFire.animations['fire'])\n          spriteFire.allowMove = false\n          spriteFire.allowClick = false\n          spriteFire.eventMode = 'none'\n          spriteFire.roundPixels = true\n          spriteFire.x = poses[i][0]\n          spriteFire.y = poses[i][1]\n          spriteFire.play()\n          spriteFire.animationSpeed = 0.2 * ACCELERATOR\n          newFire.addChild(spriteFire)\n        }\n        building.addChild(newFire)\n      }\n    }\n  }\n\n  die() {\n    if (this.isDead) {\n      return\n    }\n    const {\n      context: { map, player, players, menu },\n    } = this\n    this.stopInterval()\n    this.isDead = true\n    if (this.selected && player) {\n      player.unselectAll()\n    }\n\n    // Remove from player buildings\n    const index = this.owner.buildings.indexOf(this)\n    if (index >= 0) {\n      this.owner.buildings.splice(index, 1)\n    }\n    // Remove from view of others players\n    for (let i = 0; i < players.length; i++) {\n      if (players[i].type === PLAYER_TYPES.ai) {\n        const list = players[i].foundedEnemyBuildings\n        list.splice(list.indexOf(this), 1)\n      }\n    }\n    const color = this.getChildByLabel(LABEL_TYPES.color)\n    color && color.destroy()\n    const deco = this.getChildByLabel(LABEL_TYPES.deco)\n    deco && deco.destroy()\n    const fire = this.getChildByLabel(LABEL_TYPES.fire)\n    fire && fire.destroy()\n\n    let rubbleSheet = getBuildingRubbleTextureNameWithSize(this.size, Assets)\n    if (this.type === BUILDING_TYPES.farm) {\n      rubbleSheet = '000_239'\n    }\n    this.sprite.texture = getTexture(rubbleSheet, Assets)\n    this.sprite.allowMove = false\n    this.sprite.eventMode = 'none'\n    this.sprite.allowClick = false\n    this.zIndex--\n    if (this.type === BUILDING_TYPES.farm) {\n      changeSpriteColorDirectly(this.sprite, this.owner.color)\n    }\n    // Remove solid zone\n    updateInstanceVisibility(this)\n    const dist = this.size === 3 ? 1 : 0\n    getPlainCellsAroundPoint(this.i, this.j, map.grid, dist, cell => {\n      if (cell.has === this) {\n        cell.has = null\n        cell.solid = false\n        cell.corpses.push(this)\n      }\n    })\n    this.startTimeout(() => this.clear(), RUBBLE_TIME)\n    canUpdateMinimap(this, player) && menu.updatePlayerMiniMapEvt(this.owner)\n  }\n\n  clear() {\n    if (this.isDestroyed) {\n      return\n    }\n    const {\n      context: { map },\n    } = this\n    const dist = this.size === 3 ? 1 : 0\n    getPlainCellsAroundPoint(this.i, this.j, map.grid, dist, cell => {\n      const index = cell.corpses.indexOf(this)\n      if (index >= 0) {\n        cell.corpses.splice(index, 1)\n      }\n    })\n    this.isDestroyed = true\n    this.destroy({ child: true, texture: true })\n  }\n\n  select() {\n    if (this.selected) {\n      return\n    }\n    const {\n      context: { menu, player },\n    } = this\n\n    if (this.owner.isPlayed && this.sounds && this.sounds.create) {\n      sound.play(this.sounds.create)\n    }\n\n    this.selected = true\n    const selection = new Graphics()\n    selection.label = LABEL_TYPES.selection\n    selection.zIndex = 3\n    const path = [-32 * this.size, 0, 0, -16 * this.size, 32 * this.size, 0, 0, 16 * this.size]\n    selection.poly(path)\n    selection.stroke(COLOR_WHITE)\n    if (this.loading && this.owner.isPlayed) {\n      this.updateInterfaceLoading()\n    }\n    this.addChildAt(selection, 0)\n    canUpdateMinimap(this, player) && menu.updatePlayerMiniMapEvt(this.owner)\n  }\n\n  unselect() {\n    if (!this.selected) {\n      return\n    }\n    const {\n      context: { menu, player },\n    } = this\n\n    this.selected = false\n    const selection = this.getChildByLabel(LABEL_TYPES.selection)\n    if (selection) {\n      this.removeChild(selection)\n    }\n    canUpdateMinimap(this, player) && menu.updatePlayerMiniMapEvt(this.owner)\n  }\n\n  placeUnit(type) {\n    const {\n      context: { map, menu },\n    } = this\n    let spawnCell\n    const config = this.owner.config.units[type]\n    if (config.category === 'Boat') {\n      spawnCell = getFreeCellAroundPoint(\n        this.i,\n        this.j,\n        this.size,\n        map.grid,\n        cell => cell.category === 'Water' && !cell.solid\n      )\n    } else {\n      spawnCell = getFreeCellAroundPoint(\n        this.i,\n        this.j,\n        this.size,\n        map.grid,\n        cell => cell.category !== 'Water' && !cell.solid\n      )\n    }\n    if (!spawnCell) {\n      return\n    }\n    this.owner.population++\n\n    const extra = (this.owner.getUnitExtraOptions && this.owner.getUnitExtraOptions(type)) || {}\n    this.owner.createUnit({ i: spawnCell.i, j: spawnCell.j, type, ...extra })\n\n    if (this.owner.isPlayed && this.owner.selectedBuilding && this.owner.selectedBuilding.displayPopulation) {\n      menu.updateInfo(\n        MENU_INFO_IDS.populationText,\n        this.owner.population + '/' + Math.min(POPULATION_MAX, this.owner.population_max)\n      )\n    }\n  }\n\n  buyUnit(type, alreadyPaid = false, force = false, extra) {\n    const {\n      context: { menu, map },\n    } = this\n    let success = false\n    const unit = this.owner.config.units[type]\n    if (this.isBuilt && !this.isDead && (canAfford(this.owner, unit.cost) || alreadyPaid)) {\n      if (!alreadyPaid) {\n        if (this.owner.type === PLAYER_TYPES.ai) {\n          if (!this.queue.length && this.loading === null) {\n            payCost(this.owner, unit.cost)\n            this.queue.push(type)\n            success = true\n          }\n        } else {\n          payCost(this.owner, unit.cost)\n          this.queue.push(type)\n          if (this.selected && this.owner.isPlayed) {\n            menu.updateButtonContent(type, this.queue.filter(q => q === type).length)\n          }\n          this.owner.isPlayed && menu.updateTopbar()\n          success = true\n        }\n      }\n      if ((this.loading === null && this.queue[0]) || force) {\n        let hasShowedMessage = false\n        this.loading = force ? this.loading : 0\n        if (this.selected && this.owner.isPlayed) {\n          this.updateInterfaceLoading()\n        }\n        this.startInterval(() => {\n          if (this.queue[0] !== type) {\n            this.stopInterval()\n            this.loading = null\n            if (this.queue.length) {\n              this.buyUnit(this.queue[0], true)\n            }\n            hasShowedMessage = false\n            if (this.selected && this.owner.isPlayed) {\n              const still = this.queue.filter(q => q === type).length\n              menu.updateButtonContent(type, still || '')\n              if (still === 0) {\n                menu.toggleButtonCancel(type, false)\n              }\n              this.updateInterfaceLoading()\n            }\n          } else if (this.loading >= 100 || map.devMode) {\n            this.stopInterval()\n            this.placeUnit(type, extra)\n            this.loading = null\n            this.queue.shift()\n            if (this.queue.length) {\n              this.buyUnit(this.queue[0], true)\n            }\n            hasShowedMessage = false\n            if (this.selected && this.owner.isPlayed) {\n              const still = this.queue.filter(q => q === type).length\n              menu.updateButtonContent(type, still || '')\n              if (still === 0) {\n                menu.toggleButtonCancel(type, false)\n              }\n              this.updateInterfaceLoading()\n            }\n          } else if (this.loading < 100) {\n            if (this.owner.population < Math.min(POPULATION_MAX, this.owner.population_max)) {\n              this.loading += 1\n            } else if (this.owner.isPlayed && !hasShowedMessage) {\n              menu.showMessage('You need to build more houses')\n              hasShowedMessage = true\n            }\n            if (this.selected && this.owner.isPlayed) {\n              this.updateInterfaceLoading()\n            }\n          }\n        }, unit.trainingTime)\n      }\n      return success\n    }\n  }\n\n  updateInterfaceLoading() {\n    const {\n      context: { menu },\n    } = this\n    if (this.owner.isPlayed && this.owner.selectedBuilding === this) {\n      if (this.loading === 1) {\n        menu.updateInfo(MENU_INFO_IDS.loading, element => (element.innerHTML = this.getLoadingElement().innerHTML))\n      } else if (this.loading > 1) {\n        menu.updateInfo(MENU_INFO_IDS.loadingText, this.loading + '%')\n      } else {\n        menu.updateInfo(MENU_INFO_IDS.loading, element => (element.innerHTML = ''))\n      }\n    }\n  }\n\n  getLoadingElement() {\n    const loadingDiv = document.createElement('div')\n    loadingDiv.className = 'building-loading'\n    loadingDiv.id = MENU_INFO_IDS.loading\n\n    if (this.loading && this.owner.isPlayed) {\n      const iconImg = document.createElement('img')\n      iconImg.className = 'building-loading-icon'\n      iconImg.src = getIconPath('009_50731')\n      const textDiv = document.createElement('div')\n      textDiv.id = MENU_INFO_IDS.loadingText\n      textDiv.textContent = this.loading + '%'\n      loadingDiv.appendChild(iconImg)\n      loadingDiv.appendChild(textDiv)\n    }\n    return loadingDiv\n  }\n\n  cancelTechnology() {\n    const {\n      context: { player, menu },\n    } = this\n    this.stopInterval()\n    refundCost(player, this.technology.cost)\n    this.technology = null\n    this.loading = null\n    if (this.owner.isPlayed) {\n      menu.updateBottombar()\n      menu.updateTopbar()\n    }\n  }\n\n  upgrade(type) {\n    const data = this.owner.config.buildings[type]\n    this.type = type\n    this.hitPoints = data.totalHitPoints - (this.totalHitPoints - this.hitPoints)\n    for (const [key, value] of Object.entries(data)) {\n      this[key] = value\n    }\n    const assets = getBuildingAsset(this.type, this.owner, Assets)\n    this.sprite.texture = getTexture(assets.images.final, Assets)\n    this.sprite.anchor.set(this.sprite.texture.defaultAnchor.x, this.sprite.texture.defaultAnchor.y)\n    const color = this.getChildByLabel(LABEL_TYPES.color)\n    color?.destroy()\n    if (assets.images.color) {\n      const spriteColor = Sprite.from(getTexture(assets.images.color, Assets))\n      spriteColor.label = LABEL_TYPES.color\n      changeSpriteColorDirectly(spriteColor, this.owner.color)\n      this.addChild(spriteColor)\n    } else {\n      changeSpriteColorDirectly(this.sprite, this.owner.color)\n    }\n  }\n\n  buyTechnology(type, alreadyPaid, force) {\n    const {\n      context: { menu, map },\n    } = this\n    let success = false\n    const config = this.owner.techs[type]\n    if (\n      !this.queue.length &&\n      this.isBuilt &&\n      (force || this.loading === null) &&\n      !this.isDead &&\n      (alreadyPaid || canAfford(this.owner, config.cost))\n    ) {\n      !alreadyPaid && payCost(this.owner, config.cost)\n      success = true\n      if (this.owner.isPlayed) {\n        menu.updateTopbar()\n      }\n      this.loading = force ? this.loading : 0\n\n      this.technology = { config, type }\n      if (this.selected && this.owner.selectedBuilding === this) {\n        menu.setBottombar(this)\n      }\n      this.startInterval(() => {\n        const { config, type } = this.technology\n        if (this.loading >= 100 || map.devMode) {\n          this.stopInterval()\n          this.loading = null\n          this.technology = null\n          if (Array.isArray(this.owner[config.key])) {\n            this.owner[config.key].push(config.value || type)\n          } else {\n            this.owner[config.key] = config.value || type\n          }\n          if (config.action) {\n            switch (config.action.type) {\n              case 'upgradeUnit':\n                for (let i = 0; i < this.owner.units.length; i++) {\n                  const unit = this.owner.units[i]\n                  if (unit.type === config.action.source) {\n                    unit.upgrade(config.action.target)\n                  }\n                }\n                break\n              case 'upgradeBuilding':\n                for (let i = 0; i < this.owner.buildings.length; i++) {\n                  const building = this.owner.buildings[i]\n                  if (building.type === config.action.source) {\n                    building.upgrade(technconfigology.action.target)\n                  }\n                }\n                break\n              case 'improve':\n                this.owner.updateConfig(config.action.operations)\n                break\n            }\n          }\n          const functionName = `on${capitalizeFirstLetter(config.key)}Change`\n          typeof this.owner[functionName] === 'function' && this.owner[functionName](config.value)\n          if (this.owner.isPlayed) {\n            menu.updateBottombar()\n            menu.updateTopbar()\n          }\n        } else if (this.loading < 100) {\n          this.loading += 1\n          if (this.owner.isPlayed && this.owner.selectedBuilding === this) {\n            this.updateInterfaceLoading()\n          }\n        }\n      }, config.researchTime)\n    }\n    return success\n  }\n\n  setDefaultInterface(element, data) {\n    const {\n      context: { menu },\n    } = this\n\n    const civDiv = document.createElement('div')\n    civDiv.id = MENU_INFO_IDS.civ\n    civDiv.textContent = this.owner.civ\n    element.appendChild(civDiv)\n\n    const typeDiv = document.createElement('div')\n    typeDiv.id = MENU_INFO_IDS.type\n    typeDiv.textContent = this.type\n    element.appendChild(typeDiv)\n\n    const iconImg = document.createElement('img')\n    iconImg.id = MENU_INFO_IDS.icon\n    iconImg.src = getIconPath(data.icon)\n    element.appendChild(iconImg)\n\n    if (this.owner && this.owner.isPlayed) {\n      const hitPointsDiv = document.createElement('div')\n      hitPointsDiv.id = MENU_INFO_IDS.hitPoints\n      hitPointsDiv.textContent = this.hitPoints + '/' + this.totalHitPoints\n      element.appendChild(hitPointsDiv)\n\n      if (this.isBuilt && this.quantity) {\n        const quantityDiv = document.createElement('div')\n        quantityDiv.id = MENU_INFO_IDS.quantity\n        quantityDiv.className = 'resource-quantity'\n        const smallIconImg = document.createElement('img')\n        smallIconImg.src = menu.icons['food']\n        smallIconImg.className = 'resource-quantity-icon'\n        const textDiv = document.createElement('div')\n        textDiv.id = MENU_INFO_IDS.quantityText\n        textDiv.textContent = this.quantity\n        quantityDiv.appendChild(smallIconImg)\n        quantityDiv.appendChild(textDiv)\n        element.appendChild(quantityDiv)\n      }\n    }\n  }\n}\n","import { sound } from '@pixi/sound'\nimport { Container, Assets, AnimatedSprite, Graphics } from 'pixi.js'\nimport {\n  ACCELERATOR,\n  STEP_TIME,\n  CORPSE_TIME,\n  LOADING_FOOD_TYPES,\n  MAX_SELECT_UNITS,\n  TYPE_ACTION,\n  POPULATION_MAX,\n  WORK_FOOD_TYPES,\n  COLOR_WHITE,\n  WORK_TYPES,\n  ACTION_TYPES,\n  LOADING_TYPES,\n  FAMILY_TYPES,\n  SHEET_TYPES,\n  LABEL_TYPES,\n  MENU_INFO_IDS,\n  UNIT_TYPES,\n  BUILDING_TYPES,\n} from '../constants'\nimport {\n  getInstanceZIndex,\n  randomRange,\n  getIconPath,\n  getInstancePath,\n  instancesDistance,\n  moveTowardPoint,\n  getInstanceClosestFreeCellPath,\n  instanceContactInstance,\n  getInstanceDegree,\n  changeSpriteColor,\n  findInstancesInSight,\n  getClosestInstanceWithPath,\n  getCellsAroundPoint,\n  drawInstanceBlinkingSelection,\n  instanceIsInPlayerSight,\n  degreeToDirection,\n  onSpriteLoopAtFrame,\n  getActionCondition,\n  randomItem,\n  getHitPointsWithDamage,\n  getClosestInstance,\n  throttle,\n  getFreeCellAroundPoint,\n  uuidv4,\n  canUpdateMinimap,\n  getWorkWithLoadingType,\n  setUnitTexture,\n  updateInstanceVisibility,\n} from '../lib'\nimport { Projectile } from './projectile'\n\nfunction getActionSheet(work, action, Assets, unit) {\n  if (!work) {\n    return\n  }\n  const actionSheet = action === ACTION_TYPES.takemeat ? SHEET_TYPES.harvest : SHEET_TYPES.action\n  return Assets.cache.get(unit.allAssets[work][actionSheet])\n}\n\nexport class Unit extends Container {\n  constructor(options, context) {\n    super()\n\n    this.context = context\n\n    const {\n      context: { map, menu },\n    } = this\n    this.label = uuidv4()\n    this.family = FAMILY_TYPES.unit\n\n    this.dest = null\n    this.realDest = null\n    this.previousDest = null\n    this.path = []\n    this.selected = false\n    this.degree = randomRange(1, 360)\n    this.currentFrame = randomRange(0, 4)\n    this.action = null\n    this.loading = 0\n    this.loadingType = null\n    this.currentSheet = SHEET_TYPES.standing\n    this.inactif = true\n    this.isDead = false\n    this.isDestroyed = false\n    this.x = null\n    this.y = null\n    this.z = null\n\n    Object.keys(options).forEach(prop => {\n      this[prop] = options[prop]\n    })\n    Object.keys(this.owner.config.units[this.type]).forEach(prop => {\n      this[prop] = this.owner.config.units[this.type][prop]\n    })\n    this.size = 1\n    this.visible = false\n    this.visibleCells = new Set()\n    this.x = this.x ?? map.grid[this.i][this.j].x\n    this.y = this.y ?? map.grid[this.i][this.j].y\n    this.z = this.z ?? map.grid[this.i][this.j].z\n    this.zIndex = getInstanceZIndex(this)\n    this.quantity = this.quantity ?? this.totalQuantity\n    this.hitPoints = this.hitPoints ?? this.totalHitPoints\n\n    this.currentCell = map.grid[this.i][this.j]\n    if (this.currentSheet === SHEET_TYPES.corpse) {\n      this.owner.corpses.push(this)\n      map.grid[this.i][this.j].corpses.push(this)\n    } else if (!this.isDead) {\n      this.currentCell.has = this\n      this.currentCell.solid = true\n      this.owner.units.push(this)\n    }\n    switch (this.type) {\n      case UNIT_TYPES.villager:\n        this.work = this.work || null\n        break\n      case 'Priest':\n        this.work = WORK_TYPES.healer\n        break\n      default:\n        this.work = WORK_TYPES.attacker\n    }\n\n    if (this.assets) {\n      for (const [key, value] of Object.entries(this.assets)) {\n        this[key] = Assets.cache.get(value)\n      }\n    } else if (this.allAssets) {\n      for (const [key, value] of Object.entries(this.allAssets.default)) {\n        this[key] = Assets.cache.get(value)\n      }\n    }\n\n    if (this.owner.isPlayed && map.ready) {\n      sound.play((this.sounds && this.sounds.create) || 5144)\n    }\n\n    this.interface = {\n      info: element => {\n        const data = this.owner.config.units[this.type]\n        this.setDefaultInterface(element, data)\n        if (this.showLoading && this.owner.isPlayed) {\n          element.appendChild(this.getLoadingElement())\n        }\n      },\n      menu:\n        this.showBuildings && this.owner.isPlayed\n          ? [\n              {\n                icon: 'assets/interface/50721/002_50721.png',\n                children: Object.keys(this.owner.config.buildings).map(key => menu.getBuildingButton(key)),\n              },\n            ]\n          : [],\n    }\n\n    this.allowMove = false\n    this.eventMode = 'static'\n    this.actionSheet = this.actionSheet || getActionSheet(this.work, this.action, Assets, this)\n    this.sprite = new AnimatedSprite(this[SHEET_TYPES.standing].animations['south'])\n    this.sprite.label = LABEL_TYPES.sprite\n    this.sprite.allowMove = false\n    this.sprite.eventMode = 'auto'\n    this.sprite.allowClick = false\n    this.sprite.roundPixels = true\n    this.sprite.loop = this.loop ?? true\n    if (this.isDead) {\n      this.currentSheet === SHEET_TYPES.corpse ? this.decompose() : this.death()\n    } else if (this.loading > 0) {\n      this.walkingSheet = Assets.cache.get(this.allAssets[getWorkWithLoadingType(this.loadingType)].loadedSheet)\n      this.standingSheet = Assets.cache.get(this.allAssets[getWorkWithLoadingType(this.loadingType)].standingSheet)\n    }\n    this.setTextures(this.currentSheet)\n\n    this.sprite.currentFrame = Math.min(this.currentFrame, this.sprite.textures.length - 1)\n    this.sprite.updateAnchor = true\n    this.addChild(this.sprite)\n\n    this.sendTo = this.owner.isPlayed ? throttle(this.sendToEvt, 100, true) : this.sendToEvt\n\n    this.on('pointerdown', evt => {\n      const {\n        context: { controls, player },\n      } = this\n      if (controls.mouseBuilding || controls.mouseRectangle || !controls.isMouseInApp(evt)) {\n        return\n      }\n      if (controls.clicked) {\n        if (this.owner.isPlayed) {\n          controls.getCellOnCamera(cell => {\n            if (\n              player.selectedUnits.length < MAX_SELECT_UNITS &&\n              cell.has &&\n              cell.has.owner &&\n              cell.has.owner.label === this.owner.label &&\n              cell.has.type === this.type\n            ) {\n              cell.has.select()\n              player.selectedUnits.push(cell.has)\n            }\n          })\n        }\n        controls.doubleClicked = true\n      }\n      controls.clicked = false\n    })\n    this.on('pointerup', evt => {\n      const {\n        context: { controls, player, menu },\n      } = this\n      if (controls.doubleClicked || controls.mouseBuilding || controls.mouseRectangle || !controls.isMouseInApp(evt)) {\n        return\n      }\n\n      controls.mouse.prevent = true\n      controls.clicked = true\n      controls.double = setTimeout(() => {\n        controls.clicked = false\n        controls.doubleClicked = false\n      }, 600)\n\n      if (this.owner.isPlayed) {\n        let hasSentHealer = false\n        if (player.selectedUnits.length) {\n          for (let i = 0; i < player.selectedUnits.length; i++) {\n            const playerUnit = player.selectedUnits[i]\n            if (playerUnit.work === WORK_TYPES.healer && this.getActionCondition(playerUnit, ACTION_TYPES.heal)) {\n              hasSentHealer = true\n              playerUnit.sendTo(this, ACTION_TYPES.heal)\n            }\n          }\n        }\n        if (hasSentHealer) {\n          drawInstanceBlinkingSelection(this)\n        } else if (player.selectedUnit !== this) {\n          this.owner.unselectAll()\n          this.select()\n          menu.setBottombar(this)\n          player.selectedUnit = this\n          player.selectedUnits = [this]\n        }\n      } else {\n        let hasSentAttacker = false\n        if (player.selectedUnits.length) {\n          for (let i = 0; i < player.selectedUnits.length; i++) {\n            const playerUnit = player.selectedUnits[i]\n            if (this.getActionCondition(playerUnit, ACTION_TYPES.attack))\n              if (playerUnit.type === UNIT_TYPES.villager) {\n                hasSentAttacker = true\n                playerUnit.sendToAttack(this)\n              } else if (playerUnit.work === WORK_TYPES.attacker) {\n                hasSentAttacker = true\n                playerUnit.sendTo(this, ACTION_TYPES.attack)\n              }\n          }\n        }\n        if (hasSentAttacker) {\n          drawInstanceBlinkingSelection(this)\n        } else if ((player.selectedOther !== this && instanceIsInPlayerSight(this, player)) || map.revealEverything) {\n          player.unselectAll()\n          this.select()\n          menu.setBottombar(this)\n          player.selectedOther = this\n        }\n      }\n    })\n\n    changeSpriteColor(this.sprite, this.owner.color)\n\n    this.interval = null\n\n    setTimeout(() => {\n      updateInstanceVisibility(this)\n    })\n  }\n\n  pause() {\n    this.sprite?.stop()\n  }\n\n  resume() {\n    this.sprite?.play()\n  }\n\n  select() {\n    if (this.selected) return\n\n    const {\n      context: { menu, player },\n    } = this\n\n    this.selected = true\n\n    const selection = new Graphics()\n    selection.label = LABEL_TYPES.selection\n    selection.zIndex = 3\n\n    // Diamond shape\n    const path = [-32 * 0.5, 0, 0, -16 * 0.5, 32 * 0.5, 0, 0, 16 * 0.5]\n    selection.poly(path)\n    selection.stroke(COLOR_WHITE)\n\n    this.addChildAt(selection, 0)\n\n    if (canUpdateMinimap(this, player)) {\n      menu.updatePlayerMiniMapEvt(this.owner)\n    }\n  }\n\n  unselect() {\n    if (!this.selected) {\n      return\n    }\n    const {\n      context: { menu, player },\n    } = this\n\n    this.selected = false\n    const selection = this.getChildByLabel(LABEL_TYPES.selection)\n    if (selection) {\n      this.removeChild(selection)\n    }\n    canUpdateMinimap(this, player) && menu.updatePlayerMiniMapEvt(this.owner)\n  }\n\n  hasPath() {\n    return this.path.length > 0\n  }\n\n  setDest(dest) {\n    if (!dest) {\n      this.stop()\n      return\n    }\n    this.handleSetDest && this.handleSetDest(dest, this)\n    this.dest = dest\n    this.realDest = {\n      i: dest.i,\n      j: dest.j,\n      x: dest.x,\n      y: dest.y,\n      label: dest.label,\n    }\n  }\n\n  setPath(path) {\n    if (!path.length) {\n      this.stop()\n      return\n    }\n    this.setTextures(SHEET_TYPES.walking)\n    this.inactif = false\n    this.path = path\n    this.startInterval(() => this.step(), STEP_TIME)\n  }\n\n  handleChangeDest() {\n    if (this.dest && this.dest.isUsedBy === this) {\n      this.dest.isUsedBy = null\n    }\n  }\n\n  sendToEvt(dest, action) {\n    const {\n      context: { map },\n    } = this\n    this.handleChangeDest()\n    this.stopInterval()\n    let path = []\n    // No instance we cancel the destination\n    if (!dest || this.isDead) {\n      return\n    }\n    // Unit is already beside our target\n    if (\n      this.isUnitAtDest(action, dest) &&\n      (!map.grid[this.i][this.j].solid ||\n        (map.grid[this.i][this.j].solid && map.grid[this.i][this.j].has?.label === this.label))\n    ) {\n      this.setDest(dest)\n      this.action = action\n      this.degree = getInstanceDegree(this, dest.x, dest.y)\n      this.getAction(action)\n      return\n    }\n    // Set unit path\n    if (map.grid[dest.i] && map.grid[dest.i][dest.j]) {\n      const allowWaterCellCategory = this.category === 'Boat'\n      if (map.grid[dest.i][dest.j].solid) {\n        path = getInstanceClosestFreeCellPath(this, dest, map)\n        if (!path.length && this.work) {\n          this.action = action\n          this.affectNewDest()\n          return\n        }\n      } else if (!allowWaterCellCategory && dest.category === 'Water') {\n        const cell = getFreeCellAroundPoint(\n          dest.i,\n          dest.j,\n          1,\n          map.grid,\n          cell => cell.category !== 'Water' && !cell.solid\n        )\n        this.sendToEvt(cell)\n        return\n      }\n    }\n    if (!path.length) {\n      path = getInstancePath(this, dest.i, dest.j, map)\n    }\n    // Unit found a path, set the action and play walking animation\n    if (path.length) {\n      this.setDest(dest)\n      this.action = action\n      this.setPath(path)\n    } else {\n      this.stop()\n    }\n  }\n\n  getActionCondition(target, action = this.action, props) {\n    return getActionCondition(this, target, action, props)\n  }\n\n  goBackToPrevious() {\n    const {\n      context: { map },\n    } = this\n\n    if (!this.previousDest) {\n      this.stop()\n      return\n    }\n    const dest = this.previousDest\n    const type = dest.category || dest.type\n    this.previousDest = null\n    if (dest.family === FAMILY_TYPES.animal) {\n      if (this.getActionCondition(dest, ACTION_TYPES.takemeat)) {\n        this.sendToTakeMeat(dest)\n      } else {\n        this.sendTo(map.grid[dest.i][dest.j], ACTION_TYPES.hunt)\n      }\n    } else if (dest.family === FAMILY_TYPES.building) {\n      if (this.getActionCondition(dest, ACTION_TYPES.build)) {\n        this.sendToBuilding(dest)\n      } else if (this.getActionCondition(dest, ACTION_TYPES.farm)) {\n        this.sendToFarm(dest)\n      } else {\n        this.sendTo(map.grid[dest.i][dest.j], ACTION_TYPES.build)\n      }\n    } else if (TYPE_ACTION[type]) {\n      if (this.getActionCondition(dest, TYPE_ACTION[type])) {\n        const sendToFunc = `sendTo${type}`\n        typeof this[sendToFunc] === 'function' ? this[sendToFunc](dest) : this.stop()\n      } else {\n        this.sendTo(map.grid[dest.i][dest.j], TYPE_ACTION[type])\n      }\n    } else {\n      this.sendTo(map.grid[dest.i][dest.j])\n    }\n  }\n\n  getAction(name) {\n    const {\n      context: { menu, player, map },\n    } = this\n    this.sprite.onLoop = null\n    this.sprite.onFrameChange = null\n    switch (name) {\n      case ACTION_TYPES.delivery:\n        if (!this.getActionCondition(this.dest, this.action)) {\n          this.stop()\n          return\n        }\n        this.owner[LOADING_FOOD_TYPES.includes(this.loadingType) ? 'food' : this.loadingType] += this.loading\n        this.owner.isPlayed && menu.updateTopbar()\n        this.loading = 0\n        this.updateInterfaceLoading()\n        if (this.allAssets && this.allAssets[this.work]) {\n          this.standingSheet = Assets.cache.get(this.allAssets[this.work].standingSheet)\n          this.walkingSheet = Assets.cache.get(this.allAssets[this.work].walkingSheet)\n        }\n\n        if (this.previousDest) {\n          this.goBackToPrevious()\n        } else {\n          this.stop()\n        }\n        break\n      case ACTION_TYPES.farm:\n        if (!this.getActionCondition(this.dest)) {\n          this.affectNewDest()\n          return\n        }\n        this.dest.isUsedBy = this\n        this.setTextures(SHEET_TYPES.action)\n        this.startInterval(\n          () => {\n            if (!this.getActionCondition(this.dest)) {\n              if (this.dest.quantity <= 0) {\n                this.dest.die()\n              }\n              this.affectNewDest()\n              return\n            }\n            this.dest.isUsedBy = this\n            // Villager is full we send him delivery first\n            if (this.loading === this.loadingMax[this.loadingType] || !this.dest) {\n              this.sendToDelivery()\n              this.dest.isUsedBy = null\n              return\n            }\n            // Villager farm the farm\n            this.loading++\n            this.loadingType = LOADING_TYPES.wheat\n            this.updateInterfaceLoading()\n\n            this.visible && sound.play('5178')\n            this.dest.quantity = Math.max(this.dest.quantity - 1, 0)\n            if (this.dest.selected) {\n              menu.updateInfo(MENU_INFO_IDS.quantityText, this.dest.quantity)\n            }\n            // Destroy farm if it out of quantity\n            if (this.dest.quantity <= 0) {\n              this.dest.die()\n              this.affectNewDest()\n            }\n            // Set the walking with berrybush animation\n            if (this.loading > 0) {\n              if (this.allAssets[this.work]) {\n                this.walkingSheet = Assets.cache.get(this.allAssets[this.work].loadedSheet)\n              }\n              this.standingSheet = null\n            }\n          },\n          (1 / this.gatheringRate[this.work]) * 1000,\n          false\n        )\n        break\n      case ACTION_TYPES.chopwood:\n        if (!this.getActionCondition(this.dest)) {\n          this.affectNewDest()\n          return\n        }\n        this.setTextures(SHEET_TYPES.action)\n        this.startInterval(\n          () => {\n            if (!this.getActionCondition(this.dest)) {\n              if (this.dest.quantity <= 0) {\n                this.dest.die()\n              }\n              this.affectNewDest()\n              return\n            }\n            // Villager is full we send him delivery first\n            if (this.loading === this.loadingMax[this.loadingType] || !this.dest) {\n              this.sendToDelivery()\n              return\n            }\n\n            this.visible && sound.play('5048')\n\n            // Tree destination is still alive we cut him until it's dead\n            if (this.dest.hitPoints > 0) {\n              this.dest.hitPoints = Math.max(this.dest.hitPoints - 1, 0)\n\n              if (this.dest.selected) {\n                menu.updateInfo(\n                  MENU_INFO_IDS.hitPoints,\n                  this.dest.hitPoints > 0 ? this.dest.hitPoints + '/' + this.dest.totalHitPoints : ''\n                )\n              }\n              if (this.dest.hitPoints <= 0) {\n                // Set cutted tree texture\n                this.dest.hitPoints = 0\n                this.dest.setCuttedTreeTexture()\n              }\n            } else {\n              // Villager cut the stump\n              this.loading++\n              this.loadingType = LOADING_TYPES.wood\n              this.updateInterfaceLoading()\n\n              this.dest.quantity = Math.max(this.dest.quantity - 1, 0)\n              if (this.dest.selected) {\n                menu.updateInfo(MENU_INFO_IDS.quantityText, this.dest.quantity)\n              }\n              // Destroy tree if stump out of quantity\n              if (this.dest.quantity <= 0) {\n                this.dest.die()\n                this.affectNewDest()\n              }\n              // Set the walking with wood animation\n              if (this.loading > 0) {\n                if (this.allAssets[this.work]) {\n                  this.walkingSheet = Assets.cache.get(this.allAssets[this.work].loadedSheet)\n                }\n                this.standingSheet = null\n              }\n            }\n          },\n          (1 / this.gatheringRate[this.work]) * 1000,\n          false\n        )\n        break\n      case ACTION_TYPES.forageberry:\n        if (!this.getActionCondition(this.dest)) {\n          this.affectNewDest()\n          return\n        }\n        this.setTextures(SHEET_TYPES.action)\n        this.startInterval(\n          () => {\n            if (!this.getActionCondition(this.dest)) {\n              if (this.dest.quantity <= 0) {\n                this.dest.die()\n              }\n              this.affectNewDest()\n              return\n            }\n            // Villager is full we send him delivery first\n            if (this.loading === this.loadingMax[this.loadingType] || !this.dest) {\n              this.sendToDelivery()\n              return\n            }\n            // Villager forage the berrybush\n            this.loading++\n            this.loadingType = LOADING_TYPES.berry\n            this.updateInterfaceLoading()\n\n            this.visible && sound.play('5085')\n\n            this.dest.quantity = Math.max(this.dest.quantity - 1, 0)\n            if (this.dest.selected) {\n              menu.updateInfo(MENU_INFO_IDS.quantityText, this.dest.quantity)\n            }\n            // Destroy berrybush if it out of quantity\n            if (this.dest.quantity <= 0) {\n              this.dest.die()\n              this.affectNewDest()\n            }\n            // Set the walking with berrybush animation\n            if (this.loading > 0) {\n              if (this.allAssets[this.work]) {\n                this.walkingSheet = Assets.cache.get(this.allAssets[this.work].loadedSheet)\n              }\n              this.standingSheet = null\n            }\n          },\n          (1 / this.gatheringRate[this.work]) * 1000,\n          false\n        )\n        break\n      case ACTION_TYPES.minestone:\n        if (!this.getActionCondition(this.dest)) {\n          this.affectNewDest()\n          return\n        }\n        this.setTextures(SHEET_TYPES.action)\n        this.startInterval(\n          () => {\n            if (!this.getActionCondition(this.dest)) {\n              if (this.dest.quantity <= 0) {\n                this.dest.die()\n              }\n              this.affectNewDest()\n              return\n            }\n            // Villager is full we send him delivery first\n            if (this.loading === this.loadingMax[this.loadingType] || !this.dest) {\n              this.sendToDelivery()\n              return\n            }\n            // Villager mine the stone\n            this.loading++\n            this.loadingType = LOADING_TYPES.stone\n            this.updateInterfaceLoading()\n\n            this.visible && sound.play('5159')\n\n            this.dest.quantity = Math.max(this.dest.quantity - 1, 0)\n            if (this.dest.selected) {\n              menu.updateInfo(MENU_INFO_IDS.quantityText, this.dest.quantity)\n            }\n            // Destroy stone if it out of quantity\n            if (this.dest.quantity <= 0) {\n              this.dest.die()\n              this.affectNewDest()\n            }\n            // Set the walking with stone animation\n            if (this.loading > 0) {\n              if (this.allAssets[this.work]) {\n                this.walkingSheet = Assets.cache.get(this.allAssets[this.work].loadedSheet)\n              }\n              this.standingSheet = null\n            }\n          },\n          (1 / this.gatheringRate[this.work]) * 1000,\n          false\n        )\n        break\n      case ACTION_TYPES.minegold:\n        if (!this.getActionCondition(this.dest)) {\n          this.affectNewDest()\n          return\n        }\n        this.setTextures(SHEET_TYPES.action)\n        this.startInterval(\n          () => {\n            if (!this.getActionCondition(this.dest)) {\n              this.affectNewDest()\n              return\n            }\n            // Villager is full we send him delivery first\n            if (this.loading === this.loadingMax[this.loadingType] || !this.dest) {\n              this.sendToDelivery()\n              return\n            }\n            // Villager mine the gold\n            this.loading++\n            this.loadingType = LOADING_TYPES.gold\n            this.updateInterfaceLoading()\n\n            this.visible && sound.play('5159')\n            this.dest.quantity = Math.max(this.dest.quantity - 1, 0)\n            if (this.dest.selected) {\n              menu.updateInfo(MENU_INFO_IDS.quantityText, this.dest.quantity)\n            }\n            // Destroy gold if it out of quantity\n            if (this.dest.quantity <= 0) {\n              this.dest.die()\n              this.affectNewDest()\n            }\n            // Set the walking with gold animation\n            if (this.loading > 0) {\n              if (this.allAssets[this.work]) {\n                this.walkingSheet = Assets.cache.get(this.allAssets[this.work].loadedSheet)\n              }\n              this.standingSheet = null\n            }\n          },\n          (1 / this.gatheringRate[this.work]) * 1000,\n          false\n        )\n        break\n      case ACTION_TYPES.build:\n        if (!this.getActionCondition(this.dest)) {\n          this.affectNewDest()\n          return\n        }\n        this.setTextures(SHEET_TYPES.action)\n        this.startInterval(\n          () => {\n            if (!this.getActionCondition(this.dest)) {\n              if (this.dest.type === BUILDING_TYPES.farm && !this.dest.isUsedBy) {\n                this.sendToFarm(this.dest)\n              }\n              this.affectNewDest()\n              return\n            }\n            if (this.dest.hitPoints < this.dest.totalHitPoints) {\n              this.visible && sound.play('5107')\n              this.dest.hitPoints = Math.min(\n                Math.round(this.dest.hitPoints + this.dest.totalHitPoints / this.dest.constructionTime),\n                this.dest.totalHitPoints\n              )\n              if (this.dest.selected && this.owner.isPlayed) {\n                menu.updateInfo(MENU_INFO_IDS.hitPoints, this.dest.hitPoints + '/' + this.dest.totalHitPoints)\n              }\n              this.dest.updateHitPoints(this.action)\n            } else {\n              if (!this.dest.isBuilt) {\n                this.depst.updateHitPoints(this.action)\n                this.dest.isBuilt = true\n                if (this.dest.type === BUILDING_TYPES.farm && !this.dest.isUsedBy) {\n                  this.sendToFarm(this.dest)\n                }\n              }\n              this.affectNewDest()\n            }\n          },\n          1000,\n          false\n        )\n        break\n      case ACTION_TYPES.attack:\n        if (!this.getActionCondition(this.dest)) {\n          this.affectNewDest()\n          return\n        }\n        this.setTextures(SHEET_TYPES.action)\n        if (this.range && this.type !== UNIT_TYPES.villager) {\n          this.sprite.onLoop = () => {\n            if (!this.getActionCondition(this.dest)) {\n              if (this.dest && this.dest.hitPoints <= 0) {\n                this.dest.die()\n              }\n              this.affectNewDest()\n              return\n            }\n            if (!this.isUnitAtDest(this.action, this.dest)) {\n              this.stop()\n              return\n            }\n            if (this.destHasMoved()) {\n              this.realDest.i = this.dest.i\n              this.realDest.j = this.dest.j\n              this.realDest.x = this.dest.x\n              this.realDest.y = this.dest.y\n              const oldDeg = this.degree\n              this.degree = getInstanceDegree(this, this.dest.x, this.dest.y)\n              if (degreeToDirection(oldDeg) !== degreeToDirection(this.degree)) {\n                this.setTextures(SHEET_TYPES.action)\n              }\n            }\n          }\n          onSpriteLoopAtFrame(this.sprite, 6, () => {\n            const projectile = new Projectile(\n              {\n                owner: this,\n                target: this.dest,\n                type: this.projectile,\n                destination: this.realDest,\n              },\n              this.context\n            )\n            map.addChild(projectile)\n          })\n        } else {\n          this.startInterval(\n            () => {\n              if (!this.getActionCondition(this.dest)) {\n                if (this.dest && this.dest.hitPoints <= 0) {\n                  this.dest.die()\n                }\n                this.affectNewDest()\n                return\n              }\n              if (this.destHasMoved()) {\n                this.realDest.i = this.dest.i\n                this.realDest.j = this.dest.j\n                this.realDest.x = this.dest.x\n                this.realDest.y = this.dest.y\n                const oldDeg = this.degree\n                this.degree = getInstanceDegree(this, this.dest.x, this.dest.y)\n                if (degreeToDirection(oldDeg) !== degreeToDirection(this.degree)) {\n                  this.setTextures(SHEET_TYPES.action)\n                }\n              }\n              if (!this.isUnitAtDest(this.action, this.dest)) {\n                this.sendTo(this.dest, ACTION_TYPES.attack)\n                return\n              }\n              if (this.sounds && this.sounds.hit) {\n                this.visible &&\n                  sound.play(Array.isArray(this.sounds.hit) ? randomItem(this.sounds.hit) : this.sounds.hit)\n              }\n              if (this.dest.hitPoints > 0) {\n                this.dest.hitPoints = getHitPointsWithDamage(this, this.dest)\n                if (\n                  this.dest.selected &&\n                  (player.selectedUnit === this.dest ||\n                    player.selectedBuilding === this.dest ||\n                    player.selectedOther === this.dest)\n                ) {\n                  menu.updateInfo(MENU_INFO_IDS.hitPoints, this.dest.hitPoints + '/' + this.dest.totalHitPoints)\n                }\n                this.dest.isAttacked(this)\n                if (this.dest.hitPoints <= 0) {\n                  this.dest.die()\n                  this.affectNewDest()\n                }\n              }\n            },\n            this.rateOfFire * 1000,\n            false\n          )\n        }\n        break\n      case ACTION_TYPES.heal:\n        if (!this.getActionCondition(this.dest)) {\n          this.affectNewDest()\n          return\n        }\n        this.setTextures(SHEET_TYPES.action)\n        this.sprite.onLoop = () => {\n          if (!this.getActionCondition(this.dest)) {\n            this.affectNewDest()\n            return\n          }\n          if (this.destHasMoved()) {\n            this.realDest.i = this.dest.i\n            this.realDest.j = this.dest.j\n            this.realDest.x = this.dest.x\n            this.realDest.y = this.dest.y\n            const oldDeg = this.degree\n            this.degree = getInstanceDegree(this, this.dest.x, this.dest.y)\n            if (degreeToDirection(oldDeg) !== degreeToDirection(this.degree)) {\n              this.setTextures(SHEET_TYPES.action)\n            }\n          }\n          if (!this.isUnitAtDest(this.action, this.dest)) {\n            this.sendTo(this.dest, ACTION_TYPES.heal)\n            return\n          }\n          if (this.dest.hitPoints < this.dest.totalHitPoints) {\n            this.dest.hitPoints = Math.min(this.dest.hitPoints + this.healing, this.dest.totalHitPoints)\n            if (this.dest.selected && player.selectedUnit === this.dest) {\n              menu.updateInfo(MENU_INFO_IDS.hitPoints, this.dest.hitPoints + '/' + this.dest.totalHitPoints)\n            }\n          }\n        }\n        break\n      case ACTION_TYPES.takemeat:\n        if (!this.getActionCondition(this.dest)) {\n          this.affectNewDest()\n          return\n        }\n        this.setTextures(SHEET_TYPES.action)\n        this.startInterval(\n          () => {\n            if (!this.getActionCondition(this.dest)) {\n              this.affectNewDest()\n              return\n            }\n            // Villager is full we send him delivery first\n            if (this.loading === this.loadingMax[this.loadingType] || !this.dest) {\n              this.sendToDelivery()\n              return\n            }\n            // Villager take meat\n            this.visible && sound.play('5178')\n\n            this.loading++\n            this.loadingType = LOADING_TYPES.meat\n            this.updateInterfaceLoading()\n\n            this.dest.quantity = Math.max(this.dest.quantity - 1, 0)\n            this.dest.updateTexture()\n            if (this.dest.selected && this.owner.isPlayed) {\n              menu.updateInfo(MENU_INFO_IDS.quantityText, this.dest.quantity)\n            }\n            // Set the walking with meat animation\n            if (this.loading > 0) {\n              if (this.allAssets[this.work]) {\n                this.walkingSheet = Assets.cache.get(this.allAssets[this.work].loadedSheet)\n              }\n              this.standingSheet = null\n            }\n            // Destroy corps if it out of quantity\n            if (this.dest.quantity <= 0) {\n              this.affectNewDest()\n            }\n          },\n          (1 / this.gatheringRate[this.work]) * 1000,\n          false\n        )\n        break\n      case ACTION_TYPES.fishing:\n        if (!this.getActionCondition(this.dest)) {\n          this.affectNewDest()\n          return\n        }\n        this.setTextures(SHEET_TYPES.action)\n        this.startInterval(\n          () => {\n            if (!this.getActionCondition(this.dest)) {\n              this.affectNewDest()\n              return\n            }\n            // Villager is full we send him delivery first\n            if (this.loading === this.loadingMax[this.loadingType] || !this.dest) {\n              this.sendToDelivery()\n              return\n            }\n            // Villager fish\n            this.loading++\n            this.loadingType = LOADING_TYPES.fish\n            this.updateInterfaceLoading()\n\n            this.dest.quantity = Math.max(this.dest.quantity - 1, 0)\n            if (this.dest.selected && this.owner.isPlayed) {\n              menu.updateInfo(MENU_INFO_IDS.quantityText, this.dest.quantity)\n            }\n            // Set the walking with meat animation\n            if (this.loading > 0) {\n              if (this.allAssets && this.allAssets[this.work]) {\n                this.walkingSheet = Assets.cache.get(this.allAssets[this.work].loadedSheet)\n              }\n              this.standingSheet = null\n            }\n            // Destroy corps if it out of quantity\n            if (this.dest.quantity <= 0) {\n              this.affectNewDest()\n            }\n          },\n          (1 / this.gatheringRate[this.work]) * 1000,\n          false\n        )\n        if (this.category !== 'Boat') {\n          onSpriteLoopAtFrame(this.sprite, 6, () => {\n            this.visible && sound.play('5125')\n          })\n        }\n        break\n      case ACTION_TYPES.hunt:\n        if (!this.getActionCondition(this.dest)) {\n          this.affectNewDest()\n          return\n        }\n        if (this.dest.isDead) {\n          this.previousDest ? this.goBackToPrevious() : this.sendToTakeMeat(this.dest)\n        }\n        this.setTextures(SHEET_TYPES.action)\n        this.sprite.onLoop = () => {\n          if (!this.getActionCondition(this.dest)) {\n            if (this.dest && this.dest.hitPoints <= 0) {\n              this.dest.die()\n              this.previousDest ? this.goBackToPrevious() : this.sendToTakeMeat(this.dest)\n              return\n            }\n            this.affectNewDest()\n            return\n          }\n          if (!this.isUnitAtDest(this.action, this.dest)) {\n            this.stop()\n            return\n          }\n          if (this.destHasMoved()) {\n            this.realDest.i = this.dest.i\n            this.realDest.j = this.dest.j\n            this.realDest.x = this.dest.x\n            this.realDest.y = this.dest.y\n            const oldDeg = this.degree\n            this.degree = getInstanceDegree(this, this.dest.x, this.dest.y)\n            if (degreeToDirection(oldDeg) !== degreeToDirection(this.degree)) {\n              this.setTextures(SHEET_TYPES.action)\n            }\n          }\n        }\n        onSpriteLoopAtFrame(this.sprite, 6, () => {\n          const projectile = new Projectile(\n            {\n              owner: this,\n              target: this.dest,\n              type: 'Spear',\n              destination: this.realDest,\n              damage: 4,\n            },\n            this.context\n          )\n          map.addChild(projectile)\n        })\n        break\n      default:\n        this.stop()\n    }\n  }\n\n  detect(instance) {\n    if (\n      this.work === WORK_TYPES.attacker &&\n      instance &&\n      instance.family === FAMILY_TYPES.unit &&\n      !this.path.length &&\n      !this.dest &&\n      this.getActionCondition(instance, ACTION_TYPES.attack)\n    ) {\n      this.sendTo(instance, ACTION_TYPES.attack)\n    }\n  }\n\n  handleAffectNewDestHunter() {\n    const firstTargets = findInstancesInSight(this, instance =>\n      this.getActionCondition(instance, ACTION_TYPES.takemeat)\n    )\n    if (firstTargets.length) {\n      const target = getClosestInstanceWithPath(this, firstTargets)\n      if (target) {\n        if (this.action !== ACTION_TYPES.takemeat) {\n          this.action = ACTION_TYPES.takemeat\n          if (this.allAssets[this.work]) {\n            this.actionSheet = Assets.cache.get(this.allAssets[this.work].harvestSheet)\n          }\n        }\n        if (instanceContactInstance(this, target)) {\n          this.degree = getInstanceDegree(this, target.x, target.y)\n          this.getAction(this.action)\n          return true\n        }\n        this.setDest(target.instance)\n        this.setPath(target.path)\n        return true\n      }\n    }\n    const secondTargets = findInstancesInSight(this, instance => this.getActionCondition(instance, ACTION_TYPES.hunt))\n    if (secondTargets.length) {\n      const target = getClosestInstanceWithPath(this, secondTargets)\n      if (target) {\n        if (this.action !== ACTION_TYPES.hunt) {\n          this.action = ACTION_TYPES.hunt\n          if (this.allAssets[this.work]) {\n            this.actionSheet = Assets.cache.get(this.allAssets[this.work].actionSheet)\n          }\n        }\n        if (instanceContactInstance(this, target)) {\n          this.degree = getInstanceDegree(this, target.x, target.y)\n          this.getAction(this.action)\n          return true\n        }\n        this.setDest(target.instance)\n        this.setPath(target.path)\n        return true\n      }\n    }\n    return false\n  }\n\n  upgrade(type) {\n    const data = this.owner.config.units[type]\n    this.type = type\n    this.hitPoints = data.totalHitPoints - (this.totalHitPoints - this.hitPoints)\n    for (const [key, value] of Object.entries(data)) {\n      this[key] = value\n    }\n    for (const [key, value] of Object.entries(this.assets)) {\n      this[key] = Assets.cache.get(value)\n    }\n    if (this.action && !this.path.length) {\n      this.getAction(this.action)\n    } else {\n      this.setTextures(this.currentSheet)\n    }\n  }\n\n  affectNewDest() {\n    this.stopInterval()\n    if (this.previousDest && this.action !== ACTION_TYPES.delivery) {\n      this.goBackToPrevious()\n      return\n    }\n    let handleSuccess = false\n    if (\n      this.type === UNIT_TYPES.villager &&\n      (this.action === ACTION_TYPES.takemeat || this.action === ACTION_TYPES.hunt)\n    ) {\n      handleSuccess = this.handleAffectNewDestHunter()\n    } else if (!this.dest || this.dest.family !== FAMILY_TYPES.animal) {\n      const targets = findInstancesInSight(this, instance => this.getActionCondition(instance))\n      if (targets.length) {\n        const target = getClosestInstanceWithPath(this, targets)\n        if (target) {\n          if (instanceContactInstance(this, target)) {\n            this.degree = getInstanceDegree(this, target.x, target.y)\n            this.getAction(this.action)\n            return\n          }\n          this.setDest(target.instance)\n          this.setPath(target.path)\n          return\n        }\n      }\n    }\n    if (!handleSuccess) {\n      const notDeliveryWork = [WORK_TYPES.builder, WORK_TYPES.attacker, WORK_TYPES.healer]\n      if (this.loading && !notDeliveryWork.includes(this.work)) {\n        this.sendToDelivery()\n      } else {\n        this.stop()\n      }\n    }\n  }\n\n  isUnitAtDest(action, dest) {\n    if (!action) {\n      return false\n    }\n    if (!dest) {\n      this.affectNewDest()\n      return false\n    }\n    if (\n      (this.type !== UNIT_TYPES.villager || action === ACTION_TYPES.hunt) &&\n      this.range &&\n      instancesDistance(this, dest) <= this.range\n    ) {\n      return true\n    }\n    return instanceContactInstance(this, dest)\n  }\n\n  destHasMoved() {\n    return (\n      (this.dest.i !== this.realDest.i || this.dest.j !== this.realDest.j) &&\n      instancesDistance(this, this.dest) <= this.sight\n    )\n  }\n\n  moveToPath() {\n    const {\n      context: { map },\n    } = this\n    const next = this.path[this.path.length - 1]\n    const nextCell = map.grid[next.i][next.j]\n    if (!this.dest || this.dest.isDestroyed) {\n      this.affectNewDest()\n      return\n    }\n    // Collision with another walking unit, we block the mouvement\n    if (\n      nextCell.has &&\n      nextCell.has.family === FAMILY_TYPES.unit &&\n      nextCell.has.label !== this.label &&\n      nextCell.has.hasPath() &&\n      instancesDistance(this, nextCell.has) <= 1 &&\n      nextCell.has.sprite.playing\n    ) {\n      this.sprite.stop()\n      return\n    }\n    if (nextCell.solid && this.dest) {\n      this.sendTo(this.dest, this.action)\n      return\n    }\n\n    if (!this.sprite.playing) {\n      this.sprite.play()\n    }\n\n    this.zIndex = getInstanceZIndex(this)\n    if (instancesDistance(this, nextCell, false) <= this.speed) {\n      this.z = nextCell.z\n      this.i = nextCell.i\n      this.j = nextCell.j\n      if (this.currentCell.has === this) {\n        this.currentCell.has = null\n        this.currentCell.solid = false\n      }\n      this.currentCell = map.grid[this.i][this.j]\n      if (this.currentCell.has === null) {\n        this.currentCell.has = this\n        this.currentCell.solid = true\n      }\n      updateInstanceVisibility(this)\n      this.path.pop()\n\n      // Destination moved\n      if (this.destHasMoved()) {\n        this.sendTo(this.dest, this.action)\n        return\n      }\n      if (this.isUnitAtDest(this.action, this.dest)) {\n        this.path = []\n        this.stopInterval()\n        this.degree = getInstanceDegree(this, this.dest.x, this.dest.y)\n        this.getAction(this.action)\n        return\n      }\n\n      if (!this.path.length) {\n        this.stop()\n      }\n    } else {\n      const {\n        context: { menu, player },\n      } = this\n      // Move to next\n      const oldDeg = this.degree\n      let speed = this.speed\n      if (this.loading > 0) {\n        speed *= 0.8\n      }\n      moveTowardPoint(this, nextCell.x, nextCell.y, this.speed)\n      canUpdateMinimap(this, player) && menu.updatePlayerMiniMap(this.owner)\n      if (degreeToDirection(oldDeg) !== degreeToDirection(this.degree)) {\n        // Change animation according to degree\n        this.setTextures(SHEET_TYPES.walking)\n      }\n    }\n  }\n\n  isAttacked(instance) {\n    if (!instance || this.dest === instance || this.isDead) {\n      return\n    }\n    const currentDest = this.dest\n    if (this.type === UNIT_TYPES.villager) {\n      if (instance.family === FAMILY_TYPES.animal) {\n        this.sendToHunt(instance)\n      } else {\n        this.sendToAttack(instance)\n      }\n    } else {\n      this.sendTo(instance, ACTION_TYPES.attack)\n    }\n    this.previousDest = currentDest\n  }\n\n  stop() {\n    if (this.currentCell.has.label !== this.label && this.currentCell.solid) {\n      this.sendTo(this.currentCell)\n      return\n    }\n    this.handleChangeDest()\n    this.inactif = true\n    this.action = null\n    this.dest = null\n    this.realDest = null\n    this.currentCell.has = this\n    this.currentCell.solid = true\n    this.path = []\n    this.stopInterval()\n    this.setTextures(SHEET_TYPES.standing)\n  }\n\n  startInterval(callback, time, immediate = true) {\n    const finalCb = () => {\n      const { paused } = this.context\n      if (paused) {\n        return\n      }\n      callback()\n    }\n    if (this.isDead) {\n      return\n    }\n    this.stopInterval()\n    immediate && finalCb()\n    this.interval = setInterval(finalCb, time)\n  }\n\n  stopInterval() {\n    if (this.interval) {\n      clearInterval(this.interval)\n      this.interval = null\n    }\n  }\n\n  step() {\n    if (this.hitPoints <= 0) {\n      this.die()\n    } else if (this.hasPath()) {\n      this.moveToPath()\n    }\n  }\n\n  explore() {\n    const {\n      context: { map },\n    } = this\n    let dest\n    for (let i = 3; i < 50; i++) {\n      getCellsAroundPoint(this.i, this.j, map.grid, i, cell => {\n        if (!this.owner.views[cell.i][cell.j].viewed && !cell.solid) {\n          dest = this.owner.views[cell.i][cell.j]\n          return\n        }\n      })\n      if (dest) {\n        this.sendTo(dest)\n        break\n      }\n    }\n  }\n\n  runaway(instance) {\n    const {\n      context: { map },\n    } = this\n    let dest = null\n    getCellsAroundPoint(this.i, this.j, map.grid, this.sight, cell => {\n      if (\n        !cell.solid &&\n        (!dest ||\n          pointsDistance(cell.i, cell.j, instance.i, instance.j) >\n            pointsDistance(dest.i, dest.j, instance.i, instance.j))\n      ) {\n        dest = this.owner.views[cell.i][cell.j]\n        return\n      }\n    })\n    if (dest) {\n      this.sendTo(dest)\n    } else {\n      this.stop()\n    }\n  }\n\n  decompose() {\n    const {\n      context: { map },\n    } = this\n    this.setTextures(SHEET_TYPES.corpse)\n    this.sprite.animationSpeed = (1 / (CORPSE_TIME * 1000)) * ACCELERATOR\n    if (map.grid[this.i][this.j].has === this) {\n      map.grid[this.i][this.j].has = null\n      map.grid[this.i][this.j].corpses.push(this)\n      map.grid[this.i][this.j].solid = false\n    }\n  }\n\n  death() {\n    this.setTextures(SHEET_TYPES.dying)\n    this.zIndex--\n    this.sprite.loop = false\n    this.sprite.onComplete = () => {\n      updateInstanceVisibility(this)\n      // Remove from player units\n      let index = this.owner.corpses.indexOf(this)\n      if (index < 0) {\n        this.owner.corpses.push(this)\n      }\n      this.decompose()\n    }\n  }\n\n  die() {\n    if (this.isDead) {\n      return\n    }\n    const {\n      context: { player, menu },\n    } = this\n\n    this.sounds &&\n      this.sounds.die &&\n      this.visible &&\n      sound.play(Array.isArray(this.sounds.die) ? randomItem(this.sounds.die) : this.sounds.die)\n\n    this.stopInterval()\n    if (this.selected && player.selectedOther === this) {\n      player.unselectUnit(this)\n    }\n    if (this.dest && this.dest.isUsedBy === this) {\n      this.dest.isUsedBy = null\n    }\n    this.hitPoints = 0\n    this.path = []\n    this.action = null\n    this.eventMode = 'none'\n    this.isDead = true\n    this.unselect()\n    if (this.owner) {\n      this.owner.population--\n      if (this.owner.isPlayed && this.owner.selectedBuilding && this.owner.selectedBuilding.displayPopulation) {\n        menu.updateInfo(\n          MENU_INFO_IDS.populationText,\n          this.owner.population + '/' + Math.min(POPULATION_MAX, this.owner.population_max)\n        )\n      }\n      // Remove from player units\n      let index = this.owner.units.indexOf(this)\n      if (index >= 0) {\n        this.owner.units.splice(index, 1)\n      }\n      // Update from player selected unit\n      if (this.owner.selectedUnit === this) {\n        menu.updateInfo(MENU_INFO_IDS.hitPoints, this.hitPoints + '/' + this.totalHitPoints)\n      }\n    }\n    this.death()\n    canUpdateMinimap(this, player) && menu.updatePlayerMiniMapEvt(this.owner)\n  }\n\n  clear() {\n    const {\n      context: { map },\n    } = this\n    this.isDestroyed = true\n    // Remove from player units\n    let index = this.owner.corpses.indexOf(this)\n    if (index >= 0) {\n      this.owner.corpses.splice(index, 1)\n    }\n    // Remove from map corpses\n    const corpsesIndex = map.grid[this.i][this.j].corpses.indexOf(this)\n    if (index >= 0) {\n      map.grid[this.i][this.j].corpses.splice(corpsesIndex, 1)\n    }\n    map.removeChild(this)\n    this.destroy({ child: true, texture: true })\n  }\n\n  setTextures(sheet) {\n    setUnitTexture(sheet, this, ACCELERATOR)\n  }\n\n  updateInterfaceLoading() {\n    const {\n      context: { menu },\n    } = this\n    if (this.selected && this.owner.isPlayed && this.owner.selectedUnit === this) {\n      if (this.loading === 1) {\n        menu.updateInfo(MENU_INFO_IDS.loading, element => (element.innerHTML = this.getLoadingElement().innerHTML))\n      } else if (this.loading > 1) {\n        menu.updateInfo(MENU_INFO_IDS.loadingText, this.loading)\n      } else {\n        menu.updateInfo(MENU_INFO_IDS.loading, element => (element.innerHTML = ''))\n      }\n    }\n  }\n\n  getLoadingElement() {\n    const {\n      context: { menu },\n    } = this\n    const loadingDiv = document.createElement('div')\n    loadingDiv.className = 'unit-loading'\n    loadingDiv.id = MENU_INFO_IDS.loading\n\n    if (this.loading) {\n      const iconImg = document.createElement('img')\n      iconImg.className = 'unit-loading-icon'\n      iconImg.src = menu.infoIcons[LOADING_FOOD_TYPES.includes(this.loadingType) ? 'food' : this.loadingType]\n      const textDiv = document.createElement('div')\n      textDiv.id = MENU_INFO_IDS.loadingText\n      textDiv.textContent = this.loading\n      loadingDiv.appendChild(iconImg)\n      loadingDiv.appendChild(textDiv)\n    }\n    return loadingDiv\n  }\n\n  commonSendTo(target, work, action, keepPrevious) {\n    const {\n      context: { menu },\n    } = this\n    const workFromLoading = getWorkWithLoadingType(this.loadingType)\n    if (\n      work !== WORK_TYPES.builder &&\n      work !== workFromLoading &&\n      !(WORK_FOOD_TYPES.includes(work) && WORK_FOOD_TYPES.includes(workFromLoading))\n    ) {\n      this.loading = 0\n      this.loadingType = null\n      this.updateInterfaceLoading()\n    }\n    if (this.work !== work || this.action !== action) {\n      this.work = work\n      this.owner.isPlayed && this.owner.selectedUnit === this && menu.updateInfo(MENU_INFO_IDS.type, this.work)\n      if (this.allAssets && this.allAssets[work]) {\n        this.actionSheet = getActionSheet(work, action, Assets, this)\n        if (!this.loading) {\n          this.standingSheet = Assets.cache.get(this.allAssets[work][SHEET_TYPES.standing])\n          this.walkingSheet = Assets.cache.get(this.allAssets[work][SHEET_TYPES.walking])\n          this.dyingSheet = Assets.cache.get(this.allAssets[work][SHEET_TYPES.dying])\n          this.corpseSheet = Assets.cache.get(this.allAssets[work][SHEET_TYPES.corpse])\n        }\n      }\n    }\n    this.previousDest = keepPrevious ? this.previousDest : null\n    return this.sendTo(target, action)\n  }\n\n  sendToDelivery() {\n    const {\n      context: { map },\n    } = this\n    let buildingTypes = []\n    if (this.category === 'Boat') {\n      buildingTypes = [BUILDING_TYPES.dock]\n    } else {\n      buildingTypes = [BUILDING_TYPES.townCenter]\n      const buildings = {\n        Granary: this.owner.config.buildings.Granary,\n        StoragePit: this.owner.config.buildings.StoragePit,\n      }\n      for (const [key, value] of Object.entries(buildings)) {\n        if (value.accept && value.accept.includes(this.loadingType)) {\n          buildingTypes.push(key)\n          break\n        }\n      }\n    }\n\n    const targets = this.owner.buildings.filter(building =>\n      getActionCondition(this, building, ACTION_TYPES.delivery, { buildingTypes })\n    )\n    const target = getClosestInstance(this, targets)\n    if (this.dest) {\n      this.previousDest = this.dest\n    } else {\n      this.previousDest = map.grid[this.i][this.j]\n    }\n    this.sendTo(target, ACTION_TYPES.delivery)\n  }\n\n  sendToFish(target) {\n    return this.commonSendTo(target, WORK_TYPES.fisher, ACTION_TYPES.fishing)\n  }\n\n  sendToAttack(target) {\n    return this.commonSendTo(target, WORK_TYPES.attacker, ACTION_TYPES.attack, { resource: 'attack' })\n  }\n\n  sendToTakeMeat(target) {\n    return this.commonSendTo(target, WORK_TYPES.hunter, ACTION_TYPES.takemeat, { actionSheet: SHEET_TYPES.harvest })\n  }\n\n  sendToHunt(target) {\n    return this.commonSendTo(target, WORK_TYPES.hunter, ACTION_TYPES.hunt)\n  }\n\n  sendToBuilding(target) {\n    return this.commonSendTo(target, WORK_TYPES.builder, ACTION_TYPES.build)\n  }\n\n  sendToFarm(target) {\n    return this.commonSendTo(target, WORK_TYPES.farmer, ACTION_TYPES.farm)\n  }\n\n  sendToTree(target) {\n    return this.commonSendTo(target, WORK_TYPES.woodcutter, ACTION_TYPES.chopwood)\n  }\n\n  sendToBerrybush(target) {\n    return this.commonSendTo(target, WORK_TYPES.forager, ACTION_TYPES.forageberry)\n  }\n\n  sendToStone(target) {\n    return this.commonSendTo(target, WORK_TYPES.stoneminer, ACTION_TYPES.minestone)\n  }\n\n  sendToGold(target) {\n    return this.commonSendTo(target, WORK_TYPES.goldminer, ACTION_TYPES.minegold)\n  }\n\n  setDefaultInterface(element, data) {\n    const civDiv = document.createElement('div')\n    civDiv.id = MENU_INFO_IDS.civ\n    civDiv.textContent = this.owner.civ\n    element.appendChild(civDiv)\n\n    const typeDiv = document.createElement('div')\n    typeDiv.id = MENU_INFO_IDS.type\n    typeDiv.textContent = this.type === UNIT_TYPES.villager ? this.work || this.type : this.type\n    element.appendChild(typeDiv)\n\n    const iconImg = document.createElement('img')\n    iconImg.id = MENU_INFO_IDS.icon\n    iconImg.src = getIconPath(data.icon)\n    element.appendChild(iconImg)\n\n    const hitPointsDiv = document.createElement('div')\n    hitPointsDiv.id = MENU_INFO_IDS.hitPoints\n    hitPointsDiv.textContent = this.hitPoints + '/' + this.totalHitPoints\n    element.appendChild(hitPointsDiv)\n\n    const infosDiv = document.createElement('div')\n    infosDiv.id = 'infos'\n\n    const infos = [\n      ['meleeAttack', '007_50731'],\n      ['pierceAttack', '006_50731'],\n      ['meleeArmor', '008_50731'],\n      ['pierceArmor', '010_50731'],\n    ]\n\n    for (let i = 0; i < infos.length; i++) {\n      const info = infos[i]\n      if (data[info[0]]) {\n        const infoDiv = document.createElement('div')\n        infoDiv.id = 'info'\n\n        const attackImg = document.createElement('img')\n        attackImg.src = getIconPath(info[1])\n        const attackDiv = document.createElement('div')\n        attackDiv.id = info[0]\n        attackDiv.textContent = data[info[0]]\n        infoDiv.appendChild(attackImg)\n        infoDiv.appendChild(attackDiv)\n        infosDiv.appendChild(infoDiv)\n      }\n    }\n\n    element.appendChild(infosDiv)\n  }\n}\n","import { Assets } from 'pixi.js'\nimport {\n  canAfford,\n  drawInstanceBlinkingSelection,\n  payCost,\n  uuidv4,\n  getHexColor,\n  updateObject,\n  getActionCondition,\n  canUpdateMinimap,\n  isValidCondition,\n} from '../../lib'\nimport { sound } from '@pixi/sound'\nimport { Building } from '../building'\nimport { Unit } from '../unit'\nimport { ACTION_TYPES, FAMILY_TYPES, PLAYER_TYPES, POPULATION_MAX, UNIT_TYPES } from '../../constants'\n\nexport class Player {\n  constructor(options, context) {\n    this.family = FAMILY_TYPES.player\n    this.context = context\n\n    const { map } = context\n    this.label = uuidv4()\n    this.parent = map\n\n    this.wood = map.devMode ? 10000 : 200\n    this.food = map.devMode ? 10000 : 200\n    this.stone = map.devMode ? 10000 : 150\n    this.gold = map.devMode ? 10000 : 0\n    this.corpses = []\n    this.units = []\n    this.buildings = []\n    this.population = 0\n    this.technologies = []\n    this.cellViewed = 0\n    this.age = 0\n    Object.keys(options).forEach(prop => {\n      this[prop] = options[prop]\n    })\n\n    this.population_max = this.population_max || map.devMode ? POPULATION_MAX : 0\n\n    this.colorHex = getHexColor(this.color)\n    this.config = { ...Assets.cache.get('config') }\n    this.techs = { ...Assets.cache.get('technology') }\n    this.hasBuilt = this.hasBuilt || map.devMode ? Object.keys(this.config.buildings).map(key => key) : []\n    const cloneGrid = []\n    for (let i = 0; i <= map.size; i++) {\n      for (let j = 0; j <= map.size; j++) {\n        if (cloneGrid[i] == null) {\n          cloneGrid[i] = []\n        }\n        cloneGrid[i][j] = {\n          i,\n          j,\n          viewBy: this.views?.[i][j].viewBy ?? [],\n          onViewed: () => {\n            const {\n              context: { menu, map },\n            } = this\n            if (this.isPlayed && !map.revealEverything) {\n              menu.updateTerrainMiniMap(i, j)\n            }\n          },\n          viewed:\n            this.views?.[i][j].viewed ??\n            ((this.isPlayed && this.type === PLAYER_TYPES.human && map.revealTerrain) || false),\n        }\n      }\n    }\n    this.views = cloneGrid\n  }\n\n  spawnBuilding(options) {\n    const building = this.createBuilding(options)\n    if (this.isPlayed) {\n      let hasSentVillager = false\n      let hasSentOther = false\n\n      for (let i = 0; i < this.selectedUnits.length; i++) {\n        const unit = this.selectedUnits[i]\n        if (unit.type === UNIT_TYPES.villager) {\n          if (getActionCondition(unit, building, ACTION_TYPES.build)) {\n            hasSentVillager = true\n            unit.sendToBuilding(building)\n          }\n        } else {\n          unit.sendTo(building)\n          hasSentOther = true\n        }\n      }\n      if (hasSentVillager) {\n        drawInstanceBlinkingSelection(building)\n      }\n      if (hasSentOther) {\n        const voice = randomItem(['5075', '5076', '5128', '5164'])\n        sound.play(voice)\n        return\n      } else if (hasSentVillager) {\n        const voice = this.config.units.Villager.sounds.build\n        sound.play(voice)\n        return\n      }\n    }\n\n    return building\n  }\n\n  onAgeChange() {\n    const {\n      context: { players, menu },\n    } = this\n    if (this.isPlayed) {\n      sound.play('5169')\n    }\n    for (let i = 0; i < this.buildings.length; i++) {\n      const building = this.buildings[i]\n      if (building.isBuilt && !building.isDead) {\n        building.finalTexture()\n      }\n    }\n    for (let i = 0; i < players.length; i++) {\n      const player = players[i]\n      if (player.type === PLAYER_TYPES.human) {\n        if (player.selectedUnit && player.selectedUnit.owner.label === this.label) {\n          menu.setBottombar(player.selectedUnit)\n        } else if (player.selectedBuilding && player.selectedBuilding.owner.label === this.label) {\n          menu.setBottombar(player.selectedBuilding)\n        } else if (player.selectedOther && player.selectedOther.owner.label === this.label) {\n          menu.setBottombar(player.selectedOther)\n        }\n      }\n    }\n  }\n\n  otherPlayers() {\n    const {\n      context: { players },\n    } = this\n    const others = [...players]\n    others.splice(players.indexOf(this), 1)\n    return others\n  }\n\n  updateConfig(operations) {\n    for (let i = 0; i < operations.length; i++) {\n      const operation = operations[i]\n      const types = Array.isArray(operation.type) ? operation.type : [operation.type]\n      for (let j = 0; j < types.length; j++) {\n        const type = types[j]\n        if (Object.keys(this.config.buildings).includes(type)) {\n          this.config.buildings[type] && updateObject(this.config.buildings[type], operation)\n        } else if (Object.keys(this.config.units).includes(type)) {\n          this.config.units[type] && updateObject(this.config.units[type], operation)\n        }\n      }\n    }\n  }\n\n  buyBuilding(i, j, type) {\n    const {\n      context: { menu, map },\n    } = this\n    const config = this.config.buildings[type]\n    if (\n      canAfford(this, config.cost) &&\n      (!config.conditions || config.conditions.every(condition => isValidCondition(condition, this)))\n    ) {\n      this.spawnBuilding({ i, j, type, isBuilt: map.devMode })\n      payCost(this, config.cost)\n      this.isPlayed && menu.updateTopbar()\n      return true\n    }\n    return false\n  }\n\n  createUnit(options) {\n    const { context } = this\n    let unit = context.map.addChild(new Unit({ ...options, owner: this }, context))\n    canUpdateMinimap(unit, context.player) && context.menu.updatePlayerMiniMapEvt(this)\n    return unit\n  }\n\n  createBuilding(options) {\n    const { context } = this\n    const building = context.map.addChild(new Building({ ...options, owner: this }, context))\n    this.buildings.push(building)\n    canUpdateMinimap(building, context.player) && context.menu.updatePlayerMiniMapEvt(this)\n    return building\n  }\n}\n","import { Player } from './player'\n\nimport {\n  getValuePercentage,\n  getPositionInGridAroundInstance,\n  getClosestInstance,\n  instancesDistance,\n  getCellsAroundPoint,\n  canAfford,\n} from '../../lib'\nimport {\n  WORK_TYPES,\n  ACTION_TYPES,\n  FAMILY_TYPES,\n  PLAYER_TYPES,\n  UNIT_TYPES,\n  BUILDING_TYPES,\n  RESOURCE_TYPES,\n} from '../../constants'\n\nconst styleLogInfo1 = 'background: #00ff00; color: #ffff00'\nconst styleLogInfo2 = 'background: #222; color: #ff0000'\n\nexport class AI extends Player {\n  constructor({ ...props }, context) {\n    super({ ...props, isPlayed: false, type: PLAYER_TYPES.ai }, context)\n    this.foundedTrees = []\n    this.foundedBerrybushs = []\n    this.foundedGolds = []\n    this.foundedStones = []\n    this.foundedEnemyBuildings = []\n    this.interval = setInterval(() => this.step(), 4000)\n    this.selectedUnits = []\n    this.selectedUnit = null\n    this.selectedBuilding = null\n    this.selectedOther = null\n    this.distSpread = 1\n    this.cellViewed = 0\n\n    this.nextAge = {\n      1: 'ToolAge',\n      2: 'BronzeAge',\n      3: 'IronAge',\n    }\n    this.maxVillagerPerAge = {\n      0: 16,\n      1: 24,\n      2: 40,\n      3: 50,\n    }\n    this.villageTargetPercentageByAge = {\n      0: {\n        wood: 40,\n        food: 60,\n        gold: 0,\n        stone: 0,\n      },\n      1: {\n        wood: 45,\n        food: 45,\n        gold: 10,\n        stone: 0,\n      },\n      2: {\n        wood: 35,\n        food: 35,\n        gold: 20,\n        stone: 10,\n      },\n      3: {\n        wood: 30,\n        food: 30,\n        gold: 25,\n        stone: 15,\n      },\n    }\n    this.maxBuildingByAge = {\n      0: {\n        StoragePit: 1,\n        Granary: 1,\n        Barracks: 1,\n        Market: 1,\n      },\n      1: {\n        StoragePit: 2,\n        Granary: 2,\n        Farm: 4,\n        Barracks: 1,\n        Market: 1,\n      },\n      2: {\n        StoragePit: 3,\n        Granary: 3,\n        Farm: 6,\n        Barracks: 2,\n        Market: 1,\n      },\n      3: {\n        StoragePit: 4,\n        Granary: 4,\n        Farm: 10,\n        Barracks: 2,\n        Market: 1,\n      },\n    }\n  }\n\n  hasNotReachBuildingLimit(buildingType, buildings) {\n    return (\n      !this.maxBuildingByAge[this.age][buildingType] || buildings.length < this.maxBuildingByAge[this.age][buildingType]\n    )\n  }\n\n  buildingsByTypes(types) {\n    return this.buildings.filter(b => types.includes(b.type))\n  }\n\n  getUnitExtraOptions(type) {\n    const me = this\n    return {\n      handleSetDest: target => {\n        const { map } = me.context\n        if (type === UNIT_TYPES.villager && target.family === FAMILY_TYPES.resource) {\n          const buildingType =\n            target.type === RESOURCE_TYPES.berrybush ? BUILDING_TYPES.granary : BUILDING_TYPES.storagePit\n          const buildings = me.buildingsByTypes([buildingType])\n          if (\n            canAfford(me, me.config.buildings[buildingType]) &&\n            me.hasNotReachBuildingLimit(buildingType, buildings)\n          ) {\n            const closestBuilding = getClosestInstance(target, [\n              ...buildings,\n              ...me.buildingsByTypes([BUILDING_TYPES.townCenter]),\n            ])\n            if (!closestBuilding || instancesDistance(closestBuilding, target) > 5) {\n              const pos = getPositionInGridAroundInstance(target, map.grid, [1, 5], 1)\n              if (pos && me.buyBuilding(pos.i, pos.j, buildingType)) {\n                console.log(`Building ${buildingType} at:`, pos)\n              }\n            }\n          }\n        }\n      },\n    }\n  }\n\n  step() {\n    const { map, paused } = this.context\n    if (paused) {\n      return\n    }\n\n    const maxVillagers = this.maxVillagerPerAge[this.age]\n    const maxVillagersOnConstruction = 4\n    const maxClubmans = 10\n    const howManyVillagerBeforeBuyingABarracks = 10\n    const howManySoldiersBeforeAttack = 5\n\n    console.log('%c ----Step started', styleLogInfo1)\n\n    console.log(\n      `%c Age: ${this.age}, Wood: ${this.wood}, Food: ${this.food}, Stone: ${this.stone}, Gold: ${this.gold}, Population: ${this.population}/${this.population_max}`,\n      styleLogInfo2\n    )\n\n    const filterUnitsByType = (type, condition = unit => unit.hitPoints > 0) =>\n      this.units.filter(unit => unit.type === type && condition(unit))\n\n    const villagers = filterUnitsByType(UNIT_TYPES.villager)\n    const clubmans = filterUnitsByType(UNIT_TYPES.clubman)\n\n    console.log(\n      `%c Villagers: ${villagers.length}/${maxVillagers}, Clubmans: ${clubmans.length}/${maxClubmans}`,\n      styleLogInfo2\n    )\n\n    const towncenters = this.buildingsByTypes([BUILDING_TYPES.townCenter])\n    const storagepits = this.buildingsByTypes([BUILDING_TYPES.storagePit])\n    const houses = this.buildingsByTypes([BUILDING_TYPES.house])\n    const granarys = this.buildingsByTypes([BUILDING_TYPES.granary])\n    const barracks = this.buildingsByTypes([BUILDING_TYPES.barracks])\n    const markets = this.buildingsByTypes([BUILDING_TYPES.market])\n    const farms = this.buildingsByTypes([BUILDING_TYPES.farm])\n    const emptyFarms = farms.filter(({ isUsedBy }) => !isUsedBy)\n\n    console.log(\n      `%c Towncenters: ${towncenters.length}, Houses: ${houses.length}, StoragePits: ${storagepits.length}, Granaries: ${granarys.length}, Barracks: ${barracks.length}, Markets: ${markets}`,\n      styleLogInfo2\n    )\n\n    const notBuiltBuildings = this.buildings.filter(\n      b => !b.isBuilt || (b.hitPoints > 0 && b.hitPoints < b.totalHitPoints)\n    )\n    const notBuiltHouses = notBuiltBuildings.filter(b => b.type === BUILDING_TYPES.house)\n\n    const villagersByWork = works => villagers.filter(v => !v.inactif && works.includes(v.work))\n    const inactifVillagers = villagers.filter(v => v.inactif && v.action !== ACTION_TYPES.attack)\n\n    const villagersOnWood = villagersByWork([WORK_TYPES.woodcutter])\n    const villagersOnFood = villagersByWork([WORK_TYPES.forager, WORK_TYPES.farmer, WORK_TYPES.hunter])\n    const villagersOnGold = villagersByWork([WORK_TYPES.goldminer])\n    const villagersOnStone = villagersByWork([WORK_TYPES.stoneminer])\n    const builderVillagers = villagersByWork([WORK_TYPES.builder])\n\n    const maxVillagersOnWood = getValuePercentage(villagers.length, this.villageTargetPercentageByAge[this.age]['wood'])\n    const maxVillagersOnFood = getValuePercentage(villagers.length, this.villageTargetPercentageByAge[this.age]['food'])\n    const maxVillagersOnGold = getValuePercentage(villagers.length, this.villageTargetPercentageByAge[this.age]['gold'])\n    const maxVillagersOnStone = getValuePercentage(\n      villagers.length,\n      this.villageTargetPercentageByAge[this.age]['stone']\n    )\n\n    console.log(\n      `%c Villagers on Wood: ${villagersOnWood.length}/${maxVillagersOnWood}, Villagers on Food: ${villagersOnFood.length}/${maxVillagersOnFood}, Villagers on Stone: ${villagersOnStone.length}/${maxVillagersOnStone}, Villagers on Gold: ${villagersOnGold.length}/${maxVillagersOnGold}, Builder Villagers: ${builderVillagers.length}`,\n      styleLogInfo2\n    )\n\n    const inactifClubmans = clubmans.filter(c => c.inactif && c.action !== ACTION_TYPES.attack && c.assault)\n    const waitingClubmans = clubmans.filter(c => c.inactif && c.action !== ACTION_TYPES.attack && !c.assault)\n\n    console.log(\n      `%c Inactif Clubmans: ${inactifClubmans.length}, Waiting Clubmans: ${waitingClubmans.length}`,\n      styleLogInfo2\n    )\n\n    // Player losing condition\n    if (!this.buildings.length && !this.units.length) {\n      console.log('Player has no buildings and units. Dying...')\n      this.die()\n      return\n    }\n\n    // Cell Viewing Logic\n    if (this.cellViewed <= map.totalCells) {\n      getCellsAroundPoint(this.i, this.j, this.views, this.distSpread, cell => {\n        const globalCell = map.grid[cell.i][cell.j]\n        cell.has = globalCell.has\n        if (globalCell.has) {\n          const { has } = globalCell\n          if (has.quantity > 0) {\n            if (has.type === RESOURCE_TYPES.tree && !this.foundedTrees.includes(has)) {\n              this.foundedTrees.push(has)\n            }\n            if (has.type === RESOURCE_TYPES.berrybush && !this.foundedBerrybushs.includes(has)) {\n              this.foundedBerrybushs.push(has)\n            }\n            if (has.type === RESOURCE_TYPES.stone && !this.foundedStones.includes(has)) {\n              this.foundedStones.push(has)\n            }\n            if (has.type === RESOURCE_TYPES.gold && !this.foundedGolds.includes(has)) {\n              this.foundedGolds.push(has)\n            }\n          }\n          if (\n            has.family === FAMILY_TYPES.building &&\n            has.owner.label !== this.label &&\n            !this.foundedEnemyBuildings.includes(has)\n          ) {\n            this.foundedEnemyBuildings.push(has)\n          }\n        }\n        if (!cell.viewed) {\n          this.cellViewed++\n          cell.viewed = true\n        }\n      })\n      this.distSpread++\n    }\n\n    // Utility function to assign villagers to resources\n    const assignVillagersToResource = (villagers, resourceList, maxVillagers, actionCallback) => {\n      if (resourceList.length) {\n        if (villagers.length < maxVillagers) {\n          for (let i = 0; i < Math.min(maxVillagers, inactifVillagers.length); i++) {\n            const resource = getClosestInstance(inactifVillagers[i], resourceList)\n            actionCallback(inactifVillagers[i], resource)\n          }\n        } else {\n          for (let i = 0; i < villagers.length - maxVillagers; i++) {\n            villagers[i].stop()\n          }\n        }\n      } else {\n        for (let i = 0; i < villagers.length; i++) {\n          villagers[i].stop()\n        }\n      }\n    }\n\n    // Food Gathering Logic\n    assignVillagersToResource(villagersOnFood, this.foundedBerrybushs, maxVillagersOnFood, (villager, bush) => {\n      villager.sendToBerrybush(bush)\n    })\n\n    // Wood Gathering Logic\n    assignVillagersToResource(villagersOnWood, this.foundedTrees, maxVillagersOnWood, (villager, tree) => {\n      villager.sendToTree(tree)\n    })\n\n    // Stone Gathering Logic\n    assignVillagersToResource(villagersOnStone, this.foundedStones, maxVillagersOnStone, (villager, stone) => {\n      villager.sendToStone(stone)\n    })\n\n    // Gold Gathering Logic\n    assignVillagersToResource(villagersOnGold, this.foundedGolds, maxVillagersOnGold, (villager, gold) => {\n      villager.sendToGold(gold)\n    })\n\n    for (let i = 0; i < emptyFarms.length; i++) {\n      const villager = getClosestInstance(emptyFarms[i], inactifVillagers)\n      villager && villager.sendToFarm(emptyFarms[i])\n    }\n\n    // Construction Logic\n    if (notBuiltBuildings.length) {\n      for (const building of notBuiltBuildings) {\n        if (builderVillagers.length >= maxVillagersOnConstruction) break\n        const availableVillagers = villagers.filter(v => v.work !== WORK_TYPES.builder || v.inactif)\n        const villager = getClosestInstance(building, availableVillagers)\n        if (villager) {\n          console.log('Villager sent to build:', building)\n          villager.sendToBuilding(building)\n        }\n      }\n    }\n\n    // Attack Logic\n    const sendToAttack = (clubmans, target) => {\n      console.log('Sending clubmans to attack:', target)\n      clubmans.forEach(clubman => clubman.sendTo(target, ACTION_TYPES.attack))\n    }\n\n    if (waitingClubmans.length >= howManySoldiersBeforeAttack) {\n      const target =\n        this.foundedEnemyBuildings[0] ||\n        map.grid[randomRange(0, map.grid.length - 1)][randomRange(0, map.grid[0].length - 1)]\n      console.log('Clubman attack target:', target)\n      sendToAttack(waitingClubmans, target)\n    }\n\n    if (inactifClubmans.length && this.foundedEnemyBuildings.length) {\n      console.log('Inactif clubmans attacking founded enemy building...')\n      sendToAttack(inactifClubmans, this.foundedEnemyBuildings[0])\n    }\n\n    // Unit Purchasing Logic\n    const buyUnits = (currentCount, maxCount, buildingList, unitType, extra) => {\n      // Calculate how many more units can be bought\n      const unitsNeeded = maxCount - currentCount\n      let unitsBought = 0\n\n      if (unitsNeeded <= 0) {\n        return\n      }\n      // Iterate over the buildings until we reach the needed count\n      for (const building of buildingList) {\n        if (unitsBought >= unitsNeeded) break // Stop if we've bought enough units\n\n        if (building && building.buyUnit(unitType, false, false, extra)) {\n          unitsBought++\n          console.log(`Buying ${unitType} from ${building.type}, Total Bought: ${unitsBought}`)\n        }\n      }\n    }\n\n    buyUnits(villagers.length, maxVillagers, towncenters, UNIT_TYPES.villager)\n    buyUnits(clubmans.length, maxClubmans, barracks, UNIT_TYPES.clubman)\n\n    // Building Purchasing Logic\n    const buyBuildingIfNeeded = (condition, buildingType, positionCallback) => {\n      const list = {\n        House: houses,\n        Farm: farms,\n        Barracks: barracks,\n        Granary: granarys,\n        StoragePit: storagepits,\n        Market: markets,\n      }\n      const building = this.config.buildings[buildingType]\n      if (\n        condition &&\n        canAfford(this, building.cost) &&\n        this.hasNotReachBuildingLimit(buildingType, list[buildingType])\n      ) {\n        const pos = positionCallback()\n        if (pos && this.buyBuilding(pos.i, pos.j, buildingType)) {\n          console.log(`Buying building: ${buildingType} at position:`, pos)\n        }\n      }\n    }\n\n    // Buy House\n    buyBuildingIfNeeded(this.population + 2 > this.population_max && !notBuiltHouses.length, BUILDING_TYPES.house, () =>\n      getPositionInGridAroundInstance(towncenters[0], map.grid, [6, 10], 0)\n    )\n\n    // Buy Barracks\n    buyBuildingIfNeeded(villagers.length > howManyVillagerBeforeBuyingABarracks, BUILDING_TYPES.barracks, () =>\n      getPositionInGridAroundInstance(towncenters[0], map.grid, [6, 20], 1, false, cell =>\n        this.otherPlayers().every(\n          player => instancesDistance(cell, player) <= instancesDistance(towncenters[0], player)\n        )\n      )\n    )\n\n    // Buy Markets\n    buyBuildingIfNeeded(markets.length === 0, BUILDING_TYPES.market, () =>\n      getPositionInGridAroundInstance(towncenters[0], map.grid, [6, 20], 1, false, cell =>\n        this.otherPlayers().every(\n          player => instancesDistance(cell, player) <= instancesDistance(towncenters[0], player)\n        )\n      )\n    )\n\n    // Buy Farm\n    buyBuildingIfNeeded(true, BUILDING_TYPES.farm, () => {\n      const buildings = [...granarys, ...towncenters] // Combine both granarys and towncenters\n\n      for (const building of buildings) {\n        // Try to find a valid position around each building\n        const position = getPositionInGridAroundInstance(\n          building,\n          map.grid,\n          [2, 10],\n          2,\n          false,\n          cell =>\n            this.otherPlayers().every(player => instancesDistance(cell, player) <= instancesDistance(building, player)),\n          false\n        )\n\n        if (position) {\n          return position // If a valid position is found, return and break the loop\n        }\n      }\n\n      return null // If no valid position is found after looping through all buildings\n    })\n\n    // Unit Purchasing Logic\n    const buyTechnology = (buildingList, technologyType) => {\n      // Iterate over the buildings until we reach the needed count\n      for (const building of buildingList) {\n        if (building && building.buyTechnology(technologyType)) {\n          console.log(`Buying ${technologyType} from ${building.type}`)\n        }\n      }\n    }\n    if (this.nextAge[this.age + 1]) {\n      buyTechnology(towncenters, this.nextAge[this.age + 1])\n    }\n\n    console.log('%c ----Step ended', styleLogInfo1)\n  }\n\n  die() {\n    const {\n      context: { players },\n    } = this\n    clearInterval(this.interval)\n    players.splice(players.indexOf(this), 1)\n  }\n}\n","import { sound } from '@pixi/sound'\nimport { Container, Assets, AnimatedSprite, Graphics } from 'pixi.js'\nimport {\n  ACCELERATOR,\n  STEP_TIME,\n  CORPSE_TIME,\n  COLOR_WHITE,\n  ACTION_TYPES,\n  FAMILY_TYPES,\n  SHEET_TYPES,\n  LABEL_TYPES,\n  MENU_INFO_IDS,\n  UNIT_TYPES,\n} from '../constants'\nimport {\n  getInstanceZIndex,\n  randomRange,\n  getIconPath,\n  getInstancePath,\n  instancesDistance,\n  moveTowardPoint,\n  getInstanceClosestFreeCellPath,\n  instanceContactInstance,\n  getInstanceDegree,\n  drawInstanceBlinkingSelection,\n  findInstancesInSight,\n  getClosestInstanceWithPath,\n  getCellsAroundPoint,\n  instanceIsInPlayerSight,\n  getActionCondition,\n  pointsDistance,\n  getHitPointsWithDamage,\n  uuidv4,\n  CustomTimeout,\n  setUnitTexture,\n  updateInstanceVisibility,\n} from '../lib'\n\nexport class Animal extends Container {\n  constructor(options, context) {\n    super()\n\n    this.context = context\n\n    const {\n      context: { map },\n    } = this\n    this.label = uuidv4()\n    this.family = FAMILY_TYPES.animal\n\n    this.dest = null\n    this.realDest = null\n    this.previousDest = null\n    this.path = []\n    this.selected = false\n    this.degree = randomRange(1, 360)\n    this.action = null\n    this.currentFrame = 0\n    this.currentSheet = SHEET_TYPES.standing\n    this.inactif = true\n    this.isDead = false\n    this.isDestroyed = false\n    this.timeout\n    this.x = null\n    this.y = null\n    this.z = null\n\n    Object.keys(options).forEach(prop => {\n      this[prop] = options[prop]\n    })\n    Object.keys(this.owner.config.animals[this.type]).forEach(prop => {\n      this[prop] = this.owner.config.animals[this.type][prop]\n    })\n\n    this.size = 1\n    this.visible = false\n    this.visibleCells = new Set()\n    this.x = this.x ?? map.grid[this.i][this.j].x\n    this.y = this.y ?? map.grid[this.i][this.j].y\n    this.z = this.z ?? map.grid[this.i][this.j].z\n    this.zIndex = getInstanceZIndex(this)\n\n    this.currentCell = map.grid[this.i][this.j]\n    this.currentCell.has = this\n    this.currentCell.solid = true\n\n    this.hitPoints = this.hitPoints ?? this.totalHitPoints\n    this.quantity = this.quantity ?? this.totalQuantity\n\n    for (const [key, value] of Object.entries(this.assets)) {\n      this[key] = Assets.cache.get(value)\n    }\n\n    this.interface = {\n      info: element => {\n        const data = this.owner.config.animals[this.type]\n        this.setDefaultInterface(element, data)\n      },\n    }\n\n    this.allowMove = false\n    this.eventMode = 'static'\n    this.sprite = new AnimatedSprite(this.standingSheet.animations['south'])\n    this.sprite.label = LABEL_TYPES.sprite\n    this.sprite.allowMove = false\n    this.sprite.eventMode = 'auto'\n    this.sprite.allowClick = false\n    this.sprite.roundPixels = true\n    this.sprite.loop = this.loop ?? true\n    if (this.isDead) {\n      this.currentSheet === SHEET_TYPES.corpse ? this.decompose() : this.death()\n    } else {\n      this.setTextures(this.currentSheet)\n    }\n    this.sprite.currentFrame = this.currentFrame\n\n    this.on('pointerup', evt => {\n      const {\n        context: { controls, player, menu },\n      } = this\n      if (controls.mouseBuilding || controls.mouseRectangle || !controls.isMouseInApp(evt)) {\n        return\n      }\n      controls.mouse.prevent = true\n      let drawDestinationRectangle = false\n      let hasSentVillager = false\n      let hasSentOther = false\n\n      if (player.selectedUnits.length) {\n        for (let i = 0; i < player.selectedUnits.length; i++) {\n          const playerUnit = player.selectedUnits[i]\n          if (playerUnit.type === UNIT_TYPES.villager) {\n            if (getActionCondition(playerUnit, this, ACTION_TYPES.hunt)) {\n              playerUnit.sendToHunt(this)\n              hasSentVillager = true\n              drawDestinationRectangle = true\n            } else if (getActionCondition(playerUnit, this, ACTION_TYPES.takemeat)) {\n              playerUnit.sendToTakeMeat(this)\n              hasSentVillager = true\n              drawDestinationRectangle = true\n            }\n          } else if (getActionCondition(playerUnit, this, ACTION_TYPES.attack)) {\n            playerUnit.sendTo(this, ACTION_TYPES.attack)\n            drawDestinationRectangle = true\n            hasSentOther = true\n          }\n        }\n      } else if (player.selectedBuilding && player.selectedBuilding.range) {\n        if (\n          getActionCondition(player.selectedBuilding, this, ACTION_TYPES.attack) &&\n          instancesDistance(player.selectedBuilding, this) <= player.selectedBuilding.range\n        ) {\n          player.selectedBuilding.attackAction(this)\n          drawDestinationRectangle = true\n        }\n      } else if ((instanceIsInPlayerSight(this, player) || map.revealEverything) && this.quantity > 0) {\n        player.unselectAll()\n        this.select()\n        menu.setBottombar(this)\n        player.selectedOther = this\n      }\n\n      if (hasSentOther) {\n        const voice = randomItem(['5075', '5076', '5128', '5164'])\n        sound.play(voice)\n      } else if (hasSentVillager) {\n        const voice = Assets.cache.get('config').units.Villager.sounds.hunt\n        sound.play(voice)\n      }\n      if (drawDestinationRectangle) {\n        drawInstanceBlinkingSelection(this)\n      }\n    })\n\n    this.interval = null\n    this.sprite.updateAnchor = true\n    this.addChild(this.sprite)\n\n    setTimeout(() => {\n      updateInstanceVisibility(this)\n    })\n  }\n\n  startInterval(callback, time, immediate = true) {\n    const finalCb = () => {\n      const { paused } = this.context\n      if (paused) {\n        return\n      }\n      callback()\n    }\n    this.stopInterval()\n    immediate && finalCb()\n    this.interval = setInterval(finalCb, time)\n  }\n\n  stopInterval() {\n    if (this.interval) {\n      clearInterval(this.interval)\n      this.interval = null\n    }\n  }\n\n  select() {\n    if (this.selected) {\n      return\n    }\n\n    this.selected = true\n    const selection = new Graphics()\n    selection.label = LABEL_TYPES.selection\n    selection.zIndex = 3\n    const path = [-32 * 0.5, 0, 0, -16 * 0.5, 32 * 0.5, 0, 0, 16 * 0.5]\n    selection.poly(path)\n    selection.stroke(COLOR_WHITE)\n    this.addChildAt(selection, 0)\n  }\n\n  unselect() {\n    if (!this.selected) {\n      return\n    }\n\n    this.selected = false\n    const selection = this.getChildByLabel(LABEL_TYPES.selection)\n    if (selection) {\n      this.removeChild(selection)\n    }\n  }\n\n  hasPath() {\n    return this.path.length > 0\n  }\n\n  setDest(dest) {\n    if (!dest) {\n      this.stop()\n      return\n    }\n    this.dest = dest\n    this.realDest = {\n      i: dest.i,\n      j: dest.j,\n    }\n  }\n\n  pause() {\n    this.timeout?.pause()\n    this.sprite?.stop()\n  }\n\n  resume() {\n    this.timeout?.resume()\n    this.sprite?.play()\n  }\n\n  setPath(path) {\n    if (!path.length) {\n      this.stop()\n      return\n    }\n\n    this.setTextures(SHEET_TYPES.walking)\n    this.inactif = false\n    this.path = path\n    this.startInterval(() => this.step(), STEP_TIME, true)\n  }\n\n  isAnimalAtDest(action, dest) {\n    if (!action) {\n      return false\n    }\n    if (!dest) {\n      this.affectNewDest()\n      return false\n    }\n    return instanceContactInstance(this, dest)\n  }\n\n  sendTo(dest, action) {\n    const {\n      context: { map },\n    } = this\n    this.stopInterval()\n    let path = []\n    // No instance we cancel the destination\n    if (!dest) {\n      this.stop()\n      return\n    }\n    // Animal is already beside our target\n    if (\n      this.isAnimalAtDest(action, dest) &&\n      (!map.grid[this.i][this.j].solid ||\n        (map.grid[this.i][this.j].solid && map.grid[this.i][this.j].has?.label === this.label))\n    ) {\n      this.setDest(dest)\n      this.action = action\n      this.degree = getInstanceDegree(this, dest.x, dest.y)\n      this.getAction(action)\n      return\n    }\n    // Set animal path\n    if (map.grid[dest.i] && map.grid[dest.i][dest.j] && map.grid[dest.i][dest.j].solid) {\n      path = getInstanceClosestFreeCellPath(this, dest, map)\n    } else {\n      path = getInstancePath(this, dest.i, dest.j, map)\n    }\n    // Animal found a path, set the action and play walking animation\n    if (path.length) {\n      this.setDest(dest)\n      this.action = action\n      this.setPath(path)\n    } else {\n      this.stop()\n    }\n  }\n\n  getActionCondition(target) {\n    return getActionCondition(this, target, this.action)\n  }\n\n  getAction(name) {\n    const {\n      context: { menu, player },\n    } = this\n    switch (name) {\n      case ACTION_TYPES.attack:\n        if (!this.getActionCondition(this.dest)) {\n          this.affectNewDest()\n          return\n        }\n        this.setTextures(SHEET_TYPES.action)\n        this.startInterval(\n          () => {\n            if (!this.getActionCondition(this.dest)) {\n              if (this.dest && this.dest.hitPoints <= 0) {\n                this.dest.die()\n              }\n              this.affectNewDest()\n              return\n            }\n            if (this.destHasMoved()) {\n              this.degree = getInstanceDegree(this, this.dest.x, this.dest.y)\n              this.setTextures(SHEET_TYPES.action)\n            }\n            if (!instanceContactInstance(this, this.dest)) {\n              this.sendTo(this.dest, ACTION_TYPES.attack)\n              return\n            }\n\n            this.sounds && this.sounds.hit && this.visible && sound.play(this.sounds.hit)\n\n            if (this.dest.hitPoints > 0) {\n              this.dest.hitPoints = getHitPointsWithDamage(this, this.dest)\n              if (\n                this.dest.selected &&\n                player &&\n                (player.selectedUnit === this.dest || player.selectedBuilding === this.dest)\n              ) {\n                menu.updateInfo(MENU_INFO_IDS.hitPoints, this.dest.hitPoints + '/' + this.dest.totalHitPoints)\n              }\n              this.dest.isAttacked(this)\n            }\n\n            if (this.dest.hitPoints <= 0) {\n              this.dest.die()\n              this.affectNewDest()\n            }\n          },\n          this.rateOfFire * 1000,\n          false\n        )\n        break\n      default:\n        this.stop()\n    }\n  }\n\n  affectNewDest() {\n    this.stopInterval()\n    const targets = findInstancesInSight(this, instance => this.getActionCondition(instance))\n    if (targets.length) {\n      const target = getClosestInstanceWithPath(this, targets)\n      if (target) {\n        if (instanceContactInstance(this, target)) {\n          this.degree = getInstanceDegree(this, target.x, target.y)\n          this.getAction(this.action)\n          return\n        }\n        this.setDest(target.instance)\n        this.setPath(target.path)\n        return\n      }\n    }\n    this.stop()\n    return\n  }\n\n  destHasMoved() {\n    return (\n      (this.dest.i !== this.realDest.i || this.dest.j !== this.realDest.j) &&\n      instancesDistance(this, this.dest) <= this.sight\n    )\n  }\n\n  moveToPath() {\n    const {\n      context: { map },\n    } = this\n    const next = this.path[this.path.length - 1]\n    const nextCell = map.grid[next.i][next.j]\n    if (!this.dest || this.dest.isDestroyed) {\n      this.affectNewDest()\n      return\n    }\n    // Collision with another walking unit, we block the mouvement\n    if (\n      nextCell.has &&\n      nextCell.has.family === FAMILY_TYPES.animal &&\n      nextCell.has.label !== this.label &&\n      nextCell.has.hasPath() &&\n      instancesDistance(this, nextCell.has) <= 1 &&\n      nextCell.has.sprite.playing\n    ) {\n      this.sprite.stop()\n      return\n    }\n    if (nextCell.solid && this.dest) {\n      this.sendTo(this.dest, this.action)\n      return\n    }\n\n    if (!this.sprite.playing) {\n      this.sprite.play()\n    }\n\n    this.zIndex = getInstanceZIndex(this)\n    if (instancesDistance(this, nextCell, false) < this.speed) {\n      this.z = nextCell.z\n      this.i = nextCell.i\n      this.j = nextCell.j\n\n      if (this.currentCell.has === this) {\n        this.currentCell.has = null\n        this.currentCell.solid = false\n      }\n      this.currentCell = map.grid[this.i][this.j]\n      if (this.currentCell.has === null) {\n        this.currentCell.has = this\n        this.currentCell.solid = true\n      }\n\n      updateInstanceVisibility(this)\n      this.path.pop()\n\n      // Destination moved\n      if (this.destHasMoved()) {\n        this.sendTo(this.dest, this.action)\n        return\n      }\n      if (this.isAnimalAtDest(this.action, this.dest)) {\n        this.path = []\n        this.stopInterval()\n        this.degree = getInstanceDegree(this, this.dest.x, this.dest.y)\n        this.getAction(this.action)\n        return\n      }\n\n      if (!this.path.length) {\n        this.stop()\n      }\n    } else {\n      // Move to next\n      const oldDeg = this.degree\n      moveTowardPoint(this, nextCell.x, nextCell.y, this.speed)\n      if (degreeToDirection(oldDeg) !== degreeToDirection(this.degree)) {\n        // Change animation according to degree\n        this.setTextures(SHEET_TYPES.walking)\n      }\n    }\n  }\n\n  getReaction(instance) {\n    if (this.strategy === 'runaway') {\n      this.runaway(instance)\n    } else {\n      this.sendTo(instance, ACTION_TYPES.attack)\n    }\n  }\n\n  detect(instance) {\n    if (\n      this.strategy &&\n      instance &&\n      instance.family === FAMILY_TYPES.unit &&\n      !this.isDead &&\n      !this.path.length &&\n      !this.dest\n    ) {\n      this.getReaction(instance)\n    }\n  }\n\n  isAttacked(instance) {\n    if (!instance || this.dest || this.isDead) {\n      return\n    }\n    this.getReaction(instance)\n  }\n\n  stop() {\n    if (this.currentCell.has.label !== this.label && this.currentCell.solid) {\n      this.sendTo(this.currentCell)\n      return\n    }\n    this.inactif = true\n    this.action = null\n    this.dest = null\n    this.realDest = null\n    this.currentCell.has = this\n    this.currentCell.solid = true\n    this.path = []\n    this.stopInterval()\n    this.setTextures(SHEET_TYPES.standing)\n  }\n\n  step() {\n    if (this.hitPoints <= 0) {\n      this.die()\n    } else if (this.hasPath()) {\n      this.moveToPath()\n    }\n  }\n\n  runaway(instance) {\n    const {\n      context: { map },\n    } = this\n    let dest = null\n    getCellsAroundPoint(this.i, this.j, map.grid, this.sight, cell => {\n      if (\n        !cell.solid &&\n        (!dest ||\n          pointsDistance(cell.i, cell.j, instance.i, instance.j) >\n            pointsDistance(dest.i, dest.j, instance.i, instance.j))\n      ) {\n        dest = this.owner.views[cell.i][cell.j]\n        return\n      }\n    })\n    if (dest) {\n      this.sendTo(dest)\n    } else {\n      this.stop()\n    }\n  }\n\n  decompose() {\n    const {\n      context: { player, menu },\n    } = this\n    this.setTextures(SHEET_TYPES.corpse)\n    this.sprite.animationSpeed = 0\n    this.startInterval(() => {\n      if (this.quantity > 0) {\n        this.quantity--\n        if (this.selected && player.selectedOther === this) {\n          menu.updateInfo(MENU_INFO_IDS.quantityText, this.quantity)\n        }\n      }\n      this.updateTexture()\n    }, 5000)\n  }\n\n  death() {\n    this.setTextures(SHEET_TYPES.dying)\n    this.zIndex--\n    this.sprite.loop = false\n    this.sprite.onComplete = () => {\n      this.decompose()\n    }\n  }\n\n  die() {\n    if (this.isDead) {\n      return\n    }\n    if (this.sounds && this.visible) {\n      this.sounds.die && sound.play(this.sounds.die)\n      this.sounds.fall && sound.play(this.sounds.fall)\n    }\n    updateInstanceVisibility(this)\n\n    this.owner.population--\n    this.stopInterval()\n    this.isDead = true\n    this.zIndex--\n    this.path = []\n    this.action = null\n    this.death()\n  }\n\n  updateTexture() {\n    const {\n      context: { player, map },\n    } = this\n    const percentage = getPercentage(this.quantity, this.totalQuantity)\n\n    if (percentage > 25 && percentage < 50) {\n      this.sprite.currentFrame = 1\n    } else if (percentage > 0 && percentage <= 25) {\n      this.sprite.currentFrame = 2\n    } else if (percentage <= 0) {\n      this.stopInterval()\n      if (map.grid[this.i][this.j].has === this) {\n        map.grid[this.i][this.j].has = null\n        map.grid[this.i][this.j].corpses.push(this)\n        map.grid[this.i][this.j].solid = false\n      }\n      if (this.selected && player.selectedOther === this) {\n        player.unselectAll()\n      }\n      this.sprite.currentFrame = 3\n      this.timeout = new CustomTimeout(() => {\n        this.clear()\n      }, CORPSE_TIME * 1000)\n    }\n  }\n\n  clear() {\n    const {\n      context: { map },\n    } = this\n    this.isDestroyed = true\n    // Remove from map corpses\n    const corpsesIndex = map.grid[this.i][this.j].corpses.indexOf(this)\n    corpsesIndex >= 0 && map.grid[this.i][this.j].corpses.splice(corpsesIndex, 1)\n    map.removeChild(this)\n    this.destroy({ child: true, texture: true })\n  }\n\n  setTextures(sheet) {\n    setUnitTexture(sheet, this, ACCELERATOR)\n  }\n\n  setDefaultInterface(element, data) {\n    const {\n      context: { menu },\n    } = this\n\n    const civDiv = document.createElement('div')\n    civDiv.id = MENU_INFO_IDS.civ\n    civDiv.textContent = ''\n    element.appendChild(civDiv)\n\n    const typeDiv = document.createElement('div')\n    typeDiv.id = MENU_INFO_IDS.type\n    typeDiv.textContent = this.type\n    element.appendChild(typeDiv)\n\n    const iconImg = document.createElement('img')\n    iconImg.id = MENU_INFO_IDS.icon\n    iconImg.src = getIconPath(data.icon)\n    element.appendChild(iconImg)\n\n    const hitPointsDiv = document.createElement('div')\n    hitPointsDiv.id = MENU_INFO_IDS.hitPoints\n    hitPointsDiv.textContent = this.hitPoints + '/' + this.totalHitPoints\n    element.appendChild(hitPointsDiv)\n\n    const quantityDiv = document.createElement('div')\n    quantityDiv.id = MENU_INFO_IDS.quantity\n    quantityDiv.className = 'resource-quantity'\n    const smallIconImg = document.createElement('img')\n    smallIconImg.src = menu.icons['food']\n    smallIconImg.className = 'resource-quantity-icon'\n    const textDiv = document.createElement('div')\n    textDiv.id = MENU_INFO_IDS.quantityText\n    textDiv.textContent = this.quantity\n    quantityDiv.appendChild(smallIconImg)\n    quantityDiv.appendChild(textDiv)\n    element.appendChild(quantityDiv)\n  }\n}\n","import { PLAYER_TYPES } from '../../constants'\nimport { Animal } from '../animal'\nimport { Player } from './player'\n\nexport class Gaia extends Player {\n  constructor(context) {\n    super({ i: 0, j: 0, type: PLAYER_TYPES.gaia }, context)\n  }\n  createAnimal(options) {\n    const { context } = this\n    let unit = context.map.addChild(new Animal({ ...options, owner: this }, context))\n    this.units.push(unit)\n    return unit\n  }\n}\n","import { PLAYER_TYPES, UNIT_TYPES } from '../../constants'\nimport { Player } from './player'\n\nexport class Human extends Player {\n  constructor({ ...props }, context) {\n    super({ ...props, type: PLAYER_TYPES.human }, context)\n    this.selectedUnits = []\n    this.selectedUnit = null\n    this.selectedBuilding = null\n    this.selectedOther = null\n  }\n\n  unselectUnit(unit) {\n    const {\n      context: { menu },\n    } = this\n    const index = this.selectedUnits.indexOf(unit)\n    this.selectedUnits.splice(index, 1)\n\n    if (!this.selectedUnits.length) {\n      this.selectedUnit = null\n      this.selectedUnits = []\n      menu.setBottombar()\n      return\n    }\n\n    let nextVillager\n    if (this.selectedUnit === unit) {\n      for (let i = 0; i < this.selectedUnits.length; i++) {\n        if (this.selectedUnits[i].type === UNIT_TYPES.villager) {\n          nextVillager = this.selectedUnits[i].type\n          break\n        }\n      }\n    }\n    this.selectedUnit = nextVillager || this.selectedUnits[0]\n    menu.setBottombar(this.selectedUnit)\n  }\n\n  unselectAllUnits() {\n    const {\n      context: { menu },\n    } = this\n    for (let i = 0; i < this.selectedUnits.length; i++) {\n      this.selectedUnits[i].unselect()\n    }\n    this.selectedUnit = null\n    this.selectedUnits = []\n    menu.setBottombar()\n  }\n\n  unselectAll() {\n    if (this.selectedBuilding) {\n      this.selectedBuilding.unselect()\n      this.selectedBuilding = null\n    }\n    if (this.selectedOther) {\n      this.selectedOther.unselect()\n      this.selectedOther = null\n    }\n    this.unselectAllUnits()\n  }\n}\n","export * from './ai'\nexport * from './gaia'\nexport * from './human'\n","import { Container, Assets, Sprite } from 'pixi.js'\nimport {\n  randomRange,\n  formatNumber,\n  cartesianToIsometric,\n  getCellsAroundPoint,\n  instanceIsInPlayerSight,\n  instancesDistance,\n  getInstanceZIndex,\n  getBuildingAsset,\n  getTexture,\n  changeSpriteColorDirectly,\n} from '../lib'\nimport { CELL_DEPTH, COLOR_FOG, COLOR_WHITE, FAMILY_TYPES, LABEL_TYPES } from '../constants'\n\nexport class Cell extends Container {\n  constructor(options, context) {\n    super()\n\n    this.context = context\n\n    const {\n      context: { map },\n    } = this\n    this.family = FAMILY_TYPES.cell\n    this.map = map\n\n    this.solid = false\n    this.visible = false\n    this.zIndex = 0\n    this.inclined = false\n    this.border = false\n    this.waterBorder = false\n    this.z = 0\n    this.viewed = false\n    this.viewBy = []\n    this.has = null\n    this.corpses = []\n    this.fogSprites = []\n\n    Object.keys(options).forEach(prop => {\n      this[prop] = options[prop]\n    })\n    Object.keys(Assets.cache.get('config').cells[this.type]).forEach(prop => {\n      this[prop] = Assets.cache.get('config').cells[this.type][prop]\n    })\n    const pos = cartesianToIsometric(this.i, this.j)\n\n    this.x = pos[0]\n    this.y = pos[1] - this.z * CELL_DEPTH\n\n    const textureName = randomItem(this.assets)\n    const resourceName = textureName.split('_')[1]\n    const textureFile = textureName + '.png'\n    const spritesheet = Assets.cache.get(resourceName)\n    const texture = spritesheet.textures[textureFile]\n    this.sprite = Sprite.from(texture)\n    this.sprite.label = LABEL_TYPES.sprite\n    this.sprite.anchor.set(0.5, 0.5)\n    this.sprite.roundPixels = true\n    this.sprite.allowMove = false\n    this.sprite.eventMode = 'none'\n    this.sprite.allowClick = false\n    this.addChild(this.sprite)\n\n    this.fogSprites.forEach(sprite => this.addFogBuilding(...Object.values(sprite)))\n\n    this.eventMode = 'none'\n    this.allowMove = false\n    this.allowClick = false\n  }\n\n  updateVisible() {\n    const {\n      context: { map, player },\n    } = this\n\n    function updateChild(instance) {\n      if (\n        map.revealEverything ||\n        !instance.owner ||\n        instance.owner.isPlayed ||\n        instanceIsInPlayerSight(instance, player)\n      ) {\n        instance.visible = true\n      }\n    }\n\n    if (!map.revealEverything && !player.views[this.i][this.j].viewed) {\n      return\n    }\n    this.visible = true\n    if (this.has) {\n      updateChild(this.has)\n    }\n    if (this.corpses.length) {\n      for (let i = 0; i < this.corpses.length; i++) {\n        updateChild(this.corpses[i])\n      }\n    }\n  }\n\n  setDesertBorder(direction) {\n    const resourceName = '20002'\n    const { sprite: cellSprite } = this\n    const cellSpriteTextureName = cellSprite.texture.label\n    const cellSpriteIndex = cellSpriteTextureName.split('_')[0]\n    let val = {}\n    let index\n    let cpt = 0\n    for (let i = 0; i < 25; i++) {\n      val[i] = []\n      if (i < 9) {\n        val[i].push(0, 1, 2, 3)\n      } else {\n        for (let j = cpt; j < cpt + 4; j++) {\n          val[i].push(j + 4)\n        }\n        cpt += 4\n      }\n    }\n    switch (direction) {\n      case 'west':\n        index = val[cellSpriteIndex * 1][0]\n        break\n      case 'north':\n        index = val[cellSpriteIndex * 1][1]\n        break\n      case 'south':\n        index = val[cellSpriteIndex * 1][2]\n        break\n      case 'est':\n        index = val[cellSpriteIndex * 1][3]\n        break\n    }\n    const spritesheet = Assets.cache.get(resourceName)\n    const texture = spritesheet.textures[formatNumber(index) + '_' + resourceName + '.png']\n    const sprite = Sprite.from(texture)\n    sprite.direction = direction\n    sprite.anchor.set(0.5, 0.5)\n    sprite.type = 'border'\n    this.addChild(sprite)\n  }\n\n  setWaterBorder(resourceName, index) {\n    const { sprite } = this\n    const spritesheet = Assets.cache.get(resourceName)\n    const texture = spritesheet.textures[index + '_' + resourceName + '.png']\n    this.type = 'Desert'\n    this.border = true\n    this.waterBorder = true\n    if (this.has && typeof this.has.die === 'function') {\n      this.has.die(true)\n    }\n    sprite.texture = texture\n  }\n\n  setReliefBorder(index, elevation = 0) {\n    const { sprite } = this\n    const resourceName = sprite.texture.label.split('_')[1].split('.')[0]\n    const spritesheet = Assets.cache.get(resourceName)\n    const texture = spritesheet.textures[index + '_' + resourceName + '.png']\n    if (elevation) {\n      this.y -= elevation\n    }\n    this.inclined = true\n    if (this.has) {\n      this.has.zIndex = getInstanceZIndex(this.has)\n    }\n    sprite.label = LABEL_TYPES.sprite\n    sprite.anchor.set(0.5, 0.5)\n    sprite.texture = texture\n  }\n\n  setWater() {\n    const index = formatNumber(randomRange(0, 3))\n    const resourceName = '15002'\n    const spritesheet = Assets.cache.get(resourceName)\n    this.sprite.texture = spritesheet.textures[index + '_' + resourceName + '.png']\n    this.type = 'Water'\n    this.category = 'Water'\n  }\n  fillWaterCellsAroundCell() {\n    const grid = this.parent.grid\n    if (this.type === 'Water' && !this.sprite.texture.label.includes('15002')) {\n      this.setWater()\n    }\n    getCellsAroundPoint(this.i, this.j, grid, 2, cell => {\n      if (cell.type === 'Water' && this.type === 'Water') {\n        const dist = instancesDistance(this, cell)\n        const velX = Math.round((this.i - cell.i) / dist)\n        const velY = Math.round((this.j - cell.j) / dist)\n        if (grid[cell.i + velX] && grid[cell.i + velX][cell.j + velY]) {\n          const target = grid[cell.i + velX][cell.j + velY]\n          const aside = grid[this.i + cell.i - target.i][this.j + cell.j - target.j]\n          if (target.type !== this.type && aside.type !== this.type) {\n            if (Math.floor(instancesDistance(this, cell)) === 2) {\n              cell.setWater()\n              target.setWater()\n            }\n          }\n        }\n      }\n    })\n  }\n\n  fillReliefCellsAroundCell() {\n    const grid = this.parent.grid\n    getCellsAroundPoint(this.i, this.j, grid, 2, cell => {\n      if (cell.z === this.z) {\n        const dist = instancesDistance(this, cell)\n        const velX = Math.round((this.i - cell.i) / dist)\n        const velY = Math.round((this.j - cell.j) / dist)\n        if (grid[cell.i + velX] && grid[cell.i + velX][cell.j + velY]) {\n          const target = grid[cell.i + velX][cell.j + velY]\n          const aside = grid[this.i + cell.i - target.i][this.j + cell.j - target.j]\n          if (target.z <= this.z && target.z !== this.z && aside.z !== this.z) {\n            if (Math.floor(instancesDistance(this, cell)) === 2) {\n              target.setCellLevel(target.z + 1)\n            }\n          }\n        }\n      }\n    })\n  }\n\n  setCellLevel(level, cpt = 1) {\n    if (level === 0) {\n      this.y += CELL_DEPTH\n      this.z = level\n      return\n    }\n    const grid = this.parent.grid\n    getCellsAroundPoint(this.i, this.j, grid, level - cpt, cell => {\n      if (cell.z < cpt) {\n        cell.y -= (cpt - cell.z) * CELL_DEPTH\n        cell.z = cpt\n        cell.fillReliefCellsAroundCell(grid)\n      }\n    })\n    if (cpt + 1 < level) {\n      this.setCellLevel(level, cpt + 1)\n    }\n    if (this.has) {\n      this.has.zIndex = getInstanceZIndex(this.has)\n    }\n  }\n\n  addFogBuilding(textureSheet, colorSheet, colorName) {\n    const sprite = Sprite.from(getTexture(textureSheet, Assets))\n    sprite.label = LABEL_TYPES.buildingFog\n    sprite.tint = COLOR_FOG\n    sprite.anchor.set(sprite.texture.defaultAnchor.x, sprite.texture.defaultAnchor.y)\n    this.addChild(sprite)\n    this.fogSprites.push({ sprite, textureSheet, colorSheet, colorName })\n    if (colorSheet) {\n      const spriteColor = Sprite.from(getTexture(colorSheet, Assets))\n      spriteColor.label = LABEL_TYPES.buildingFog\n      spriteColor.tint = COLOR_FOG\n      changeSpriteColorDirectly(spriteColor, colorName)\n      this.addChild(spriteColor)\n      this.fogSprites.push({ sprite: spriteColor, textureSheet, colorSheet, colorName })\n    } else {\n      changeSpriteColorDirectly(sprite, colorName)\n    }\n    this.zIndex = 100\n  }\n\n  removeFogBuilding(instance) {\n    const { map } = this.context\n    if (instance.owner && !instance.owner.isPlayed && instance.family === FAMILY_TYPES.building) {\n      let i = 0\n      const localCell = map.grid[instance.i][instance.j]\n      while (i < localCell.fogSprites.length) {\n        if (localCell.fogSprites[i]) {\n          localCell.fogSprites[i].sprite?.destroy() // Destroy the sprite\n          localCell.fogSprites.splice(i, 1) // Remove the destroyed sprite from the array\n        } else {\n          i++ // Only increment if no sprite is destroyed, to avoid skipping elements\n        }\n      }\n    }\n  }\n\n  setFogChildren(instance, init) {\n    const { player, map } = this.context\n    if (!instanceIsInPlayerSight(instance, player)) {\n      if (instance.owner && !instance.owner.isPlayed) {\n        if (!init && instance.family === FAMILY_TYPES.building) {\n          const assets = getBuildingAsset(instance.type, instance.owner, Assets)\n          const localCell = map.grid[instance.i][instance.j]\n          localCell.addFogBuilding(assets.images.final, assets.images.color, instance.owner.color)\n        }\n        instance.visible = false\n      } else {\n        for (let i = 0; i < instance.children.length; i++) {\n          if (instance.children[i].tint) {\n            instance.children[i].tint = COLOR_FOG\n          }\n        }\n      }\n    }\n  }\n\n  setFog(init) {\n    if (this.has) {\n      this.setFogChildren(this.has, init)\n    }\n    for (let i = 0; i < this.children.length; i++) {\n      if (this.children[i].tint) {\n        this.children[i].tint = COLOR_FOG\n      }\n    }\n    if (this.corpses.length) {\n      for (let i = 0; i < this.corpses.length; i++) {\n        this.setFogChildren(this.corpses[i], init)\n      }\n    }\n  }\n\n  removeFog() {\n    const {\n      context: { controls },\n    } = this\n    function setRemoveChildren(instance) {\n      if (controls.instanceInCamera(instance)) {\n        instance.visible = true\n      }\n      for (let i = 0; i < instance.children.length; i++) {\n        if (instance.children[i].tint) {\n          instance.children[i].tint = COLOR_WHITE\n        }\n      }\n    }\n    if (!this.visible) {\n      this.visible = true\n    }\n\n    this.zIndex = 0\n    for (let i = 0; i < this.children.length; i++) {\n      if (this.children[i].tint) {\n        this.children[i].tint = COLOR_WHITE\n      }\n    }\n    if (this.has) {\n      this.removeFogBuilding(this.has)\n      setRemoveChildren(this.has)\n    }\n    if (this.corpses.length) {\n      for (let i = 0; i < this.corpses.length; i++) {\n        setRemoveChildren(this.corpses[i])\n      }\n    }\n  }\n}\n","import { Container, Assets, Sprite } from 'pixi.js'\nimport { Resource } from './resource'\nimport { Human, AI, Gaia } from './players'\nimport {\n  randomRange,\n  getZoneInGridWithCondition,\n  randomItem,\n  getPlainCellsAroundPoint,\n  getCellsAroundPoint,\n  colors,\n  updateInstanceVisibility,\n} from '../lib'\nimport { BUILDING_TYPES, CELL_DEPTH, FAMILY_TYPES, LABEL_TYPES, RESOURCE_TYPES, UNIT_TYPES } from '../constants'\nimport { Cell } from './cell'\n\n/**\n * \n *  Map size\t      Tiny\t      Small\t    Medium\t    Normal\t    Large\t\n    Player count\t  2\t          3\t        4\t          6\t          8\n    Dimensions\t    120×120\t    144×144 \t168×168\t    200×200\t    220×220\n */\n\nexport default class Map extends Container {\n  constructor(context) {\n    super()\n\n    this.context = context\n    this.size\n    this.reliefRange = [\n      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2,\n      3,\n    ]\n    this.chanceOfRelief = 0.06\n    this.chanceOfSets = 0.02\n\n    this.ready = false\n    this.grid = []\n    this.sortableChildren = true\n\n    this.allTechnologies = false\n    this.noAI = true\n\n    this.devMode = true\n    this.revealEverything = this.devMode || false\n    this.revealTerrain = this.devMode || false\n\n    this.x = 0\n    this.y = 0\n    this.startingUnits = 3\n\n    this.playersPos = []\n    this.positionsCount = 2\n    this.gaia = null\n    this.resources = []\n\n    this.eventMode = 'auto'\n    this.allowMove = false\n    this.allowClick = false\n    this.totalCells\n  }\n\n  setCoordinate(x, y) {\n    this.x = x\n    this.y = y\n  }\n\n  generateFromJSON({ map, players, camera, resources, animals }) {\n    const classMap = {\n      Human,\n      AI,\n    }\n    const { menu, controls } = this.context\n    this.removeChildren()\n    this.size = map.length - 1\n\n    this.gaia = new Gaia(this.context)\n\n    for (let i = 0; i <= this.size; i++) {\n      const line = map[i]\n      for (let j = 0; j <= this.size; j++) {\n        if (!this.grid[i]) {\n          this.grid[i] = []\n        }\n        const cell = line[j]\n        const newCell = new Cell({ i, j, z: cell.z, type: cell.type, fogSprites: cell.fogSprites }, this.context)\n        this.addChild(newCell)\n        this.grid[i][j] = newCell\n        if (!this.revealEverything) {\n          this.grid[i][j].setFog()\n        }\n      }\n    }\n    for (let i = 0; i <= this.size; i++) {\n      for (let j = 0; j <= this.size; j++) {\n        this.grid[i][j].fillWaterCellsAroundCell()\n      }\n    }\n    this.resources = resources.map(resource => this.addChild(new Resource(resource, this.context)))\n\n    this.formatCellsRelief()\n    this.formatCellsWaterBorder()\n    this.formatCellsDesert()\n\n    this.context.players = players.map(player => {\n      const p = new classMap[player.type](\n        {\n          ...player,\n          corpses: [],\n          buildings: [],\n          units: [],\n        },\n        this.context\n      )\n      if (player.isPlayed) {\n        this.context.player = p\n      }\n      return p\n    })\n    controls.setCamera(camera.x, camera.y, true)\n    menu.init()\n    menu.updateResourcesMiniMap()\n\n    this.context.players.forEach((player, index) => {\n      const { buildings, units, corpses } = players[index]\n      player.buildings = buildings.map(building => player.createBuilding(building))\n      player.units = units.map(unit => player.createUnit(unit))\n      player.corpses = corpses.map(unit => player.createUnit(unit))\n    })\n    animals.forEach(animal => this.gaia.createAnimal(animal))\n\n    function getDest(val, map) {\n      if (val) {\n        if (Array.isArray(val)) {\n          return val[2] ? map.getChildByLabel(val[2]) : map.grid[val[0]][val[1]]\n        } else {\n          return map.getChildByLabel(val)\n        }\n      }\n      return null\n    }\n\n    function processUnit(unit, context) {\n      if (unit.previousDest) {\n        unit.previousDest = getDest(unit.previousDest, context)\n      }\n      if (unit.dest && !unit.isDead) {\n        const dest = getDest(unit.dest, context)\n        if (dest) {\n          unit.commonSendTo ? unit.commonSendTo(dest, unit.work, unit.action, true) : unit.sendTo(dest, unit.action)\n        } else {\n          unit.stop()\n        }\n      }\n    }\n\n    this.gaia.units.forEach(animal => processUnit(animal, this))\n\n    this.context.players.forEach(player => {\n      for (let i = 0; i <= this.size; i++) {\n        const line = player.views[i]\n        for (let j = 0; j <= this.size; j++) {\n          const cell = line[j]\n          if (cell.viewed) {\n            cell.onViewed()\n          }\n          cell.viewBy = cell.viewBy.map(name => getDest(name, this)).filter(Boolean)\n          if (player.isPlayed && cell.viewed) {\n            if (!cell.viewBy.length) {\n              this.grid[i][j].setFog(true)\n            } else {\n              this.grid[i][j].removeFog()\n            }\n          }\n        }\n      }\n      player.units.forEach(unit => processUnit(unit, this))\n    })\n\n    this.ready = true\n  }\n\n  generateMap(repeat = 0) {\n    this.removeChildren()\n    this.generateCells()\n\n    switch (this.size) {\n      case 120:\n        this.positionsCount = 2\n        break\n      case 144:\n        this.positionsCount = 3\n        break\n      case 168:\n        this.positionsCount = 4\n        break\n      case 200:\n        this.positionsCount = 4\n        break\n      case 220:\n        this.positionsCount = 4\n        break\n      default:\n        this.positionsCount = 2\n    }\n\n    this.totalCells = Math.pow(this.size, 2)\n\n    this.playersPos = this.findPlayerPlaces()\n\n    if (this.playersPos.length < this.positionsCount) {\n      if (repeat >= 10) {\n        alert('Error while generating the map')\n        return\n      }\n      this.generateMap(repeat + 1)\n      return\n    }\n\n    this.generateResourcesAroundPlayers(this.playersPos)\n  }\n\n  stylishMap() {\n    const {\n      context: { menu, player },\n    } = this\n\n    this.gaia = new Gaia(this.context)\n\n    //this.generateMapRelief()\n    //this.formatCellsRelief()\n\n    this.generateSets()\n\n    if (!this.revealEverything) {\n      for (let i = 0; i <= this.size; i++) {\n        for (let j = 0; j <= this.size; j++) {\n          this.grid[i][j].setFog()\n        }\n      }\n      for (let i = 0; i < player.buildings.length; i++) {\n        const building = player.buildings[i]\n        updateInstanceVisibility(building)\n      }\n      for (let i = 0; i < player.units.length; i++) {\n        const unit = player.units[i]\n        updateInstanceVisibility(unit)\n      }\n    }\n\n    this.ready = true\n    menu.updateResourcesMiniMap()\n  }\n\n  generatePlayers() {\n    const { context } = this\n\n    const players = []\n    const poses = []\n    const randoms = Array.from(Array(this.playersPos.length).keys())\n\n    for (let i = 0; i < this.playersPos.length; i++) {\n      const pos = randomItem(randoms)\n      poses.push(pos)\n      randoms.splice(randoms.indexOf(pos), 1)\n    }\n\n    for (let i = 0; i < this.positionsCount; i++) {\n      const posI = this.playersPos[poses[i]]?.i\n      const posJ = this.playersPos[poses[i]]?.j\n      if (posI && posJ) {\n        const color = colors[i]\n        if (!i) {\n          players.push(\n            new Human(\n              {\n                i: posI,\n                j: posJ,\n                age: 0,\n                civ: 'Greek',\n                color,\n                isPlayed: true,\n              },\n              context\n            )\n          )\n        } else if (!this.noAI) {\n          players.push(new AI({ i: posI, j: posJ, age: 0, civ: 'Greek', color }, context))\n        }\n      }\n    }\n    return players\n  }\n\n  placePlayers() {\n    const {\n      context: { players },\n    } = this\n\n    // Place a town center\n    for (let i = 0; i < players.length; i++) {\n      const player = players[i]\n      const towncenter = player.spawnBuilding({\n        i: player.i,\n        j: player.j,\n        type: BUILDING_TYPES.townCenter,\n        isBuilt: true,\n      })\n      for (let i = 0; i < this.startingUnits; i++) {\n        towncenter.placeUnit(UNIT_TYPES.villager)\n      }\n    }\n  }\n\n  generateForestAroundPlayer(\n    player,\n    treeCount,\n    clusterCount = 12,\n    minClusterRadius = 5,\n    maxClusterRadius = 10,\n    safeDistance = 20,\n    clearingProbability = 0.6\n  ) {\n    const { grid } = this\n    const { i: playerI, j: playerJ } = player\n    const gridWidth = grid.length\n    const gridHeight = grid[0].length\n    const forestCells = []\n    const pathCells = new Set()\n\n    // Function to calculate the distance between two points\n    function distance(x1, y1, x2, y2) {\n      return Math.sqrt((x1 - x2) ** 2 + (y1 - y2) ** 2)\n    }\n\n    // Function to create a circle of points within a grid, checking boundaries\n    function createCircle(centerI, centerJ, radius, density = 0.7, edgeNoise = 0) {\n      const circleCells = []\n      for (let x = -radius; x <= radius; x++) {\n        for (let y = -radius; y <= radius; y++) {\n          const distFromCenter = Math.sqrt(x * x + y * y)\n          const noise = Math.random() * edgeNoise - edgeNoise / 2 // Random edge noise\n          if (distFromCenter + noise <= radius) {\n            // If within noisy circle\n            const cellI = centerI + x\n            const cellJ = centerJ + y\n            if (\n              cellI >= 0 &&\n              cellI < gridWidth && // Ensure cell is within grid bounds\n              cellJ >= 0 &&\n              cellJ < gridHeight &&\n              !grid[cellI][cellJ].solid && // Ensure the cell is not solid\n              grid[cellI][cellJ].category !== 'Water' && // Ensure not water\n              grid[cellI][cellJ].type !== 'Border' && // Ensure not border\n              !grid[cellI][cellJ].inclined && // Ensure not inclined\n              Math.random() < density // Tree density control\n            ) {\n              circleCells.push({ i: cellI, j: cellJ })\n            }\n          }\n        }\n      }\n      return circleCells\n    }\n\n    // Create forest clusters\n    for (let cluster = 0; cluster < clusterCount; cluster++) {\n      let clusterCenterI, clusterCenterJ\n      let tries = 0\n      const clusterRadius = Math.floor(Math.random() * (maxClusterRadius - minClusterRadius + 1)) + minClusterRadius // Random radius\n      const clusterDensity = Math.random() * 0.5 + 0.5 // Density between 0.5 and 1\n      const edgeNoise = Math.random() * 2 // Noise for organic shapes\n\n      // Ensure the cluster is far from the player and within bounds\n      do {\n        clusterCenterI = playerI + Math.floor(Math.random() * 60 - 30) // Random offset\n        clusterCenterJ = playerJ + Math.floor(Math.random() * 60 - 30)\n        tries++\n        if (tries > 100) break // Safety exit\n      } while (\n        distance(clusterCenterI, clusterCenterJ, playerI, playerJ) < safeDistance ||\n        clusterCenterI < 0 ||\n        clusterCenterI >= gridWidth ||\n        clusterCenterJ < 0 ||\n        clusterCenterJ >= gridHeight || // Stay within grid bounds\n        grid[clusterCenterI][clusterCenterJ].category === 'Water' || // Avoid water cells\n        grid[clusterCenterI][clusterCenterJ].solid || // Avoid solid cells\n        grid[clusterCenterI][clusterCenterJ].inclined // Avoid inclined cells\n      )\n\n      if (tries <= 100) {\n        const treeCluster = createCircle(clusterCenterI, clusterCenterJ, clusterRadius, clusterDensity, edgeNoise)\n        treeCluster.forEach(cell => forestCells.push(cell))\n      }\n    }\n\n    // Scattered solo trees (20% of total trees)\n    const scatteredTreeCount = Math.floor(treeCount * 0.2)\n    for (let i = 0; i < scatteredTreeCount; i++) {\n      let soloI, soloJ\n      let tries = 0\n\n      do {\n        soloI = playerI + Math.floor(Math.random() * 60 - 30) // Random offset within [-30, 30]\n        soloJ = playerJ + Math.floor(Math.random() * 60 - 30)\n        tries++\n        if (tries > 50) break // Safety exit to avoid infinite loop\n      } while (\n        distance(soloI, soloJ, playerI, playerJ) < safeDistance ||\n        soloI < 0 ||\n        soloI >= gridWidth ||\n        soloJ < 0 ||\n        soloJ >= gridHeight || // Stay within grid bounds\n        grid[soloI][soloJ].category === 'Water' || // Avoid water cells\n        grid[soloI][soloJ].solid || // Avoid solid cells\n        grid[soloI][soloJ].inclined // Avoid inclined cells\n      )\n\n      if (tries <= 50) {\n        forestCells.push({ i: soloI, j: soloJ })\n      }\n    }\n\n    // Generate random clearings based on clearingProbability\n    for (let clearing = 0; clearing < clusterCount; clearing++) {\n      if (Math.random() < clearingProbability) {\n        let clearingCenterI, clearingCenterJ\n        let tries = 0\n        const clearingRadius = Math.floor(Math.random() * 8) + 5 // Random clearing radius between 5 and 13\n        const edgeNoise = Math.random() * 1.5\n\n        do {\n          clearingCenterI = playerI + Math.floor(Math.random() * 60 - 30) // Random offset\n          clearingCenterJ = playerJ + Math.floor(Math.random() * 60 - 30)\n          tries++\n          if (tries > 100) break\n        } while (\n          distance(clearingCenterI, clearingCenterJ, playerI, playerJ) < safeDistance ||\n          clearingCenterI < 0 ||\n          clearingCenterI >= gridWidth ||\n          clearingCenterJ < 0 ||\n          clearingCenterJ >= gridHeight || // Stay within grid bounds\n          grid[clearingCenterI][clearingCenterJ].category === 'Water' || // Avoid water cells\n          grid[clearingCenterI][clearingCenterJ].solid || // Avoid solid cells\n          grid[clearingCenterI][clearingCenterJ].inclined // Avoid inclined cells\n        )\n\n        if (tries <= 100) {\n          const clearingCells = createCircle(clearingCenterI, clearingCenterJ, clearingRadius, 0, edgeNoise)\n          clearingCells.forEach(clearedCell => {\n            const index = forestCells.findIndex(cell => cell.i === clearedCell.i && cell.j === clearedCell.j)\n            if (index > -1) {\n              forestCells.splice(index, 1) // Remove tree from clearing\n            }\n          })\n        }\n      }\n    }\n\n    // Generate diagonal paths\n    const pathLength = 20\n    const pathDirection = Math.random() > 0.5 ? 1 : -1 // Random path direction\n\n    for (let step = 0; step < pathLength; step++) {\n      let offsetX, offsetY\n      let tries = 0\n\n      do {\n        offsetX = step * pathDirection\n        offsetY = step\n        tries++\n        if (tries > 50) break\n      } while (\n        distance(playerI + offsetX, playerJ + offsetY, playerI, playerJ) < safeDistance ||\n        playerI + offsetX < 0 ||\n        playerI + offsetX >= gridWidth ||\n        playerJ + offsetY < 0 ||\n        playerJ + offsetY >= gridHeight\n      )\n\n      if (tries <= 50) {\n        const randOffsetX = Math.random() > 0.5 ? 1 : -1\n        const randOffsetY = Math.random() > 0.5 ? 1 : -1\n        pathCells.add(`${playerI + offsetX + randOffsetX},${playerJ + offsetY + randOffsetY}`)\n      }\n    }\n\n    // Remove path cells from forestCells\n    forestCells.forEach(cell => {\n      if (pathCells.has(`${cell.i},${cell.j}`)) {\n        forestCells.splice(forestCells.indexOf(cell), 1)\n      }\n    })\n\n    // Select and place trees in the forest cells\n    const cellsToPlace = []\n    for (let i = 0; i < treeCount; i++) {\n      if (forestCells.length === 0) break\n      const itemIndex = Math.floor(Math.random() * forestCells.length)\n      const cell = forestCells[itemIndex]\n      cellsToPlace.push(cell)\n      forestCells.splice(itemIndex, 1)\n    }\n\n    // Place the trees in the selected cells\n    for (const cell of cellsToPlace) {\n      // Ensure again that we're not placing trees on Water, Border, or Solid cells\n      if (\n        grid[cell.i][cell.j].category !== 'Water' &&\n        !grid[cell.i][cell.j].waterBorder &&\n        !grid[cell.i][cell.j].solid &&\n        !grid[cell.i][cell.j].inclined\n      ) {\n        let isFree = true\n        getPlainCellsAroundPoint(cell.i, cell.j, grid, 3, cell => {\n          if ([RESOURCE_TYPES.berrybush, RESOURCE_TYPES.gold, RESOURCE_TYPES.stone].includes(cell.has?.type)) {\n            isFree = false\n          }\n        })\n        isFree &&\n          this.resources.push(\n            this.addChild(new Resource({ i: cell.i, j: cell.j, type: RESOURCE_TYPES.tree }, this.context))\n          )\n      }\n    }\n  }\n\n  generateResourcesAroundPlayers(playersPos) {\n    for (let i = 0; i < playersPos.length; i++) {\n      this.placeResourceGroup(playersPos[i], RESOURCE_TYPES.berrybush, 8, [7, 14])\n      this.placeResourceGroup(playersPos[i], RESOURCE_TYPES.berrybush, 8, [14, 22])\n      this.placeResourceGroup(playersPos[i], RESOURCE_TYPES.berrybush, 8, [22, 29])\n      this.placeResourceGroup(playersPos[i], RESOURCE_TYPES.stone, 7, [7, 14])\n      this.placeResourceGroup(playersPos[i], RESOURCE_TYPES.stone, 7, [14, 22])\n      this.placeResourceGroup(playersPos[i], RESOURCE_TYPES.stone, 7, [22, 29])\n      this.placeResourceGroup(playersPos[i], RESOURCE_TYPES.gold, 7, [7, 14])\n      this.placeResourceGroup(playersPos[i], RESOURCE_TYPES.gold, 7, [14, 22])\n      this.placeResourceGroup(playersPos[i], RESOURCE_TYPES.gold, 7, [22, 29])\n      this.generateForestAroundPlayer(playersPos[i], this.size * 4)\n    }\n  }\n\n  generateTerrain(gridSize = 120, mapModel = 'plain') {\n    const terrainMap = []\n\n    // Initialize the map with default grass (0)\n    for (let i = 0; i < gridSize; i++) {\n      terrainMap[i] = []\n      for (let j = 0; j < gridSize; j++) {\n        terrainMap[i][j] = 0 // Default to grass\n      }\n    }\n\n    // Helper function to generate terrain clusters around a point\n    function generateTerrainCluster(x, y, radius, type) {\n      for (let i = -radius; i <= radius; i++) {\n        for (let j = -radius; j <= radius; j++) {\n          const nx = x + i\n          const ny = y + j\n          if (nx >= 0 && nx < gridSize && ny >= 0 && ny < gridSize && i * i + j * j <= radius * radius) {\n            terrainMap[nx][ny] = type\n          }\n        }\n      }\n    }\n\n    // Generate water with a smoother, randomized approach\n    function generateWater() {\n      if (mapModel === 'continent') {\n        const edgeSize = 10 // Base edge size for water\n        const roundFactor = 0.15 // Controls the \"smoothness\" of the water edge\n\n        // Loop through the map and set water in a rounded pattern with random noise\n        for (let i = 0; i < gridSize; i++) {\n          for (let j = 0; j < gridSize; j++) {\n            const distFromCenter = Math.abs(i - gridSize / 2) + Math.abs(j - gridSize / 2) // Distance from center\n\n            // Add smooth water around the edges with randomized borders\n            const edgeDist = Math.min(i, j, gridSize - i, gridSize - j)\n            const randomOffset = Math.random() * 5 - 2.5 // Randomize water edge for more natural look\n\n            if (edgeDist < edgeSize + Math.sin(distFromCenter * roundFactor) * 5 + randomOffset) {\n              terrainMap[i][j] = 2 // Water\n            }\n          }\n        }\n      } else if (mapModel === 'lac') {\n        const centerX = Math.floor(gridSize / 2)\n        const centerY = Math.floor(gridSize / 2)\n        const baseRadius = Math.floor(gridSize / 4) // Base radius for the lake\n        const roundFactor = 0.6 // Adjust this for more/less rounding\n\n        // Create a lake with a smoother, randomized border\n        for (let i = -baseRadius; i <= baseRadius; i++) {\n          for (let j = -baseRadius; j <= baseRadius; j++) {\n            const nx = centerX + i\n            const ny = centerY + j\n            const distanceFromCenter = Math.sqrt(i * i + j * j)\n            const noise = Math.sin(distanceFromCenter * roundFactor) * 2 // Create smooth noise\n            const randomOffset = Math.random() * 3 - 1.5 // Add randomness to the lake shape\n\n            if (\n              nx >= 0 &&\n              nx < gridSize &&\n              ny >= 0 &&\n              ny < gridSize &&\n              distanceFromCenter < baseRadius + noise + randomOffset\n            ) {\n              terrainMap[nx][ny] = 2 // Water\n            }\n          }\n        }\n      }\n      // 'plain' model: no water, so do nothing\n    }\n\n    // Generate clusters of desert (1) and jungle (3)\n    function generateLandTerrain() {\n      // Generate desert areas (1)\n      generateClusters(1, 8, 5, 10)\n\n      // Generate jungle areas (3)\n      generateClusters(3, 10, 4, 8)\n    }\n\n    // Generic function to generate clustered terrain types\n    function generateClusters(type, clusterCount, clusterSizeMin, clusterSizeMax) {\n      for (let i = 0; i < clusterCount; i++) {\n        const clusterX = Math.floor(Math.random() * gridSize)\n        const clusterY = Math.floor(Math.random() * gridSize)\n        const radius = Math.floor(Math.random() * (clusterSizeMax - clusterSizeMin)) + clusterSizeMin\n\n        // Ensure we avoid water if generating jungle/desert in the 'lac' or 'continent' models\n        if (type !== 2 && terrainMap[clusterX][clusterY] === 2) {\n          continue // Skip if this area is water\n        }\n\n        generateTerrainCluster(clusterX, clusterY, radius, type)\n      }\n    }\n\n    // Generate water based on the map model\n    generateWater()\n\n    // Generate desert and jungle clusters\n    generateLandTerrain()\n\n    return terrainMap\n  }\n\n  generateCells() {\n    const z = 0\n    const terrain = this.generateTerrain(121)\n    this.size = terrain.length - 1\n\n    // Map terrain numbers to cell types\n    const terrainMap = {\n      0: 'Grass',\n      1: 'Desert',\n      2: 'Water',\n      3: 'Jungle',\n    }\n\n    for (let i = 0; i <= this.size; i++) {\n      if (!this.grid[i]) this.grid[i] = []\n      for (let j = 0; j <= this.size; j++) {\n        const type = terrainMap[terrain[i][j]]\n        const cell = new Cell({ i, j, z, type }, this.context)\n        this.addChild(cell) // ensures cell.parent is set\n        this.grid[i][j] = cell\n      }\n    }\n\n    // Post-processing\n    for (let i = 0; i <= this.size; i++) {\n      for (let j = 0; j <= this.size; j++) {\n        this.grid[i][j].fillWaterCellsAroundCell()\n      }\n    }\n\n    this.formatCellsWaterBorder()\n    this.formatCellsDesert()\n  }\n\n  generateSets() {\n    for (let i = 0; i <= this.size; i++) {\n      for (let j = 0; j <= this.size; j++) {\n        const cell = this.grid[i][j]\n        if (getCellsAroundPoint(i, j, this.grid, 1, neighbour => neighbour.solid).length > 0) {\n          continue\n        }\n        if (!cell.has && !cell.solid && !cell.border && !cell.inclined) {\n          if (cell.category !== 'Water' && Math.random() < 0.03 && i > 1 && j > 1 && i < this.size && j < this.size) {\n            const randomSpritesheet = randomRange(292, 301).toString()\n            const spritesheet = Assets.cache.get(randomSpritesheet)\n            const texture = spritesheet.textures['000_' + randomSpritesheet + '.png']\n            const floor = Sprite.from(texture)\n            floor.label = LABEL_TYPES.floor\n            floor.roundPixels = true\n            floor.allowMove = false\n            floor.eventMode = 'none'\n            floor.allowClick = false\n            floor.updateAnchor = true\n            cell.addChild(floor)\n          }\n          if (Math.random() < this.chanceOfSets) {\n            if (cell.category !== 'Water') {\n              const type = randomItem(['tree', 'rock', 'animal'])\n              switch (type) {\n                case 'rock':\n                  const randomSpritesheet = randomRange(531, 534).toString()\n                  const spritesheet = Assets.cache.get(randomSpritesheet)\n                  const texture = spritesheet.textures['000_' + randomSpritesheet + '.png']\n                  const rock = Sprite.from(texture)\n                  rock.label = LABEL_TYPES.set\n                  rock.roundPixels = true\n                  rock.allowMove = false\n                  rock.eventMode = 'none'\n                  rock.allowClick = false\n                  rock.updateAnchor = true\n                  cell.addChild(rock)\n                  break\n                case 'animal':\n                  const animals = Assets.cache.get('config').animals\n                  const type = randomItem(Object.keys(animals))\n                  this.gaia.createAnimal({ i, j, type })\n                  break\n              }\n            } else {\n              this.resources.push(this.addChild(new Resource({ i, j, type: RESOURCE_TYPES.salmon }, this.context)))\n            }\n          }\n        }\n      }\n    }\n  }\n\n  generateMapRelief() {\n    for (let i = 0; i <= this.size; i++) {\n      for (let j = 0; j <= this.size; j++) {\n        const cell = this.grid[i][j]\n        if (Math.random() < this.chanceOfRelief) {\n          const level = randomItem(this.reliefRange)\n          let canGenerate = true\n          if (\n            getPlainCellsAroundPoint(i, j, this.grid, level * 2, cell => {\n              if (cell.category === 'Water' || (cell.has && cell.has.family === FAMILY_TYPES.building)) {\n                canGenerate = false\n              }\n            })\n          );\n          if (canGenerate) {\n            cell.setCellLevel(level)\n          }\n        }\n      }\n    }\n    for (let i = 0; i <= this.size; i++) {\n      for (let j = 0; j <= this.size; j++) {\n        const cell = this.grid[i][j]\n        if (cell.z === 1) {\n          let toRemove = true\n          let cpt = 0\n          if (\n            getCellsAroundPoint(i, j, this.grid, 1, cell => {\n              if (cell.z > 0) {\n                cpt++\n              }\n              if (cpt >= 3) {\n                toRemove = false\n              }\n            })\n          );\n          if (toRemove) {\n            cell.setCellLevel(0)\n          }\n        }\n      }\n    }\n    // Format cell's relief\n    for (let i = 0; i <= this.size; i++) {\n      for (let j = 0; j <= this.size; j++) {\n        const cell = this.grid[i][j]\n        cell.fillReliefCellsAroundCell()\n      }\n    }\n  }\n\n  formatCellsRelief() {\n    for (let i = 0; i <= this.size; i++) {\n      for (let j = 0; j <= this.size; j++) {\n        const cell = this.grid[i][j]\n        // Side\n        if (\n          this.grid[i - 1] &&\n          this.grid[i - 1][j].z - cell.z === 1 &&\n          (!this.grid[i + 1] || this.grid[i + 1][j].z <= cell.z) &&\n          (!this.grid[i][j - 1] || this.grid[i][j - 1].z <= cell.z) &&\n          (!this.grid[i][j + 1] || this.grid[i][j + 1].z <= cell.z)\n        ) {\n          cell.setReliefBorder('014', CELL_DEPTH / 2)\n        } else if (\n          this.grid[i + 1] &&\n          this.grid[i + 1][j].z - cell.z === 1 &&\n          (!this.grid[i - 1] || this.grid[i - 1][j].z <= cell.z) &&\n          (!this.grid[i][j - 1] || this.grid[i][j - 1].z <= cell.z) &&\n          (!this.grid[i][j + 1] || this.grid[i][j + 1].z <= cell.z)\n        ) {\n          cell.setReliefBorder('015', CELL_DEPTH / 2)\n        } else if (\n          this.grid[i][j - 1] &&\n          this.grid[i][j - 1].z - cell.z === 1 &&\n          (!this.grid[i + 1] || this.grid[i + 1][j].z <= cell.z) &&\n          (!this.grid[i][j + 1] || this.grid[i][j + 1].z <= cell.z) &&\n          (!this.grid[i - 1] || this.grid[i - 1][j].z <= cell.z)\n        ) {\n          cell.setReliefBorder('016', CELL_DEPTH / 2)\n        } else if (\n          this.grid[i][j + 1] &&\n          this.grid[i][j + 1].z - cell.z === 1 &&\n          (!this.grid[i + 1] || this.grid[i + 1][j].z <= cell.z) &&\n          (!this.grid[i][j - 1] || this.grid[i][j - 1].z <= cell.z) &&\n          (!this.grid[i - 1] || this.grid[i - 1][j].z <= cell.z)\n        ) {\n          cell.setReliefBorder('013', CELL_DEPTH / 2)\n        } // Corner\n        else if (\n          this.grid[i - 1] &&\n          this.grid[i - 1][j - 1] &&\n          this.grid[i - 1][j - 1].z - cell.z === 1 &&\n          (!this.grid[i][j - 1] || this.grid[i][j - 1].z <= cell.z) &&\n          (!this.grid[i - 1] || this.grid[i - 1][j].z <= cell.z)\n        ) {\n          cell.setReliefBorder('010', CELL_DEPTH / 2)\n        } else if (\n          this.grid[i + 1] &&\n          this.grid[i + 1][j - 1] &&\n          this.grid[i + 1][j - 1].z - cell.z === 1 &&\n          (!this.grid[i][j - 1] || this.grid[i][j - 1].z <= cell.z) &&\n          (!this.grid[i + 1] || this.grid[i + 1][j].z <= cell.z)\n        ) {\n          cell.setReliefBorder('012')\n        } else if (\n          this.grid[i - 1] &&\n          this.grid[i - 1][j + 1] &&\n          this.grid[i - 1][j + 1].z - cell.z === 1 &&\n          (!this.grid[i][j + 1] || this.grid[i][j + 1].z <= cell.z) &&\n          (!this.grid[i - 1] || this.grid[i - 1][j].z <= cell.z)\n        ) {\n          cell.setReliefBorder('011')\n        } else if (\n          this.grid[i + 1] &&\n          this.grid[i + 1][j + 1] &&\n          this.grid[i + 1][j + 1].z - cell.z === 1 &&\n          (!this.grid[i][j + 1] || this.grid[i][j + 1].z <= cell.z) &&\n          (!this.grid[i + 1] || this.grid[i + 1][j].z <= cell.z)\n        ) {\n          cell.setReliefBorder('009', CELL_DEPTH / 2)\n        }\n        // Deep corner\n        else if (\n          this.grid[i][j - 1] &&\n          this.grid[i][j - 1].z - cell.z === 1 &&\n          this.grid[i - 1] &&\n          this.grid[i - 1][j].z - cell.z === 1\n        ) {\n          cell.setReliefBorder('022', CELL_DEPTH / 2)\n        } else if (\n          this.grid[i][j + 1] &&\n          this.grid[i][j + 1].z - cell.z === 1 &&\n          this.grid[i + 1] &&\n          this.grid[i + 1][j].z - cell.z === 1\n        ) {\n          cell.setReliefBorder('021', CELL_DEPTH / 2)\n        } else if (\n          this.grid[i][j - 1] &&\n          this.grid[i][j - 1].z - cell.z === 1 &&\n          this.grid[i + 1] &&\n          this.grid[i + 1][j].z - cell.z === 1\n        ) {\n          cell.setReliefBorder('023', CELL_DEPTH)\n        } else if (\n          this.grid[i][j + 1] &&\n          this.grid[i][j + 1].z - cell.z === 1 &&\n          this.grid[i - 1] &&\n          this.grid[i - 1][j].z - cell.z === 1\n        ) {\n          cell.setReliefBorder('024', CELL_DEPTH)\n        }\n      }\n    }\n  }\n\n  formatCellsWaterBorder() {\n    for (let i = 0; i <= this.size; i++) {\n      for (let j = 0; j <= this.size; j++) {\n        const cell = this.grid[i][j]\n        if (cell.type !== 'Water') {\n          // Side\n          if (\n            this.grid[i - 1] &&\n            this.grid[i - 1][j].type === 'Water' &&\n            (!this.grid[i + 1] || this.grid[i + 1][j].type !== 'Water') &&\n            (!this.grid[i][j - 1] || this.grid[i][j - 1].type !== 'Water') &&\n            (!this.grid[i][j + 1] || this.grid[i][j + 1].type !== 'Water')\n          ) {\n            cell.setWaterBorder('20000', '008')\n          } else if (\n            this.grid[i + 1] &&\n            this.grid[i + 1][j].type === 'Water' &&\n            (!this.grid[i - 1] || this.grid[i - 1][j].type !== 'Water') &&\n            (!this.grid[i][j - 1] || this.grid[i][j - 1].type !== 'Water') &&\n            (!this.grid[i][j + 1] || this.grid[i][j + 1].type !== 'Water')\n          ) {\n            cell.setWaterBorder('20000', '009')\n          } else if (\n            this.grid[i][j - 1] &&\n            this.grid[i][j - 1].type === 'Water' &&\n            (!this.grid[i + 1] || this.grid[i + 1][j].type !== 'Water') &&\n            (!this.grid[i][j + 1] || this.grid[i][j + 1].type !== 'Water') &&\n            (!this.grid[i - 1] || this.grid[i - 1][j].type !== 'Water')\n          ) {\n            cell.setWaterBorder('20000', '011')\n          } else if (\n            this.grid[i][j + 1] &&\n            this.grid[i][j + 1].type === 'Water' &&\n            (!this.grid[i + 1] || this.grid[i + 1][j].type !== 'Water') &&\n            (!this.grid[i][j - 1] || this.grid[i][j - 1].type !== 'Water') &&\n            (!this.grid[i - 1] || this.grid[i - 1][j].type !== 'Water')\n          ) {\n            cell.setWaterBorder('20000', '010')\n          } // Corner\n          else if (\n            this.grid[i - 1] &&\n            this.grid[i - 1][j - 1] &&\n            this.grid[i - 1][j - 1].type === 'Water' &&\n            (!this.grid[i][j - 1] || this.grid[i][j - 1].type !== 'Water') &&\n            (!this.grid[i - 1] || this.grid[i - 1][j].type !== 'Water')\n          ) {\n            cell.setWaterBorder('20000', '005')\n          } else if (\n            this.grid[i + 1] &&\n            this.grid[i + 1][j - 1] &&\n            this.grid[i + 1][j - 1].type === 'Water' &&\n            (!this.grid[i][j - 1] || this.grid[i][j - 1].type !== 'Water') &&\n            (!this.grid[i + 1] || this.grid[i + 1][j].type !== 'Water')\n          ) {\n            cell.setWaterBorder('20000', '007')\n          } else if (\n            this.grid[i - 1] &&\n            this.grid[i - 1][j + 1] &&\n            this.grid[i - 1][j + 1].type === 'Water' &&\n            (!this.grid[i][j + 1] || this.grid[i][j + 1].type !== 'Water') &&\n            (!this.grid[i - 1] || this.grid[i - 1][j].type !== 'Water')\n          ) {\n            cell.setWaterBorder('20000', '004')\n          } else if (\n            this.grid[i + 1] &&\n            this.grid[i + 1][j + 1] &&\n            this.grid[i + 1][j + 1].type === 'Water' &&\n            (!this.grid[i][j + 1] || this.grid[i][j + 1].type !== 'Water') &&\n            (!this.grid[i + 1] || this.grid[i + 1][j].type !== 'Water')\n          ) {\n            cell.setWaterBorder('20000', '006')\n          }\n          // Deep corner\n          else if (\n            this.grid[i][j - 1] &&\n            this.grid[i][j - 1].type === 'Water' &&\n            this.grid[i - 1] &&\n            this.grid[i - 1][j].type === 'Water'\n          ) {\n            cell.setWaterBorder('20000', '001')\n          } else if (\n            this.grid[i][j + 1] &&\n            this.grid[i][j + 1].type === 'Water' &&\n            this.grid[i + 1] &&\n            this.grid[i + 1][j].type === 'Water'\n          ) {\n            cell.setWaterBorder('20000', '002')\n          } else if (\n            this.grid[i][j - 1] &&\n            this.grid[i][j - 1].type === 'Water' &&\n            this.grid[i + 1] &&\n            this.grid[i + 1][j].type === 'Water'\n          ) {\n            cell.setWaterBorder('20000', '003')\n          } else if (\n            this.grid[i][j + 1] &&\n            this.grid[i][j + 1].type === 'Water' &&\n            this.grid[i - 1] &&\n            this.grid[i - 1][j].type === 'Water'\n          ) {\n            cell.setWaterBorder('20000', '000')\n          }\n        }\n      }\n    }\n  }\n  formatCellsDesert() {\n    for (let i = 0; i <= this.size; i++) {\n      for (let j = 0; j <= this.size; j++) {\n        const cell = this.grid[i][j]\n        const typeToFormat = ['Grass', 'Jungle']\n        if (cell.type === 'Desert') {\n          if (this.grid[i - 1] && this.grid[i - 1][j] && typeToFormat.includes(this.grid[i - 1][j].type)) {\n            this.grid[i - 1][j].setDesertBorder('est')\n          }\n          if (this.grid[i + 1] && this.grid[i + 1][j] && typeToFormat.includes(this.grid[i + 1][j].type)) {\n            this.grid[i + 1][j].setDesertBorder('west')\n          }\n          if (this.grid[i][j - 1] && typeToFormat.includes(this.grid[i][j - 1].type)) {\n            this.grid[i][j - 1].setDesertBorder('south')\n          }\n          if (this.grid[i][j + 1] && typeToFormat.includes(this.grid[i][j + 1].type)) {\n            this.grid[i][j + 1].setDesertBorder('north')\n          }\n        }\n      }\n    }\n  }\n  findPlayerPlaces() {\n    const results = []\n    const outBorder = 20\n    const inBorder = Math.floor(this.size / 4)\n    const zones = [\n      {\n        minX: outBorder,\n        minY: this.size / 2 + inBorder,\n        maxX: this.size / 2 - inBorder,\n        maxY: this.size - outBorder,\n      },\n      {\n        minX: outBorder,\n        minY: outBorder,\n        maxX: this.size / 2 - inBorder,\n        maxY: this.size / 2 - inBorder,\n      },\n      {\n        minX: this.size / 2 + inBorder,\n        minY: outBorder,\n        maxX: this.size - outBorder,\n        maxY: this.size / 2 - inBorder,\n      },\n      {\n        minX: this.size / 2 + inBorder,\n        minY: this.size / 2 + inBorder,\n        maxX: this.size - outBorder,\n        maxY: this.size - outBorder,\n      },\n    ]\n    for (let i = 0; i < zones.length; i++) {\n      const pos = getZoneInGridWithCondition(zones[i], this.grid, 5, cell => {\n        return !cell.border && !cell.solid && !cell.inclined\n      })\n      if (pos) {\n        results.push(pos)\n      }\n    }\n    return results\n  }\n\n  placeResourceGroup(player, instance, quantity, range) {\n    const { context, grid } = this\n\n    // Function to get valid cells around a center point within a specific distance\n    function getValidCells(centerI, centerJ, dist) {\n      const cells = []\n      // Check surrounding cells within the specified distance\n      for (let dx = -dist; dx <= dist; dx++) {\n        for (let dy = -dist; dy <= dist; dy++) {\n          const newI = centerI + dx\n          const newJ = centerJ + dy\n\n          // Ensure the new coordinates are within the grid bounds\n          if (grid[newI] && grid[newI][newJ]) {\n            const cell = grid[newI][newJ]\n            let isFree = true\n            getPlainCellsAroundPoint(cell.i, cell.j, grid, 3, cell => {\n              if ([RESOURCE_TYPES.berrybush, RESOURCE_TYPES.gold, RESOURCE_TYPES.stone].includes(cell.has?.type)) {\n                isFree = false\n              }\n            })\n            // Check if the cell is valid\n            if (isFree && !cell.solid && cell.category !== 'Water' && !cell.has && !cell.border && !cell.inclined) {\n              cells.push({ i: newI, j: newJ })\n            }\n          }\n        }\n      }\n      return cells\n    }\n\n    // Get a random center point around the player's position within the specified range\n    const randomDistance = randomRange(range[0], range[1])\n    const centerI = player.i + randomItem([-randomDistance, randomDistance])\n    const centerJ = player.j + randomItem([-randomDistance, randomDistance])\n\n    // Gather valid cells around the center point\n    const validCells = getValidCells(centerI, centerJ, 2) // Adjust distance to suit clustering\n\n    // Check if we have enough valid cells to place the required quantity of resources\n    if (validCells.length < quantity) {\n      console.warn('Not enough valid cells found for resource placement.')\n      return // Exit if not enough valid cells found\n    }\n\n    // Randomly select the required number of cells from the valid cells\n    const cellsToPlace = []\n    for (let i = 0; i < quantity; i++) {\n      const itemIndex = Math.floor(Math.random() * validCells.length)\n      const cell = validCells[itemIndex]\n      cellsToPlace.push(cell) // Store the selected cell for placement\n      validCells.splice(itemIndex, 1) // Remove it from valid cells to avoid duplicates\n    }\n\n    // Place resources in the selected cells\n    for (const cell of cellsToPlace) {\n      this.resources.push(this.addChild(new Resource({ i: cell.i, j: cell.j, type: instance }, context)))\n    }\n  }\n}\n","import { Assets } from 'pixi.js'\nimport {\n  getIconPath,\n  canAfford,\n  refundCost,\n  throttle,\n  canvasDrawDiamond,\n  canvasDrawRectangle,\n  canvasDrawStrokeRectangle,\n  isValidCondition,\n  getBuildingAsset,\n  Modal,\n} from '../lib'\nimport { CELL_WIDTH, CELL_HEIGHT, LONG_CLICK_DURATION, IS_MOBILE, FAMILY_TYPES } from '../constants'\nimport { sound } from '@pixi/sound'\n\nexport default class Menu {\n  constructor(context) {\n    this.context = context\n    this.topbar = document.createElement('div')\n    this.topbar.id = 'topbar'\n    this.topbar.className = 'topbar bar'\n    this.icons = {\n      wood: getIconPath('000_50732'),\n      food: getIconPath('002_50732'),\n      stone: getIconPath('001_50732'),\n      gold: getIconPath('003_50732'),\n    }\n    this.infoIcons = {\n      wood: getIconPath('000_50731'),\n      stone: getIconPath('001_50731'),\n      food: getIconPath('002_50731'),\n      gold: getIconPath('003_50731'),\n    }\n\n    this.longClick = false\n    this.mouseHoldTimeout\n\n    this.resources = document.createElement('div')\n    this.resources.className = 'topbar-resources'\n    ;['wood', 'food', 'stone', 'gold'].forEach(res => {\n      this.setResourceBox(res)\n    })\n\n    this.age = document.createElement('div')\n    this.age.className = 'topbar-age'\n    const options = document.createElement('div')\n    options.className = 'topbar-options'\n    const menu = document.createElement('div')\n    menu.className = 'topbar-options-menu'\n    menu.innerText = 'Menu'\n    menu.addEventListener('pointerdown', () => {\n      this.context.pause()\n      const content = document.createElement('div')\n      content.className = 'modal-menu'\n      const modal = new Modal(content)\n      const save = document.createElement('button')\n      save.innerText = 'Save'\n      save.addEventListener('pointerdown', () => {\n        this.context.save()\n        modal.close()\n        this.context.resume()\n      })\n      const load = document.createElement('div')\n      const input = document.createElement('input')\n      input.type = 'file'\n      input.accept = 'application/JSON'\n      input.addEventListener('change', evt => {\n        var reader = new FileReader()\n        reader.onload = ({ target: { result } }) => {\n          this.context.load(JSON.parse(result))\n          modal.close()\n          this.context.resume()\n        }\n        reader.readAsText(evt.target.files[0])\n      })\n      load.className = 'input-file'\n      load.innerText = 'Load'\n      load.appendChild(input)\n      const cancel = document.createElement('button')\n      cancel.innerText = 'Cancel'\n      cancel.addEventListener('pointerdown', () => {\n        modal.close()\n        this.context.resume()\n      })\n      content.appendChild(save)\n      content.appendChild(load)\n      content.appendChild(cancel)\n    })\n    options.appendChild(menu)\n\n    this.topbar.appendChild(this.resources)\n    this.topbar.appendChild(this.age)\n    this.topbar.appendChild(options)\n    document.body.prepend(this.topbar)\n\n    this.bottombar = document.createElement('div')\n    this.bottombar.className = 'bottombar bar'\n    this.bottombarInfo = document.createElement('div')\n    this.bottombarInfo.className = 'bottombar-info'\n    this.bottombarMenu = document.createElement('div')\n    this.bottombarMenu.className = 'bottombar-menu'\n    const bottombarMapWrap = document.createElement('div')\n    bottombarMapWrap.className = 'bottombar-map-wrap'\n    this.bottombarMap = document.createElement('div')\n    this.bottombarMap.className = 'bottombar-map'\n    this.bottombarMap.addEventListener('pointerdown', evt => {\n      const {\n        context: { controls },\n      } = this\n      this.mouseHoldTimeout = setTimeout(() => {\n        this.longClick = true\n        const minimapFactor = this.getMinimapFactor()\n        const rect = evt.target.getBoundingClientRect()\n        const x = (evt.clientX - rect.left - rect.width / 2) * minimapFactor\n        const y = (evt.clientY - rect.top - 3) * minimapFactor\n        controls.setCamera(x, y)\n      }, LONG_CLICK_DURATION)\n    })\n    this.bottombarMap.addEventListener('pointerup', evt => {\n      const {\n        context: { player, controls, map },\n      } = this\n      clearTimeout(this.mouseHoldTimeout)\n      if (controls.mouseBuilding || controls.mouseRectangle || this.longClick) {\n        this.longClick = false\n        return\n      }\n      this.longClick = false\n      const minimapFactor = this.getMinimapFactor()\n      const rect = evt.target.getBoundingClientRect()\n      const x = (evt.clientX - rect.left - rect.width / 2) * minimapFactor\n      const y = (evt.clientY - rect.top - 3) * minimapFactor\n\n      if (player?.selectedUnits?.length) {\n        const pos = isometricToCartesian(x, y)\n        const i = Math.min(Math.max(pos[0], 0), map.size)\n        const j = Math.min(Math.max(pos[1], 0), map.size)\n        if (map.grid[i] && map.grid[i][j]) {\n          const cell = map.grid[i][j]\n          controls.sendUnits(cell)\n        }\n      } else {\n        controls.setCamera(x, y)\n      }\n    })\n    bottombarMapWrap.appendChild(this.bottombarMap)\n\n    this.terrainMinimap = document.createElement('canvas')\n    this.playersMinimap = []\n    this.resourcesMinimap = document.createElement('canvas')\n    this.cameraMinimap = document.createElement('canvas')\n    this.cameraMinimap.style.zIndex = 1\n\n    this.bottombarMap.appendChild(this.terrainMinimap)\n    this.bottombarMap.appendChild(this.resourcesMinimap)\n    this.bottombarMap.appendChild(this.cameraMinimap)\n    this.bottombar.appendChild(this.bottombarInfo)\n    this.bottombar.appendChild(this.bottombarMenu)\n    this.bottombar.appendChild(bottombarMapWrap)\n    document.body.appendChild(this.bottombar)\n\n    this.toggled = false\n    this.toggle = document.createElement('div')\n    this.toggle.className = 'toggle'\n    this.toggle.innerText = 'x'\n    this.toggle.addEventListener('pointerdown', evt => {\n      evt.preventDefault()\n      if (this.toggled) {\n        this.toggle.innerText = 'x'\n        this.bottombar.style.display = 'grid'\n        this.toggled = false\n      } else {\n        this.bottombar.style.display = 'none'\n        this.toggle.innerText = 'o'\n        this.toggled = true\n      }\n      evt.stopPropagation()\n    })\n    IS_MOBILE && document.body.prepend(this.toggle)\n\n    this.updatePlayerMiniMap = throttle(this.updatePlayerMiniMapEvt, 500)\n    this.updateResourcesMiniMap = throttle(this.updateResourcesMiniMapEvt, 500)\n    this.updateCameraMiniMap = throttle(this.updateCameraMiniMapEvt, 100)\n\n    this.miniMapAlpha = 1.284\n    this.updateTopbar()\n  }\n\n  destroy() {\n    this.bottombar.remove()\n    this.topbar.remove()\n  }\n\n  init() {\n    this.initMiniMap()\n    this.updateTopbar()\n  }\n\n  getMinimapFactor() {\n    const {\n      context: { map },\n    } = this\n    const mapWidth = CELL_WIDTH / 2 + (map.size * CELL_WIDTH) / 2\n    return (mapWidth / 234) * 2\n  }\n\n  initMiniMap() {\n    const {\n      context: { map },\n    } = this\n\n    const context = this.terrainMinimap.getContext('2d')\n    const cameraContext = this.cameraMinimap.getContext('2d')\n    const resourceContext = this.resourcesMinimap.getContext('2d')\n\n    const minimapFactor = this.getMinimapFactor() / this.miniMapAlpha\n    const mapWidth = CELL_WIDTH / 2 + (map.size * CELL_WIDTH) / 2\n    const translate = mapWidth / 2 / minimapFactor\n    context.translate(translate, 0)\n    cameraContext.translate(translate, 0)\n    resourceContext.translate(translate, 0)\n\n    if (map.revealEverything || map.revealTerrain) {\n      this.revealTerrainMinimap()\n    }\n  }\n\n  revealTerrainMinimap() {\n    const {\n      context: { map },\n    } = this\n\n    const canvas = this.terrainMinimap\n    const context = canvas.getContext('2d')\n\n    const minimapFactor = this.getMinimapFactor() / this.miniMapAlpha\n    const mapWidth = CELL_WIDTH / 2 + (map.size * CELL_WIDTH) / 2\n    const translate = mapWidth / 2 / minimapFactor\n\n    context.clearRect(-translate, 0, canvas.width, canvas.height)\n\n    for (let i = 0; i <= map.size; i++) {\n      for (let j = 0; j <= map.size; j++) {\n        const cell = map.grid[i][j]\n        const x = cell.x\n        const y = cell.y\n        canvasDrawDiamond(\n          context,\n          x / minimapFactor + translate,\n          y / minimapFactor,\n          CELL_WIDTH / minimapFactor + 1,\n          CELL_HEIGHT / minimapFactor + 1,\n          cell.color\n        )\n      }\n    }\n  }\n\n  updateTerrainMiniMap(i, j) {\n    const {\n      context: { map },\n    } = this\n\n    const canvas = this.terrainMinimap\n    const context = canvas.getContext('2d')\n\n    const minimapFactor = this.getMinimapFactor() / this.miniMapAlpha\n    const mapWidth = CELL_WIDTH / 2 + (map.size * CELL_WIDTH) / 2\n    const translate = mapWidth / 2 / minimapFactor\n\n    const cell = map.grid[i][j]\n    let color = cell.color\n\n    const x = cell.x\n    const y = cell.y\n    canvasDrawDiamond(\n      context,\n      x / minimapFactor + translate,\n      y / minimapFactor,\n      CELL_WIDTH / minimapFactor + 1,\n      CELL_HEIGHT / minimapFactor + 1,\n      color\n    )\n\n    if (cell.has && cell.has.family === FAMILY_TYPES.resource) {\n      this.updateResourceMiniMap(cell.has)\n    }\n  }\n\n  updateResourceMiniMap(resource) {\n    const {\n      context: { map },\n    } = this\n\n    const canvas = this.resourcesMinimap\n    const context = canvas.getContext('2d')\n\n    const squareSize = 4\n    const minimapFactor = this.getMinimapFactor() / this.miniMapAlpha\n    const mapWidth = CELL_WIDTH / 2 + (map.size * CELL_WIDTH) / 2\n    const translate = mapWidth / 2 / minimapFactor\n\n    const finalX = resource.x / minimapFactor - squareSize / 2\n    const finalY = resource.y / minimapFactor - squareSize / 2\n    canvasDrawRectangle(context, finalX + translate, finalY, squareSize, squareSize, resource.color)\n  }\n\n  updateResourcesMiniMapEvt() {\n    const {\n      context: { map, player },\n    } = this\n\n    const canvas = this.resourcesMinimap\n    const context = canvas.getContext('2d')\n\n    const squareSize = 4\n    const minimapFactor = this.getMinimapFactor() / this.miniMapAlpha\n    const mapWidth = CELL_WIDTH / 2 + (map.size * CELL_WIDTH) / 2\n    const translate = mapWidth / 2 / minimapFactor\n\n    context.clearRect(-translate, 0, canvas.width, canvas.height)\n\n    map.resources.forEach(resource => {\n      const cell = player?.views?.[resource.i]?.[resource.j]\n      if (resource.color && (cell?.viewed || map.revealEverything)) {\n        const finalX = resource.x / minimapFactor - squareSize / 2\n        const finalY = resource.y / minimapFactor - squareSize / 2\n        canvasDrawRectangle(context, finalX + translate, finalY, squareSize, squareSize, resource.color)\n      }\n    })\n  }\n\n  updateCameraMiniMapEvt() {\n    const {\n      context: { app, map, controls },\n    } = this\n\n    const canvas = this.cameraMinimap\n    const context = canvas.getContext('2d')\n\n    const minimapFactor = this.getMinimapFactor() / this.miniMapAlpha\n    const mapWidth = CELL_WIDTH / 2 + (map.size * CELL_WIDTH) / 2\n    const translate = mapWidth / 2 / minimapFactor\n\n    context.clearRect(-translate, 0, canvas.width, canvas.height)\n\n    const x = controls.camera.x / minimapFactor\n    const y = controls.camera.y / minimapFactor\n    const w = app.screen.width / minimapFactor\n    const h = app.screen.height / minimapFactor\n    canvasDrawStrokeRectangle(context, x + translate, y, w, h, 'white')\n  }\n\n  updatePlayerMiniMapEvt(owner) {\n    if (!owner) {\n      return\n    }\n\n    const {\n      context: { map },\n    } = this\n\n    const squareSize = 4\n    const playerMinimap = this.playersMinimap.find(({ id }) => id === `minimap-${owner.label}`)\n    const color = owner.colorHex\n\n    let canvas\n    let context\n\n    const minimapFactor = this.getMinimapFactor() / this.miniMapAlpha\n    const mapWidth = CELL_WIDTH / 2 + (map.size * CELL_WIDTH) / 2\n    const translate = mapWidth / 2 / minimapFactor\n\n    if (playerMinimap) {\n      canvas = playerMinimap.canvas\n      context = playerMinimap.context\n    } else {\n      canvas = document.createElement('canvas')\n      context = canvas.getContext('2d')\n      context.translate(translate, 0)\n      this.playersMinimap.push({\n        id: `minimap-${owner.label}`,\n        canvas,\n        context,\n      })\n      this.bottombarMap.appendChild(canvas)\n    }\n\n    context.clearRect(-translate, 0, canvas.width, canvas.height)\n\n    owner.buildings.forEach(({ x, y, size, selected }) => {\n      const finalSize = squareSize + size\n      const finalX = x / minimapFactor - finalSize / 2\n      const finalY = y / minimapFactor - finalSize / 2\n      canvasDrawRectangle(context, finalX + translate, finalY, finalSize, finalSize, selected ? 'white' : color)\n    })\n\n    owner.units.forEach(({ x, y, selected }) => {\n      const finalX = x / minimapFactor - squareSize / 2\n      const finalY = y / minimapFactor - squareSize / 2\n      canvasDrawRectangle(context, finalX + translate, finalY, squareSize, squareSize, selected ? 'white' : color)\n    })\n  }\n\n  getMessage(cost) {\n    const {\n      context: { player },\n    } = this\n    const resource = Object.keys(cost).find(prop => player[prop] < cost[prop])\n    return `You need more ${resource} !`\n  }\n\n  showMessage(message) {\n    const {\n      context: { gamebox },\n    } = this\n    if (document.getElementById('msg')) {\n      document.getElementById('msg').remove()\n    }\n    const box = document.createElement('div')\n    box.id = 'msg'\n    box.className = 'message'\n    Object.assign(box.style, {\n      bottom: this.bottombar.clientHeight + 5 + 'px',\n    })\n    const msg = document.createElement('span')\n    msg.textContent = message\n    msg.className = 'message-content'\n\n    box.appendChild(msg)\n    gamebox.appendChild(box)\n    setTimeout(() => {\n      box.remove()\n    }, 3000)\n  }\n\n  setResourceBox(name) {\n    const box = document.createElement('div')\n    box.className = 'resource'\n\n    const img = document.createElement('img')\n    img.className = 'resource-content'\n    img.src = this.icons[name]\n\n    this[name] = document.createElement('div')\n    box.appendChild(img)\n    box.appendChild(this[name])\n    this.resources.appendChild(box)\n  }\n\n  updateBottombar() {\n    const {\n      context: { player },\n    } = this\n    if (player.selectedBuilding || player.selectedUnit) {\n      this.setBottombar(player.selectedBuilding || player.selectedUnit)\n    }\n  }\n\n  updateTopbar() {\n    const {\n      context: { player },\n    } = this\n    const t = {\n      0: 'Stone Age',\n      1: 'Tool Age',\n      2: 'Bronze Age',\n      3: 'Iron Age',\n    }\n    ;['wood', 'food', 'stone', 'gold', 'age'].forEach(prop => {\n      const val = Math.min((player && player[prop]) || 0, 99999)\n      this[prop].textContent = prop === 'age' ? t[val] : val\n    })\n  }\n\n  resetInfo() {\n    this.bottombarInfo.textContent = ''\n    this.bottombarInfo.style.background = 'transparent'\n  }\n\n  generateInfo(selection) {\n    this.resetInfo()\n    this.bottombarInfo.style.background = 'black'\n    if (typeof selection.interface.info === 'function') {\n      selection.interface.info(this.bottombarInfo)\n    }\n  }\n\n  updateInfo(target, action) {\n    const targetElement = this.bottombarInfo.querySelector(`[id=${target}]`)\n    if (!targetElement) {\n      return\n    }\n    return typeof action !== 'function' ? (targetElement.textContent = action) : action(targetElement)\n  }\n\n  updateButtonContent(target, action) {\n    const targetElement = this.bottombarMenu.querySelector(`[id=${target}]`)\n    if (!targetElement) {\n      return\n    }\n    const contentElement = targetElement.querySelector('[id=content]')\n    if (!contentElement) {\n      return\n    }\n    return typeof action !== 'function' ? (contentElement.textContent = action) : action(contentElement)\n  }\n\n  toggleButtonCancel(target, value) {\n    const element = this.bottombarMenu.querySelector(`[id=${target}-cancel]`)\n    if (!element) {\n      return\n    }\n    element.style.display = value ? 'block' : 'none'\n  }\n\n  setBottombar(selection = null) {\n    const {\n      context: { controls, player },\n    } = this\n\n    this.resetInfo()\n    this.bottombarMenu.textContent = ''\n    this.selection = selection\n    if (controls.mouseBuilding) {\n      controls.removeMouseBuilding()\n    }\n    if (selection && selection.interface) {\n      this.generateInfo(selection)\n      if (selection.family === FAMILY_TYPES.building) {\n        if (!selection.isBuilt) {\n          setMenuRecurs(selection, this.bottombarMenu, [])\n        } else if (selection.technology) {\n          setMenuRecurs(selection, this.bottombarMenu, [\n            {\n              icon: 'assets/interface/50721/003_50721.png',\n              id: `${type}-cancel`,\n              onClick: selection => {\n                sound.play('5036')\n                selection.cancelTechnology()\n              },\n            },\n          ])\n        } else {\n          setMenuRecurs(selection, this.bottombarMenu, selection.interface.menu || [])\n        }\n      } else {\n        setMenuRecurs(selection, this.bottombarMenu, selection.interface.menu || [])\n      }\n    }\n    function setMenuRecurs(selection, element, menu, parent) {\n      menu\n        .filter(btn => !btn.hide || !btn.hide())\n        .forEach((btn, index) => {\n          const box = document.createElement('div')\n          box.className = 'bottombar-menu-box'\n          box.id = btn.id || `btn-${index}`\n          if (typeof btn.onCreate === 'function') {\n            btn.onCreate(selection, box)\n          } else {\n            const img = document.createElement('img')\n            img.src = typeof btn.icon === 'function' ? btn.icon() : btn.icon\n            img.className = 'img'\n            box.appendChild(img)\n          }\n\n          if (btn.children) {\n            box.addEventListener('pointerup', () => {\n              sound.play('5036')\n              element.textContent = ''\n              controls.removeMouseBuilding()\n              setMenuRecurs(selection, element, btn.children, menu)\n            })\n          } else if (typeof btn.onClick === 'function') {\n            box.addEventListener('pointerup', evt => {\n              sound.play('5036')\n              btn.onClick(selection, evt)\n            })\n          }\n          element.appendChild(box)\n        })\n      if (parent || selection.selected) {\n        const back = document.createElement('div')\n        back.className = 'bottombar-menu-box'\n        const img = document.createElement('img')\n        img.className = 'img'\n        back.id = 'interfaceBackBtn'\n        img.src = 'assets/interface/50721/010_50721.png'\n        if (parent) {\n          back.addEventListener('pointerup', () => {\n            sound.play('5036')\n            element.textContent = ''\n            controls.removeMouseBuilding()\n            setMenuRecurs(selection, element, parent)\n          })\n        } else {\n          back.addEventListener('pointerup', () => {\n            sound.play('5036')\n            controls.removeMouseBuilding()\n            player.unselectAll()\n          })\n        }\n        back.appendChild(img)\n        element.appendChild(back)\n      }\n    }\n  }\n\n  getUnitButton(type) {\n    const {\n      context: { player },\n    } = this\n    const unit = player.config.units[type]\n    return {\n      id: type,\n      icon: () => getIconPath(unit.icon),\n      hide: () => (unit.conditions || []).some(condition => !isValidCondition(condition, player)),\n      onCreate: (selection, element) => {\n        const div = document.createElement('div')\n        div.className = 'bottombar-menu-column'\n        const cancel = document.createElement('img')\n        cancel.id = `${type}-cancel`\n        cancel.className = 'img'\n        cancel.src = 'assets/interface/50721/003_50721.png'\n        if (!selection.queue.filter(q => q === type).length) {\n          cancel.style.display = 'none'\n        }\n        cancel.addEventListener('pointerup', () => {\n          sound.play('5036')\n          for (let i = 0; i < selection.queue.length; i++) {\n            if (selection.queue[i] === type) {\n              refundCost(player, unit.cost)\n            }\n          }\n          this.updateTopbar()\n          selection.queue = selection.queue.filter(q => q !== type)\n          if (selection.queue[0] !== type) {\n            this.updateButtonContent(type, '')\n            this.toggleButtonCancel(type, false)\n          }\n        })\n        const img = document.createElement('img')\n        img.src = getIconPath(unit.icon)\n        img.className = 'img'\n        img.addEventListener('pointerup', () => {\n          sound.play('5036')\n          if (canAfford(player, unit.cost)) {\n            if (player.population >= player.population_max) {\n              this.showMessage('You need to build more houses')\n            }\n            this.toggleButtonCancel(type, true)\n            selection.buyUnit(type)\n          } else {\n            this.showMessage(this.getMessage(unit.cost))\n          }\n        })\n        const queue = selection.queue.filter(queue => queue === type).length\n        const counter = document.createElement('div')\n        counter.id = 'content'\n        counter.textContent = queue || ''\n        counter.style.padding = '1px'\n        counter.style.position = 'absolute'\n        div.appendChild(img)\n        div.appendChild(cancel)\n        element.appendChild(div)\n        element.appendChild(counter)\n      },\n    }\n  }\n\n  getBuildingButton(type) {\n    const {\n      context: { controls, player },\n    } = this\n    const config = player.config.buildings[type]\n    return {\n      id: type,\n      icon: () => {\n        const assets = getBuildingAsset(type, player, Assets)\n        return getIconPath(assets.icon)\n      },\n      hide: () => (config.conditions || []).some(condition => !isValidCondition(condition, player)),\n      onClick: () => {\n        const assets = getBuildingAsset(type, player, Assets)\n        controls.removeMouseBuilding()\n        if (canAfford(player, config.cost)) {\n          controls.setMouseBuilding({ ...config, ...assets, type })\n        } else {\n          this.showMessage(this.getMessage(config.cost))\n        }\n      },\n    }\n  }\n\n  getTechnologyButton(type) {\n    const {\n      context: { controls, player },\n    } = this\n    const config = player.techs[type]\n    return {\n      icon: getIconPath(config.icon),\n      id: type,\n      hide: () =>\n        (config.conditions || []).some(\n          condition => player.technologies.includes(type) || !isValidCondition(condition, player)\n        ),\n      onClick: selection => {\n        controls.removeMouseBuilding()\n        if (canAfford(player, config.cost)) {\n          selection.buyTechnology(type)\n        } else {\n          this.showMessage(this.getMessage(config.cost))\n        }\n      },\n    }\n  }\n}\n","import { sound } from '@pixi/sound'\nimport { Container, Graphics, AnimatedSprite, Assets, Sprite } from 'pixi.js'\nimport {\n  isometricToCartesian,\n  pointIsBetweenTwoPoint,\n  pointsDistance,\n  pointInRectangle,\n  getPlainCellsAroundPoint,\n  changeSpriteColor,\n  getTexture,\n  randomItem,\n} from '../lib'\nimport {\n  COLOR_WHITE,\n  COLOR_RED,\n  CELL_WIDTH,\n  CELL_HEIGHT,\n  MAX_SELECT_UNITS,\n  ACCELERATOR,\n  LABEL_TYPES,\n  UNIT_TYPES,\n} from '../constants'\n\nexport default class Controls extends Container {\n  constructor(context) {\n    super()\n\n    this.context = context\n\n    const { map, gamebox } = context\n\n    this.sortableChildren = true\n\n    this.mouse = {\n      x: 0,\n      y: 0,\n      prevent: false,\n    }\n\n    this.camera = {\n      x: 0,\n      y: 0,\n    }\n\n    this.visibleCells = new Set()\n\n    this.setCamera(Math.floor(map.size / 2), Math.floor(map.size / 2))\n\n    this.mouseHoldTimeout\n    this.keysPressed = {}\n    this.keyInterval\n    this.keySpeed = 0\n    this.eventMode = 'auto'\n    this.allowMove = false\n    this.allowClick = false\n    this.mouseRectangle\n    this.mouseTouch\n    this.mouseDrag = false\n    this.moveCameraInterval\n\n    this.minimapRectangle = new Graphics()\n    this.addChild(this.minimapRectangle)\n\n    document.addEventListener('mousemove', evt => this.moveCameraWithMouse(evt))\n    document.addEventListener('mouseout', () => clearInterval(this.moveCameraInterval))\n    document.addEventListener('keydown', evt => this.onKeyDown(evt))\n    document.addEventListener('keyup', evt => this.onKeyUp(evt))\n    gamebox.addEventListener('touchstart', evt => this.onTouchStart(evt))\n    gamebox.addEventListener('touchend', evt => this.onTouchEnd(evt))\n    gamebox.addEventListener('touchmove', evt => this.onTouchMove(evt))\n    gamebox.addEventListener('mousemove', evt => this.onMouseMove(evt))\n    gamebox.addEventListener('mousedown', evt => this.onMouseDown(evt))\n    gamebox.addEventListener('mouseup', evt => this.onMouseUp(evt))\n  }\n\n  destroy() {\n    const {\n      context: { gamebox },\n    } = this\n\n    document.removeEventListener('mousemove', evt => this.moveCameraWithMouse(evt))\n    document.removeEventListener('mouseout', () => clearInterval(this.moveCameraInterval))\n    document.removeEventListener('keydown', evt => this.onKeyDown(evt))\n    document.removeEventListener('keyup', evt => this.onKeyUp(evt))\n    gamebox.removeEventListener('touchstart', evt => this.onTouchStart(evt))\n    gamebox.removeEventListener('touchend', evt => this.onTouchEnd(evt))\n    gamebox.removeEventListener('touchmove', evt => this.onTouchMove(evt))\n    gamebox.removeEventListener('mousemove', evt => this.onMouseMove(evt))\n    gamebox.removeEventListener('mousedown', evt => this.onMouseDown(evt))\n    gamebox.removeEventListener('mouseup', evt => this.onMouseUp(evt))\n  }\n\n  onKeyDown(evt) {\n    if (evt.key === 'Delete' || evt.keyCode === 8) {\n      const {\n        context: { player },\n      } = this\n      for (let i = 0; i < player.selectedUnits.length; i++) {\n        player.selectedUnits[i].die()\n      }\n      if (player.selectedBuilding) {\n        player.selectedBuilding.die()\n      }\n      return\n    }\n\n    const handleMoveCamera = () => {\n      if (!this.keyInterval) {\n        this.keyInterval = setInterval(() => {\n          let double = false\n          if (Object.values(this.keysPressed).filter(Boolean).length > 1) {\n            double = true\n          }\n          if (this.keySpeed < 4) {\n            this.keySpeed += 0.2\n          }\n          if (this.keysPressed['ArrowLeft']) {\n            this.moveCamera('left', this.keySpeed, double)\n          }\n          if (this.keysPressed['ArrowUp']) {\n            this.moveCamera('up', this.keySpeed, double)\n          }\n          if (this.keysPressed['ArrowDown']) {\n            this.moveCamera('down', this.keySpeed, double)\n          }\n          if (this.keysPressed['ArrowRight']) {\n            this.moveCamera('right', this.keySpeed, double)\n          }\n        }, 1)\n      }\n    }\n    if (!evt.repeat) {\n      this.keysPressed[evt.key] = true\n    }\n    const controlsMap = ['ArrowLeft', 'ArrowRight', 'ArrowDown', 'ArrowUp']\n    if (controlsMap.includes(evt.key)) {\n      handleMoveCamera()\n    }\n  }\n\n  onKeyUp(evt) {\n    if (!evt.repeat) {\n      delete this.keysPressed[evt.key]\n    }\n    if (!Object.values(this.keysPressed).filter(Boolean).length) {\n      clearInterval(this.keyInterval)\n      this.keyInterval = null\n      this.keySpeed = 0\n    }\n  }\n\n  onTouchStart(evt) {\n    const touch = evt.touches[0]\n    if (evt.touches.length === 2) {\n      this.mouseTouch = {\n        x: touch.pageX,\n        y: touch.pageY,\n      }\n    } else {\n      this.onMouseDown(touch)\n    }\n  }\n\n  onTouchMove(evt) {\n    const touch = evt.touches[0]\n    if (evt.touches.length === 2) {\n      this.mouse.x = touch.pageX\n      this.mouse.y = touch.pageY\n\n      if (this.mouseTouch) {\n        const speedX = Math.abs(this.mouse.x - this.mouseTouch.x) * 2\n        const speedY = Math.abs(this.mouse.y - this.mouseTouch.y) * 2\n        if (this.mouse.x > this.mouseTouch.x) {\n          this.moveCamera('left', speedX, false)\n        }\n        if (this.mouse.y > this.mouseTouch.y) {\n          this.moveCamera('up', speedY, false)\n        }\n        if (this.mouse.y < this.mouseTouch.y) {\n          this.moveCamera('down', speedY, false)\n        }\n        if (this.mouse.x < this.mouseTouch.x) {\n          this.moveCamera('right', speedX, false)\n        }\n      }\n      this.mouseTouch = {\n        x: this.mouse.x,\n        y: this.mouse.y,\n      }\n    } else {\n      this.onMouseMove(touch)\n    }\n  }\n\n  onTouchEnd(evt) {\n    const touch = evt.changedTouches[0]\n    if (evt.changedTouches.length === 1) {\n      this.onMouseUp(touch)\n    }\n  }\n\n  onMouseDown(evt) {\n    this.mouse.x = evt.pageX\n    this.mouse.y = evt.pageY\n    if (!this.isMouseInApp(evt)) {\n      return\n    }\n    this.pointerStart = {\n      x: this.mouse.x,\n      y: this.mouse.y,\n    }\n  }\n\n  onMouseMove(evt) {\n    const {\n      context: { map, player, app },\n    } = this\n\n    this.mouse.x = evt.pageX\n    this.mouse.y = evt.pageY\n\n    // Mouse building to place construction\n    if (this.mouseBuilding) {\n      const pos = isometricToCartesian(\n        this.mouse.x - map.x,\n        this.mouse.y >= app.screen.height ? app.screen.height - map.y : this.mouse.y - map.y\n      )\n      const i = Math.min(Math.max(pos[0], 0), map.size)\n      const j = Math.min(Math.max(pos[1], 0), map.size)\n      if (map.grid[i] && map.grid[i][j]) {\n        const cell = map.grid[i][j]\n        this.mouseBuilding.x = cell.x - this.camera.x\n        this.mouseBuilding.y = cell.y - this.camera.y\n        let isFree = true\n\n        const dist = this.mouseBuilding.size === 3 ? 1 : 0\n        if (this.mouseBuilding.buildOnWater) {\n          let waterBorderedCells = 0\n          let waterCells = 0\n          getPlainCellsAroundPoint(i, j, map.grid, dist, cell => {\n            if (cell.inclined || cell.solid || !cell.visible) {\n              isFree = false\n              return\n            }\n            if (cell.waterBorder) {\n              waterBorderedCells++\n            } else if (cell.category === 'Water') {\n              waterCells++\n            }\n          })\n          if (waterBorderedCells < 2 && waterCells < 4) {\n            isFree = false\n          }\n        } else {\n          getPlainCellsAroundPoint(i, j, map.grid, dist, cell => {\n            if (cell.category === 'Water' || cell.solid || cell.inclined || cell.border || !cell.visible) {\n              isFree = false\n              return\n            }\n          })\n        }\n        // Color image of mouse building depend on buildable or not\n        const sprite = this.mouseBuilding.getChildByLabel(LABEL_TYPES.sprite)\n        const color = this.mouseBuilding.getChildByLabel(LABEL_TYPES.color)\n        if (isFree) {\n          sprite.tint = COLOR_WHITE\n          if (color) {\n            color.tint = COLOR_WHITE\n          }\n        } else {\n          sprite.tint = COLOR_RED\n          if (color) {\n            color.tint = COLOR_RED\n          }\n        }\n        this.mouseBuilding.isFree = isFree\n      }\n      return\n    }\n\n    // Create and draw mouse selection\n    if (\n      !this.mouseRectangle &&\n      this.pointerStart &&\n      pointsDistance(this.mouse.x, this.mouse.y, this.pointerStart.x, this.pointerStart.y) > 5\n    ) {\n      this.mouseRectangle = {\n        x: this.pointerStart.x,\n        y: this.pointerStart.y,\n        width: 0,\n        height: 0,\n        graph: new Graphics(),\n      }\n      app.stage.addChild(this.mouseRectangle.graph)\n    }\n\n    if (this.mouseRectangle && !this.mouseBuilding) {\n      if (player.selectedUnits.length || player.selectedBuilding) {\n        player.unselectAll()\n      }\n      const graph = this.mouseRectangle.graph\n      graph.clear()\n\n      this.mouseRectangle.width = this.mouse.x - this.mouseRectangle.x\n      this.mouseRectangle.height = this.mouse.y - this.mouseRectangle.y\n\n      const x = Math.min(this.mouseRectangle.x, this.mouseRectangle.x + this.mouseRectangle.width)\n      const y = Math.min(this.mouseRectangle.y, this.mouseRectangle.y + this.mouseRectangle.height)\n      const w = Math.abs(this.mouseRectangle.width)\n      const h = Math.abs(this.mouseRectangle.height)\n\n      graph.rect(x, y, w, h).stroke(COLOR_WHITE)\n    }\n  }\n\n  onMouseUp(evt) {\n    const {\n      context: { menu, map, player },\n    } = this\n    this.pointerStart = null\n    clearTimeout(this.mouseHoldTimeout)\n    if (!this.isMouseInApp(evt) || this.mouse.prevent || this.mouseDrag) {\n      this.mouse.prevent = false\n      return\n    }\n    player?.selectedBuilding && player.unselectAll()\n    // Select units on mouse rectangle\n    if (this.mouseRectangle) {\n      let selectVillager\n      let countSelect = 0\n      player.unselectAll()\n      // Select units inside the rectangle\n      for (let i = 0; i < player.units.length; i++) {\n        const unit = player.units[i]\n        if (\n          player.selectedUnits.length < MAX_SELECT_UNITS &&\n          pointInRectangle(\n            unit.x - this.camera.x,\n            unit.y - this.camera.y,\n            this.mouseRectangle.x,\n            this.mouseRectangle.y,\n            this.mouseRectangle.width,\n            this.mouseRectangle.height,\n            true\n          )\n        ) {\n          unit.select()\n          countSelect++\n          if (unit.type === UNIT_TYPES.villager) {\n            selectVillager = unit\n          }\n          player.selectedUnits.push(unit)\n        }\n      }\n      // Set our bottombar\n      if (countSelect) {\n        if (selectVillager) {\n          player.selectedUnit = selectVillager\n          menu.setBottombar(selectVillager)\n        } else {\n          // TODO SELECT UNITS THAT HAVE THE MOST FREQUENCY\n          player.selectedUnit = player.selectedUnits[0]\n          menu.setBottombar(player.selectedUnits[0])\n        }\n      }\n      // Reset mouse selection\n      if (this.mouseRectangle) {\n        this.mouseRectangle.graph.destroy(true)\n        this.mouseRectangle = null\n      }\n      return\n    }\n    if (this.isMouseInApp(evt)) {\n      const pos = isometricToCartesian(this.mouse.x - map.x, this.mouse.y - map.y)\n      const i = Math.min(Math.max(pos[0], 0), map.size)\n      const j = Math.min(Math.max(pos[1], 0), map.size)\n      if (map.grid[i] && map.grid[i][j]) {\n        const cell = map.grid[i][j]\n        if ((cell.solid || cell.has) && cell.visible) {\n          return\n        }\n        if (this.mouseBuilding) {\n          if (cell.inclined || cell.border) {\n            return\n          }\n          if (this.mouseBuilding.isFree) {\n            if (player.buyBuilding(i, j, this.mouseBuilding.type)) {\n              this.removeMouseBuilding()\n              if (menu.selection) {\n                menu.setBottombar(menu.selection)\n              }\n            }\n          }\n        } else if (player?.selectedUnits.length) {\n          // Pointer animation\n          const pointerSheet = Assets.cache.get('50405')\n          const pointer = new AnimatedSprite(pointerSheet.animations['animation'])\n          pointer.animationSpeed = 0.2 * ACCELERATOR\n          pointer.loop = false\n          pointer.anchor.set(0.5, 0.5)\n          pointer.x = this.mouse.x\n          pointer.y = this.mouse.y\n          pointer.allowMove = false\n          pointer.allowClick = false\n          pointer.eventMode = 'auto'\n          pointer.roundPixels = true\n          pointer.onComplete = () => {\n            pointer.destroy()\n          }\n          pointer.play()\n          this.addChild(pointer)\n          // Send units\n          this.sendUnits(cell)\n        }\n      }\n    }\n  }\n\n  sendUnits(cell) {\n    const {\n      context: { player, map },\n    } = this\n    const minX = Math.min(...player.selectedUnits.map(unit => unit.i))\n    const minY = Math.min(...player.selectedUnits.map(unit => unit.j))\n    const maxX = Math.max(...player.selectedUnits.map(unit => unit.i))\n    const maxY = Math.max(...player.selectedUnits.map(unit => unit.j))\n    const centerX = minX + Math.round((maxX - minX) / 2)\n    const centerY = minY + Math.round((maxY - minY) / 2)\n    let hasSentVillager = false\n    let hasSentSoldier = false\n    for (let u = 0; u < player.selectedUnits.length; u++) {\n      const unit = player.selectedUnits[u]\n      const distCenterX = unit.i - centerX\n      const distCenterY = unit.j - centerY\n      const finalX = cell.i + distCenterX\n      const finalY = cell.j + distCenterY\n      if (unit.type === UNIT_TYPES.villager) {\n        hasSentVillager = true\n      } else {\n        hasSentSoldier = true\n      }\n      if (map.grid[finalX] && map.grid[finalX][finalY]) {\n        player.selectedUnits[u].sendTo(map.grid[finalX][finalY])\n      } else {\n        player.selectedUnits[u].sendTo(cell)\n      }\n    }\n    if (hasSentSoldier) {\n      const voice = randomItem(['5075', '5076', '5128', '5164'])\n      sound.play(voice)\n    } else if (hasSentVillager) {\n      sound.play('5006')\n    }\n  }\n\n  isMouseInApp(evt) {\n    return evt.target && (!evt.target.tagName || evt.target.closest('#game'))\n  }\n\n  removeMouseBuilding() {\n    if (!this.mouseBuilding) {\n      return\n    }\n    this.removeChild(this.mouseBuilding)\n    this.mouseBuilding.destroy()\n    this.mouseBuilding = null\n  }\n\n  setMouseBuilding(building) {\n    const {\n      context: { player },\n    } = this\n    this.mouseBuilding = new Container()\n    const sprite = Sprite.from(getTexture(building.images.final, Assets))\n    sprite.label = LABEL_TYPES.sprite\n    this.mouseBuilding.addChild(sprite)\n    Object.keys(building).forEach(prop => {\n      this.mouseBuilding[prop] = building[prop]\n    })\n    this.mouseBuilding.x = this.mouse.x\n    this.mouseBuilding.y = this.mouse.y\n    this.mouseBuilding.label = LABEL_TYPES.mouseBuilding\n    if (building.images.color) {\n      const color = Sprite.from(getTexture(building.images.color, Assets))\n      color.label = LABEL_TYPES.color\n      changeSpriteColor(color, player.color)\n      this.mouseBuilding.addChild(color)\n    } else {\n      changeSpriteColor(sprite, player.color)\n    }\n    this.addChild(this.mouseBuilding)\n  }\n\n  moveCamera(dir, moveSpeed, isSpeedDivided) {\n    /**\n     * \t/A\\\n     * /   \\\n     *B     D\n     * \\   /\n     *  \\C/\n     */\n\n    const {\n      context: { map, app, menu },\n    } = this\n\n    const dividedSpeed = isSpeedDivided ? 1.5 : 1\n    const speed = (moveSpeed || 20) / dividedSpeed\n    const A = { x: CELL_WIDTH / 2 - this.camera.x, y: -this.camera.y }\n    const B = {\n      x: CELL_WIDTH / 2 - (map.size * CELL_WIDTH) / 2 - this.camera.x,\n      y: (map.size * CELL_HEIGHT) / 2 - this.camera.y,\n    }\n    const D = {\n      x: CELL_WIDTH / 2 + (map.size * CELL_WIDTH) / 2 - this.camera.x,\n      y: (map.size * CELL_HEIGHT) / 2 - this.camera.y,\n    }\n    const C = { x: CELL_WIDTH / 2 - this.camera.x, y: map.size * CELL_HEIGHT - this.camera.y }\n    const cameraCenter = {\n      x: this.camera.x + app.screen.width / 2 - this.camera.x,\n      y: this.camera.y + app.screen.height / 2 - this.camera.y,\n    }\n\n    if (dir === 'left') {\n      if (cameraCenter.x - 100 > B.x && pointIsBetweenTwoPoint(A, B, cameraCenter, 50)) {\n        this.camera.y += speed / (CELL_WIDTH / CELL_HEIGHT)\n        this.camera.x -= speed\n      } else if (cameraCenter.x - 100 > B.x && pointIsBetweenTwoPoint(B, C, cameraCenter, 50)) {\n        this.camera.y -= speed / (CELL_WIDTH / CELL_HEIGHT)\n        this.camera.x -= speed\n      } else if (cameraCenter.x - 100 > B.x) {\n        this.camera.x -= speed\n      }\n    } else if (dir === 'right') {\n      if (cameraCenter.x + 100 < D.x && pointIsBetweenTwoPoint(A, D, cameraCenter, 50)) {\n        this.camera.y += speed / (CELL_WIDTH / CELL_HEIGHT)\n        this.camera.x += speed\n      } else if (cameraCenter.x + 100 < D.x && pointIsBetweenTwoPoint(D, C, cameraCenter, 50)) {\n        this.camera.y -= speed / (CELL_WIDTH / CELL_HEIGHT)\n        this.camera.x += speed\n      } else if (cameraCenter.x + 100 < D.x) {\n        this.camera.x += speed\n      }\n    }\n    if (dir === 'up') {\n      if (cameraCenter.y - 50 > A.y && pointIsBetweenTwoPoint(A, B, cameraCenter, 50)) {\n        this.camera.y -= speed / (CELL_WIDTH / CELL_HEIGHT)\n        this.camera.x += speed\n      } else if (cameraCenter.y - 50 > A.y && pointIsBetweenTwoPoint(A, D, cameraCenter, 50)) {\n        this.camera.y -= speed / (CELL_WIDTH / CELL_HEIGHT)\n        this.camera.x -= speed\n      } else if (cameraCenter.y - 50 > A.y) {\n        this.camera.y -= speed\n      }\n    } else if (dir === 'down') {\n      if (cameraCenter.y + 50 < C.y && pointIsBetweenTwoPoint(D, C, cameraCenter, 50)) {\n        this.camera.y += speed / (CELL_WIDTH / CELL_HEIGHT)\n        this.camera.x -= speed\n      } else if (cameraCenter.y + 50 < C.y && pointIsBetweenTwoPoint(B, C, cameraCenter, 50)) {\n        this.camera.y += speed / (CELL_WIDTH / CELL_HEIGHT)\n        this.camera.x += speed\n      } else if (cameraCenter.y + 100 < C.y) {\n        this.camera.y += speed\n      }\n    }\n\n    menu.updateCameraMiniMap()\n    map.setCoordinate(-this.camera.x, -this.camera.y)\n    this.updateVisibleCells()\n  }\n\n  moveCameraWithMouse(evt) {\n    clearInterval(this.moveCameraInterval)\n    const dir = []\n    const mouse = {\n      x: evt.pageX,\n      y: evt.pageY,\n    }\n    const coef = 1\n    const moveDist = 10\n\n    const calcs = {\n      left: (0 + moveDist - mouse.x) * coef,\n      right: (mouse.x - (window.innerWidth - moveDist)) * coef,\n      up: (0 + moveDist - mouse.y) * coef,\n      down: (mouse.y - (window.innerHeight - moveDist)) * coef,\n    }\n    if (mouse.x >= 0 && mouse.x <= 0 + moveDist && mouse.y >= 0 && mouse.y <= window.innerHeight) {\n      dir.push('left')\n    } else if (\n      mouse.x > window.innerWidth - moveDist &&\n      mouse.x <= window.innerWidth &&\n      mouse.y >= 0 &&\n      mouse.y <= window.innerHeight\n    ) {\n      dir.push('right')\n    }\n    if (mouse.x >= 0 && mouse.x <= window.innerWidth && mouse.y >= 0 && mouse.y <= 0 + moveDist) {\n      dir.push('up')\n    } else if (\n      mouse.x >= 0 &&\n      mouse.x <= window.innerWidth &&\n      mouse.y > window.innerHeight - moveDist &&\n      mouse.y <= window.innerHeight\n    ) {\n      dir.push('down')\n    }\n    if (dir.length) {\n      this.moveCameraInterval = setInterval(() => {\n        dir.forEach(prop => {\n          this.moveCamera(prop, calcs[prop])\n        })\n      }, 20)\n    }\n  }\n\n  instanceInCamera(instance) {\n    const {\n      context: { app },\n    } = this\n    return pointInRectangle(instance.x, instance.y, this.camera.x, this.camera.y, app.screen.width, app.screen.height)\n  }\n\n  getCellOnCamera(callback) {\n    const {\n      context: { map, app },\n    } = this\n\n    const cameraFloor = {\n      x: Math.floor(this.camera.x),\n      y: Math.floor(this.camera.y),\n    }\n    const margin = CELL_WIDTH\n\n    for (let i = cameraFloor.x - margin; i <= cameraFloor.x + app.screen.width + margin; i += CELL_WIDTH / 2) {\n      for (let j = cameraFloor.y - margin; j <= cameraFloor.y + app.screen.height + margin; j += CELL_HEIGHT / 2) {\n        const [cartesianX, cartesianY] = isometricToCartesian(i, j)\n        const x = Math.min(Math.max(cartesianX, 0), map.size - 1) // Adjust for index bounds\n        const y = Math.min(Math.max(cartesianY, 0), map.size - 1)\n\n        // Ensure the coordinates are within bounds and call the callback\n        if (map.grid[x] && map.grid[x][y]) {\n          callback(map.grid[x][y])\n        }\n      }\n    }\n  }\n\n  updateVisibleCells() {\n    const { map, app } = this.context\n    const newVisible = new Set()\n    const margin = CELL_WIDTH // extra padding for offscreen cells\n\n    const startX = Math.floor(this.camera.x - margin)\n    const endX = Math.floor(this.camera.x + app.screen.width + margin)\n    const startY = Math.floor(this.camera.y - margin)\n    const endY = Math.floor(this.camera.y + app.screen.height + margin)\n\n    for (let i = startX; i <= endX; i += CELL_WIDTH / 2) {\n      for (let j = startY; j <= endY; j += CELL_HEIGHT / 2) {\n        const [cartX, cartY] = isometricToCartesian(i, j)\n        const x = Math.min(Math.max(cartX, 0), map.size - 1)\n        const y = Math.min(Math.max(cartY, 0), map.size - 1)\n\n        const cell = map.grid[x]?.[y]\n        if (cell) {\n          newVisible.add(cell)\n        }\n      }\n    }\n\n    // Hide cells that left the viewport\n    for (let cell of this.visibleCells) {\n      if (!newVisible.has(cell)) {\n        cell.visible = false\n        if (cell.has) cell.has.visible = false\n      }\n    }\n\n    // Show newly visible cells\n    for (let cell of newVisible) {\n      if (!this.visibleCells.has(cell)) {\n        cell.updateVisible()\n      }\n    }\n\n    this.visibleCells = newVisible\n  }\n\n  init() {\n    const {\n      context: { player, map },\n    } = this\n    // Set camera to player building else unit\n    if (player?.buildings?.length) {\n      this.setCamera(player.buildings[0].x, player.buildings[0].y)\n    } else if (player?.units?.length) {\n      this.setCamera(player.units[0].x, player.units[0].y)\n    } else {\n      this.setCamera(map.size / 2, map.size / 2)\n    }\n  }\n\n  setCamera(x, y, direct) {\n    const {\n      context: { map, app, menu },\n    } = this\n    this.camera = {\n      x: direct ? x : x - app.screen.width / 2,\n      y: direct ? y : y - app.screen.height / 2,\n    }\n    menu && menu.updateCameraMiniMap()\n    map.setCoordinate(-this.camera.x, -this.camera.y)\n    this.updateVisibleCells()\n  }\n}\n","import { Container } from 'pixi.js'\nimport Map from '../classes/map'\nimport Menu from '../classes/menu'\nimport Controls from '../classes/controls'\nimport { filterObject } from '../lib'\n\n/**\n * Main Display Object\n * @exports Game\n * @extends Container\n */\n\nexport default class Game extends Container {\n  constructor(app, gamebox) {\n    super()\n    this.context = {\n      app,\n      gamebox,\n      menu: null,\n      player: null,\n      players: [],\n      map: null,\n      controls: null,\n      paused: false,\n      save: () => this.save(),\n      load: evt => this.load(evt),\n      pause: () => this.togglePause(true),\n      resume: () => this.togglePause(false),\n    }\n    this.start()\n  }\n\n  start() {\n    const { context } = this\n\n    context.map = new Map(context)\n    context.controls = new Controls(context)\n    context.menu = new Menu(context)\n\n    context.map.generateMap()\n\n    context.players = context.map.generatePlayers()\n    context.player = context.players[0]\n    context.menu.init()\n    context.map.placePlayers()\n    context.map.stylishMap()\n    context.controls.init()\n\n    this.addChild(context.map)\n    this.addChild(context.controls)\n\n    window.addEventListener('keydown', evt => {\n      if (evt.key === 'p') {\n        this.context.paused ? context.resume() : context.pause()\n      }\n    })\n    window.addEventListener('resize', () => {\n      if (context.controls) {\n        context.controls.updateVisibleCells()\n      }\n      if (context.menu) {\n        context.menu.updateCameraMiniMap()\n      }\n    })\n  }\n\n  save() {\n    const cleanContext = context => {\n      const resourceData = resource => ({\n        ...filterObject(resource, [\n          'label',\n          'i',\n          'j',\n          'selected',\n          'type',\n          'isDead',\n          'quantity',\n          'isDestroyed',\n          'size',\n          'hitPoints',\n        ]),\n        textureName: (resource.textureName || '').split('.')[0],\n      })\n      const animalData = animal => ({\n        ...filterObject(animal, [\n          'label',\n          'type',\n          'i',\n          'j',\n          'x',\n          'y',\n          'z',\n          'hitPoints',\n          'path',\n          'work',\n          'realDest',\n          'path',\n          'zIndex',\n          'selected',\n          'degree',\n          'action',\n          'direction',\n          'currentSheet',\n          'size',\n          'inactif',\n          'isDead',\n          'isDestroyed',\n          'quantity',\n        ]),\n        currentFrame: animal.sprite?.currentFrame,\n        loop: animal.sprite?.loop,\n        dest: animal.dest && [animal.dest.i, animal.dest.i, animal.dest?.label],\n        previousDest: animal.previousDest && [animal.previousDest.i, animal.previousDest.i, animal.previousDest?.label],\n      })\n      const unitData = unit => ({\n        ...filterObject(unit, [\n          'label',\n          'type',\n          'i',\n          'j',\n          'x',\n          'y',\n          'z',\n          'hitPoints',\n          'path',\n          'work',\n          'realDest',\n          'path',\n          'selected',\n          'degree',\n          'action',\n          'loading',\n          'loadingType',\n          'direction',\n          'currentSheet',\n          'size',\n          'inactif',\n          'isDead',\n          'isDestroyed',\n        ]),\n        currentFrame: unit.sprite?.currentFrame,\n        loop: unit.sprite?.loop,\n        dest: unit.dest && [unit.dest.i, unit.dest.i, unit.dest?.label],\n        previousDest: unit.previousDest && [unit.previousDest.i, unit.previousDest.i, unit.previousDest?.label],\n      })\n      const buildingData = building => ({\n        ...filterObject(building, [\n          'label',\n          'i',\n          'j',\n          'type',\n          'selected',\n          'queue',\n          'technology',\n          'loading',\n          'isDead',\n          'isDestroyed',\n          'isBuilt',\n          'hitPoints',\n          'quantity',\n        ]),\n        isUsedBy: building.isUsedBy?.iname,\n      })\n      const playerData = player => ({\n        ...filterObject(player, [\n          'label',\n          'age',\n          'type',\n          'wood',\n          'food',\n          'stone',\n          'gold',\n          'civ',\n          'color',\n          'population',\n          'population_max',\n          'technologies',\n          'cellViewed',\n          'isPlayed',\n          'hasBuilt',\n        ]),\n        buildings: player.buildings.map(building => buildingData(building)),\n        units: player.units.map(unit => unitData(unit)),\n        corpses: player.corpses.map(corpse => unitData(corpse)),\n        views: player.views.map(view =>\n          view.map(cell => ({\n            ...filterObject(cell, ['i', 'j', 'viewed']),\n            viewBy: (cell.viewBy || []).map(unit => unit.label),\n          }))\n        ),\n      })\n      const cellData = cell => ({\n        ...filterObject(cell, [\n          'z',\n          'type',\n          'viewed',\n          'solid',\n          'visible',\n          'category',\n          'inclined',\n          'border',\n          'waterBorder',\n        ]),\n        has: cell.has?.label,\n        fogSprites: cell.fogSprites.map(({ textureSheet, colorSheet, colorName }) => ({\n          textureSheet,\n          colorSheet,\n          colorName,\n        })),\n      })\n      return {\n        camera: context.controls.camera,\n        players: context.players.map(player => playerData(player)),\n        resources: context.map.resources.map(resource => resourceData(resource)),\n        map: context.map.grid.map(line => line.map(cell => cellData(cell))),\n        animals: context.map.gaia.units.map(animal => animalData(animal)),\n      }\n    }\n\n    const json = cleanContext(this.context)\n    const dataStr = 'data:text/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(json))\n    const downloadAnchorNode = document.createElement('a')\n    downloadAnchorNode.setAttribute('href', dataStr)\n    downloadAnchorNode.setAttribute('download', `save_${new Date().toLocaleString('en-GB', { timeZone: 'UTC' })}.json`)\n    document.body.appendChild(downloadAnchorNode)\n    downloadAnchorNode.click()\n    downloadAnchorNode.remove()\n  }\n\n  load(json) {\n    this.context.controls.destroy()\n    this.context.menu.destroy()\n    this.removeChildren()\n    this.context = {\n      ...this.context,\n      player: null,\n      players: [],\n      map: null,\n      controls: null,\n      paused: false,\n    }\n    const { context } = this\n\n    context.map = new Map(context)\n    context.controls = new Controls(context)\n    context.menu = new Menu(context)\n\n    context.map.generateFromJSON(json)\n\n    this.addChild(context.map)\n    this.addChild(context.controls)\n  }\n\n  togglePause(pause) {\n    const { map, players } = this.context\n    if (pause) {\n      const div = document.createElement('div')\n      div.id = 'pause'\n      div.innerText = 'Pause'\n      document.body.appendChild(div)\n    } else {\n      document.getElementById('pause')?.remove()\n    }\n    for (let i = 0; i < map.gaia.units.length; i++) {\n      pause ? map.gaia.units[i].pause() : map.gaia.units[i].resume()\n    }\n    for (let i = 0; i < players.length; i++) {\n      const player = players[i]\n      for (let j = 0; j < player?.units?.length; j++) {\n        pause ? player.units[j].pause() : player.units[j].resume()\n      }\n      for (let j = 0; j < player?.buildings?.length; j++) {\n        pause ? player.buildings[j].pause() : player.buildings[j].resume()\n      }\n    }\n    this.context.paused = pause\n  }\n}\n","import { Assets, Container } from 'pixi.js'\n\n/**\n * Loading Screen\n *\n * @exports LoaderScreen\n */\n\nexport default class LoaderScreen extends Container {\n  constructor() {\n    super()\n    this.app\n\n    this.loadingDiv = document.createElement('div')\n    this.loadingDiv.className = 'loading'\n    document.body.prepend(this.loadingDiv)\n    this.done = () => {}\n  }\n\n  async start() {\n    return new Promise(async resolve => {\n      Assets.addBundle('config', {\n        config: 'assets/config.json',\n        greek: 'assets/greek.json',\n        technology: 'assets/technology.json',\n      })\n\n      Assets.addBundle('interface', {\n        50405: 'assets/interface/50405/texture.json',\n      })\n\n      Assets.addBundle('seeds', {\n        0: 'assets/seeds/0.txt',\n      })\n\n      Assets.addBundle('terrain', {\n        15000: 'assets/terrain/15000/texture.json',\n        15001: 'assets/terrain/15001/texture.json',\n        15002: 'assets/terrain/15002/texture.json',\n      })\n\n      Assets.addBundle('border', {\n        20000: 'assets/border/20000/texture.json',\n        20002: 'assets/border/20002/texture.json',\n      })\n\n      const graphics = [\n        '60',\n        '61',\n        '62',\n        '63',\n        '64',\n        '65',\n        '66',\n        '67',\n        '68',\n        '69',\n        '70',\n        '71',\n        '72',\n        '73',\n        '75',\n        '78',\n        '79',\n        '80',\n        '81',\n        '82',\n        '83',\n        '84',\n        '85',\n        '86',\n        '87',\n        '88',\n        '89',\n        '90',\n        '91',\n        '92',\n        '94',\n        '153',\n        '154',\n        '155',\n        '203',\n        '204',\n        '205',\n        '206',\n        '212',\n        '215',\n        '217',\n        '218',\n        '219',\n        '220',\n        '222',\n        '223',\n        '224',\n        '225',\n        '227',\n        '230',\n        '231',\n        '232',\n        '233',\n        '234',\n        '235',\n        '236',\n        '237',\n        '239',\n        '240',\n        '254',\n        '256',\n        '258',\n        '261',\n        '271',\n        '272',\n        '273',\n        '274',\n        '280',\n        '281',\n        '292',\n        '293',\n        '294',\n        '295',\n        '296',\n        '297',\n        '298',\n        '299',\n        '300',\n        '301',\n        '308',\n        '309',\n        '311',\n        '312',\n        '314',\n        '315',\n        '321',\n        '324',\n        '326',\n        '327',\n        '328',\n        '330',\n        '331',\n        '332',\n        '333',\n        '334',\n        '336',\n        '337',\n        '339',\n        '340',\n        '343',\n        '347',\n        '355',\n        '356',\n        '367',\n        '368',\n        '370',\n        '371',\n        '373',\n        '374',\n        '380',\n        '386',\n        '388',\n        '389',\n        '390',\n        '391',\n        '392',\n        '393',\n        '394',\n        '395',\n        '397',\n        '398',\n        '399',\n        '400',\n        '401',\n        '403',\n        '413',\n        '414',\n        '415',\n        '416',\n        '418',\n        '419',\n        '425',\n        '428',\n        '430',\n        '431',\n        '432',\n        '433',\n        '435',\n        '436',\n        '437',\n        '439',\n        '440',\n        '441',\n        '442',\n        '445',\n        '447',\n        '450',\n        '452',\n        '458',\n        '463',\n        '464',\n        '465',\n        '466',\n        '473',\n        '478',\n        '479',\n        '480',\n        '481',\n        '489',\n        '492',\n        '493',\n        '494',\n        '497',\n        '500',\n        '503',\n        '509',\n        '527',\n        '531',\n        '532',\n        '533',\n        '534',\n        '593',\n        '594',\n        '609',\n        '622',\n        '623',\n        '624',\n        '625',\n        '626',\n        '628',\n        '630',\n        '631',\n        '632',\n        '633',\n        '636',\n        '651',\n        '652',\n        '653',\n        '654',\n        '655',\n        '657',\n        '658',\n        '664',\n        '667',\n        '670',\n        '672',\n        '673',\n        '676',\n        '677',\n        '678',\n        '680',\n        '681',\n        '682',\n        '683',\n        '684',\n        '688',\n      ]\n\n      Assets.addBundle(\n        'graphics',\n        graphics.reduce(\n          (acc, g) => ({\n            ...acc,\n            [g]: `assets/graphics/${g}/texture.json`,\n          }),\n          {}\n        )\n      )\n\n      const sounds = [\n        '5002',\n        '5003',\n        '5005',\n        '5006',\n        '5008',\n        '5009',\n        '5010',\n        '5011',\n        '5012',\n        '5022',\n        '5027',\n        '5036',\n        '5044',\n        '5048',\n        '5054',\n        '5055',\n        '5056',\n        '5057',\n        '5058',\n        '5059',\n        '5060',\n        '5061',\n        '5062',\n        '5063',\n        '5064',\n        '5070',\n        '5075',\n        '5076',\n        '5085',\n        '5096',\n        '5107',\n        '5108',\n        '5118',\n        '5123',\n        '5125',\n        '5126',\n        '5128',\n        '5129',\n        '5132',\n        '5133',\n        '5138',\n        '5139',\n        '5140',\n        '5159',\n        '5142',\n        '5144',\n        '5164',\n        '5166',\n        '5169',\n        '5176',\n        '5178',\n        '5180',\n        '5186',\n        '5196',\n        '5201',\n        '5216',\n        '5217',\n        '5239',\n      ]\n\n      Assets.addBundle(\n        'sounds',\n        sounds.reduce(\n          (acc, g) => ({\n            ...acc,\n            [g]: `assets/sounds/${g}.wav`,\n          }),\n          {}\n        )\n      )\n\n      this.loadingDiv.innerHTML = 'Loading config..'\n      await Assets.loadBundle('config')\n      this.loadingDiv.innerHTML = 'Loading interface..'\n      await Assets.loadBundle('interface')\n      this.loadingDiv.innerHTML = 'Loading seeds..'\n      await Assets.loadBundle('seeds')\n      this.loadingDiv.innerHTML = 'Loading terrain..'\n      await Assets.loadBundle('terrain')\n      this.loadingDiv.innerHTML = 'Loading border..'\n      await Assets.loadBundle('border')\n      this.loadingDiv.innerHTML = 'Loading graphics..'\n      await Assets.loadBundle('graphics')\n      this.loadingDiv.innerHTML = 'Loading sounds..'\n      await Assets.loadBundle('sounds')\n\n      this.loadingDiv.remove()\n\n      resolve()\n    })\n  }\n}\n","import { Application } from 'pixi.js'\nimport './styles.css'\nimport Game from './screens/Game'\nimport Loader from './screens/Loader'\n;(async () => {\n  // Create a new PixiJS application\n  const app = new Application()\n\n  // Initialize the app with background color and auto-resize\n  await app.init({\n    width: window.innerWidth,\n    height: window.innerHeight,\n    background: 0x000000, // black background\n    resizeTo: window,\n    antialias: false, // faster\n    resolution: window.devicePixelRatio || 1,\n    autoDensity: true, // adjusts canvas for resolution\n    powerPreference: 'high-performance', // GPU hint\n  })\n\n  // Append the canvas to your game container\n  const gamebox = document.getElementById('game')\n  if (!gamebox) {\n    console.error('No #game container found')\n    return\n  }\n  gamebox.appendChild(app.canvas)\n\n  // Initialize loader\n  const loader = new Loader()\n  app.stage.addChild(loader)\n  await loader.start()\n\n  // Once assets are loaded, remove loader and start game\n  const game = new Game(app, gamebox)\n  app.stage.removeChild(loader)\n  app.stage.addChild(game)\n})()\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/.pnpm/css-loader@7.1.2_webpack@5.101.3/node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/.pnpm/css-loader@7.1.2_webpack@5.101.3/node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `:root {\n  --main-primary-color: #1d57a8;\n  --main-background-color: #12171ecf;\n  --main-border-color: transparent;\n  --main-border-radius: 2px;\n  --main-border-size: 0px;\n  --main-border-style: solid;\n  --main-shadow-color: rgba(0, 0, 0, 0.7);\n  --main-box-shadow: var(--main-shadow-color) 0px 0px 3px 0px;\n}\n\nhtml,\nbody,\ninput,\ntextarea,\nselect,\nbutton {\n  border-color: #5e5d5a;\n  color: #e5e0d8;\n  font-size: 12px;\n  text-shadow: 1px 1px black;\n  font-family: sans-serif;\n  -webkit-font-smoothing: none;\n}\n\nbody {\n  height: 100vh;\n  overflow: hidden;\n  margin: 0;\n  -webkit-user-select: none;\n  user-select: none;\n  background-color: black;\n}\n\nbutton,\n.input-file {\n  border: 1px solid var(--main-primary-color);\n  padding: 6px 15px;\n  border-radius: var(--main-border-radius);\n  position: relative;\n  cursor: pointer;\n  text-align: center;\n  background-color: transparent;\n  width: 200px;\n  transition: all 0.2s;\n}\nbutton:hover,\n.input-file:hover {\n  background-color: var(--main-primary-color);\n}\n.input-file {\n  width: calc(100% - 32px);\n}\n.input-file > input {\n  width: 200px;\n  cursor: pointer;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 99;\n  /*Opacity settings for all browsers*/\n  opacity: 0;\n  -moz-opacity: 0;\n  filter: progid:DXImageTransform.Microsoft.Alpha(opacity=0);\n}\n\n.loading {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n}\n\n#game {\n  flex: 1;\n}\n\n#pause {\n  position: absolute;\n  z-index: 1000;\n  font-size: 50px;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  margin-top: -66px;\n}\n\n.bar {\n  background: var(--main-background-color);\n  width: 100%;\n}\n\nimg {\n  -webkit-user-drag: none;\n  user-drag: none;\n}\n\n.img {\n  object-fit: none;\n  height: 45px;\n  width: 45px;\n  border: var(--main-border-size) var(--main-border-style) var(--main-border-color);\n  border-radius: var(--main-border-radius);\n  box-shadow: var(--main-box-shadow);\n}\n\n.topbar {\n  position: absolute;\n  top: 0;\n  padding: 5px 10px;\n  display: grid;\n  font-weight: bold;\n  grid-template-columns: 33% 33% 33%;\n  width: calc(100% - 20px);\n  align-items: center;\n  justify-content: center;\n}\n\n.bottombar {\n  position: absolute;\n  bottom: 0;\n  display: grid;\n  height: 122px;\n  grid-template-columns: 120px auto 242px;\n  width: calc(100% - 10px);\n  grid-gap: 5px;\n  padding: 5px;\n}\n\n.bottombar-info {\n  position: relative;\n  border: var(--main-border-size) var(--main-border-style) var(--main-border-color);\n  border-radius: var(--main-border-radius);\n  box-shadow: var(--main-box-shadow);\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  padding: 2px;\n  gap: 1px;\n}\n\n.bottombar-info #icon {\n  object-fit: none;\n  height: 45px;\n  width: 45px;\n}\n\n.bottombar-info #infos {\n  position: absolute;\n  left: 45%;\n  top: 30px;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n}\n\n.bottombar-info #info {\n  display: flex;\n  align-items: center;\n  gap: 5px;\n}\n\n.bottombar-menu {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 5px;\n  padding: 5px 0;\n  overflow: auto;\n  max-width: 500px;\n}\n\n.bottombar-menu-column {\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n}\n\n.bottombar-menu-box {\n  position: relative;\n  display: flex;\n}\n\n.bottombar-map-wrap {\n  position: relative;\n  top: 2px;\n  filter: drop-shadow(0px 0px 3px var(--main-shadow-color));\n}\n\n.bottombar-map {\n  width: 100%;\n  height: 100%;\n  background: black;\n  clip-path: polygon(50% 1%, 100% 48%, 50% 96%, 0% 48%);\n}\n\n.bottombar-map canvas {\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n}\n\n.topbar-age {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.topbar-resources {\n  display: flex;\n  gap: 10px;\n}\n\n.topbar-options {\n  display: flex;\n  align-items: center;\n  justify-content: end;\n}\n\n.topbar-options-menu {\n  width: fit-content;\n  cursor: pointer;\n}\n\n.resource {\n  display: flex;\n  gap: 2px;\n  align-items: center;\n}\n\n.resource > div {\n  width: 40px;\n}\n\n.resource-content {\n  object-fit: none;\n  height: 13px;\n  width: 20px;\n  border: var(--main-border-size) var(--main-border-style) var(--main-border-color);\n  border-radius: var(--main-border-radius);\n  box-shadow: var(--main-box-shadow);\n}\n\n.message {\n  z-index: 1000;\n  position: fixed;\n  width: 100%;\n  text-align: center;\n}\n\n.message-content {\n  color: #da2424;\n  background: rgba(0, 0, 0, 0.4);\n  padding: 3px;\n}\n\n.resource-quantity {\n  position: absolute;\n  top: 20px;\n  left: 45%;\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n  gap: 5px;\n}\n\n.unit-loading {\n  position: absolute;\n  top: 52px;\n  left: 45%;\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n  gap: 5px;\n}\n\n.building-loading,\n#population {\n  position: absolute;\n  left: 40%;\n  top: 32px;\n  display: flex;\n  align-items: center;\n}\n\n.toggle {\n  position: fixed;\n  bottom: -119px;\n  right: 0;\n  transform: rotate(64deg);\n  height: 192px;\n  width: 100px;\n  border-top-left-radius: 3px;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 10;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.modal {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 1001;\n}\n\n.modal-content {\n  background: var(--main-background-color);\n  border-radius: var(--main-border-radius);\n  box-shadow: var(--main-box-shadow);\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n.modal-menu {\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding: 10px;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./app/styles.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\":root {\\n  --main-primary-color: #1d57a8;\\n  --main-background-color: #12171ecf;\\n  --main-border-color: transparent;\\n  --main-border-radius: 2px;\\n  --main-border-size: 0px;\\n  --main-border-style: solid;\\n  --main-shadow-color: rgba(0, 0, 0, 0.7);\\n  --main-box-shadow: var(--main-shadow-color) 0px 0px 3px 0px;\\n}\\n\\nhtml,\\nbody,\\ninput,\\ntextarea,\\nselect,\\nbutton {\\n  border-color: #5e5d5a;\\n  color: #e5e0d8;\\n  font-size: 12px;\\n  text-shadow: 1px 1px black;\\n  font-family: sans-serif;\\n  -webkit-font-smoothing: none;\\n}\\n\\nbody {\\n  height: 100vh;\\n  overflow: hidden;\\n  margin: 0;\\n  -webkit-user-select: none;\\n  user-select: none;\\n  background-color: black;\\n}\\n\\nbutton,\\n.input-file {\\n  border: 1px solid var(--main-primary-color);\\n  padding: 6px 15px;\\n  border-radius: var(--main-border-radius);\\n  position: relative;\\n  cursor: pointer;\\n  text-align: center;\\n  background-color: transparent;\\n  width: 200px;\\n  transition: all 0.2s;\\n}\\nbutton:hover,\\n.input-file:hover {\\n  background-color: var(--main-primary-color);\\n}\\n.input-file {\\n  width: calc(100% - 32px);\\n}\\n.input-file > input {\\n  width: 200px;\\n  cursor: pointer;\\n  height: 100%;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  z-index: 99;\\n  /*Opacity settings for all browsers*/\\n  opacity: 0;\\n  -moz-opacity: 0;\\n  filter: progid:DXImageTransform.Microsoft.Alpha(opacity=0);\\n}\\n\\n.loading {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  height: 100%;\\n}\\n\\n#game {\\n  flex: 1;\\n}\\n\\n#pause {\\n  position: absolute;\\n  z-index: 1000;\\n  font-size: 50px;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n  margin-top: -66px;\\n}\\n\\n.bar {\\n  background: var(--main-background-color);\\n  width: 100%;\\n}\\n\\nimg {\\n  -webkit-user-drag: none;\\n  user-drag: none;\\n}\\n\\n.img {\\n  object-fit: none;\\n  height: 45px;\\n  width: 45px;\\n  border: var(--main-border-size) var(--main-border-style) var(--main-border-color);\\n  border-radius: var(--main-border-radius);\\n  box-shadow: var(--main-box-shadow);\\n}\\n\\n.topbar {\\n  position: absolute;\\n  top: 0;\\n  padding: 5px 10px;\\n  display: grid;\\n  font-weight: bold;\\n  grid-template-columns: 33% 33% 33%;\\n  width: calc(100% - 20px);\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n.bottombar {\\n  position: absolute;\\n  bottom: 0;\\n  display: grid;\\n  height: 122px;\\n  grid-template-columns: 120px auto 242px;\\n  width: calc(100% - 10px);\\n  grid-gap: 5px;\\n  padding: 5px;\\n}\\n\\n.bottombar-info {\\n  position: relative;\\n  border: var(--main-border-size) var(--main-border-style) var(--main-border-color);\\n  border-radius: var(--main-border-radius);\\n  box-shadow: var(--main-box-shadow);\\n  overflow: hidden;\\n  display: flex;\\n  flex-direction: column;\\n  padding: 2px;\\n  gap: 1px;\\n}\\n\\n.bottombar-info #icon {\\n  object-fit: none;\\n  height: 45px;\\n  width: 45px;\\n}\\n\\n.bottombar-info #infos {\\n  position: absolute;\\n  left: 45%;\\n  top: 30px;\\n  display: flex;\\n  align-items: center;\\n  flex-direction: column;\\n}\\n\\n.bottombar-info #info {\\n  display: flex;\\n  align-items: center;\\n  gap: 5px;\\n}\\n\\n.bottombar-menu {\\n  display: flex;\\n  flex-wrap: wrap;\\n  gap: 5px;\\n  padding: 5px 0;\\n  overflow: auto;\\n  max-width: 500px;\\n}\\n\\n.bottombar-menu-column {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 5px;\\n}\\n\\n.bottombar-menu-box {\\n  position: relative;\\n  display: flex;\\n}\\n\\n.bottombar-map-wrap {\\n  position: relative;\\n  top: 2px;\\n  filter: drop-shadow(0px 0px 3px var(--main-shadow-color));\\n}\\n\\n.bottombar-map {\\n  width: 100%;\\n  height: 100%;\\n  background: black;\\n  clip-path: polygon(50% 1%, 100% 48%, 50% 96%, 0% 48%);\\n}\\n\\n.bottombar-map canvas {\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.topbar-age {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n.topbar-resources {\\n  display: flex;\\n  gap: 10px;\\n}\\n\\n.topbar-options {\\n  display: flex;\\n  align-items: center;\\n  justify-content: end;\\n}\\n\\n.topbar-options-menu {\\n  width: fit-content;\\n  cursor: pointer;\\n}\\n\\n.resource {\\n  display: flex;\\n  gap: 2px;\\n  align-items: center;\\n}\\n\\n.resource > div {\\n  width: 40px;\\n}\\n\\n.resource-content {\\n  object-fit: none;\\n  height: 13px;\\n  width: 20px;\\n  border: var(--main-border-size) var(--main-border-style) var(--main-border-color);\\n  border-radius: var(--main-border-radius);\\n  box-shadow: var(--main-box-shadow);\\n}\\n\\n.message {\\n  z-index: 1000;\\n  position: fixed;\\n  width: 100%;\\n  text-align: center;\\n}\\n\\n.message-content {\\n  color: #da2424;\\n  background: rgba(0, 0, 0, 0.4);\\n  padding: 3px;\\n}\\n\\n.resource-quantity {\\n  position: absolute;\\n  top: 20px;\\n  left: 45%;\\n  display: flex;\\n  align-items: center;\\n  flex-direction: row;\\n  gap: 5px;\\n}\\n\\n.unit-loading {\\n  position: absolute;\\n  top: 52px;\\n  left: 45%;\\n  display: flex;\\n  align-items: center;\\n  flex-direction: row;\\n  gap: 5px;\\n}\\n\\n.building-loading,\\n#population {\\n  position: absolute;\\n  left: 40%;\\n  top: 32px;\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.toggle {\\n  position: fixed;\\n  bottom: -119px;\\n  right: 0;\\n  transform: rotate(64deg);\\n  height: 192px;\\n  width: 100px;\\n  border-top-left-radius: 3px;\\n  background: rgba(0, 0, 0, 0.5);\\n  z-index: 10;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n.modal {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100vw;\\n  height: 100vh;\\n  background: rgba(0, 0, 0, 0.5);\\n  z-index: 1001;\\n}\\n\\n.modal-content {\\n  background: var(--main-background-color);\\n  border-radius: var(--main-border-radius);\\n  box-shadow: var(--main-box-shadow);\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n}\\n\\n.modal-menu {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 10px;\\n  padding: 10px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["CELL_WIDTH","CELL_HEIGHT","CELL_DEPTH","ACCELERATOR","STEP_TIME","IS_MOBILE","window","innerWidth","innerHeight","LONG_CLICK_DURATION","RESOURCE_TYPES","tree","berrybush","stone","gold","salmon","BUILDING_TYPES","house","dock","townCenter","farm","storagePit","granary","barracks","market","UNIT_TYPES","villager","priest","clubman","MENU_INFO_IDS","loading","hitPoints","population","populationText","quantity","quantityText","loadingText","type","civ","icon","LABEL_TYPES","sprite","color","deco","fire","selection","buildingFog","mouseBuilding","floor","set","SHEET_TYPES","walking","action","standing","corpse","dying","harvest","PLAYER_TYPES","human","ai","gaia","FAMILY_TYPES","animal","building","cell","projectile","resource","unit","player","WORK_TYPES","fisher","hunter","farmer","forager","woodcutter","stoneminer","goldminer","builder","attacker","healer","ACTION_TYPES","delivery","takemeat","hunt","attack","fishing","build","forageberry","minegold","minestone","chopwood","heal","LOADING_TYPES","meat","wheat","berry","fish","wood","WORK_FOOD_TYPES","LOADING_FOOD_TYPES","COLOR_WHITE","COLOR_BLACK","COLOR_GREY","COLOR_RED","COLOR_ORANGE","COLOR_YELLOW","COLOR_GREEN","COLOR_BLUE","COLOR_INDIGO","COLOR_VIOLET","COLOR_BONE","COLOR_SHIP_GREY","COLOR_FOG","COLOR_FLASHY_GREEN","COLOR_ARROW","TYPE_ACTION","Stone","Gold","Berrybush","Tree","Fish","CORPSE_TIME","RUBBLE_TIME","MAX_SELECT_UNITS","POPULATION_MAX","e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","_regeneratorDefine","_invoke","enumerable","configurable","writable","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","_arrayLikeToArray","toString","slice","constructor","name","Array","from","test","next","push","isArray","Graphics","Texture","MultiColorReplaceFilter","getIconPath","id","split","index","concat","getBuildingTextureNameWithSize","size","getBuildingRubbleTextureNameWithSize","getBuildingAsset","owner","assets","path","cache","get","toLowerCase","buildings","age","getTexture","_name$split","_name$split2","spritesheet","textures","Error","textureName","texture","hitArea","data","frames","colors","getHexColor","colorMap","blue","red","yellow","brown","orange","green","grey","cyan","changeSpriteColorDirectly","sourceColors","targetColors","baseTexture","canvas","document","createElement","width","height","ctx","getContext","drawImage","frame","x","imageData","getImageData","sourceColorMap","Map","map","g","b","rgb","has","targetColor","putImageData","newTexture","changeSpriteColor","source","replacements","filter","tolerance","filters","drawInstanceBlinkingSelection","instance","label","zIndex","poly","stroke","addChildAt","blink","alpha","duration","setTimeout","blinkSequence","_ref","_callee","_context","removeChild","canvasDrawRectangle","context","fillStyle","fillRect","canvasDrawStrokeRectangle","strokeStyle","strokeRect","canvasDrawDiamond","save","beginPath","moveTo","lineTo","closePath","fill","restore","onSpriteLoopAtFrame","cb","onFrameChange","currentFrame","refundCost","cost","_typeof","keys","forEach","prop","payCost","canAfford","uuidv4","replace","randomValue","crypto","getRandomValues","Uint8Array","hexValue","formatNumber","nbr","cartesianToIsometric","Math","isometricToCartesian","round","getPercentage","getValuePercentage","val","perc","average","pointIsBetweenTwoPoint","line1","line2","pnt","lineThickness","dx","dy","L2","dist","hypot","s","abs","sqrt","randomRange","min","max","random","randomItem","array","undefined","instancesDistance","useCartesian","pointsDistance","j","getInstanceZIndex","pos","z","diff","getInstanceDegree","getPointsDegree","x1","y1","x2","y2","tX","tY","atan2","PI","degreesToRadians","degrees","pointInRectangle","left","top","allDirection","cellIsDiag","src","target","degreeToDirection","degree","exports","entries","_ref2","exported","instanceContactInstance","isDestroyed","moveTowardPoint","speed","velX","velY","getFreeCellAroundPoint","grid","condition","maxDistance","distance","cells","getCellsAroundPoint","getInstanceClosestFreeCellPath","paths","getInstancePath","reduce","shortest","current","maxZone","end","start","minX","maxX","minY","maxY","isCellReachable","solid","allowWaterCellCategory","category","cloneGrid","isFinish","openCells","closedCells","cloneEnd","cloneStart","_loop","lowestF","temp","previous","splice","indexOf","neighbour","validDiag","includes","tempG","h","pop","_toConsumableArray","getZoneInGridWithCondition","zone","_grid$i","isFree","surroundingCells","getPlainCellsAroundPoint","_iterator","_createForOfIteratorHelper","_step","surroundingCell","err","findInstancesInSight","instX","instY","sight","parent","instances","updateInstanceVisibility","cx","cy","isDead","visibleCells","sightSq","newVisible","Set","views","add","prevVisible","_iterator2","_step2","playerCell","globalCell","globalIdx","viewBy","idx","revealEverything","setFog","_iterator3","_step3","updateVisible","viewed","_cell$onViewed","cellViewed","onViewed","isPlayed","removeFog","updateAIKnowledge","detect","distSq","pow","foundedTrees","foundedBerrybushs","family","foundedEnemyBuildings","getRandomZoneInGridWithCondition","attempts","attempt","_grid$randomX","randomX","randomY","_iterator4","_step4","getPositionInGridAroundInstance","space","allowInclined","extraCondition","_space","minSpace","maxSpace","cellCondition","border","inclined","instanceIsInPlayerSight","isInSight","startX","startY","callback","result","row","_grid$startX","startCell","dyMax","getClosestInstance","closestInstance","closestDistance","Infinity","_iterator5","_step5","targetInstance","getClosestInstanceWithPath","closest","_iterator6","_step6","setUnitTexture","sheet","_instance$sheet$data$","animationSpeed","standingSheet","corpseSheet","paused","sheetToReset","currentSheet","walkingSheet","stop","anchor","defaultAnchor","onLoop","goto","direction","scale","animations","gotoAndPlay","play","filterObject","obj","acc","key","hasOwnProperty","Modal","content","HTMLElement","open","modal","className","modalContent","appendChild","body","close","getElementById","remove","CustomTimeout","delay","_this","timerId","remaining","pause","clearTimeout","Date","now","resume","reset","throttle","wait","immediate","timeout","initialCall","_this2","_len","args","_key","callNow","debounce","timeoutId","_this3","_len2","_key2","getWorkWithLoadingType","loadingType","workMapping","capitalizeFirstLetter","string","charAt","toUpperCase","getDamage","meleeAttack","pierceAttack","meleeArmor","pierceArmor","getHitPointsWithDamage","defaultDamage","damage","updateObject","operation","op","setToValue","join","Number","canUpdateMinimap","isValidCondition","values","expectedValue","arraysEqual","sortedA","sort","sortedB","every","getActionCondition","props","conditions","isBuilt","buildingTypes","allowAction","_target$owner","isUsedBy","_target$owner2","totalHitPoints","_target$owner3","_target$owner4","sound","Container","Sprite","Assets","Polygon","AnimatedSprite","Resource","_Container","options","_this$quantity","_this$hitPoints","_classCallCheck","_callSuper","selected","config","resources","totalQuantity","visible","eventMode","allowClick","allowMove","info","element","setDefaultInterface","isAnimated","spritesheetJump","jump","resourceName","textureFile","updateAnchor","roundPixels","on","_this3$context","menu","selectedUnits","unselectAll","select","setBottombar","selectedOther","evt","_this4","_this4$context","controls","mouseRectangle","isMouseInApp","mouse","prevent","hasVillager","hasOther","sendToFunc","sendTo","voice","units","Villager","sounds","addChild","_inherits","_createClass","unselect","getChildByLabel","die","_this$context","players","listName","list","updateResourcesMiniMap","onTreeDie","clear","setCuttedTreeTexture","points","corpses","corpseIndex","destroy","child","typeDiv","textContent","iconImg","hitPointsDiv","quantityDiv","iconToUse","infoIcons","smallIconImg","textDiv","Projectile","projectiles","destination","targetX","targetY","rect","rotation","interval","setInterval","onHit","clearInterval","updateInfo","isAttacked","Building","queue","technology","attackInterval","buyUnit","buyTechnology","instanceInCamera","spriteSheet","getUnitButton","technologies","getTechnologyButton","displayPopulation","populationDiv","populationIcon","populationSpan","population_max","getLoadingElement","devMode","_this2$context","hasSentVillager","hasSentOther","sendToBuilding","accept","previousDest","sendToFarm","selectedBuilding","playerUnit","sendToAttack","finalTexture","onBuilt","attackAction","startAttackInterval","range","stopAttackInterval","rateOfFire","startInterval","time","finalCb","stopInterval","_this5","_this$timeout","_this$timeout2","startTimeout","stopTimeout","updateHitPoints","updateTexture","percentage","buildSpritesheetId","buildSpritesheet","hasBuilt","increasePopulation","images","spriteColor","spritesheetFire","spriteFire","generateFire","spriteId","children","newFire","poses","_this6","rubbleSheet","updatePlayerMiniMapEvt","_this7","_this$context2","updateInterfaceLoading","_this$context3","placeUnit","_this$context4","spawnCell","extra","getUnitExtraOptions","createUnit","_objectSpread","_this8","alreadyPaid","force","_this$context5","success","updateButtonContent","q","updateTopbar","hasShowedMessage","still","toggleButtonCancel","shift","showMessage","trainingTime","_this9","innerHTML","loadingDiv","cancelTechnology","_this$context6","updateBottombar","upgrade","_i4","_Object$entries","_Object$entries$_i","_this0","_this$context7","techs","_this0$technology","technconfigology","updateConfig","operations","functionName","researchTime","civDiv","icons","getActionSheet","work","actionSheet","allAssets","Unit","_this$x","_this$y","_this$z","_this$loop","dest","realDest","inactif","currentCell","_i","_i2","_Object$entries2","_Object$entries2$_i","ready","showLoading","showBuildings","getBuildingButton","loop","decompose","death","loadedSheet","setTextures","sendToEvt","clicked","getCellOnCamera","doubleClicked","hasSentHealer","selectedUnit","hasSentAttacker","_this$sprite","_this$sprite2","hasPath","setDest","handleSetDest","setPath","step","handleChangeDest","_map$grid$this$i$this","isUnitAtDest","getAction","affectNewDest","goBackToPrevious","sendToTakeMeat","loadingMax","sendToDelivery","gatheringRate","constructionTime","depst","destHasMoved","oldDeg","hit","healing","handleAffectNewDestHunter","firstTargets","harvestSheet","secondTargets","_Object$entries3","_Object$entries3$_i","_i5","_Object$entries4","_Object$entries4$_i","handleSuccess","targets","notDeliveryWork","moveToPath","nextCell","playing","updatePlayerMiniMap","currentDest","sendToHunt","explore","runaway","_this1","_this10","onComplete","unselectUnit","corpsesIndex","_this11","commonSendTo","keepPrevious","workFromLoading","dyingSheet","_this12","Granary","StoragePit","_i6","_Object$entries5","_Object$entries5$_i","sendToFish","sendToTree","sendToBerrybush","sendToStone","sendToGold","infosDiv","infos","infoDiv","attackImg","attackDiv","Player","food","colorHex","_loop2","_this$views$i$j$viewB","_this$views","_this$views$i$j$viewe","_this$views2","updateTerrainMiniMap","revealTerrain","spawnBuilding","createBuilding","onAgeChange","otherPlayers","others","types","buyBuilding","styleLogInfo1","styleLogInfo2","AI","_Player","_extends","_objectDestructuringEmpty","foundedGolds","foundedStones","distSpread","nextAge","maxVillagerPerAge","villageTargetPercentageByAge","maxBuildingByAge","Barracks","Market","Farm","hasNotReachBuildingLimit","buildingType","buildingsByTypes","me","closestBuilding","console","log","maxVillagers","maxVillagersOnConstruction","maxClubmans","howManyVillagerBeforeBuyingABarracks","howManySoldiersBeforeAttack","filterUnitsByType","villagers","clubmans","towncenters","storagepits","houses","granarys","markets","farms","emptyFarms","notBuiltBuildings","notBuiltHouses","villagersByWork","works","inactifVillagers","villagersOnWood","villagersOnFood","villagersOnGold","villagersOnStone","builderVillagers","maxVillagersOnWood","maxVillagersOnFood","maxVillagersOnGold","maxVillagersOnStone","inactifClubmans","assault","waitingClubmans","totalCells","assignVillagersToResource","resourceList","actionCallback","bush","availableVillagers","buyUnits","currentCount","maxCount","buildingList","unitType","unitsNeeded","unitsBought","buyBuildingIfNeeded","positionCallback","House","position","_ret","technologyType","Animal","animals","drawDestinationRectangle","isAnimalAtDest","getReaction","strategy","fall","Gaia","createAnimal","Human","nextVillager","unselectAllUnits","Cell","waterBorder","fogSprites","addFogBuilding","updateChild","setDesertBorder","cellSprite","cellSpriteTextureName","cellSpriteIndex","cpt","setWaterBorder","setReliefBorder","elevation","setWater","fillWaterCellsAroundCell","aside","fillReliefCellsAroundCell","setCellLevel","level","textureSheet","colorSheet","colorName","tint","removeFogBuilding","localCell","_localCell$fogSprites","setFogChildren","init","setRemoveChildren","reliefRange","chanceOfRelief","chanceOfSets","sortableChildren","allTechnologies","noAI","startingUnits","playersPos","positionsCount","setCoordinate","generateFromJSON","camera","classMap","removeChildren","line","newCell","formatCellsRelief","formatCellsWaterBorder","formatCellsDesert","setCamera","_players$index","getDest","processUnit","Boolean","generateMap","repeat","generateCells","findPlayerPlaces","alert","generateResourcesAroundPlayers","stylishMap","generateSets","generatePlayers","randoms","_this$playersPos$pose","_this$playersPos$pose2","posI","posJ","placePlayers","towncenter","generateForestAroundPlayer","treeCount","clusterCount","minClusterRadius","maxClusterRadius","safeDistance","clearingProbability","playerI","playerJ","gridWidth","gridHeight","forestCells","pathCells","createCircle","centerI","centerJ","radius","density","edgeNoise","circleCells","distFromCenter","noise","cellI","cellJ","cluster","clusterCenterI","clusterCenterJ","tries","clusterRadius","clusterDensity","treeCluster","scatteredTreeCount","soloI","soloJ","clearing","clearingCenterI","clearingCenterJ","clearingRadius","clearingCells","clearedCell","findIndex","pathLength","pathDirection","offsetX","offsetY","randOffsetX","randOffsetY","cellsToPlace","itemIndex","_cellsToPlace","_i8","_cell$has","placeResourceGroup","generateTerrain","gridSize","mapModel","terrainMap","generateTerrainCluster","nx","ny","generateWater","edgeSize","roundFactor","edgeDist","randomOffset","sin","centerX","centerY","baseRadius","distanceFromCenter","generateLandTerrain","generateClusters","clusterSizeMin","clusterSizeMax","clusterX","clusterY","terrain","randomSpritesheet","rock","generateMapRelief","canGenerate","_loop3","toRemove","typeToFormat","results","outBorder","inBorder","zones","getValidCells","_loop4","newI","newJ","_cell$has2","randomDistance","validCells","warn","_i14","_cellsToPlace2","default","Menu","topbar","longClick","mouseHoldTimeout","res","setResourceBox","innerText","addEventListener","load","input","reader","FileReader","onload","JSON","parse","readAsText","files","cancel","prepend","bottombar","bottombarInfo","bottombarMenu","bottombarMapWrap","bottombarMap","minimapFactor","getMinimapFactor","getBoundingClientRect","clientX","clientY","_player$selectedUnits","sendUnits","terrainMinimap","playersMinimap","resourcesMinimap","cameraMinimap","style","toggled","toggle","preventDefault","display","stopPropagation","updateResourcesMiniMapEvt","updateCameraMiniMap","updateCameraMiniMapEvt","miniMapAlpha","initMiniMap","mapWidth","cameraContext","resourceContext","translate","revealTerrainMinimap","clearRect","updateResourceMiniMap","squareSize","finalX","finalY","_player$views","app","screen","playerMinimap","find","_ref3","finalSize","_ref4","getMessage","message","gamebox","box","assign","bottom","clientHeight","msg","img","resetInfo","background","generateInfo","targetElement","querySelector","contentElement","removeMouseBuilding","setMenuRecurs","onClick","btn","hide","onCreate","back","some","div","counter","padding","setMouseBuilding","Controls","keysPressed","keyInterval","keySpeed","mouseTouch","mouseDrag","moveCameraInterval","minimapRectangle","moveCameraWithMouse","onKeyDown","onKeyUp","onTouchStart","onTouchEnd","onTouchMove","onMouseMove","onMouseDown","onMouseUp","removeEventListener","keyCode","handleMoveCamera","double","moveCamera","controlsMap","touch","touches","pageX","pageY","speedX","speedY","changedTouches","pointerStart","buildOnWater","waterBorderedCells","waterCells","graph","stage","selectVillager","countSelect","pointerSheet","pointer","hasSentSoldier","distCenterX","distCenterY","tagName","dir","moveSpeed","isSpeedDivided","dividedSpeed","A","B","D","C","cameraCenter","updateVisibleCells","coef","moveDist","calcs","right","up","down","cameraFloor","margin","_isometricToCartesian","_isometricToCartesian2","cartesianX","cartesianY","endX","endY","_map$grid$x","_isometricToCartesian3","_isometricToCartesian4","cartX","cartY","_player$buildings","_player$units","direct","_this$context8","Game","togglePause","cleanContext","resourceData","animalData","_animal$sprite","_animal$sprite2","_animal$dest","_animal$previousDest","unitData","_unit$sprite","_unit$sprite2","_unit$dest","_unit$previousDest","buildingData","_building$isUsedBy","iname","playerData","view","cellData","json","dataStr","encodeURIComponent","stringify","downloadAnchorNode","setAttribute","toLocaleString","timeZone","click","_document$getElementB","ownKeys","getOwnPropertySymbols","getOwnPropertyDescriptor","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","_defineProperties","_toPrimitive","toPrimitive","String","_getPrototypeOf","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","_assertThisInitialized","ReferenceError","valueOf","_setPrototypeOf","LoaderScreen","_start","_callee2","_context2","graphics","addBundle","greek","loadBundle","_x","Application","Loader","loader","game","resizeTo","antialias","resolution","devicePixelRatio","autoDensity","powerPreference","error"],"sourceRoot":""}